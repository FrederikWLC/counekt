{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC360InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC360InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clock",
          "type": "uint256"
        }
      ],
      "name": "ERC360InvalidShard",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ReedeemableAlreadyRedeemed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        }
      ],
      "name": "NewShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        }
      ],
      "name": "amountOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "clockOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        }
      ],
      "name": "expirationOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "hasRedeemed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shardIdOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "clock",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shardId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clock",
          "type": "uint256"
        }
      ],
      "name": "wasValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC360/ERC360.sol",
    "1": "contracts/ERC360/IERC360.sol",
    "12": "contracts/ERC360/utils/Redeemable.sol",
    "2": "contracts/ERC360/IERC360Errors.sol",
    "24": "node_modules/@openzeppelin/contracts/utils/Context.sol",
    "26": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
    "27": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
    "3": "contracts/ERC360/IERC360Metadata.sol",
    "7": "contracts/ERC360/extensions/ERC360Redeemable.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC360/extensions/ERC360Redeemable.sol",
    "exportedSymbols": {
      "ERC360": [
        588
      ],
      "ERC360Redeemable": [
        1474
      ],
      "Redeemable": [
        2454
      ]
    },
    "id": 1475,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1427,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "contracts/ERC360/ERC360.sol",
        "file": "../ERC360.sol",
        "id": 1429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1475,
        "sourceUnit": 589,
        "src": "26:37:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1428,
              "name": "ERC360",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 588,
              "src": "34:6:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC360/utils/Redeemable.sol",
        "file": "../utils/Redeemable.sol",
        "id": 1431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1475,
        "sourceUnit": 2455,
        "src": "64:51:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1430,
              "name": "Redeemable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2454,
              "src": "72:10:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1432,
              "name": "ERC360",
              "nameLocations": [
                "155:6:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 588,
              "src": "155:6:7"
            },
            "id": 1433,
            "nodeType": "InheritanceSpecifier",
            "src": "155:6:7"
          },
          {
            "baseName": {
              "id": 1434,
              "name": "Redeemable",
              "nameLocations": [
                "163:10:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2454,
              "src": "163:10:7"
            },
            "id": 1435,
            "nodeType": "InheritanceSpecifier",
            "src": "163:10:7"
          }
        ],
        "canonicalName": "ERC360Redeemable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1474,
        "linearizedBaseContracts": [
          1474,
          2454,
          588,
          786,
          806,
          737,
          3010,
          3022,
          2912
        ],
        "name": "ERC360Redeemable",
        "nameLocation": "135:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1439,
            "mutability": "mutable",
            "name": "_clockByEventId",
            "nameLocation": "217:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1474,
            "src": "181:51:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1438,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1436,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "189:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "181:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1437,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "200:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "302:48:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1446,
                      "name": "_clockByEventId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "319:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1448,
                    "indexExpression": {
                      "id": 1447,
                      "name": "eventId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1441,
                      "src": "335:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "319:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1445,
                  "id": 1449,
                  "nodeType": "Return",
                  "src": "312:31:7"
                }
              ]
            },
            "functionSelector": "1171884f",
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clockOf",
            "nameLocation": "248:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "eventId",
                  "nameLocation": "264:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "256:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "255:17:7"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "293:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:9:7"
            },
            "scope": 1474,
            "src": "239:111:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2453
            ],
            "body": {
              "id": 1472,
              "nodeType": "Block",
              "src": "423:135:7",
              "statements": [
                {
                  "assignments": [
                    1458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1458,
                      "mutability": "mutable",
                      "name": "eventId",
                      "nameLocation": "441:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "433:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "433:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1462,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1459,
                        "name": "Redeemable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "451:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Redeemable_$2454_$",
                          "typeString": "type(contract Redeemable)"
                        }
                      },
                      "id": 1460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "462:12:7",
                      "memberName": "_createEvent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2453,
                      "src": "451:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "451:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "433:43:7"
                },
                {
                  "expression": {
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1463,
                        "name": "_clockByEventId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "486:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1465,
                      "indexExpression": {
                        "id": 1464,
                        "name": "eventId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "502:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "486:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1466,
                        "name": "currentClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "513:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "513:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "486:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "486:41:7"
                },
                {
                  "expression": {
                    "id": 1470,
                    "name": "eventId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1458,
                    "src": "544:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1456,
                  "id": 1471,
                  "nodeType": "Return",
                  "src": "537:14:7"
                }
              ]
            },
            "id": 1473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createEvent",
            "nameLocation": "365:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "388:8:7"
            },
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:7"
            },
            "returnParameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1473,
                  "src": "414:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:9:7"
            },
            "scope": 1474,
            "src": "356:202:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1475,
        "src": "117:443:7",
        "usedErrors": [
          747,
          756,
          761,
          766,
          775,
          780,
          785,
          2387
        ],
        "usedEvents": [
          600,
          609,
          616
        ]
      }
    ],
    "src": "0:560:7"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC360Redeemable",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC360",
    "IERC165",
    "IERC360",
    "IERC360Errors",
    "IERC360Metadata",
    "Redeemable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "ERC360InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`\u00e2\u20ac\u2122s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC360InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC360InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidShard(uint256,uint256)": [
        {
          "details": "Indicates an error concerning the validity of a shard.",
          "params": {
            "clock": "The clock at which the shard was invalid.",
            "shardId": "Identifier number of a shard."
          }
        }
      ],
      "ERC360InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `amount` is the new allowance."
      },
      "NewShard(address,uint256)": {
        "details": "Emitted when the current balance of an `account` is tied to a new `shardId`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when an `amount` of tokens are moved `from` one account `to` another. Note that `amount` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC360-allowance}."
      },
      "amountOf(uint256)": {
        "details": "Returns the amount tied to the ``shardId``."
      },
      "approve(address,uint256)": {
        "notice": "Approves the allowance of a certain amount of the sender to a spender",
        "params": {
          "amount": "The amount to be approved to be spent by the spender.",
          "spender": "The spender of the approved amount."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens currently owned by ``account``."
      },
      "currentClock()": {
        "notice": "Returns the clock."
      },
      "expirationOf(uint256)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "isValid(uint256)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "shardId": "The shard, whose validity is to be checked for."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `shardId` token. Requirements: - `shardId` must exist."
      },
      "shardIdOf(address)": {
        "details": "Returns the current shard with `shardId` tied to an ``account``."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply()": {
        "notice": "Returns the current supply."
      },
      "totalSupplyAt(uint256)": {
        "notice": "Returns the supply at."
      },
      "transfer(address,uint256)": {
        "details": "Moves an `amount` of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves an `amount` of tokens `from` one account `to` another using the allowance mechanism. The `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "wasValid(uint256,uint256)": {
        "notice": "Returns a boolean stating if the given shard was current at a given clock.",
        "params": {
          "clock": "The token clock to be checked for.",
          "shardId": "The token whose validity is to be checked for."
        }
      }
    },
    "version": 1
  },
  "offset": [
    117,
    560
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "20b47313f5c621e70e8dbd9bc3ee9a8e17025300",
  "source": "pragma solidity ^0.8.20;\n\nimport {ERC360} from \"../ERC360.sol\";\nimport {Redeemable} from \"../utils/Redeemable.sol\";\n\nabstract contract ERC360Redeemable is ERC360, Redeemable {\n\n    mapping(uint256 => uint256) private _clockByEventId;\n\n    function clockOf(uint256 eventId) public view returns(uint256) {\n        return _clockByEventId[eventId];\n    }\n\n    function _createEvent() virtual override internal returns(uint256) {\n        uint256 eventId = Redeemable._createEvent();\n        _clockByEventId[eventId] = currentClock();\n        return eventId;\n    }\n}",
  "sourceMap": "",
  "sourcePath": "contracts/ERC360/extensions/ERC360Redeemable.sol",
  "type": "contract"
}