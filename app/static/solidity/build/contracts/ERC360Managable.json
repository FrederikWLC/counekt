{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "AdministrableInvalidParentSet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "AdministrableUnauthorizedSet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC360InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC360InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC360InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ERC360InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC360NonexistentTokenId",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NewTokenId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "amountOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balanceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bank",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "bankBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ext",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "bank",
          "type": "bytes32"
        }
      ],
      "name": "callExternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "expirationOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ext",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "externalCallPermitOf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        }
      ],
      "name": "hasPermit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        }
      ],
      "name": "isPermitAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fromBank",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "toBank",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "moveFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        }
      ],
      "name": "permitParentOf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ext",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        }
      ],
      "name": "setExternalCallPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "permit",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "parent",
          "type": "bytes32"
        }
      ],
      "name": "setPermitParent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "tokenIdOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "clock",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bank",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFundsFromBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clock",
          "type": "uint256"
        }
      ],
      "name": "wasValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC360/ERC360.sol",
    "1": "contracts/ERC360/IERC360.sol",
    "10": "contracts/ERC360/utils/ERC20Holder.sol",
    "11": "contracts/ERC360/utils/Managable.sol",
    "13": "contracts/ERC360/utils/Spendable.sol",
    "18": "node_modules/@openzeppelin/contracts/utils/Context.sol",
    "2": "contracts/ERC360/IERC360Errors.sol",
    "20": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
    "21": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
    "3": "contracts/ERC360/IERC360Metadata.sol",
    "6": "contracts/ERC360/extensions/ERC360Managable.sol",
    "9": "contracts/ERC360/utils/Administrable.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC360/extensions/ERC360Managable.sol",
    "exportedSymbols": {
      "ERC20Holder": [
        1141
      ],
      "ERC360": [
        2204
      ],
      "ERC360Managable": [
        618
      ],
      "Managable": [
        1283
      ],
      "Spendable": [
        1560
      ]
    },
    "id": 619,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 565,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:6"
      },
      {
        "absolutePath": "contracts/ERC360/ERC360.sol",
        "file": "../ERC360.sol",
        "id": 567,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 2205,
        "src": "58:37:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 566,
              "name": "ERC360",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2204,
              "src": "66:6:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC360/utils/Spendable.sol",
        "file": "../utils/Spendable.sol",
        "id": 569,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1561,
        "src": "96:49:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 568,
              "name": "Spendable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1560,
              "src": "104:9:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC360/utils/Managable.sol",
        "file": "../utils/Managable.sol",
        "id": 571,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1284,
        "src": "146:49:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 570,
              "name": "Managable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1283,
              "src": "154:9:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC360/utils/ERC20Holder.sol",
        "file": "../utils/ERC20Holder.sol",
        "id": 573,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1142,
        "src": "196:53:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 572,
              "name": "ERC20Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1141,
              "src": "204:11:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 574,
              "name": "ERC360",
              "nameLocations": [
                "288:6:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2204,
              "src": "288:6:6"
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "288:6:6"
          },
          {
            "baseName": {
              "id": 576,
              "name": "Managable",
              "nameLocations": [
                "296:9:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1283,
              "src": "296:9:6"
            },
            "id": 577,
            "nodeType": "InheritanceSpecifier",
            "src": "296:9:6"
          }
        ],
        "canonicalName": "ERC360Managable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          1283,
          1560,
          2883,
          2204,
          3169,
          3189,
          3122,
          3309,
          3321,
          3211,
          1141
        ],
        "name": "ERC360Managable",
        "nameLocation": "269:15:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "391:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 589,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3201,
                          "src": "412:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "412:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "433:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "425:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 591,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "425:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "425:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "436:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 588,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2855,
                      "src": "401:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes32,bool)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "401:40:6"
                }
              ]
            },
            "id": 599,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 584,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 579,
                    "src": "376:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 585,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 581,
                    "src": "382:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 586,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 583,
                  "name": "ERC360",
                  "nameLocations": [
                    "369:6:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2204,
                  "src": "369:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "369:21:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "339:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "325:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "360:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "346:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:44:6"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:6"
            },
            "scope": 618,
            "src": "313:173:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "578:38:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "594:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 613,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "602:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 611,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2110,
                      "src": "588:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "588:21:6"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "4d494e54",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "569:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdf81848136595c31bb5f76217767372bc4bf906663038eb38381131ea27ecba",
                          "typeString": "literal_string \"MINT\""
                        },
                        "value": "MINT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fdf81848136595c31bb5f76217767372bc4bf906663038eb38381131ea27ecba",
                          "typeString": "literal_string \"MINT\""
                        }
                      ],
                      "id": 606,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "559:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 609,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 605,
                  "name": "onlyPermit",
                  "nameLocations": [
                    "548:10:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2703,
                  "src": "548:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "548:29:6"
              }
            ],
            "name": "mint",
            "nameLocation": "501:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "514:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "506:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "531:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "523:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:33:6"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:6"
            },
            "scope": 618,
            "src": "492:124:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 619,
        "src": "251:368:6",
        "usedErrors": [
          1686,
          2682,
          2688,
          3130,
          3139,
          3144,
          3149,
          3158,
          3163,
          3168
        ],
        "usedEvents": [
          2985,
          2994,
          3001
        ]
      }
    ],
    "src": "32:588:6"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC360Managable",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Administrable",
    "Context",
    "ERC165",
    "ERC20Holder",
    "ERC360",
    "IERC165",
    "IERC360",
    "IERC360Errors",
    "IERC360Metadata",
    "Managable",
    "Spendable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "ERC360InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`\u2019s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC360InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC360InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC360InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC360NonexistentTokenId(uint256)": [
        {
          "details": "Indicates a `tokenId` whose `owner` is the zero address.",
          "params": {
            "tokenId": "Identifier number of a token."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `amount` is the new allowance."
      },
      "NewTokenId(address,uint256)": {
        "details": "Emitted when the current balance of an `account` is tied to a new `tokenId`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when an `amount` of tokens are moved `from` one account `to` another. Note that `amount` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC360-allowance}."
      },
      "amountOf(uint256)": {
        "details": "Returns the amount tied to the ``tokenId``."
      },
      "approve(address,uint256)": {
        "notice": "Approves the allowance of a certain amount of the sender to a spender",
        "params": {
          "amount": "The amount to be approved to be spent by the spender.",
          "spender": "The spender of the approved amount."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens currently owned by ``account``."
      },
      "currentClock()": {
        "notice": "Returns the clock."
      },
      "expirationOf(uint256)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "hasPermit(address,bytes32)": {
        "notice": "Returns a boolean stating if a given address has a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permit": "The name of the permit to be checked for."
        }
      },
      "isPermitAdmin(address,bytes32)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permit": "The name of the permit to be checked for."
        }
      },
      "isValid(uint256)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "tokenId": "The shard, whose validity is to be checked for."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "setPermit(address,bytes32,bool)": {
        "notice": "Sets the state of a specified permit of a given address.",
        "params": {
          "account": "The address, whose permit state is to be set.",
          "permit": "The name of the permit, whose state is to be set.",
          "status": "The new Permit State to be applied."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      },
      "tokenIdOf(address)": {
        "details": "Returns the current tokenId tied to an ``account``."
      },
      "totalSupply()": {
        "notice": "Returns the current supply."
      },
      "totalSupplyAt(uint256)": {
        "notice": "Returns the supply at."
      },
      "transfer(address,uint256)": {
        "details": "Moves an `amount` of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves an `amount` of tokens `from` one account `to` another using the allowance mechanism. The `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "wasValid(uint256,uint256)": {
        "notice": "Returns a boolean stating if the given tokenId was current at a given clock.",
        "params": {
          "clock": "The token clock to be checked for.",
          "tokenId": "The token whose validity is to be checked for."
        }
      }
    },
    "version": 1
  },
  "offset": [
    251,
    619
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "98f1d887bf07dd37e0edc3e5c70c2af39a4d4be3",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ERC360} from \"../ERC360.sol\";\nimport {Spendable} from \"../utils/Spendable.sol\";\nimport {Managable} from \"../utils/Managable.sol\";\nimport {ERC20Holder} from \"../utils/ERC20Holder.sol\";\n\nabstract contract ERC360Managable is ERC360, Managable {\n\n    constructor(string memory name_, string memory symbol_) ERC360(name_,symbol_) {\n        _setPermit(_msgSender(),bytes32(0),true); // grant the master permit to creator\n    }\n\n    function mint(address account, uint256 amount) external onlyPermit(keccak256(\"MINT\")) {\n        _mint(account,amount);\n    }\n\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/ERC360/extensions/ERC360Managable.sol",
  "type": "contract"
}