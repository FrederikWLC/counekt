{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum Shardable.SaleState",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Shardable.ShardSale",
          "name": "sale",
          "type": "tuple"
        }
      ],
      "name": "SaleStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "ShardUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "acceptsToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getLiquidResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardExpirationClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardSalePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "infoByShard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isShardHolder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTerminated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "isValidShard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "putForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shardByOwner",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "atClock",
          "type": "uint256"
        }
      ],
      "name": "shardExisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "senderShard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "split",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalShardAmountByClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/idea.sol",
    "2": "contracts/shardable.sol"
  },
  "ast": {
    "absolutePath": "contracts/idea.sol",
    "exportedSymbols": {
      "Context": [
        4845
      ],
      "ERC20": [
        4720
      ],
      "IERC20": [
        4798
      ],
      "IERC20Metadata": [
        4823
      ],
      "Idea": [
        3121
      ],
      "Shardable": [
        4134
      ],
      "divideUnequallyIntoTwoWithRemainder": [
        3176
      ]
    },
    "id": 3122,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2874,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "48:23:1"
      },
      {
        "absolutePath": "contracts/shardable.sol",
        "file": "./shardable.sol",
        "id": 2875,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 4135,
        "src": "75:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2877,
              "name": "Shardable",
              "nameLocations": [
                "433:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4134,
              "src": "433:9:1"
            },
            "id": 2878,
            "nodeType": "InheritanceSpecifier",
            "src": "433:9:1"
          }
        ],
        "canonicalName": "Idea",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2876,
          "nodeType": "StructuredDocumentation",
          "src": "104:303:1",
          "text": "@title A proof of fractional ownership of an entity with valuables.\n @author Frederik W. L. Christoffersen\n @notice This contract is used as an administrable business entity. \n @custom:illustration Idea => Idea.Administration => Idea\n @custom:beaware This is a commercial contract."
        },
        "fullyImplemented": true,
        "id": 3121,
        "linearizedBaseContracts": [
          3121,
          4134
        ],
        "name": "Idea",
        "nameLocation": "425:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2879,
              "nodeType": "StructuredDocumentation",
              "src": "452:104:1",
              "text": "@notice Mapping pointing to boolean stating if a given token address is valid and registered or not."
            },
            "id": 2883,
            "mutability": "mutable",
            "name": "validTokenAddresses",
            "nameLocation": "587:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "562:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2882,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2880,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "570:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "562:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2881,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "581:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2884,
              "nodeType": "StructuredDocumentation",
              "src": "612:83:1",
              "text": "@notice Mapping pointing to a value/amount given the address of an ERC20 token."
            },
            "functionSelector": "5beeff33",
            "id": 2888,
            "mutability": "mutable",
            "name": "liquid",
            "nameLocation": "736:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "701:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2887,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2885,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "701:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2886,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "720:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2889,
              "nodeType": "StructuredDocumentation",
              "src": "751:53:1",
              "text": "@notice Integer block.timestamp of liquidization."
            },
            "id": 2891,
            "mutability": "mutable",
            "name": "liquidized_at",
            "nameLocation": "818:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "810:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2890,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2892,
              "nodeType": "StructuredDocumentation",
              "src": "840:131:1",
              "text": "@notice Mapping pointing to the value/amount of a liquid token left to be claimed after liquidization/inactivation of the Idea."
            },
            "id": 2896,
            "mutability": "mutable",
            "name": "liquidResidual",
            "nameLocation": "1005:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "977:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2895,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2893,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2894,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2897,
              "nodeType": "StructuredDocumentation",
              "src": "1028:187:1",
              "text": "@notice Mapping pointing to another mapping (given a token address) pointing to a boolean stating if the owner of a given Shard has claimed their fair share following a liquidization."
            },
            "id": 2903,
            "mutability": "mutable",
            "name": "hasClaimedLiquid",
            "nameLocation": "1266:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "1221:61:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 2902,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2898,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1221:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2901,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 2899,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1248:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1240:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 2900,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2912,
              "nodeType": "Block",
              "src": "1517:2:1",
              "statements": []
            },
            "documentation": {
              "id": 2904,
              "nodeType": "StructuredDocumentation",
              "src": "1291:174:1",
              "text": "@notice Constructor function that pushes the first Shard being the property of the Shardable creator.\n @param amount Amount of shards to construct Shardable with."
            },
            "id": 2913,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2909,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2906,
                    "src": "1509:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2910,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2908,
                  "name": "Shardable",
                  "nameLocations": [
                    "1499:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4134,
                  "src": "1499:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1499:17:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2906,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1491:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2913,
                  "src": "1483:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:16:1"
            },
            "returnParameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:1"
            },
            "scope": 3121,
            "src": "1471:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2925,
              "nodeType": "Block",
              "src": "1763:54:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2921,
                      "name": "liquidResidual",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2896,
                      "src": "1781:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2923,
                    "indexExpression": {
                      "id": 2922,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2916,
                      "src": "1796:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1781:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2920,
                  "id": 2924,
                  "nodeType": "Return",
                  "src": "1774:35:1"
                }
              ]
            },
            "documentation": {
              "id": 2914,
              "nodeType": "StructuredDocumentation",
              "src": "1527:152:1",
              "text": "@notice Returns the residual of a liquid, after liquidization/inactivation.\n @param tokenAddress The address of the token to be checked for."
            },
            "functionSelector": "3dbeaa54",
            "id": 2926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidResidual",
            "nameLocation": "1694:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2916,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1720:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "1712:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1711:22:1"
            },
            "returnParameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "1754:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:9:1"
            },
            "scope": 3121,
            "src": "1685:132:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "2085:95:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2934,
                          "name": "validTokenAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2883,
                          "src": "2101:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2936,
                        "indexExpression": {
                          "id": 2935,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2929,
                          "src": "2121:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2101:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 2937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2138:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2101:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2939,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "2146:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2170:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2162:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2940,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2162:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2162:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2146:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2101:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2933,
                  "id": 2946,
                  "nodeType": "Return",
                  "src": "2094:78:1"
                }
              ]
            },
            "documentation": {
              "id": 2927,
              "nodeType": "StructuredDocumentation",
              "src": "1829:180:1",
              "text": "@notice Returns a boolean value, stating if the given token address is registered as acceptable or not.\n @param tokenAddress The address of the token to be checked for."
            },
            "functionSelector": "868399a5",
            "id": 2948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptsToken",
            "nameLocation": "2024:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2045:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "2037:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:22:1"
            },
            "returnParameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "2079:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2078:6:1"
            },
            "scope": 3121,
            "src": "2015:165:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2966,
              "nodeType": "Block",
              "src": "2353:93:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2954,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3204,
                        "src": "2371:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 2955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "2371:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2957,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2391:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2397:9:1",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2391:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2959,
                              "name": "liquidized_at",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2891,
                              "src": "2407:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2391:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "333030",
                            "id": 2961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2424:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            },
                            "value": "300"
                          },
                          "src": "2391:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2963,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2390:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2371:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2953,
                  "id": 2965,
                  "nodeType": "Return",
                  "src": "2364:64:1"
                }
              ]
            },
            "documentation": {
              "id": 2949,
              "nodeType": "StructuredDocumentation",
              "src": "2188:109:1",
              "text": "@notice Returns a boolean value, stating if the liquidization is terminated (100 days have passed since)."
            },
            "functionSelector": "d1cc9976",
            "id": 2967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTerminated",
            "nameLocation": "2312:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:2:1"
            },
            "returnParameters": {
              "id": 2953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2347:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:6:1"
            },
            "scope": 3121,
            "src": "2303:143:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "2839:289:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2981,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2972,
                            "src": "2871:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2980,
                          "name": "acceptsToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2948,
                          "src": "2858:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2858:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2850:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:35:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2986,
                          "name": "shardByOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3220,
                          "src": "2909:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                            "typeString": "mapping(address => bytes32)"
                          }
                        },
                        "id": 2991,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 2989,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2930:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Idea_$3121",
                                "typeString": "contract Idea"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Idea_$3121",
                                "typeString": "contract Idea"
                              }
                            ],
                            "id": 2988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2922:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2987,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2922:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2909:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2992,
                        "name": "clock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "2937:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2985,
                      "name": "_expireShard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "2896:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 2993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2994,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2996,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2970,
                          "src": "2965:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2997,
                              "name": "infoByShard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3215,
                              "src": "2972:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ShardInfo_$3188_storage_$",
                                "typeString": "mapping(bytes32 => struct Shardable.ShardInfo storage ref)"
                              }
                            },
                            "id": 3004,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2998,
                                "name": "shardByOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3220,
                                "src": "2984:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                  "typeString": "mapping(address => bytes32)"
                                }
                              },
                              "id": 3003,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 3001,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3005:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Idea_$3121",
                                      "typeString": "contract Idea"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Idea_$3121",
                                      "typeString": "contract Idea"
                                    }
                                  ],
                                  "id": 3000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2997:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2999,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2997:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2997:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2984:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2972:40:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ShardInfo_$3188_storage",
                              "typeString": "struct Shardable.ShardInfo storage ref"
                            }
                          },
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3013:6:1",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3183,
                          "src": "2972:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2965:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3009,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3028:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Idea_$3121",
                              "typeString": "contract Idea"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Idea_$3121",
                              "typeString": "contract Idea"
                            }
                          ],
                          "id": 3008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3020:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3007,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3020:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3020:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3011,
                        "name": "clock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "3034:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2995,
                      "name": "_pushShard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4086,
                      "src": "2954:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2954:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3013,
                  "nodeType": "ExpressionStatement",
                  "src": "2954:86:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3015,
                          "name": "shardByOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3220,
                          "src": "3063:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                            "typeString": "mapping(address => bytes32)"
                          }
                        },
                        "id": 3020,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 3018,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3084:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Idea_$3121",
                                "typeString": "contract Idea"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Idea_$3121",
                                "typeString": "contract Idea"
                              }
                            ],
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3076:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3016,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3076:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3076:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3063:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3021,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "3091:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3022,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2972,
                        "src": "3098:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3023,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "3111:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3024,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2976,
                        "src": "3117:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3014,
                      "name": "_putForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4002,
                      "src": "3051:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,uint256,address)"
                      }
                    },
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:69:1"
                }
              ]
            },
            "documentation": {
              "id": 2968,
              "nodeType": "StructuredDocumentation",
              "src": "2454:275:1",
              "text": "@notice Issues new shards and puts them for sale.\n @param tokenAddress The token address the shards are put for sale for.\n @param price The price per token.\n @param to The specifically set buyer of the issued shards. Open to anyone, if address(0)."
            },
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issueShards",
            "nameLocation": "2744:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2765:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "2757:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2972,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2781:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "2773:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2803:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "2795:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2976,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2818:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "2810:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:65:1"
            },
            "returnParameters": {
              "id": 2978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:1"
            },
            "scope": 3121,
            "src": "2735:393:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3053,
              "nodeType": "Block",
              "src": "3390:104:1",
              "statements": [
                {
                  "assignments": [
                    3037,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3037,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3407:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 3053,
                      "src": "3402:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3036,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3402:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3047,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3040,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3033,
                              "src": "3428:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3420:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3038,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3420:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3420:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3432:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3420:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 3043,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3031,
                          "src": "3443:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3420:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3401:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3049,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "3472:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5446",
                        "id": 3050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3481:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
                          "typeString": "literal_string \"TF\""
                        },
                        "value": "TF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
                          "typeString": "literal_string \"TF\""
                        }
                      ],
                      "id": 3048,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3464:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3052,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:22:1"
                }
              ]
            },
            "documentation": {
              "id": 3029,
              "nodeType": "StructuredDocumentation",
              "src": "3136:188:1",
              "text": "@notice Transfers ether from the Idea to a recipient\n @param value The value/amount of ether to be transferred.\n @param to The recipient of the ether to be transferred."
            },
            "id": 3054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferEther",
            "nameLocation": "3339:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3031,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3362:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "3354:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3033,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3377:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "3369:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3353:27:1"
            },
            "returnParameters": {
              "id": 3035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:0:1"
            },
            "scope": 3121,
            "src": "3330:164:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3074,
              "nodeType": "Block",
              "src": "3762:112:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3781:27:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3062,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "3795:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3061,
                            "name": "acceptsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2948,
                            "src": "3782:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3782:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4152",
                        "id": 3065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3810:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50af3ebcd231b999054c3800833a4d0f083fc32079d1dce9cf2539a09628dd1a",
                          "typeString": "literal_string \"AR\""
                        },
                        "value": "AR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50af3ebcd231b999054c3800833a4d0f083fc32079d1dce9cf2539a09628dd1a",
                          "typeString": "literal_string \"AR\""
                        }
                      ],
                      "id": 3060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3773:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3773:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3067,
                  "nodeType": "ExpressionStatement",
                  "src": "3773:42:1"
                },
                {
                  "expression": {
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3068,
                        "name": "validTokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2883,
                        "src": "3826:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3070,
                      "indexExpression": {
                        "id": 3069,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3057,
                        "src": "3846:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3826:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3862:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3826:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3073,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:40:1"
                }
              ]
            },
            "documentation": {
              "id": 3055,
              "nodeType": "StructuredDocumentation",
              "src": "3502:184:1",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "id": 3075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTokenAddress",
            "nameLocation": "3701:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3731:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3075,
                  "src": "3723:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3723:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3722:22:1"
            },
            "returnParameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3762:0:1"
            },
            "scope": 3121,
            "src": "3692:182:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3103,
              "nodeType": "Block",
              "src": "4148:163:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3083,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3078,
                            "src": "4180:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3082,
                          "name": "acceptsToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2948,
                          "src": "4167:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4167:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5554",
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4195:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb49966919293454db3772b6c52b360dd4d2d010b3500935254740dec7a645da",
                          "typeString": "literal_string \"UT\""
                        },
                        "value": "UT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb49966919293454db3772b6c52b360dd4d2d010b3500935254740dec7a645da",
                          "typeString": "literal_string \"UT\""
                        }
                      ],
                      "id": 3081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4159:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3087,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3089,
                            "name": "liquid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2888,
                            "src": "4219:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3091,
                          "indexExpression": {
                            "id": 3090,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3078,
                            "src": "4226:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4219:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4243:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4219:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e5a",
                        "id": 3094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42a781e16b9db680587a6cfae5fb14dfb63f8fc5983f0d6b32233f95904b61cd",
                          "typeString": "literal_string \"NZ\""
                        },
                        "value": "NZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42a781e16b9db680587a6cfae5fb14dfb63f8fc5983f0d6b32233f95904b61cd",
                          "typeString": "literal_string \"NZ\""
                        }
                      ],
                      "id": 3088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4211:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3096,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:40:1"
                },
                {
                  "expression": {
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3097,
                        "name": "validTokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2883,
                        "src": "4262:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3099,
                      "indexExpression": {
                        "id": 3098,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "4282:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4262:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4298:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4262:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3102,
                  "nodeType": "ExpressionStatement",
                  "src": "4262:41:1"
                }
              ]
            },
            "documentation": {
              "id": 3076,
              "nodeType": "StructuredDocumentation",
              "src": "3882:188:1",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "id": 3104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unregisterTokenAddress",
            "nameLocation": "4085:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3078,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4117:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3104,
                  "src": "4109:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4108:22:1"
            },
            "returnParameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4148:0:1"
            },
            "scope": 3121,
            "src": "4076:235:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3119,
              "nodeType": "Block",
              "src": "4448:102:1",
              "statements": [
                {
                  "expression": {
                    "id": 3112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3110,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3204,
                      "src": "4459:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4468:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4459:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3113,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:14:1"
                },
                {
                  "expression": {
                    "id": 3117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3114,
                      "name": "liquidized_at",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2891,
                      "src": "4511:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3115,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4527:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4533:9:1",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4527:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4511:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3118,
                  "nodeType": "ExpressionStatement",
                  "src": "4511:31:1"
                }
              ]
            },
            "documentation": {
              "id": 3105,
              "nodeType": "StructuredDocumentation",
              "src": "4319:71:1",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "id": 3120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3107,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "4435:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3310,
                  "src": "4435:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4435:12:1"
              }
            ],
            "name": "_liquidize",
            "nameLocation": "4405:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4415:2:1"
            },
            "returnParameters": {
              "id": 3109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4448:0:1"
            },
            "scope": 3121,
            "src": "4396:154:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3122,
        "src": "407:4148:1",
        "usedErrors": []
      }
    ],
    "src": "48:4509:1"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Idea",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Shardable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "author": "Frederik W. L. Christoffersen",
    "custom:beaware": "This is a commercial contract.",
    "custom:illustration": "Idea => Idea.Administration => Idea",
    "events": {
      "SaleStateUpdated(uint8,bytes32,(uint256,uint256,address,address))": {
        "params": {
          "sale": "The sale info reffering to either a listing or a purchase, depending on the status.",
          "shard": "The shard whose sale state was updated.",
          "status": "The enum stating whether the given Shard now isn't, is for sale, or has been sold."
        }
      },
      "ShardUpdated(bool,bytes32)": {
        "params": {
          "shard": "The Shard byte identifier, which was created.",
          "status": "The boolean indicating whether a shard is newly created (true) or expired (false)."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "acceptsToken(address)": {
        "notice": "Returns a boolean value, stating if the given token address is registered as acceptable or not.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "active()": {
        "notice": "Boolean stating if the Shardable is active and tradeable or not."
      },
      "cancelSale(bytes32)": {
        "notice": "Cancels a sell of a given shard.",
        "params": {
          "shard": "The shard to be put off sale."
        }
      },
      "constructor": {
        "notice": "Constructor function that pushes the first Shard being the property of the Shardable creator.",
        "params": {
          "amount": "Amount of shards to construct Shardable with."
        }
      },
      "getCurrentClock()": {
        "notice": "Returns the clock."
      },
      "getLiquidResidual(address)": {
        "notice": "Returns the residual of a liquid, after liquidization/inactivation.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "getShardExpirationClock(bytes32)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "getShardSalePrice(bytes32)": {
        "notice": "Returns the price, at which a shard is for sale."
      },
      "infoByShard(bytes32)": {
        "notice": "Mapping pointing to related info of a Shard given the bytes of a unique Shard instance."
      },
      "isShardHolder(address)": {
        "notice": "Checks if address is a shard holder - at least a partial owner of the contract.",
        "params": {
          "account": "The address to be checked for."
        }
      },
      "isTerminated()": {
        "notice": "Returns a boolean value, stating if the liquidization is terminated (100 days have passed since)."
      },
      "isValidShard(bytes32)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "liquid(address)": {
        "notice": "Mapping pointing to a value/amount given the address of an ERC20 token."
      },
      "purchase(bytes32,uint256,uint256)": {
        "details": "If the purchase is with tokens (ie. tokenAddress != 0x0), first call 'token.approve(Shardable.address, salePrice);'",
        "notice": "Purchases a listed Shard for sale.",
        "params": {
          "shard": "The shard of which a fraction will be purchased."
        }
      },
      "putForSale(bytes32,uint256,address,uint256,address)": {
        "notice": "Puts a given shard for sale.",
        "params": {
          "amount": "Amount of the Shard to be put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard to be put for sale.",
          "to": "The specifically set buyer of the sale. Open to anyone, if address(0).",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "shardByOwner(address)": {
        "notice": "Mapping pointing to a currently valid shard given the address of its owner."
      },
      "shardExisted(bytes32,uint256)": {
        "notice": "Returns a boolean stating if the given shard was valid at a given clock.",
        "params": {
          "atClock": "The clock to be checked for.",
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "split(bytes32,uint256,address)": {
        "notice": "Splits a currently valid shard into two new ones. One is assigned to the receiver. The rest to the previous owner.",
        "params": {
          "amount": "Amount, which will be subtracted from the previous shard and sent to the receiver.",
          "senderShard": "The shard to be split.",
          "to": "The receiver of the new Shard."
        }
      },
      "totalShardAmountByClock(uint256)": {
        "notice": "Mapping pointing to integer value representing the total number of shards issued, provided the clock. Used as the denominator to represent a relative shard fraction."
      }
    },
    "notice": "This contract is used as an administrable business entity. ",
    "title": "A proof of fractional ownership of an entity with valuables.",
    "version": 1
  },
  "offset": [
    407,
    4555
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "f29e0d51c5931722eb1f748a40b6873668e60702",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.4;\n\nimport \"./shardable.sol\";\n\n/// @title A proof of fractional ownership of an entity with valuables.\n/// @author Frederik W. L. Christoffersen\n/// @notice This contract is used as an administrable business entity. \n/// @custom:illustration Idea => Idea.Administration => Idea\n/// @custom:beaware This is a commercial contract.\nabstract contract Idea is Shardable {\n\n    /// @notice Mapping pointing to boolean stating if a given token address is valid and registered or not.\n    mapping(address => bool) validTokenAddresses;\n\n\t/// @notice Mapping pointing to a value/amount given the address of an ERC20 token.\n    mapping(address => uint256) public liquid;\n\n    /// @notice Integer block.timestamp of liquidization.\n    uint256 liquidized_at;\n\n    /// @notice Mapping pointing to the value/amount of a liquid token left to be claimed after liquidization/inactivation of the Idea.\n    mapping(address => uint256) liquidResidual;\n\n    /// @notice Mapping pointing to another mapping (given a token address) pointing to a boolean stating if the owner of a given Shard has claimed their fair share following a liquidization.\n    mapping(address => mapping(bytes32 => bool)) hasClaimedLiquid;\n\n    /// @notice Constructor function that pushes the first Shard being the property of the Shardable creator.\n    /// @param amount Amount of shards to construct Shardable with.\n    constructor(uint256 amount) Shardable(amount) {}\n\n    /// @notice Returns the residual of a liquid, after liquidization/inactivation.\n    /// @param tokenAddress The address of the token to be checked for.\n    function getLiquidResidual(address tokenAddress) public view returns(uint256) {\n        return liquidResidual[tokenAddress];\n    }\n    \n    /// @notice Returns a boolean value, stating if the given token address is registered as acceptable or not.\n    /// @param tokenAddress The address of the token to be checked for.\n    function acceptsToken(address tokenAddress) public view returns(bool) {\n      return validTokenAddresses[tokenAddress] == true || tokenAddress == address(0);\n    }\n\n    /// @notice Returns a boolean value, stating if the liquidization is terminated (100 days have passed since).\n    function isTerminated() public view returns(bool) {\n        return active == false && (block.timestamp-liquidized_at >= 300); //8640000\n    }\n\n    /// @notice Issues new shards and puts them for sale.\n    /// @param tokenAddress The token address the shards are put for sale for.\n    /// @param price The price per token.\n    /// @param to The specifically set buyer of the issued shards. Open to anyone, if address(0).\n    function _issueShards(uint256 amount, address tokenAddress, uint256 price, address to) virtual internal {\n        require(acceptsToken(tokenAddress));\n        _expireShard(shardByOwner[address(this)],clock);\n        _pushShard(amount+infoByShard[shardByOwner[address(this)]].amount,address(this),clock);\n        _putForSale(shardByOwner[address(this)],amount,tokenAddress,price,to);\n    }\n\n    /// @notice Transfers ether from the Idea to a recipient\n    /// @param value The value/amount of ether to be transferred.\n    /// @param to The recipient of the ether to be transferred.\n    function _transferEther(uint256 value, address to) internal {\n        (bool success, ) = address(to).call{value:value}(\"\");\n        require(success, \"TF\");\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function _registerTokenAddress(address tokenAddress) virtual internal {\n        require(!acceptsToken(tokenAddress), \"AR\");\n        validTokenAddresses[tokenAddress] = true;\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function _unregisterTokenAddress(address tokenAddress) virtual internal {\n        require(acceptsToken(tokenAddress), \"UT\");\n        require(liquid[tokenAddress] == 0, \"NZ\");\n        validTokenAddresses[tokenAddress] = false;\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function _liquidize() virtual internal onlyIfActive {\n        active = false; // stops trading of Shards\n        liquidized_at = block.timestamp;\n    }\n\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/idea.sol",
  "type": "contract"
}