{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "ActionTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationClock",
          "type": "uint256"
        }
      ],
      "name": "ExpiredShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "LiquidClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "name": "NewShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "PutForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "SaleSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "acceptsToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "addBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankIsEmpty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "claimDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimLiquid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "createBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "deleteBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dissolveDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dividendExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBankBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getLiquidResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardExpirationClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardSalePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasPermit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "infoByShard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBankAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPermitAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isShardHolder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "isValidShard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "issueDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "issueShards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromBankName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "toBankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "moveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "putForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "receiveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "removeBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setBasePermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setNonShardHolderState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shardByOwner",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "atClock",
          "type": "uint256"
        }
      ],
      "name": "shardExisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "senderShard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "split",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalShardAmountByClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferTokenFromBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "unregisterTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/administrable.sol",
    "1": "contracts/idea.sol",
    "2": "contracts/shardable.sol"
  },
  "ast": {
    "absolutePath": "contracts/administrable.sol",
    "exportedSymbols": {
      "Administrable": [
        1547
      ],
      "Context": [
        4837
      ],
      "ERC20": [
        4712
      ],
      "IERC20": [
        4790
      ],
      "IERC20Metadata": [
        4815
      ],
      "IIdea": [
        2163
      ],
      "Idea": [
        2152
      ],
      "Shardable": [
        3145
      ],
      "divideUnequallyIntoTwoWithRemainder": [
        2215
      ]
    },
    "id": 1548,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:0"
      },
      {
        "absolutePath": "contracts/idea.sol",
        "file": "./idea.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1548,
        "sourceUnit": 2153,
        "src": "71:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Idea",
              "nameLocations": [
                "333:4:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2152,
              "src": "333:4:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "333:4:0"
          }
        ],
        "canonicalName": "Administrable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "93:214:0",
          "text": "@title An extension of the Idea providing an administrable interface.\n @author Frederik W. L. Christoffersen\n @notice This contract adds administrability via permits and internally closed money supplies."
        },
        "fullyImplemented": true,
        "id": 1547,
        "linearizedBaseContracts": [
          1547,
          2152,
          3145
        ],
        "name": "Administrable",
        "nameLocation": "316:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Administrable.PermitState",
            "id": 9,
            "members": [
              {
                "id": 6,
                "name": "unauthorized",
                "nameLocation": "676:12:0",
                "nodeType": "EnumValue",
                "src": "676:12:0"
              },
              {
                "id": 7,
                "name": "authorized",
                "nameLocation": "698:10:0",
                "nodeType": "EnumValue",
                "src": "698:10:0"
              },
              {
                "id": 8,
                "name": "administrator",
                "nameLocation": "718:13:0",
                "nodeType": "EnumValue",
                "src": "718:13:0"
              }
            ],
            "name": "PermitState",
            "nameLocation": "654:11:0",
            "nodeType": "EnumDefinition",
            "src": "649:88:0"
          },
          {
            "canonicalName": "Administrable.DividendInfo",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "1063:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1055:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1055:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1093:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1085:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DividendInfo",
            "nameLocation": "1032:12:0",
            "nodeType": "StructDefinition",
            "scope": 1547,
            "src": "1025:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "1111:102:0",
              "text": "@notice A boolean stating if Non Shard Holders are allowed to administer the administrable or not."
            },
            "id": 17,
            "mutability": "mutable",
            "name": "allowNonShardHolders",
            "nameLocation": "1223:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "1218:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 16,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1218:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "1250:91:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not."
            },
            "id": 22,
            "mutability": "mutable",
            "name": "validBanks",
            "nameLocation": "1370:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "1346:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 21,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 19,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1354:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1346:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 20,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1364:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "1391:114:0",
              "text": "@notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank."
            },
            "id": 27,
            "mutability": "mutable",
            "name": "storedTokenAddressesByBank",
            "nameLocation": "1537:26:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "1510:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 24,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1518:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1510:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1528:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1570:136:0",
              "text": "@notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address."
            },
            "id": 34,
            "mutability": "mutable",
            "name": "balanceByBank",
            "nameLocation": "1758:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "1711:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(string => mapping(address => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1719:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1711:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(string => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1737:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1729:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1748:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "1779:169:0",
              "text": "@notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds."
            },
            "id": 41,
            "mutability": "mutable",
            "name": "adminOfBank",
            "nameLocation": "1997:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "1953:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(string => mapping(address => bool))"
            },
            "typeName": {
              "id": 40,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1961:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1953:43:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(string => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 39,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1979:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1971:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "2015:260:0",
              "text": "@notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
            },
            "id": 49,
            "mutability": "mutable",
            "name": "permits",
            "nameLocation": "2331:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "2280:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
              "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
            },
            "typeName": {
              "id": 48,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 43,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2288:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2280:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2306:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2298:31:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                  "typeString": "mapping(address => enum Administrable.PermitState)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "PermitState",
                    "nameLocations": [
                      "2317:11:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9,
                    "src": "2317:11:0"
                  },
                  "referencedDeclaration": 9,
                  "src": "2317:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "2345:84:0",
              "text": "@notice A mapping pointing to a base Permit State, given the name of the permit."
            },
            "id": 55,
            "mutability": "mutable",
            "name": "basePermits",
            "nameLocation": "2465:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "2434:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
              "typeString": "mapping(string => enum Administrable.PermitState)"
            },
            "typeName": {
              "id": 54,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 51,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2442:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2434:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                "typeString": "mapping(string => enum Administrable.PermitState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "PermitState",
                  "nameLocations": [
                    "2452:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9,
                  "src": "2452:11:0"
                },
                "referencedDeclaration": 9,
                "src": "2452:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PermitState_$9",
                  "typeString": "enum Administrable.PermitState"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "2487:88:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Dividend is valid or not."
            },
            "id": 60,
            "mutability": "mutable",
            "name": "validDividends",
            "nameLocation": "2605:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "2580:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 59,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 57,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2588:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2580:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 58,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2599:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "2626:98:0",
              "text": "@notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend."
            },
            "id": 66,
            "mutability": "mutable",
            "name": "infoByDividend",
            "nameLocation": "2762:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "2729:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
              "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
            },
            "typeName": {
              "id": 65,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2737:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2729:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "DividendInfo",
                  "nameLocations": [
                    "2748:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "2748:12:0"
                },
                "referencedDeclaration": 14,
                "src": "2748:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DividendInfo_$14_storage_ptr",
                  "typeString": "struct Administrable.DividendInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "2783:102:0",
              "text": "@notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend."
            },
            "id": 71,
            "mutability": "mutable",
            "name": "residualByDividend",
            "nameLocation": "2918:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "2890:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 70,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2898:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2890:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 69,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2909:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "2943:154:0",
              "text": "@notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard."
            },
            "id": 78,
            "mutability": "mutable",
            "name": "hasClaimedDividend",
            "nameLocation": "3148:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1547,
            "src": "3102:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 77,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3110:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3102:45:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 76,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 74,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3129:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "3121:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 75,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3141:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "3173:240:0",
              "text": "@notice Event that triggers when an action is taken by somebody.\n @param func The name of the function that was called.\n @param args The arguments passed to the function call.\n @param by The initiator of the action."
            },
            "eventSelector": "43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055",
            "id": 87,
            "name": "ActionTaken",
            "nameLocation": "3424:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "func",
                  "nameLocation": "3452:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3445:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3445:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3472:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3466:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "3494:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3486:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:71:0"
            },
            "src": "3418:89:0"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "3703:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 94,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3731:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 95,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3743:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3747:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3743:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 93,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 822,
                          "src": "3721:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3721:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3713:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3713:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "3713:42:0"
                },
                {
                  "id": 100,
                  "nodeType": "PlaceholderStatement",
                  "src": "3765:1:0"
                }
              ]
            },
            "documentation": {
              "id": 88,
              "nodeType": "StructuredDocumentation",
              "src": "3513:135:0",
              "text": "@notice Modifier that makes sure msg.sender has a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 102,
            "name": "onlyWithPermit",
            "nameLocation": "3662:14:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3691:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "3677:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3677:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3676:26:0"
            },
            "src": "3653:120:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "3985:75:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "4017:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 110,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4029:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4033:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4029:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 108,
                          "name": "isPermitAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 860,
                          "src": "4003:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4003:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:46:0"
                },
                {
                  "id": 115,
                  "nodeType": "PlaceholderStatement",
                  "src": "4051:1:0"
                }
              ]
            },
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "3783:146:0",
              "text": "@notice Modifier that makes sure msg.sender is an admin of a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 117,
            "name": "onlyPermitAdmin",
            "nameLocation": "3943:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3973:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "3959:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:26:0"
            },
            "src": "3934:126:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "4255:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 124,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "4285:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 125,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4295:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4299:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4295:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "4273:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4273:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4265:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:42:0"
                },
                {
                  "id": 130,
                  "nodeType": "PlaceholderStatement",
                  "src": "4317:1:0"
                }
              ]
            },
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "4066:137:0",
              "text": "@notice Modifier that makes sure msg.sender is admin of a given bank.\n @param bankName The name of the Bank to be checked for."
            },
            "id": 132,
            "name": "onlyBankAdmin",
            "nameLocation": "4217:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4245:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "4231:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4231:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4230:24:0"
            },
            "src": "4208:117:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "4506:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 139,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4535:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 138,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "4524:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4524:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444e45",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4546:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        },
                        "value": "DNE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:36:0"
                },
                {
                  "id": 144,
                  "nodeType": "PlaceholderStatement",
                  "src": "4562:1:0"
                }
              ]
            },
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "4331:120:0",
              "text": "@notice Modifier that makes sure a given bank exists\n @param bankName The name of the Bank to be checked for."
            },
            "id": 146,
            "name": "onlyExistingBank",
            "nameLocation": "4465:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4496:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "4482:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4481:24:0"
            },
            "src": "4456:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "4762:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 153,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "4795:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 152,
                          "name": "dividendExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "4780:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4780:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4772:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4772:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "4772:33:0"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "4815:1:0"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "4580:129:0",
              "text": "@notice Modifier that makes sure a given dividend exists and is valid\n @param dividend The Dividend to be checked for."
            },
            "id": 159,
            "name": "onlyExistingDividend",
            "nameLocation": "4723:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "4752:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4744:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:18:0"
            },
            "src": "4714:109:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "4977:504:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d61696e",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4999:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        "value": "main"
                      },
                      {
                        "expression": {
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5006:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5010:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5006:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 168,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "4987:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "734e53",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        "value": "sNS"
                      },
                      {
                        "expression": {
                          "id": 176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5045:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5049:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5045:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 178,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5057:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5069:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5057:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 174,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5027:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5027:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "5027:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6953",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5104:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                          "typeString": "literal_string \"iS\""
                        },
                        "value": "iS"
                      },
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5110:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5114:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5110:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 186,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5122:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5134:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5122:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                          "typeString": "literal_string \"iS\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 182,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5093:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "5093:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5169:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "expression": {
                          "id": 192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5175:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5179:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5175:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 194,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5187:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5199:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5187:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 190,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5158:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5234:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "expression": {
                          "id": 200,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5240:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5244:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5240:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 202,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5252:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5264:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5252:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 198,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5223:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5223:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "5223:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d42",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5299:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        "value": "mB"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5305:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5309:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5305:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 210,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5317:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5329:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5317:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 206,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5288:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5288:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "5288:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5364:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5370:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5374:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5370:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 218,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5382:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5394:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5382:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 214,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5353:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d4154",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5429:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        "value": "mAT"
                      },
                      {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5436:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5440:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 226,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5448:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5460:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5448:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 222,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "5418:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5418:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "5418:56:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "4829:102:0",
              "text": "@notice Constructor function connecting the Idea entity and creating a Bank with an administrator."
            },
            "id": 231,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 165,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 162,
                    "src": "4969:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 166,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 164,
                  "name": "Idea",
                  "nameLocations": [
                    "4964:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2152,
                  "src": "4964:4:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4964:12:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4956:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4948:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4947:16:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4977:0:0"
            },
            "scope": 1547,
            "src": "4936:545:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "5870:572:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 249,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "5901:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 250,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "5907:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 248,
                          "name": "shardExisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2843,
                          "src": "5888:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32,uint256) view returns (bool)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5888:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4146",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5918:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        },
                        "value": "NAF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5880:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5880:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 256,
                              "name": "hasClaimedDividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "5942:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 258,
                            "indexExpression": {
                              "id": 257,
                              "name": "dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "5961:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5942:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 260,
                          "indexExpression": {
                            "id": 259,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "5971:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5942:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5981:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5942:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4143",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5988:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        },
                        "value": "AC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5934:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5934:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "5934:59:0"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 266,
                          "name": "hasClaimedDividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6003:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "id": 267,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "6022:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6003:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 268,
                        "name": "shard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "6032:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6003:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6041:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6003:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "6003:42:0"
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "dividendValue",
                      "nameLocation": "6063:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "6055:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6055:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 276,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6079:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 278,
                          "indexExpression": {
                            "id": 277,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "6094:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6079:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6104:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "6079:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 280,
                            "name": "infoByShard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "6112:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ShardInfo_$2223_storage_$",
                              "typeString": "mapping(bytes32 => struct Shardable.ShardInfo storage ref)"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "id": 281,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "6124:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6112:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ShardInfo_$2223_storage",
                            "typeString": "struct Shardable.ShardInfo storage ref"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6131:6:0",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2218,
                        "src": "6112:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6079:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 285,
                        "name": "totalShardAmountByClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2244,
                        "src": "6140:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "clock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "6164:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6140:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6055:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 291,
                          "name": "dividendValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "6188:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6205:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6188:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "445453",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6208:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        },
                        "value": "DTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6180:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6180:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:34:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6224:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "id": 298,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "6243:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6224:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "dividendValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "6256:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6224:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "6224:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 304,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6294:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 306,
                          "indexExpression": {
                            "id": 305,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "6309:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6294:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6319:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "6294:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 308,
                        "name": "dividendValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "6332:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 309,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6346:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6350:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6346:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "6279:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6279:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "6279:78:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6344",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        "value": "cD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 317,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "6400:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 318,
                            "name": "dividendValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "6409:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 315,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6389:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6393:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6389:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6389:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6424:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6428:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6424:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 313,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "6372:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6372:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "EmitStatement",
                  "src": "6367:68:0"
                }
              ]
            },
            "documentation": {
              "id": 232,
              "nodeType": "StructuredDocumentation",
              "src": "5487:251:0",
              "text": "@notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n @param shard The shard that was valid at the clock of the Dividend creation\n @param dividend The dividend to be claimed."
            },
            "functionSelector": "354cd135",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 239,
                    "name": "shard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "5819:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "onlyHolder",
                  "nameLocations": [
                    "5808:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2386,
                  "src": "5808:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5808:17:0"
              },
              {
                "arguments": [
                  {
                    "id": 242,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "5847:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "5826:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "5826:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5826:30:0"
              },
              {
                "id": 245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 244,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "5857:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "5857:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5857:12:0"
              }
            ],
            "name": "claimDividend",
            "nameLocation": "5752:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "shard",
                  "nameLocation": "5774:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "5766:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5766:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "5789:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "5781:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5765:33:0"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5870:0:0"
            },
            "scope": 1547,
            "src": "5743:699:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "6732:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 337,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "6764:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 336,
                      "name": "_registerTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1472
                      ],
                      "referencedDeclaration": 1472,
                      "src": "6742:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:35:0"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "6448:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "functionSelector": "8786df6a",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6712:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "6697:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "6697:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6697:21:0"
              },
              {
                "id": 334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 333,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "6719:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "6719:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6719:12:0"
              }
            ],
            "name": "registerTokenAddress",
            "nameLocation": "6645:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6674:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "6666:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6665:22:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6732:0:0"
            },
            "scope": 1547,
            "src": "6636:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 356,
              "nodeType": "Block",
              "src": "7080:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 353,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "7114:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 352,
                      "name": "_unregisterTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1448
                      ],
                      "referencedDeclaration": 1448,
                      "src": "7090:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7090:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "7090:37:0"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "6790:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "functionSelector": "859d9fd5",
            "id": 357,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7060:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 348,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 346,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7045:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "7045:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7045:21:0"
              },
              {
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 349,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "7067:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "7067:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7067:12:0"
              }
            ],
            "name": "unregisterTokenAddress",
            "nameLocation": "6991:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7022:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "7014:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7014:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7013:22:0"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7080:0:0"
            },
            "scope": 1547,
            "src": "6982:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "7533:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "7556:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 374,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "7563:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "7576:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 376,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "7582:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 372,
                      "name": "_issueShards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1812,
                      "src": "7543:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,uint256,address)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7543:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "7543:42:0"
                }
              ]
            },
            "documentation": {
              "id": 358,
              "nodeType": "StructuredDocumentation",
              "src": "7140:272:0",
              "text": "@notice Issues new shards and puts them for sale.\n @param tokenAddress The token address the shards are put for sale for.\n @param price The price per token.\n @param to The specifically set buyer of the issued shards. Open to anyone, if address(0)."
            },
            "functionSelector": "3baf28f8",
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6953",
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7527:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                      "typeString": "literal_string \"iS\""
                    },
                    "value": "iS"
                  }
                ],
                "id": 370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 368,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7512:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "7512:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7512:20:0"
              }
            ],
            "name": "issueShards",
            "nameLocation": "7426:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7446:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7438:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7438:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7462:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7454:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7454:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "7484:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7476:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7476:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7499:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7491:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7437:65:0"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7533:0:0"
            },
            "scope": 1547,
            "src": "7417:175:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "8081:62:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "8106:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 398,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "8115:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 399,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "8128:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 396,
                      "name": "_issueDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "8091:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:43:0"
                }
              ]
            },
            "documentation": {
              "id": 381,
              "nodeType": "StructuredDocumentation",
              "src": "7598:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "functionSelector": "63879c0b",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6944",
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8051:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                      "typeString": "literal_string \"iD\""
                    },
                    "value": "iD"
                  }
                ],
                "id": 391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 389,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8036:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "8036:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8036:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 393,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 383,
                    "src": "8071:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 392,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "8057:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "8057:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8057:23:0"
              }
            ],
            "name": "issueDividend",
            "nameLocation": "7952:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "7980:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "7966:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7966:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7998:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "7990:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8020:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "8012:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8012:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7965:61:0"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8081:0:0"
            },
            "scope": 1547,
            "src": "7943:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "8362:44:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 413,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "8390:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 412,
                      "name": "_dissolveDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "8372:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8372:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "8372:27:0"
                }
              ]
            },
            "documentation": {
              "id": 404,
              "nodeType": "StructuredDocumentation",
              "src": "8149:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "functionSelector": "23656642",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6444",
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                      "typeString": "literal_string \"dD\""
                    },
                    "value": "dD"
                  }
                ],
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 408,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8341:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "8341:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8341:20:0"
              }
            ],
            "name": "dissolveDividend",
            "nameLocation": "8297:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "8322:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "8314:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8314:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8313:18:0"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8362:0:0"
            },
            "scope": 1547,
            "src": "8288:118:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "8684:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 431,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "8705:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 432,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "8714:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 430,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "8693:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8693:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "8693:31:0"
                }
              ]
            },
            "documentation": {
              "id": 418,
              "nodeType": "StructuredDocumentation",
              "src": "8412:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "functionSelector": "2ef37926",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8665:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 424,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8650:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "8650:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8650:20:0"
              },
              {
                "id": 428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 427,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "8671:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "8671:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8671:12:0"
              }
            ],
            "name": "createBank",
            "nameLocation": "8587:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8612:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "8598:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8598:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8630:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "8622:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8622:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8597:43:0"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8684:0:0"
            },
            "scope": 1547,
            "src": "8578:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "9092:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "bankAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "9124:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 451,
                            "name": "isShardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2819,
                            "src": "9110:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9110:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 454,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "9138:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9110:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e53484e41",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        },
                        "value": "NSHNA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9102:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "9102:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "9192:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 461,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "9201:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 459,
                      "name": "_addBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "9178:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9178:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "9178:33:0"
                }
              ]
            },
            "documentation": {
              "id": 437,
              "nodeType": "StructuredDocumentation",
              "src": "8737:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "functionSelector": "a907b6c5",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9062:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 445,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 443,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "9047:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "9047:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9047:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 447,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 439,
                    "src": "9082:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 446,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9068:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9068:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9068:23:0"
              }
            ],
            "name": "addBankAdmin",
            "nameLocation": "8982:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9009:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "8995:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8995:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "9027:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "9019:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9019:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8994:43:0"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9092:0:0"
            },
            "scope": 1547,
            "src": "8973:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "9594:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 480,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "9621:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 481,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "9630:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 479,
                      "name": "_removeBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "9604:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9604:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "9604:36:0"
                }
              ]
            },
            "documentation": {
              "id": 466,
              "nodeType": "StructuredDocumentation",
              "src": "9224:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "functionSelector": "2f2e9a2a",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9564:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 474,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 472,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9548:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "9548:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9548:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 476,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 468,
                    "src": "9584:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 475,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9570:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9570:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9570:23:0"
              }
            ],
            "name": "removeBankAdmin",
            "nameLocation": "9480:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9510:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "9496:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9496:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "9528:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "9520:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9520:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9495:43:0"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9594:0:0"
            },
            "scope": 1547,
            "src": "9471:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "9850:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 498,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "9872:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 497,
                      "name": "_deleteBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "9860:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9860:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "9860:21:0"
                }
              ]
            },
            "documentation": {
              "id": 486,
              "nodeType": "StructuredDocumentation",
              "src": "9653:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "functionSelector": "384fe2b5",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9820:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 490,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9804:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "9804:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9804:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 494,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 488,
                    "src": "9840:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9826:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9826:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9826:23:0"
              }
            ],
            "name": "deleteBank",
            "nameLocation": "9760:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9785:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "9771:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9771:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9770:24:0"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9850:0:0"
            },
            "scope": 1547,
            "src": "9751:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "10392:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 518,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "10425:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 519,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "10434:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 520,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "10447:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 521,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "10453:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 517,
                      "name": "_transferTokenFromBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "10402:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,uint256,address)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10402:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "10402:54:0"
                }
              ]
            },
            "documentation": {
              "id": 503,
              "nodeType": "StructuredDocumentation",
              "src": "9894:356:0",
              "text": "@notice Transfers a token bankAdmin a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "functionSelector": "de9d6805",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 514,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 505,
                    "src": "10382:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 513,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "10368:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "10368:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10368:23:0"
              }
            ],
            "name": "transferTokenFromBank",
            "nameLocation": "10264:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "10300:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "10286:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "10318:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "10310:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10310:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10340:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "10332:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10332:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10355:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "10347:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10285:73:0"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10392:0:0"
            },
            "scope": 1547,
            "src": "10255:208:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "10981:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 541,
                        "name": "fromBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "11002:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 542,
                        "name": "toBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "11015:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 543,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "11026:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 544,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "11039:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 540,
                      "name": "_moveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "10991:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10991:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "10991:54:0"
                }
              ]
            },
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "10469:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "functionSelector": "a1916aef",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 537,
                    "name": "fromBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "10967:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 536,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "10953:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "10953:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10953:27:0"
              }
            ],
            "name": "moveToken",
            "nameLocation": "10843:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "10867:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "10853:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10853:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "10895:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "10881:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10881:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "10915:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "10907:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10907:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10937:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "10929:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10929:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10852:91:0"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10981:0:0"
            },
            "scope": 1547,
            "src": "10834:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "11457:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 564,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "11489:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 563,
                            "name": "isShardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2819,
                            "src": "11475:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11475:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 566,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "11501:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11475:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e53484e41",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11523:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        },
                        "value": "NSHNA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11467:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11467:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "11467:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 572,
                              "name": "permits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "11549:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                                "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                              }
                            },
                            "id": 574,
                            "indexExpression": {
                              "id": 573,
                              "name": "permitName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "11557:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11549:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(address => enum Administrable.PermitState)"
                            }
                          },
                          "id": 576,
                          "indexExpression": {
                            "id": 575,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "11569:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11549:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 577,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "11581:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11549:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414850",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11591:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        },
                        "value": "AHP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        }
                      ],
                      "id": 571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11541:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "11541:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 583,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "11618:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 584,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "11629:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 585,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "11637:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 582,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "11607:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11607:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "11607:39:0"
                }
              ]
            },
            "documentation": {
              "id": 549,
              "nodeType": "StructuredDocumentation",
              "src": "11058:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param account The address, whose permit state is to be set.\n @param permitName The name of the permit, whose state is to be set.\n @param newState The new Permit State to be applied."
            },
            "functionSelector": "c5438a55",
            "id": 589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 559,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 551,
                    "src": "11445:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 560,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 558,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "11429:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "11429:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11429:27:0"
              }
            ],
            "name": "setPermit",
            "nameLocation": "11345:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "11369:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "11355:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11355:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11389:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "11381:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11381:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11410:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "11398:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 554,
                      "name": "PermitState",
                      "nameLocations": [
                        "11398:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "11398:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "11398:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11354:65:0"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11457:0:0"
            },
            "scope": 1547,
            "src": "11336:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "11973:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 602,
                            "name": "basePermits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "11991:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(string memory => enum Administrable.PermitState)"
                            }
                          },
                          "id": 604,
                          "indexExpression": {
                            "id": 603,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "12003:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11991:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 605,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "12018:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11991:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4153",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12028:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        },
                        "value": "AS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        }
                      ],
                      "id": 601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11983:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11983:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "11983:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 611,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "12058:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 612,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "12069:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 610,
                      "name": "_setBasePermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1401,
                      "src": "12043:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,enum Administrable.PermitState)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12043:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "12043:35:0"
                }
              ]
            },
            "documentation": {
              "id": 590,
              "nodeType": "StructuredDocumentation",
              "src": "11660:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "functionSelector": "036f3aec",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 598,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 592,
                    "src": "11961:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 599,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 597,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "11945:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "11945:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11945:27:0"
              }
            ],
            "name": "setBasePermit",
            "nameLocation": "11874:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "11902:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "11888:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11888:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11926:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "11914:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 593,
                      "name": "PermitState",
                      "nameLocations": [
                        "11914:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "11914:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "11914:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11887:48:0"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11973:0:0"
            },
            "scope": 1547,
            "src": "11865:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "12283:107:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 626,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "12301:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 627,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "12325:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12301:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4153",
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12335:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        },
                        "value": "AS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        }
                      ],
                      "id": 625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12293:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12293:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "12293:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12374:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 632,
                      "name": "_setNonShardHolderState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1424,
                      "src": "12350:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12350:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "12350:33:0"
                }
              ]
            },
            "documentation": {
              "id": 617,
              "nodeType": "StructuredDocumentation",
              "src": "12091:109:0",
              "text": "@notice Sets the state of the Non Shard Holders.\n @param newState The Boolean state to be applied."
            },
            "functionSelector": "81005219",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "734e53",
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12276:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                      "typeString": "literal_string \"sNS\""
                    },
                    "value": "sNS"
                  }
                ],
                "id": 623,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 621,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "12261:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "12261:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12261:21:0"
              }
            ],
            "name": "setNonShardHolderState",
            "nameLocation": "12214:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "12242:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "12237:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12237:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12236:15:0"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12283:0:0"
            },
            "scope": 1547,
            "src": "12205:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "12523:29:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 644,
                      "name": "_liquidize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1546
                      ],
                      "referencedDeclaration": 1546,
                      "src": "12533:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12533:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:12:0"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "12396:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "functionSelector": "05c558f5",
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6c45",
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12517:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                      "typeString": "literal_string \"lE\""
                    },
                    "value": "lE"
                  }
                ],
                "id": 642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 640,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "12502:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "12502:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12502:20:0"
              }
            ],
            "name": "liquidize",
            "nameLocation": "12481:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12490:2:0"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12523:0:0"
            },
            "scope": 1547,
            "src": "12472:80:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "12825:61:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 658,
                        "name": "balanceByBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "12842:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(string memory => mapping(address => uint256))"
                        }
                      },
                      "id": 660,
                      "indexExpression": {
                        "id": 659,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "12856:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12842:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "id": 661,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "12866:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12842:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 657,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "12835:44:0"
                }
              ]
            },
            "documentation": {
              "id": 649,
              "nodeType": "StructuredDocumentation",
              "src": "12558:163:0",
              "text": "@notice Returns the balance of a bank.\n @param bankName The name of the Bank.\n @param tokenAddress The address of the token balance to check for."
            },
            "functionSelector": "2dec7cd2",
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBankBalance",
            "nameLocation": "12735:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "12764:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "12750:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12750:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "12782:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "12774:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12774:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12749:46:0"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "12816:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12816:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12815:9:0"
            },
            "scope": 1547,
            "src": "12726:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "13074:61:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 673,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "13091:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 675,
                      "indexExpression": {
                        "id": 674,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "13106:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13091:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13116:12:0",
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "13091:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "13084:44:0"
                }
              ]
            },
            "documentation": {
              "id": 666,
              "nodeType": "StructuredDocumentation",
              "src": "12896:100:0",
              "text": "@notice Returns the token of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "62748dcc",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendToken",
            "nameLocation": "13010:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "13035:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "13027:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13027:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13026:18:0"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "13065:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13065:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13064:9:0"
            },
            "scope": 1547,
            "src": "13001:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "13329:54:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 687,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "13346:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 689,
                      "indexExpression": {
                        "id": 688,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "13361:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13346:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13371:5:0",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13,
                    "src": "13346:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 691,
                  "nodeType": "Return",
                  "src": "13339:37:0"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "13145:106:0",
              "text": "@notice Returns the total value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "4c46360b",
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendValue",
            "nameLocation": "13265:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "13290:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "13282:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13282:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13281:18:0"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "13320:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13320:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13319:9:0"
            },
            "scope": 1547,
            "src": "13256:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "13579:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 701,
                      "name": "residualByDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "13596:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 703,
                    "indexExpression": {
                      "id": 702,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "13615:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13596:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 700,
                  "id": 704,
                  "nodeType": "Return",
                  "src": "13589:35:0"
                }
              ]
            },
            "documentation": {
              "id": 694,
              "nodeType": "StructuredDocumentation",
              "src": "13389:109:0",
              "text": "@notice Returns the residual value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "e6778fce",
            "id": 706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendResidual",
            "nameLocation": "13512:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "13540:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "13532:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13532:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13531:18:0"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "13570:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13570:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13569:9:0"
            },
            "scope": 1547,
            "src": "13503:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "13837:52:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 714,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "13854:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 716,
                      "indexExpression": {
                        "id": 715,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "13865:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13854:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13878:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13854:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 713,
                  "id": 719,
                  "nodeType": "Return",
                  "src": "13847:35:0"
                }
              ]
            },
            "documentation": {
              "id": 707,
              "nodeType": "StructuredDocumentation",
              "src": "13637:125:0",
              "text": "@notice Returns a boolean stating if a given Bank exists.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "b4af7d59",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankExists",
            "nameLocation": "13776:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "13801:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "13787:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13787:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13786:24:0"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "13831:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13831:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13830:6:0"
            },
            "scope": 1547,
            "src": "13767:122:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "14098:109:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 729,
                          "name": "storedTokenAddressesByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "14115:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 731,
                        "indexExpression": {
                          "id": 730,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "14142:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14115:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14155:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14115:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 734,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "14160:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 736,
                          "indexExpression": {
                            "id": 735,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "14174:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14160:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 741,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14192:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14184:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 737,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14184:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14184:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14160:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14199:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14160:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14115:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 728,
                  "id": 745,
                  "nodeType": "Return",
                  "src": "14108:92:0"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "13895:127:0",
              "text": "@notice Returns a boolean stating if a given Bank is empty.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "169936b4",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankIsEmpty",
            "nameLocation": "14036:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "14062:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "14048:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14048:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14047:24:0"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "14092:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14092:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14091:6:0"
            },
            "scope": 1547,
            "src": "14027:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "14411:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 755,
                      "name": "validDividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "14426:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 757,
                    "indexExpression": {
                      "id": 756,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "14441:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14426:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 754,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "14419:31:0"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "14217:121:0",
              "text": "@notice Returns a boolean stating if a given Dividend exists.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "9211b7b3",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dividendExists",
            "nameLocation": "14352:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "14375:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "14367:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14367:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14366:18:0"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "14405:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14405:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14404:6:0"
            },
            "scope": 1547,
            "src": "14343:114:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "14759:93:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 770,
                            "name": "adminOfBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "14776:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(string memory => mapping(address => bool))"
                            }
                          },
                          "id": 772,
                          "indexExpression": {
                            "id": 771,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "14788:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14776:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 774,
                        "indexExpression": {
                          "id": 773,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "14798:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14776:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14810:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "14776:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "6d42",
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14832:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          "value": "mB"
                        },
                        {
                          "id": 779,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "14837:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 777,
                        "name": "isPermitAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "14818:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (string memory,address) view returns (bool)"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14818:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14776:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "14769:76:0"
                }
              ]
            },
            "documentation": {
              "id": 761,
              "nodeType": "StructuredDocumentation",
              "src": "14463:203:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given bank.\n @param account The address to be checked for.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "a80aed76",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBankAdmin",
            "nameLocation": "14680:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "14706:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "14692:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14692:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14724:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "14716:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14716:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14691:41:0"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "14753:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14752:6:0"
            },
            "scope": 1547,
            "src": "14671:181:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "15156:210:0",
              "statements": [
                {
                  "condition": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15170:49:0",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 795,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 789,
                                "src": "15186:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 794,
                              "name": "isShardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "15172:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15172:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 797,
                            "name": "allowNonShardHolders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "15198:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15172:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 799,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15171:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "15166:70:0",
                  "trueBody": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "15221:15:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15229:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 793,
                        "id": 802,
                        "nodeType": "Return",
                        "src": "15222:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 805,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "15252:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 807,
                          "indexExpression": {
                            "id": 806,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "15260:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15252:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 809,
                        "indexExpression": {
                          "id": 808,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "15272:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15252:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 810,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15284:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15296:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "15284:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15252:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 813,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "15310:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 815,
                        "indexExpression": {
                          "id": 814,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "15322:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15310:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 816,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15337:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15349:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "15337:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15310:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15252:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 793,
                  "id": 820,
                  "nodeType": "Return",
                  "src": "15245:114:0"
                }
              ]
            },
            "documentation": {
              "id": 785,
              "nodeType": "StructuredDocumentation",
              "src": "14858:205:0",
              "text": "@notice Returns a boolean stating if a given address has a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "db5dc9b7",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPermit",
            "nameLocation": "15077:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "15101:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "15087:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15087:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15121:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "15113:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15113:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15086:43:0"
            },
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "15150:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15150:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15149:6:0"
            },
            "scope": 1547,
            "src": "15068:298:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 859,
              "nodeType": "Block",
              "src": "15685:216:0",
              "statements": [
                {
                  "condition": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15699:49:0",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 833,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "15715:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 832,
                              "name": "isShardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "15701:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15701:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 835,
                            "name": "allowNonShardHolders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "15727:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15701:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 837,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15700:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 842,
                  "nodeType": "IfStatement",
                  "src": "15695:70:0",
                  "trueBody": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "15750:15:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15758:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 831,
                        "id": 840,
                        "nodeType": "Return",
                        "src": "15751:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 843,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "15781:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 845,
                          "indexExpression": {
                            "id": 844,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "15789:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15781:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 847,
                        "indexExpression": {
                          "id": 846,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 827,
                          "src": "15801:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15781:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 848,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15825:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15813:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15781:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 851,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "15842:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 853,
                        "indexExpression": {
                          "id": 852,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 825,
                          "src": "15854:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15842:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 854,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15869:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15881:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15869:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15842:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15781:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 831,
                  "id": 858,
                  "nodeType": "Return",
                  "src": "15774:120:0"
                }
              ]
            },
            "documentation": {
              "id": 823,
              "nodeType": "StructuredDocumentation",
              "src": "15372:216:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "258e4d9f",
            "id": 860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermitAdmin",
            "nameLocation": "15602:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "15630:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "15616:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15616:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15650:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "15642:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15642:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15615:43:0"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "15679:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15678:6:0"
            },
            "scope": 1547,
            "src": "15593:308:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "16359:636:0",
              "statements": [
                {
                  "assignments": [
                    873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "transferClock",
                      "nameLocation": "16377:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 950,
                      "src": "16369:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16369:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 875,
                  "initialValue": {
                    "id": 874,
                    "name": "clock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2236,
                    "src": "16393:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16369:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 877,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "16416:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 878,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "16425:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 880,
                            "indexExpression": {
                              "id": 879,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 863,
                              "src": "16439:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16425:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 882,
                          "indexExpression": {
                            "id": 881,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "16449:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16425:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16416:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16464:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16408:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16408:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "16408:61:0"
                },
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 887,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "16479:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 890,
                        "indexExpression": {
                          "id": 888,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 863,
                          "src": "16493:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16479:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 891,
                      "indexExpression": {
                        "id": 889,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "16503:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16479:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 892,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "16520:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16479:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "16479:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 895,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "16539:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 897,
                          "indexExpression": {
                            "id": 896,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 863,
                            "src": "16553:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16539:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "id": 898,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "16563:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16539:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16580:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16539:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 902,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "16585:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16609:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16601:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16601:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16585:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16539:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 916,
                  "nodeType": "IfStatement",
                  "src": "16535:144:0",
                  "trueBody": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "16613:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 909,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "16627:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 911,
                            "indexExpression": {
                              "id": 910,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 863,
                              "src": "16654:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16627:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16667:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16627:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 914,
                        "nodeType": "ExpressionStatement",
                        "src": "16627:41:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 917,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "16688:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 919,
                      "indexExpression": {
                        "id": 918,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "16703:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16688:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 921,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "16760:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 922,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "16792:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 920,
                        "name": "DividendInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "16720:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DividendInfo_$14_storage_ptr_$",
                          "typeString": "type(struct Administrable.DividendInfo storage pointer)"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "16747:12:0",
                        "16786:5:0"
                      ],
                      "names": [
                        "tokenAddress",
                        "value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "16720:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_memory_ptr",
                        "typeString": "struct Administrable.DividendInfo memory"
                      }
                    },
                    "src": "16688:120:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                      "typeString": "struct Administrable.DividendInfo storage ref"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "16688:120:0"
                },
                {
                  "expression": {
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 926,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "16818:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 928,
                      "indexExpression": {
                        "id": 927,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "16837:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16818:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 929,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "16854:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16818:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "16818:41:0"
                },
                {
                  "expression": {
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 932,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "16869:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 934,
                      "indexExpression": {
                        "id": 933,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "16884:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16869:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16901:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16869:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "16869:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 942,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 863,
                            "src": "16948:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 943,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "16957:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 944,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "16970:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 940,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16937:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16941:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16937:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16937:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 946,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16977:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16981:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16977:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 938,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "16920:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16920:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "EmitStatement",
                  "src": "16915:73:0"
                }
              ]
            },
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "15907:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 870,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 869,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "16346:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "16346:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16346:12:0"
              }
            ],
            "name": "_issueDividend",
            "nameLocation": "16261:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "16290:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "16276:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16276:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "16308:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "16300:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16300:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "16330:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "16322:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16322:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16275:61:0"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16359:0:0"
            },
            "scope": 1547,
            "src": "16252:743:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "17238:259:0",
              "statements": [
                {
                  "expression": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 962,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "17248:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 964,
                      "indexExpression": {
                        "id": 963,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "17263:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17248:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17275:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "17248:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "17248:32:0"
                },
                {
                  "expression": {
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 968,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "17333:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 974,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17347:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17333:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 975,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 970,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "17355:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 972,
                          "indexExpression": {
                            "id": 971,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "17370:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17355:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17380:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "17355:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17333:60:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 976,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "17397:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 978,
                      "indexExpression": {
                        "id": 977,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "17416:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17397:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17333:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "17333:92:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17452:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 985,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "17468:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 983,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17457:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17461:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17457:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17457:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 987,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17478:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17482:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17478:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 981,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17440:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17440:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "EmitStatement",
                  "src": "17435:54:0"
                }
              ]
            },
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "17001:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "id": 992,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 957,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 954,
                    "src": "17215:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 958,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 956,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "17194:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "17194:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17194:30:0"
              },
              {
                "id": 960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 959,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "17225:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "17225:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17225:12:0"
              }
            ],
            "name": "_dissolveDividend",
            "nameLocation": "17149:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "17175:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 992,
                  "src": "17167:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17167:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17166:18:0"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17238:0:0"
            },
            "scope": 1547,
            "src": "17140:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "17755:214:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17773:21:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1004,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "17785:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1003,
                            "name": "bankExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "17774:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17774:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4145",
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17796:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        },
                        "value": "AE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17765:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "17765:36:0"
                },
                {
                  "expression": {
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1010,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "17811:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1013,
                        "indexExpression": {
                          "id": 1011,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "17823:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17811:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1014,
                      "indexExpression": {
                        "id": 1012,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "17833:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17811:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17846:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17811:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:39:0"
                },
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1018,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "17860:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1020,
                      "indexExpression": {
                        "id": 1019,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "17871:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17860:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17883:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17860:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "17860:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6342",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17914:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        "value": "cB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1028,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "17930:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1029,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "17939:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1026,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17919:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17923:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17919:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17919:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17950:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17954:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17950:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1024,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17902:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17902:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1034,
                  "nodeType": "EmitStatement",
                  "src": "17897:64:0"
                }
              ]
            },
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "17503:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "id": 1036,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 999,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "17742:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "17742:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17742:12:0"
              }
            ],
            "name": "_createBank",
            "nameLocation": "17678:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "17704:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "17690:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17690:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "17722:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "17714:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17714:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17689:43:0"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17755:0:0"
            },
            "scope": 1547,
            "src": "17669:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "18299:180:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6d42",
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18327:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            "value": "mB"
                          },
                          {
                            "id": 1049,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "18332:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1047,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 822,
                          "src": "18317:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18317:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e50",
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18343:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        },
                        "value": "NP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        }
                      ],
                      "id": 1046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18309:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18309:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1053,
                  "nodeType": "ExpressionStatement",
                  "src": "18309:39:0"
                },
                {
                  "expression": {
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1054,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "18358:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1057,
                        "indexExpression": {
                          "id": 1055,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "18370:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18358:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1058,
                      "indexExpression": {
                        "id": 1056,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "18380:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18358:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18393:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "18358:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "18358:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6141",
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18424:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        "value": "aA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1066,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "18440:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1067,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "18449:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1064,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18429:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18433:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18429:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18429:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18460:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18464:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18460:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1062,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "18412:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18412:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1072,
                  "nodeType": "EmitStatement",
                  "src": "18407:64:0"
                }
              ]
            },
            "documentation": {
              "id": 1037,
              "nodeType": "StructuredDocumentation",
              "src": "17975:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1043,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18286:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "18286:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18286:12:0"
              }
            ],
            "name": "_addBankAdmin",
            "nameLocation": "18220:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18248:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "18234:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18234:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "18266:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "18258:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18258:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18233:43:0"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18299:0:0"
            },
            "scope": 1547,
            "src": "18211:268:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1110,
              "nodeType": "Block",
              "src": "18823:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1086,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "18853:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1087,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "18862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1085,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "18841:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18841:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18833:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18833:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "18833:40:0"
                },
                {
                  "expression": {
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1091,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "18883:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1094,
                        "indexExpression": {
                          "id": 1092,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "18895:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18883:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1095,
                      "indexExpression": {
                        "id": 1093,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "18905:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18883:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18918:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "18883:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "18883:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7241",
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18950:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        "value": "rA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1103,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "18966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1104,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "18975:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1101,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18955:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18959:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18955:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18955:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18986:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18990:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18986:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1099,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "18938:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18938:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "EmitStatement",
                  "src": "18933:64:0"
                }
              ]
            },
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "18485:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "id": 1111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18810:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "18810:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18810:12:0"
              }
            ],
            "name": "_removeBankAdmin",
            "nameLocation": "18741:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18772:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "18758:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18758:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "18790:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "18782:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18782:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18757:43:0"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18823:0:0"
            },
            "scope": 1547,
            "src": "18732:273:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "19176:281:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1121,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "19205:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1120,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "19194:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19194:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554221",
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19216:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        },
                        "value": "UB!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        }
                      ],
                      "id": 1119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19186:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19186:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "19186:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1130,
                                  "name": "bankName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "19256:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19250:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1128,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19250:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19250:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1127,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "19240:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19240:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d61696e",
                                  "id": 1136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19286:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  },
                                  "value": "main"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  }
                                ],
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19280:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1134,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19280:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19280:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1133,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "19270:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19270:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "19240:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d42",
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19296:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        },
                        "value": "MB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        }
                      ],
                      "id": 1126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19232:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "19232:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1145,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "19331:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1144,
                          "name": "bankIsEmpty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 747,
                          "src": "19319:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19319:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4245",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19342:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        },
                        "value": "BE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        }
                      ],
                      "id": 1143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19311:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19311:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "19311:36:0"
                },
                {
                  "expression": {
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1150,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "19357:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1152,
                      "indexExpression": {
                        "id": 1151,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "19368:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19357:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19380:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "19357:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "19357:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6442",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19412:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        "value": "dB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1160,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "19428:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1158,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19417:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19421:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "19417:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19417:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19438:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19442:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19438:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1156,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "19400:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19400:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "EmitStatement",
                  "src": "19395:54:0"
                }
              ]
            },
            "documentation": {
              "id": 1112,
              "nodeType": "StructuredDocumentation",
              "src": "19011:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1116,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "19163:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "19163:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19163:12:0"
              }
            ],
            "name": "_deleteBank",
            "nameLocation": "19118:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "19144:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "19130:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19130:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19129:24:0"
            },
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19176:0:0"
            },
            "scope": 1547,
            "src": "19109:348:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1241,
              "nodeType": "Block",
              "src": "19946:420:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1182,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "19964:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1183,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "19973:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1185,
                            "indexExpression": {
                              "id": 1184,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "19987:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19973:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1187,
                          "indexExpression": {
                            "id": 1186,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "19997:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19973:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19964:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20012:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19956:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19956:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "19956:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1193,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "20042:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1194,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "20055:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1195,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "20061:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1192,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "20027:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20027:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "20027:37:0"
                },
                {
                  "expression": {
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1198,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "20074:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1201,
                        "indexExpression": {
                          "id": 1199,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "20088:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20074:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1202,
                      "indexExpression": {
                        "id": 1200,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "20098:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20074:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1203,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "20115:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20074:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "20074:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1206,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "20134:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1208,
                          "indexExpression": {
                            "id": 1207,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1170,
                            "src": "20148:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20134:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1210,
                        "indexExpression": {
                          "id": 1209,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "20158:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20134:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20175:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20134:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1213,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "20180:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20204:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20196:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20196:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20196:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20180:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20134:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1227,
                  "nodeType": "IfStatement",
                  "src": "20130:144:0",
                  "trueBody": {
                    "id": 1226,
                    "nodeType": "Block",
                    "src": "20208:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1220,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "20222:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1222,
                            "indexExpression": {
                              "id": 1221,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "20249:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20222:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20262:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20222:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1225,
                        "nodeType": "ExpressionStatement",
                        "src": "20222:41:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7454",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20300:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        "value": "tT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1232,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1170,
                            "src": "20316:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1233,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "20325:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1234,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "20338:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1235,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1176,
                            "src": "20344:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1230,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20305:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20309:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "20305:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20305:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20348:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20352:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20348:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1228,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "20288:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20288:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "EmitStatement",
                  "src": "20283:76:0"
                }
              ]
            },
            "documentation": {
              "id": 1168,
              "nodeType": "StructuredDocumentation",
              "src": "19463:351:0",
              "text": "@notice Transfers a token from a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "id": 1242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1179,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1178,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "19933:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "19933:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19933:12:0"
              }
            ],
            "name": "_transferTokenFromBank",
            "nameLocation": "19828:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "19865:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "19851:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19851:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "19883:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "19875:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19875:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19905:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "19897:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19897:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19920:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "19912:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19912:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19850:73:0"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19946:0:0"
            },
            "scope": 1547,
            "src": "19819:547:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "20899:634:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1260,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "20917:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1261,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "20926:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1263,
                            "indexExpression": {
                              "id": 1262,
                              "name": "fromBankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "20940:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20926:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1265,
                          "indexExpression": {
                            "id": 1264,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1249,
                            "src": "20954:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20926:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20917:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20969:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20909:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "20909:65:0"
                },
                {
                  "expression": {
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1270,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "20984:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1273,
                        "indexExpression": {
                          "id": 1271,
                          "name": "fromBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "20998:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20984:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1274,
                      "indexExpression": {
                        "id": 1272,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "21012:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20984:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1275,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "21029:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20984:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "20984:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1278,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "21048:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21072:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "21064:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21064:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21064:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21048:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1315,
                  "nodeType": "IfStatement",
                  "src": "21044:326:0",
                  "trueBody": {
                    "id": 1314,
                    "nodeType": "Block",
                    "src": "21076:294:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1284,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "21094:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1286,
                              "indexExpression": {
                                "id": 1285,
                                "name": "fromBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1245,
                                "src": "21108:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21094:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1288,
                            "indexExpression": {
                              "id": 1287,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "21122:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21094:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21139:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21094:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1298,
                        "nodeType": "IfStatement",
                        "src": "21090:131:0",
                        "trueBody": {
                          "id": 1297,
                          "nodeType": "Block",
                          "src": "21142:79:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1291,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "21160:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1293,
                                  "indexExpression": {
                                    "id": 1292,
                                    "name": "fromBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "21187:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21160:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21204:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "21160:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1296,
                              "nodeType": "ExpressionStatement",
                              "src": "21160:45:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1299,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "21238:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1301,
                              "indexExpression": {
                                "id": 1300,
                                "name": "toBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "21252:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21238:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1303,
                            "indexExpression": {
                              "id": 1302,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "21264:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21238:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21281:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21238:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1313,
                        "nodeType": "IfStatement",
                        "src": "21234:126:0",
                        "trueBody": {
                          "id": 1312,
                          "nodeType": "Block",
                          "src": "21284:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1306,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "21302:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1308,
                                  "indexExpression": {
                                    "id": 1307,
                                    "name": "toBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1247,
                                    "src": "21329:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21302:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21344:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "21302:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1311,
                              "nodeType": "ExpressionStatement",
                              "src": "21302:43:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1316,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "21379:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1319,
                        "indexExpression": {
                          "id": 1317,
                          "name": "toBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "21393:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21379:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1320,
                      "indexExpression": {
                        "id": 1318,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "21405:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21379:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1321,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "21422:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21379:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "21379:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6d54",
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21454:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        "value": "mT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1328,
                            "name": "fromBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "21470:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1329,
                            "name": "toBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "21483:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1330,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1249,
                            "src": "21494:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1331,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "21507:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1326,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21459:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21463:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21459:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21514:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21518:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1324,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "21442:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21442:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "21437:88:0"
                }
              ]
            },
            "documentation": {
              "id": 1243,
              "nodeType": "StructuredDocumentation",
              "src": "20372:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1254,
                    "name": "toBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1247,
                    "src": "20874:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1253,
                  "name": "onlyExistingBank",
                  "nameLocations": [
                    "20857:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 146,
                  "src": "20857:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20857:28:0"
              },
              {
                "id": 1257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1256,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "20886:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "20886:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20886:12:0"
              }
            ],
            "name": "_moveToken",
            "nameLocation": "20746:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "20771:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "20757:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20757:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "20799:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "20785:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20785:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "20819:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "20811:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20811:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "20841:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "20833:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20756:91:0"
            },
            "returnParameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20899:0:0"
            },
            "scope": 1547,
            "src": "20737:796:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1371,
              "nodeType": "Block",
              "src": "21924:140:0",
              "statements": [
                {
                  "expression": {
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1351,
                          "name": "permits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "21934:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                            "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                          }
                        },
                        "id": 1354,
                        "indexExpression": {
                          "id": 1352,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "21942:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21934:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(address => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1355,
                      "indexExpression": {
                        "id": 1353,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "21954:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21934:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1356,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "21965:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "21934:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "21934:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7350",
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22000:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        "value": "sP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1363,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "22016:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1364,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "22027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1365,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1346,
                            "src": "22035:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1361,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22005:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22009:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22005:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22005:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22045:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22049:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22045:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1359,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "21988:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21988:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1370,
                  "nodeType": "EmitStatement",
                  "src": "21983:73:0"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "21539:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param permitName The name of the permit, whose state is to be set.\n @param account The address, whose permit state is to be set.\n @param newState The new Permit State to be applied."
            },
            "id": 1372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1348,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "21911:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "21911:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21911:12:0"
              }
            ],
            "name": "_setPermit",
            "nameLocation": "21826:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "21851:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "21837:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21837:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21871:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "21863:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21863:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "21892:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "21880:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1345,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1344,
                      "name": "PermitState",
                      "nameLocations": [
                        "21880:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "21880:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "21880:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21836:65:0"
            },
            "returnParameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21924:0:0"
            },
            "scope": 1547,
            "src": "21817:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1400,
              "nodeType": "Block",
              "src": "22369:126:0",
              "statements": [
                {
                  "expression": {
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1383,
                        "name": "basePermits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "22379:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(string memory => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1385,
                      "indexExpression": {
                        "id": 1384,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "22391:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22379:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1386,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "22405:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "22379:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "22379:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7342",
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22440:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        "value": "sB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1393,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "22456:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1394,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "22467:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1391,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22445:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22449:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22445:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22445:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22477:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22481:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22477:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1389,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22428:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22428:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1399,
                  "nodeType": "EmitStatement",
                  "src": "22423:65:0"
                }
              ]
            },
            "documentation": {
              "id": 1373,
              "nodeType": "StructuredDocumentation",
              "src": "22070:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "id": 1401,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1381,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1380,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "22356:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "22356:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "22356:12:0"
              }
            ],
            "name": "_setBasePermit",
            "nameLocation": "22284:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "22313:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "22299:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22299:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1378,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "22337:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "22325:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1377,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1376,
                      "name": "PermitState",
                      "nameLocations": [
                        "22325:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "22325:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "22325:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22298:48:0"
            },
            "returnParameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22369:0:0"
            },
            "scope": 1547,
            "src": "22275:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "22685:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1409,
                      "name": "allowNonShardHolders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "22695:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1410,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "22718:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "22695:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "22695:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "734e53",
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22753:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        "value": "sNS"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1417,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "22770:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 1415,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22759:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22763:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22759:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22759:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22780:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22784:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22780:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1413,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22741:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22741:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "EmitStatement",
                  "src": "22736:55:0"
                }
              ]
            },
            "documentation": {
              "id": 1402,
              "nodeType": "StructuredDocumentation",
              "src": "22501:109:0",
              "text": "@notice Sets the state of the Non Shard Holders.\n @param newState The Boolean state to be applied."
            },
            "id": 1424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1406,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "22672:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2368,
                  "src": "22672:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "22672:12:0"
              }
            ],
            "name": "_setNonShardHolderState",
            "nameLocation": "22624:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1404,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "22653:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "22648:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22647:15:0"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22685:0:0"
            },
            "scope": 1547,
            "src": "22615:183:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2093
            ],
            "body": {
              "id": 1447,
              "nodeType": "Block",
              "src": "23069:128:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1434,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "23109:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1431,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23079:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1547_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23085:23:0",
                      "memberName": "_unregisterTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2093,
                      "src": "23079:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23079:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1436,
                  "nodeType": "ExpressionStatement",
                  "src": "23079:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7554",
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23149:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        "value": "uT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1441,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "23165:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1439,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "23154:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "23158:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "23154:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23154:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1443,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23179:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23183:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23179:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1437,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "23137:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23137:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1446,
                  "nodeType": "EmitStatement",
                  "src": "23132:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1425,
              "nodeType": "StructuredDocumentation",
              "src": "22804:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "id": 1448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unregisterTokenAddress",
            "nameLocation": "23005:23:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1429,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23051:8:0"
            },
            "parameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23037:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "23029:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23029:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23028:22:0"
            },
            "returnParameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23069:0:0"
            },
            "scope": 1547,
            "src": "22996:201:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2064
            ],
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "23462:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1458,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1451,
                        "src": "23500:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1455,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23472:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1547_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23478:21:0",
                      "memberName": "_registerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2064,
                      "src": "23472:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23472:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "23472:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7254",
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23540:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        "value": "rT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1465,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "23556:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1463,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "23545:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "23549:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "23545:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23545:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23570:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23574:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23570:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1461,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "23528:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23528:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "EmitStatement",
                  "src": "23523:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "23203:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "id": 1472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTokenAddress",
            "nameLocation": "23400:21:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23444:8:0"
            },
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23430:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1472,
                  "src": "23422:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23422:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23421:22:0"
            },
            "returnParameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23462:0:0"
            },
            "scope": 1547,
            "src": "23391:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2022
            ],
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "23947:354:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1486,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "23984:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1487,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "23998:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1488,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "24005:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1483,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23957:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1547_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23963:20:0",
                      "memberName": "_processTokenReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2022,
                      "src": "23957:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23957:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "23957:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1491,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "24052:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1493,
                          "indexExpression": {
                            "hexValue": "6d61696e",
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24066:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                              "typeString": "literal_string \"main\""
                            },
                            "value": "main"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24052:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1495,
                        "indexExpression": {
                          "id": 1494,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "24074:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24052:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24091:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "24052:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1498,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "24096:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24120:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24112:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24112:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24112:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "24096:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24052:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "IfStatement",
                  "src": "24048:140:0",
                  "trueBody": {
                    "id": 1511,
                    "nodeType": "Block",
                    "src": "24124:64:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1505,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "24138:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1507,
                            "indexExpression": {
                              "hexValue": "6d61696e",
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24165:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                "typeString": "literal_string \"main\""
                              },
                              "value": "main"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "24138:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24176:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "24138:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1510,
                        "nodeType": "ExpressionStatement",
                        "src": "24138:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1513,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "24197:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1516,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24211:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24197:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1517,
                      "indexExpression": {
                        "id": 1515,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "24219:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24197:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1518,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1477,
                      "src": "24236:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24197:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "24197:44:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1522,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "24270:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1523,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "24283:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1524,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "24289:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1521,
                      "name": "TokenReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "24256:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24256:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "EmitStatement",
                  "src": "24251:43:0"
                }
              ]
            },
            "documentation": {
              "id": 1473,
              "nodeType": "StructuredDocumentation",
              "src": "23594:249:0",
              "text": "@notice Keeps track of a token receipt by adding it to the registry\n @param tokenAddress The address of the received token.\n @param value The value/amount of the received token.\n @param from The sender of the received token."
            },
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processTokenReceipt",
            "nameLocation": "23857:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23929:8:0"
            },
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23886:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "23878:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23878:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "23908:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "23900:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23900:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "23923:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "23915:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23915:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23877:51:0"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23947:0:0"
            },
            "scope": 1547,
            "src": "23848:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2104
            ],
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "24423:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1533,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "24433:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1547_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24439:10:0",
                      "memberName": "_liquidize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2104,
                      "src": "24433:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24433:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "24433:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24478:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "hexValue": "",
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24483:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "id": 1541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24486:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24490:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24486:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1538,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "24466:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24466:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "EmitStatement",
                  "src": "24461:36:0"
                }
              ]
            },
            "documentation": {
              "id": 1529,
              "nodeType": "StructuredDocumentation",
              "src": "24307:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "id": 1546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidize",
            "nameLocation": "24392:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24405:8:0"
            },
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24402:2:0"
            },
            "returnParameters": {
              "id": 1532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24423:0:0"
            },
            "scope": 1547,
            "src": "24383:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1548,
        "src": "307:24200:0",
        "usedErrors": []
      }
    ],
    "src": "46:24461:0"
  },
  "bytecode": "6080604052600080553480156200001557600080fd5b5060405162004ce538038062004ce583398101604081905262000038916200055a565b80806200004881336000620001d0565b60008054815260026020908152604091829020929092556001805460ff1916811790558051808201909152600481526336b0b4b760e11b9181019190915262000093915033620002fe565b604080518082019091526003815262734e5360e81b6020820152620000bb9033600262000440565b620000e960405180604001604052806002815260200161695360f01b8152503360026200044060201b60201c565b62000117604051806040016040528060028152602001611a5160f21b8152503360026200044060201b60201c565b6200014560405180604001604052806002815260200161191160f21b8152503360026200044060201b60201c565b620001736040518060400160405280600281526020016136a160f11b8152503360026200044060201b60201c565b620001a1604051806040016040528060028152602001616c4560f01b8152503360026200044060201b60201c565b6040805180820190915260038152621b505560ea1b6020820152620001c99033600262000440565b50620006ee565b600083116200020b5760405162461bcd60e51b815260206004820152600260248201526129ad60f11b60448201526064015b60405180910390fd5b6040516001600160601b0319606084901b1660208201526034810182905260009060540160408051808303601f1901815282825280516020918201206001600160a01b03878116600081815260048552858120849055838152600785528581206000199055606080880187528b88528588018381528888018b8152868452600388529288902098518955516001890180546001600160a01b0319169190951617909355516002909601959095558351828152928301949094529181018590529092507f90e88e994885f1cdd31d3393f0b012e817804fc9d2adef69d0d7e5053d1e29ad910160405180910390a150505050565b6001805460ff161515146200033b5760405162461bcd60e51b8152602060048201526002602482015261115360f21b604482015260640162000202565b620003468262000528565b156200037a5760405162461bcd60e51b8152602060048201526002602482015261414560f01b604482015260640162000202565b60016010836040516200038e91906200059a565b90815260408051602092819003830181206001600160a01b038616600090815293529120805460ff191692151592909217909155600190600d90620003d59085906200059a565b90815260405160209181900382018120805460ff19169315159390931790925560008051602062004cc58339815191529162000416918591859101620005e6565b60408051601f19818403018152908290526200043491339062000612565b60405180910390a15050565b6001805460ff161515146200047d5760405162461bcd60e51b8152602060048201526002602482015261115360f21b604482015260640162000202565b806011846040516200049091906200059a565b90815260408051602092819003830190206001600160a01b038616600090815292529020805460ff19166001836002811115620004d157620004d162000657565b021790555060008051602062004cc5833981519152838383604051602001620004fd939291906200066d565b60408051601f19818403018152908290526200051b913390620006c0565b60405180910390a1505050565b6000600d826040516200053c91906200059a565b9081526040519081900360200190205460ff16151560011492915050565b6000602082840312156200056d57600080fd5b5051919050565b60005b838110156200059157818101518382015260200162000577565b50506000910152565b60008251620005ae81846020870162000574565b9190910192915050565b60008151808452620005d281602086016020860162000574565b601f01601f19169290920160200192915050565b604081526000620005fb6040830185620005b8565b905060018060a01b03831660208301529392505050565b60608152600260608201526131a160f11b608082015260a0602082015260006200064060a0830185620005b8565b905060018060a01b03831660408301529392505050565b634e487b7160e01b600052602160045260246000fd5b606081526000620006826060830186620005b8565b6001600160a01b0385166020840152905060038310620006b257634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b606081526002606082015261073560f41b608082015260a0602082015260006200064060a0830185620005b8565b6145c780620006fe6000396000f3fe6080604052600436106102765760003560e01c8063859d9fd51161014f578063b4af7d59116100c1578063e123182b1161007a578063e123182b14610868578063e1c34c1f1461087b578063e6778fce1461089b578063efae89f8146108c8578063f7aae621146108f5578063fd06636b1461091557600080fd5b8063b4af7d5914610753578063bcedb2e014610773578063c4802eb2146107db578063c5438a5514610808578063db5dc9b714610828578063de9d68051461084857600080fd5b80639995b9a9116101135780639995b9a91461068e578063a1916aef146106be578063a80aed76146106de578063a902780f146106fe578063a907b6c514610713578063b2cb78ab1461073357600080fd5b8063859d9fd5146105de578063868399a5146105fe5780638786df6a1461061e5780639211b7b31461063e57806397235a1e1461066e57600080fd5b8063350546d8116101e85780634c46360b116101ac5780634c46360b146104c35780635beeff33146104f357806362748dcc1461052057806363879c0b1461056e5780637b7854931461058e57806381005219146105be57600080fd5b8063350546d81461040d578063354cd1351461042d578063384fe2b51461044d5780633baf28f81461046d5780633dbeaa541461048d57600080fd5b8063169936b41161023a578063169936b41461034d578063236566421461036d578063258e4d9f1461038d5780632dec7cd2146103ad5780632ef37926146103cd5780632f2e9a2a146103ed57600080fd5b806302fb0c5e1461028e578063036f3aec146102bd57806305c558f5146102dd578063066792d2146102f25780630bea89851461032d57600080fd5b366102895761028760003433610935565b005b600080fd5b34801561029a57600080fd5b506001546102a89060ff1681565b60405190151581526020015b60405180910390f35b3480156102c957600080fd5b506102876102d8366004613bbc565b610a83565b3480156102e957600080fd5b50610287610b23565b3480156102fe57600080fd5b5061031f61030d366004613c0a565b60026020526000908152604090205481565b6040519081526020016102b4565b34801561033957600080fd5b50610287610348366004613c0a565b610b5c565b34801561035957600080fd5b506102a8610368366004613c23565b610c19565b34801561037957600080fd5b50610287610388366004613c0a565b610c77565b34801561039957600080fd5b506102a86103a8366004613c77565b610cb2565b3480156103b957600080fd5b5061031f6103c8366004613c77565b610d67565b3480156103d957600080fd5b506102876103e8366004613c77565b610da8565b3480156103f957600080fd5b50610287610408366004613c77565b610e06565b34801561041957600080fd5b50610287610428366004613cbc565b610e58565b34801561043957600080fd5b50610287610448366004613cd7565b611032565b34801561045957600080fd5b50610287610468366004613c23565b611268565b34801561047957600080fd5b50610287610488366004613cf9565b6112b3565b34801561049957600080fd5b5061031f6104a8366004613cbc565b6001600160a01b03166000908152600a602052604090205490565b3480156104cf57600080fd5b5061031f6104de366004613c0a565b60009081526014602052604090206001015490565b3480156104ff57600080fd5b5061031f61050e366004613cbc565b60096020526000908152604090205481565b34801561052c57600080fd5b5061055661053b366004613c0a565b6000908152601460205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016102b4565b34801561057a57600080fd5b50610287610589366004613d3f565b6112f4565b34801561059a57600080fd5b5061031f6105a9366004613c0a565b60009081526006602052604090206002015490565b3480156105ca57600080fd5b506102876105d9366004613da4565b611341565b3480156105ea57600080fd5b506102876105f9366004613cbc565b6113b8565b34801561060a57600080fd5b506102a8610619366004613cbc565b611416565b34801561062a57600080fd5b50610287610639366004613cbc565b61144b565b34801561064a57600080fd5b506102a8610659366004613c0a565b60009081526013602052604090205460ff1690565b34801561067a57600080fd5b50610287610689366004613dc1565b6114a9565b34801561069a57600080fd5b506102a86106a9366004613c0a565b60008054918152600760205260409020541190565b3480156106ca57600080fd5b506102876106d9366004613deb565b6114b3565b3480156106ea57600080fd5b506102a86106f9366004613c77565b6114d3565b34801561070a57600080fd5b5060005461031f565b34801561071f57600080fd5b5061028761072e366004613c77565b61153e565b34801561073f57600080fd5b5061028761074e366004613e67565b6115d4565b34801561075f57600080fd5b506102a861076e366004613c23565b611650565b34801561077f57600080fd5b506107b861078e366004613c0a565b60036020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b039092166020840152908201526060016102b4565b3480156107e757600080fd5b5061031f6107f6366004613cbc565b60046020526000908152604090205481565b34801561081457600080fd5b50610287610823366004613e9c565b611680565b34801561083457600080fd5b506102a8610843366004613c77565b611777565b34801561085457600080fd5b50610287610863366004613ef1565b61182d565b610287610876366004613cd7565b61184d565b34801561088757600080fd5b506102a8610896366004613cbc565b611e40565b3480156108a757600080fd5b5061031f6108b6366004613c0a565b60009081526015602052604090205490565b3480156108d457600080fd5b5061031f6108e3366004613c0a565b60009081526007602052604090205490565b34801561090157600080fd5b50610287610910366004613f39565b611e72565b34801561092157600080fd5b506102a8610930366004613cd7565b611ef0565b610940838383611f21565b6040516336b0b4b760e11b8152600f9060040190815260408051602092819003830190206001600160a01b0386166000908152925290205415801561098d57506001600160a01b03831615155b156109d0576001600e6040516109ad906336b0b4b760e11b815260040190565b908152602001604051809103902060008282546109ca9190613f9f565b90915550505b81600f6040516109ea906336b0b4b760e11b815260040190565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a2a9190613f9f565b9091555050604080516001600160a01b038086168252602082018590528316918101919091527fde49bbe8e448cdfa40e6fa0d22592be9a03b28ba746527635dbe5235416659cf906060015b60405180910390a1505050565b81610a8e8133610cb2565b610a9757600080fd5b816002811115610aa957610aa9613fb2565b601284604051610ab99190613fec565b9081526040519081900360200190205460ff166002811115610add57610add613fb2565b03610b145760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064015b60405180910390fd5b610b1e8383611f76565b505050565b604051806040016040528060028152602001616c4560f01b815250610b488133611777565b610b5157600080fd5b610b59612025565b50565b60008181526003602052604090206001015481906001600160a01b03163314610b975760405162461bcd60e51b8152600401610b0b90614008565b81610bb18160008054918152600760205260409020541190565b610bcd5760405162461bcd60e51b8152600401610b0b90614024565b60008381526005602052604090205460ff16610c105760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610b0b565b610b1e83612077565b6000600e82604051610c2b9190613fec565b9081526020016040518091039020546000148015610c715750600f82604051610c549190613fec565b908152604080516020928190038301902060008080529252902054155b92915050565b60405180604001604052806002815260200161191160f21b815250610c9c8133611777565b610ca557600080fd5b610cae826120c6565b5050565b6000610cbd82611e40565b80610cca5750600c5460ff165b610cd657506000610c71565b6002601184604051610ce89190613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff166002811115610d2157610d21613fb2565b1480610d6057506002601284604051610d3a9190613fec565b9081526040519081900360200190205460ff166002811115610d5e57610d5e613fb2565b145b9392505050565b6000600f83604051610d799190613fec565b908152604080519182900360209081019092206001600160a01b03851660009081529252902054905092915050565b6040518060400160405280600281526020016136a160f11b815250610dcd8133611777565b610dd657600080fd5b6001805460ff16151514610dfc5760405162461bcd60e51b8152600401610b0b90614040565b610b1e83836121b1565b6040518060400160405280600281526020016136a160f11b815250610e2b8133610cb2565b610e3457600080fd5b82610e3f81336114d3565b610e4857600080fd5b610e5284846122c3565b50505050565b610e6133611e40565b610e925760405162461bcd60e51b81526020600482015260026024820152610aa960f31b6044820152606401610b0b565b610e9b81611416565b610eb75760405162461bcd60e51b8152600401610b0b9061405c565b336000908152600460209081526040808320546001600160a01b0385168452600b83528184208185529092529091205460ff1615610f1c5760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610b0b565b6001600160a01b0382166000818152600b602090815260408083208584528252808320805460ff191660011790558254835260028252808320548584526003835281842054948452600990925282205491929091610f7a9190614078565b610f84919061408f565b905080600003610fb05760405162461bcd60e51b81526020600482015260006024820152604401610b0b565b6001600160a01b0383166000908152600a602052604081208054839290610fd89084906140b1565b90915550610fe9905083823361237f565b604080516001600160a01b03851681526020810183905233918101919091527f1397d005a56670cbe383372bd4743eaa779af18164d00dc6d12a6659418e1bbf90606001610a76565b60008281526003602052604090206001015482906001600160a01b0316331461106d5760405162461bcd60e51b8152600401610b0b90614008565b600082815260136020526040902054829060ff1661108a57600080fd5b6001805460ff161515146110b05760405162461bcd60e51b8152600401610b0b90614040565b6110ba8484611ef0565b6110ec5760405162461bcd60e51b81526020600482015260036024820152622720a360e91b6044820152606401610b0b565b600083815260166020908152604080832087845290915290205460ff161561113b5760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610b0b565b60008381526016602090815260408083208784528252808320805460ff19166001908117909155835484526002835281842054888552600384528285205488865260149094529184200154909161119191614078565b61119b919061408f565b9050806000036111d35760405162461bcd60e51b815260206004820152600360248201526244545360e81b6044820152606401610b0b565b600084815260156020526040812080548392906111f19084906140b1565b9091555050600084815260146020526040902054611219906001600160a01b0316823361237f565b60408051602081018690529081018290526000805160206145728339815191529060600160408051601f19818403018152908290526112599133906140f0565b60405180910390a15050505050565b6040518060400160405280600281526020016136a160f11b81525061128d8133610cb2565b61129657600080fd5b816112a181336114d3565b6112aa57600080fd5b610b1e83612624565b60405180604001604052806002815260200161695360f01b8152506112d88133611777565b6112e157600080fd5b6112ed858585856127a9565b5050505050565b604051806040016040528060028152602001611a5160f21b8152506113198133611777565b61132257600080fd5b8361132d81336114d3565b61133657600080fd5b6112ed858585612828565b60405180604001604052806003815260200162734e5360e81b8152506113678133611777565b61137057600080fd5b600c5482151560ff9091161515036113af5760405162461bcd60e51b8152602060048201526002602482015261415360f01b6044820152606401610b0b565b610cae82612a32565b604051806040016040528060038152602001621b505560ea1b8152506113de8133611777565b6113e757600080fd5b6001805460ff1615151461140d5760405162461bcd60e51b8152600401610b0b90614040565b610cae82612aa2565b6001600160a01b03811660009081526008602052604081205460ff16151560011480610c715750506001600160a01b03161590565b604051806040016040528060038152602001621b505560ea1b8152506114718133611777565b61147a57600080fd5b6001805460ff161515146114a05760405162461bcd60e51b8152600401610b0b90614040565b610cae82612aeb565b610cae8282612b34565b836114be81336114d3565b6114c757600080fd5b6112ed85858585612c87565b60006010836040516114e59190613fec565b908152604080519182900360209081019092206001600160a01b0385166000908152925290205460ff16151560011480610d605750610d606040518060400160405280600281526020016136a160f11b81525083610cb2565b6040518060400160405280600281526020016136a160f11b8152506115638133611777565b61156c57600080fd5b8261157781336114d3565b61158057600080fd5b61158983611e40565b806115965750600c5460ff165b6115ca5760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610b0b565b610e528484612f1b565b60008381526003602052604090206001015483906001600160a01b0316331461160f5760405162461bcd60e51b8152600401610b0b90614008565b836116298160008054918152600760205260409020541190565b6116455760405162461bcd60e51b8152600401610b0b90614024565b6112ed858585613019565b6000600d826040516116629190613fec565b9081526040519081900360200190205460ff16151560011492915050565b8261168b8133610cb2565b61169457600080fd5b61169d83611e40565b806116aa5750600c5460ff165b6116de5760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610b0b565b8160028111156116f0576116f0613fb2565b6011856040516117009190613fec565b90815260408051602092819003830190206001600160a01b0387166000908152925290205460ff16600281111561173957611739613fb2565b0361176c5760405162461bcd60e51b815260206004820152600360248201526204148560ec1b6044820152606401610b0b565b610e5284848461323c565b600061178282611e40565b8061178f5750600c5460ff165b61179b57506000610c71565b60016011846040516117ad9190613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff1660028111156117e6576117e6613fb2565b101580610d60575060016012846040516118009190613fec565b9081526040519081900360200190205460ff16600281111561182457611824613fb2565b10159392505050565b8361183881336114d3565b61184157600080fd5b6112ed858585856132f6565b816118678160008054918152600760205260409020541190565b6118835760405162461bcd60e51b8152600401610b0b90614024565b60008381526005602052604090205460ff166118c65760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610b0b565b60008381526006602052604081205490036119085760405162461bcd60e51b8152602060048201526002602482015261455360f01b6044820152606401610b0b565b60008381526006602052604090205482111561194b5760405162461bcd60e51b8152602060048201526002602482015261455360f01b6044820152606401610b0b565b6000838152600660205260409020600301546001600160a01b031633148061198b57506000838152600660205260409020600301546001600160a01b0316155b6119bc5760405162461bcd60e51b815260206004820152600260248201526129a960f11b6044820152606401610b0b565b6119c583612077565b6000838152600660205260408120600201546119e19084614078565b905060008060006119f68460196103e8613498565b91945092509050611a078183613f9f565b6000888152600660205260409020600101549092506001600160a01b0316611b665783341015611a5e5760405162461bcd60e51b8152602060048201526002602482015261494560f01b6044820152606401610b0b565b6040516000907349a71890aea5a751e30e740c504f2e9683f347bc9085908381818185875af1925050503d8060008114611ab4576040519150601f19603f3d011682016040523d82523d6000602084013e611ab9565b606091505b505060008981526003602052604080822060010154905192935090916001600160a01b039091169085908381818185875af1925050503d8060008114611b1b576040519150601f19603f3d011682016040523d82523d6000602084013e611b20565b606091505b50509050808015611b2e5750815b611b5f5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610b0b565b5050611cec565b60008781526006602052604090819020600101549051636eb1769f60e11b81523360048201523060248201526001600160a01b03909116908590829063dd62ed3e90604401602060405180830381865afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec9190614133565b1015611c0a5760405162461bcd60e51b8152600401610b0b9061414c565b6040516323b872dd60e01b81523360048201527349a71890aea5a751e30e740c504f2e9683f347bc6024820152604481018590526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c959190614168565b611cb15760405162461bcd60e51b8152600401610b0b90614185565b60008881526003602090815260408083206001908101546006909352922090910154611cea916001600160a01b0390811691168561350c565b505b611cf7878733613019565b600087815260036020526040902060010154306001600160a01b0390911603611d3f576000805481526002602052604081208054889290611d39908490613f9f565b90915550505b600087815260066020908152604091829020600181015460029091015483518b81529283018a905233838501526001600160a01b039091166060830152608082015290517f443732a78c29282934211eae7aa500dd12db85d4dd795dbcda5f94ee19a67e4f9181900360a00190a16000878152600660205260409020548614611e37576000878152600360209081526040808320600101546001600160a01b0316835260048252808320548a8452600690925290912054611e379190611e069089906140b1565b60008a8152600660205260409020600181015460028201546003909201546001600160a01b039182169291166135bb565b50505050505050565b6001600160a01b038116600090815260046020526040812054610c719060008054918152600760205260409020541190565b60008581526003602052604090206001015485906001600160a01b03163314611ead5760405162461bcd60e51b8152600401610b0b90614008565b85611ec78160008054918152600760205260409020541190565b611ee35760405162461bcd60e51b8152600401610b0b90614024565b611e3787878787876135bb565b6000828152600360205260408120600201548210801590610d60575050600091825260076020526040909120541190565b6001600160a01b03831660009081526009602052604081208054849290611f49908490613f9f565b90915550506001600160a01b0383166000908152600a602052604081208054849290610a2a908490613f9f565b6001805460ff16151514611f9c5760405162461bcd60e51b8152600401610b0b90614040565b80601283604051611fad9190613fec565b908152604051908190036020019020805460ff19166001836002811115611fd657611fd6613fb2565b02179055506000805160206145728339815191528282604051602001611ffd9291906141c3565b60408051601f19818403018152908290526120199133906141e5565b60405180910390a15050565b61202d61376e565b604080516060808252600290820152616c4560f01b608082015260a060208201819052600090820152338183015290516000805160206145728339815191529181900360c00190a1565b806120918160008054918152600760205260409020541190565b6120ad5760405162461bcd60e51b8152600401610b0b90614024565b506000908152600560205260409020805460ff19169055565b600081815260136020526040902054819060ff166120e357600080fd5b6001805460ff161515146121095760405162461bcd60e51b8152600401610b0b90614040565b6000828152601360209081526040808320805460ff19169055601582528083205481516336b0b4b760e11b8152600f6004820152825190819003602401902086855260148452828520546001600160a01b031685529092528220805491929091612174908490613f9f565b90915550506040805160208101849052600080516020614572833981519152910160408051601f1981840301815290829052612019913390614211565b6001805460ff161515146121d75760405162461bcd60e51b8152600401610b0b90614040565b6121e082611650565b156122125760405162461bcd60e51b8152602060048201526002602482015261414560f01b6044820152606401610b0b565b60016010836040516122249190613fec565b90815260408051602092819003830181206001600160a01b038616600090815293529120805460ff191692151592909217909155600190600d90612269908590613fec565b90815260405160209181900382018120805460ff191693151593909317909255600080516020614572833981519152916122a791859185910161423d565b60408051601f1981840301815290829052612019913390614267565b6001805460ff161515146122e95760405162461bcd60e51b8152600401610b0b90614040565b6122f382826114d3565b6122fc57600080fd5b600060108360405161230e9190613fec565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff1916931515939093179092556000805160206145728339815191529161236391859185910161423d565b60408051601f1981840301815290829052612019913390614293565b6001600160a01b0383166000908152600960205260409020548211156123b75760405162461bcd60e51b8152600401610b0b9061414c565b6001600160a01b0383166123d4576123cf82826137a0565b61260f565b60405163095ea7b360e01b81526001600160a01b0382811660048301526024820184905284919082169063095ea7b3906044016020604051808303816000875af1158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244a9190614168565b61247b5760405162461bcd60e51b81526020600482015260026024820152614e4160f01b6044820152606401610b0b565b6001600160a01b0382163b1561257e57604051634b91ad0f60e11b81526001600160a01b038581166004830152602482018590528316906397235a1e90604401600060405180830381600087803b1580156124d557600080fd5b505af19250505080156124e6575060015b6125795760405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015612539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255d9190614168565b6125795760405162461bcd60e51b8152600401610b0b90614185565b61260d565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af11580156125cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f19190614168565b61260d5760405162461bcd60e51b8152600401610b0b90614185565b505b60015460ff1615610b1e57610b1e8383613828565b6001805460ff1615151461264a5760405162461bcd60e51b8152600401610b0b90614040565b61265381611650565b6126855760405162461bcd60e51b815260206004820152600360248201526255422160e81b6044820152606401610b0b565b60408051808201909152600481526336b0b4b760e11b6020918201528151908201207f471dfab0756edc981c75dd3188ccd700755407f7d3bedf452610f7a1e240d659016126fa5760405162461bcd60e51b815260206004820152600260248201526126a160f11b6044820152606401610b0b565b61270381610c19565b6127345760405162461bcd60e51b8152602060048201526002602482015261424560f01b6044820152606401610b0b565b6000600d826040516127469190613fec565b90815260405160209181900382018120805460ff19169315159390931790925560008051602061457283398151915291612782918491016142bf565b60408051601f198184030181529082905261279e9133906142d2565b60405180910390a150565b6127b283611416565b6127bb57600080fd5b3060009081526004602052604081205490546127d79190613886565b306000908152600460209081526040808320548352600390915290205461280b906128029086613f9f565b306000546138f1565b30600090815260046020526040902054610e5290858585856135bb565b6001805460ff1615151461284e5760405162461bcd60e51b8152600401610b0b90614040565b600054604051600f90612862908690613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156128a65760405162461bcd60e51b8152600401610b0b906142fe565b81600f856040516128b79190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546128f791906140b1565b9091555050604051600f9061290d908690613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561294757506001600160a01b03831615155b15612981576001600e8560405161295e9190613fec565b9081526020016040518091039020600082825461297b91906140b1565b90915550505b6040805180820182526001600160a01b0385811682526020808301868152600086815260148352858120945185546001600160a01b031916941693909317845551600193840155601581528382208690556013815290839020805460ff1916909217909155905160008051602061457283398151915291612a08918791879187910161431a565b60408051601f1981840301815290829052612a24913390614348565b60405180910390a150505050565b6001805460ff16151514612a585760405162461bcd60e51b8152600401610b0b90614040565b600c805460ff1916821515908117909155604080516020810192909252600080516020614572833981519152910160408051601f198184030181529082905261279e913390614374565b612aab81613a15565b604080516001600160a01b0383166020820152600080516020614572833981519152910160408051601f198184030181529082905261279e9133906143a1565b612af481613aa6565b604080516001600160a01b0383166020820152600080516020614572833981519152910160408051601f198184030181529082905261279e9133906143cd565b612b3d82611416565b612b595760405162461bcd60e51b8152600401610b0b9061405c565b604051636eb1769f60e11b8152336004820152306024820152829082906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015612ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bcb9190614133565b1015612be95760405162461bcd60e51b8152600401610b0b9061414c565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015612c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c609190614168565b612c7c5760405162461bcd60e51b8152600401610b0b90614185565b610b1e838333610935565b82612c9181611650565b612cc35760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610b0b565b6001805460ff16151514612ce95760405162461bcd60e51b8152600401610b0b90614040565b600f85604051612cf99190613fec565b90815260408051602092819003830190206001600160a01b03861660009081529252902054821115612d3d5760405162461bcd60e51b8152600401610b0b906142fe565b81600f86604051612d4e9190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612d8e91906140b1565b90915550506001600160a01b03831615612e8257600f85604051612db29190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e12576001600e86604051612def9190613fec565b90815260200160405180910390206000828254612e0c91906140b1565b90915550505b600f84604051612e229190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e82576001600e85604051612e5f9190613fec565b90815260200160405180910390206000828254612e7c9190613f9f565b90915550505b81600f85604051612e939190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612ed39190613f9f565b909155505060405160008051602061457283398151915290612eff9087908790879087906020016143f9565b60408051601f198184030181529082905261125991339061443b565b6001805460ff16151514612f415760405162461bcd60e51b8152600401610b0b90614040565b612f656040518060400160405280600281526020016136a160f11b81525082611777565b612f965760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610b0b565b6001601083604051612fa89190613fec565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff19169315159390931790925560008051602061457283398151915291612ffd91859185910161423d565b60408051601f1981840301815290829052612019913390614467565b826130338160008054918152600760205260409020541190565b61304f5760405162461bcd60e51b8152600401610b0b90614024565b6001805460ff161515146130755760405162461bcd60e51b8152600401610b0b90614040565b60008481526003602052604090205483106130b75760405162461bcd60e51b8152602060048201526002602482015261494160f01b6044820152606401610b0b565b6130c082611e40565b1561312f576001600160a01b038216600090815260046020908152604080832054835260039091528120546130f59085613f9f565b905061310481846000546138f1565b6001600160a01b03831660009081526004602052604081205490546131299190613886565b5061313c565b61313c83836000546138f1565b61314884600054613886565b6000848152600360205260408120546131629085906140b1565b905080156131955760008581526003602052604081206001015490546131959183916001600160a01b03909116906138f1565b60408051868152602081018690526001600160a01b03851681830152600060608201819052608082015290517f443732a78c29282934211eae7aa500dd12db85d4dd795dbcda5f94ee19a67e4f9181900360a00190a1506000805480825260026020819052604083205492909161320d906001613f9f565b81526020019081526020016000208190555060008081548092919061323190614493565b919050555050505050565b6001805460ff161515146132625760405162461bcd60e51b8152600401610b0b90614040565b806011846040516132739190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020805460ff191660018360028111156132b1576132b1613fb2565b02179055506000805160206145728339815191528383836040516020016132da939291906144ac565b60408051601f1981840301815290829052610a769133906144dd565b6001805460ff1615151461331c5760405162461bcd60e51b8152600401610b0b90614040565b600f8460405161332c9190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156133705760405162461bcd60e51b8152600401610b0b906142fe565b61337b83838361237f565b81600f8560405161338c9190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546133cc91906140b1565b9091555050604051600f906133e2908690613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561341c57506001600160a01b03831615155b15613456576001600e856040516134339190613fec565b9081526020016040518091039020600082825461345091906140b1565b90915550505b6000805160206145728339815191528484848460405160200161347c9493929190614509565b60408051601f1981840301815290829052612a24913390614545565b60008060008484116134a957600080fd5b6000846134b68789614078565b6134c0919061408f565b90506000856134cf88826140b1565b6134d9908a614078565b6134e3919061408f565b905081816134f18183613f9f565b6134fb908b6140b1565b945094509450505093509350939050565b306001600160a01b0384160361352657610b1e8282612b34565b6040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af115801561357b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061359f9190614168565b610e525760405162461bcd60e51b8152600401610b0b90614185565b846135d58160008054918152600760205260409020541190565b6135f15760405162461bcd60e51b8152600401610b0b90614024565b6001805460ff161515146136175760405162461bcd60e51b8152600401610b0b90614040565b60008681526005602052604090205460ff161561363357600080fd5b6000868152600360205260409020548511156136765760405162461bcd60e51b8152602060048201526002602482015261494160f01b6044820152606401610b0b565b604080516080810182528681526001600160a01b0380871660208084019182528385018881528784166060860190815260008d815260068452878120965187559351600180880180549288166001600160a01b031993841617905592516002880155905160039096018054969095169516949094179092556005909152829020805460ff19169091179055517f4126de2c73b6b69d46d3290ee98241c5c18ce39a61b29e4e91f877a6d56bb2139061375e908890889088908890889094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505050505050565b6001805460ff161515146137945760405162461bcd60e51b8152600401610b0b90614040565b6001805460ff19169055565b6000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146137ed576040519150601f19603f3d011682016040523d82523d6000602084013e6137f2565b606091505b5050905080610b1e5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610b0b565b6001600160a01b038216600090815260096020526040812080548392906138509084906140b1565b90915550506001600160a01b0382166000908152600a60205260408120805483929061387d9084906140b1565b90915550505050565b6000828152600360209081526040808320600101546001600160a01b0316835260048252808320839055848352600782529182902083905581518481529081018390527fa3deafde27c3ffde83f038b337d8b0405d225455ae09fbed6a211ef4ee465f4f9101612019565b600083116139265760405162461bcd60e51b815260206004820152600260248201526129ad60f11b6044820152606401610b0b565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160408051808303601f1901815282825280516020918201206001600160a01b03878116600081815260048552858120849055838152600785528581206000199055606080880187528b88528588018381528888018b8152868452600388529288902098518955516001890180546001600160a01b0319169190951617909355516002909601959095558351828152928301949094529181018590529092507f90e88e994885f1cdd31d3393f0b012e817804fc9d2adef69d0d7e5053d1e29ad9101612a24565b613a1e81611416565b613a3a5760405162461bcd60e51b8152600401610b0b9061405c565b6001600160a01b03811660009081526009602052604090205415613a855760405162461bcd60e51b8152602060048201526002602482015261272d60f11b6044820152606401610b0b565b6001600160a01b03166000908152600860205260409020805460ff19169055565b613aaf81611416565b15613ae15760405162461bcd60e51b815260206004820152600260248201526120a960f11b6044820152606401610b0b565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112613b2c57600080fd5b813567ffffffffffffffff80821115613b4757613b47613b05565b604051601f8301601f19908116603f01168101908282118183101715613b6f57613b6f613b05565b81604052838152866020858801011115613b8857600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560038110613bb757600080fd5b919050565b60008060408385031215613bcf57600080fd5b823567ffffffffffffffff811115613be657600080fd5b613bf285828601613b1b565b925050613c0160208401613ba8565b90509250929050565b600060208284031215613c1c57600080fd5b5035919050565b600060208284031215613c3557600080fd5b813567ffffffffffffffff811115613c4c57600080fd5b613c5884828501613b1b565b949350505050565b80356001600160a01b0381168114613bb757600080fd5b60008060408385031215613c8a57600080fd5b823567ffffffffffffffff811115613ca157600080fd5b613cad85828601613b1b565b925050613c0160208401613c60565b600060208284031215613cce57600080fd5b610d6082613c60565b60008060408385031215613cea57600080fd5b50508035926020909101359150565b60008060008060808587031215613d0f57600080fd5b84359350613d1f60208601613c60565b925060408501359150613d3460608601613c60565b905092959194509250565b600080600060608486031215613d5457600080fd5b833567ffffffffffffffff811115613d6b57600080fd5b613d7786828701613b1b565b935050613d8660208501613c60565b9150604084013590509250925092565b8015158114610b5957600080fd5b600060208284031215613db657600080fd5b8135610d6081613d96565b60008060408385031215613dd457600080fd5b613ddd83613c60565b946020939093013593505050565b60008060008060808587031215613e0157600080fd5b843567ffffffffffffffff80821115613e1957600080fd5b613e2588838901613b1b565b95506020870135915080821115613e3b57600080fd5b50613e4887828801613b1b565b935050613e5760408601613c60565b9396929550929360600135925050565b600080600060608486031215613e7c57600080fd5b8335925060208401359150613e9360408501613c60565b90509250925092565b600080600060608486031215613eb157600080fd5b833567ffffffffffffffff811115613ec857600080fd5b613ed486828701613b1b565b935050613ee360208501613c60565b9150613e9360408501613ba8565b60008060008060808587031215613f0757600080fd5b843567ffffffffffffffff811115613f1e57600080fd5b613f2a87828801613b1b565b945050613d1f60208601613c60565b600080600080600060a08688031215613f5157600080fd5b8535945060208601359350613f6860408701613c60565b925060608601359150613f7d60808701613c60565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c7157610c71613f89565b634e487b7160e01b600052602160045260246000fd5b60005b83811015613fe3578181015183820152602001613fcb565b50506000910152565b60008251613ffe818460208701613fc8565b9190910192915050565b60208082526002908201526109e960f31b604082015260600190565b602080825260029082015261555360f01b604082015260600190565b602080825260029082015261115360f21b604082015260600190565b602080825260029082015261155560f21b604082015260600190565b8082028115828204841417610c7157610c71613f89565b6000826140ac57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c7157610c71613f89565b600081518084526140dc816020860160208601613fc8565b601f01601f19169290920160200192915050565b60608152600260608201526118d160f21b608082015260a06020820152600061411c60a08301856140c4565b905060018060a01b03831660408301529392505050565b60006020828403121561414557600080fd5b5051919050565b602080825260029082015261125560f21b604082015260600190565b60006020828403121561417a57600080fd5b8151610d6081613d96565b602080825260029082015261139560f21b604082015260600190565b600381106141bf57634e487b7160e01b600052602160045260246000fd5b9052565b6040815260006141d660408301856140c4565b9050610d6060208301846141a1565b60608152600260608201526139a160f11b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261191160f21b608082015260a06020820152600061411c60a08301856140c4565b60408152600061425060408301856140c4565b905060018060a01b03831660208301529392505050565b60608152600260608201526131a160f11b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261724160f01b608082015260a06020820152600061411c60a08301856140c4565b602081526000610d6060208301846140c4565b606081526002606082015261322160f11b608082015260a06020820152600061411c60a08301856140c4565b60208082526002908201526124a360f11b604082015260600190565b60608152600061432d60608301866140c4565b6001600160a01b039490941660208301525060400152919050565b6060815260026060820152611a5160f21b608082015260a06020820152600061411c60a08301856140c4565b606081526003606082015262734e5360e81b608082015260a06020820152600061411c60a08301856140c4565b6060815260026060820152611d5560f21b608082015260a06020820152600061411c60a08301856140c4565b6060815260026060820152611c9560f21b608082015260a06020820152600061411c60a08301856140c4565b60808152600061440c60808301876140c4565b828103602084015261441e81876140c4565b6001600160a01b0395909516604084015250506060015292915050565b6060815260026060820152611b5560f21b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261614160f01b608082015260a06020820152600061411c60a08301856140c4565b6000600182016144a5576144a5613f89565b5060010190565b6060815260006144bf60608301866140c4565b6001600160a01b03851660208401529050613c5860408301846141a1565b606081526002606082015261073560f41b608082015260a06020820152600061411c60a08301856140c4565b60808152600061451c60808301876140c4565b6001600160a01b0395861660208401526040830194909452509216606090920191909152919050565b6060815260026060820152611d1560f21b608082015260a06020820152600061411c60a08301856140c456fe43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055a264697066735822122052e91f409411f6121372a07745a074bce8287231923db513fb3a3cdd1ab2450e64736f6c6343000813003343cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Administrable",
  "coverageMap": {
    "branches": {
      "0": {
        "Administrable._addBankAdmin": {
          "209": [
            18317,
            18342,
            true
          ]
        },
        "Administrable._createBank": {
          "196": [
            17773,
            17794,
            true
          ]
        },
        "Administrable._deleteBank": {
          "198": [
            19194,
            19214,
            true
          ],
          "199": [
            19240,
            19294,
            true
          ],
          "200": [
            19319,
            19340,
            true
          ]
        },
        "Administrable._issueDividend": {
          "201": [
            16416,
            16462,
            true
          ],
          "202": [
            16539,
            16581,
            false
          ],
          "203": [
            16585,
            16611,
            false
          ]
        },
        "Administrable._moveToken": {
          "204": [
            4524,
            4544,
            true
          ],
          "205": [
            20917,
            20967,
            true
          ],
          "206": [
            21048,
            21074,
            false
          ],
          "207": [
            21094,
            21140,
            false
          ],
          "208": [
            21238,
            21282,
            false
          ]
        },
        "Administrable._processTokenReceipt": {
          "177": [
            24052,
            24092,
            false
          ],
          "178": [
            24096,
            24122,
            false
          ]
        },
        "Administrable._removeBankAdmin": {
          "197": [
            18841,
            18872,
            true
          ]
        },
        "Administrable._transferTokenFromBank": {
          "210": [
            19964,
            20010,
            true
          ],
          "211": [
            20134,
            20176,
            false
          ],
          "212": [
            20180,
            20206,
            false
          ]
        },
        "Administrable.addBankAdmin": {
          "186": [
            3721,
            3754,
            true
          ],
          "187": [
            9110,
            9134,
            true
          ],
          "188": [
            9138,
            9158,
            true
          ]
        },
        "Administrable.claimDividend": {
          "182": [
            5888,
            5916,
            true
          ],
          "183": [
            5942,
            5986,
            true
          ],
          "184": [
            6188,
            6206,
            true
          ]
        },
        "Administrable.hasPermit": {
          "193": [
            15172,
            15194,
            true
          ],
          "194": [
            15198,
            15218,
            false
          ]
        },
        "Administrable.isPermitAdmin": {
          "180": [
            15701,
            15723,
            true
          ],
          "181": [
            15727,
            15747,
            false
          ]
        },
        "Administrable.setBasePermit": {
          "179": [
            11991,
            12026,
            true
          ]
        },
        "Administrable.setNonShardHolderState": {
          "185": [
            12301,
            12333,
            true
          ]
        },
        "Administrable.setPermit": {
          "189": [
            4003,
            4040,
            true
          ],
          "190": [
            11475,
            11497,
            true
          ],
          "191": [
            11501,
            11521,
            true
          ],
          "192": [
            11549,
            11589,
            true
          ]
        },
        "Administrable.transferTokenFromBank": {
          "195": [
            4273,
            4306,
            true
          ]
        }
      },
      "1": {
        "Idea._issueShards": {
          "223": [
            4540,
            4566,
            true
          ]
        },
        "Idea._payProfitToSeller": {
          "227": [
            9318,
            9342,
            false
          ],
          "228": [
            9601,
            9652,
            true
          ]
        },
        "Idea._receiveToken": {
          "224": [
            6693,
            6719,
            true
          ],
          "225": [
            6786,
            6836,
            true
          ],
          "226": [
            6860,
            6911,
            true
          ]
        },
        "Idea._registerTokenAddress": {
          "232": [
            8172,
            8199,
            true
          ]
        },
        "Idea._transferEther": {
          "229": [
            6321,
            6328,
            true
          ]
        },
        "Idea._transferToken": {
          "216": [
            5274,
            5303,
            true
          ],
          "217": [
            5324,
            5350,
            false
          ],
          "218": [
            5464,
            5488,
            true
          ],
          "219": [
            5513,
            5531,
            false
          ],
          "220": [
            5742,
            5766,
            true
          ],
          "221": [
            5848,
            5872,
            true
          ],
          "222": [
            5917,
            5923,
            false
          ]
        },
        "Idea._unregisterTokenAddress": {
          "230": [
            8551,
            8577,
            true
          ],
          "231": [
            8602,
            8627,
            true
          ]
        },
        "Idea.claimLiquid": {
          "213": [
            2956,
            2982,
            true
          ],
          "214": [
            3057,
            3095,
            true
          ],
          "215": [
            3287,
            3303,
            true
          ]
        }
      },
      "2": {
        "Idea._liquidize": {
          "250": [
            6303,
            6317,
            true
          ]
        },
        "Idea.claimLiquid": {
          "234": [
            5930,
            5955,
            true
          ]
        },
        "Shardable._pushShard": {
          "251": [
            15600,
            15610,
            true
          ]
        },
        "Shardable._putForSale": {
          "248": [
            14884,
            14913,
            true
          ],
          "249": [
            14932,
            14967,
            true
          ]
        },
        "Shardable._split": {
          "245": [
            13270,
            13310,
            true
          ],
          "246": [
            13331,
            13348,
            false
          ],
          "247": [
            14096,
            14105,
            false
          ]
        },
        "Shardable.cancelSale": {
          "233": [
            10490,
            10510,
            true
          ]
        },
        "Shardable.purchase": {
          "235": [
            7366,
            7386,
            true
          ],
          "236": [
            7411,
            7441,
            true
          ],
          "237": [
            7466,
            7501,
            true
          ],
          "238": [
            8011,
            8034,
            true
          ],
          "239": [
            8380,
            8395,
            false
          ],
          "240": [
            8399,
            8415,
            true
          ],
          "241": [
            8536,
            8591,
            true
          ],
          "242": [
            8669,
            8760,
            true
          ],
          "243": [
            8977,
            9018,
            false
          ],
          "244": [
            9326,
            9361,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Administrable._addBankAdmin": {
          "134": [
            18309,
            18348
          ],
          "135": [
            18358,
            18397
          ],
          "136": [
            18407,
            18471
          ]
        },
        "Administrable._createBank": {
          "89": [
            17765,
            17801
          ],
          "90": [
            17811,
            17850
          ],
          "91": [
            17860,
            17887
          ],
          "92": [
            17897,
            17961
          ]
        },
        "Administrable._deleteBank": {
          "102": [
            19186,
            19222
          ],
          "103": [
            19232,
            19301
          ],
          "104": [
            19311,
            19347
          ],
          "105": [
            19357,
            19385
          ],
          "106": [
            19395,
            19449
          ]
        },
        "Administrable._dissolveDividend": {
          "86": [
            17248,
            17280
          ],
          "87": [
            17333,
            17425
          ],
          "88": [
            17435,
            17489
          ]
        },
        "Administrable._issueDividend": {
          "111": [
            16408,
            16469
          ],
          "112": [
            16479,
            16525
          ],
          "113": [
            16627,
            16668
          ],
          "114": [
            16688,
            16808
          ],
          "115": [
            16818,
            16859
          ],
          "116": [
            16869,
            16905
          ],
          "117": [
            16915,
            16988
          ]
        },
        "Administrable._liquidize": {
          "83": [
            24433,
            24451
          ],
          "84": [
            24461,
            24497
          ]
        },
        "Administrable._moveToken": {
          "128": [
            20909,
            20974
          ],
          "129": [
            20984,
            21034
          ],
          "130": [
            21160,
            21205
          ],
          "131": [
            21302,
            21345
          ],
          "132": [
            21379,
            21427
          ],
          "133": [
            21437,
            21525
          ]
        },
        "Administrable._processTokenReceipt": {
          "10": [
            23957,
            24010
          ],
          "11": [
            24138,
            24177
          ],
          "12": [
            24197,
            24241
          ],
          "13": [
            24251,
            24294
          ]
        },
        "Administrable._registerTokenAddress": {
          "122": [
            23472,
            23513
          ],
          "123": [
            23523,
            23581
          ]
        },
        "Administrable._removeBankAdmin": {
          "93": [
            18833,
            18873
          ],
          "94": [
            18883,
            18923
          ],
          "95": [
            18933,
            18997
          ]
        },
        "Administrable._setBasePermit": {
          "81": [
            22379,
            22413
          ],
          "82": [
            22423,
            22488
          ]
        },
        "Administrable._setNonShardHolderState": {
          "118": [
            22695,
            22726
          ],
          "119": [
            22736,
            22791
          ]
        },
        "Administrable._setPermit": {
          "144": [
            21934,
            21973
          ],
          "145": [
            21983,
            22056
          ]
        },
        "Administrable._transferTokenFromBank": {
          "146": [
            19956,
            20017
          ],
          "147": [
            20027,
            20064
          ],
          "148": [
            20074,
            20120
          ],
          "149": [
            20222,
            20263
          ],
          "150": [
            20283,
            20359
          ]
        },
        "Administrable._unregisterTokenAddress": {
          "120": [
            23079,
            23122
          ],
          "121": [
            23132,
            23190
          ]
        },
        "Administrable.addBankAdmin": {
          "51": [
            9102,
            9168
          ],
          "52": [
            9178,
            9211
          ]
        },
        "Administrable.bankExists": {
          "54": [
            13847,
            13882
          ]
        },
        "Administrable.bankIsEmpty": {
          "19": [
            14108,
            14200
          ]
        },
        "Administrable.claimDividend": {
          "33": [
            5880,
            5924
          ],
          "34": [
            5934,
            5993
          ],
          "35": [
            6003,
            6045
          ],
          "36": [
            6180,
            6214
          ],
          "37": [
            6224,
            6269
          ],
          "38": [
            6279,
            6357
          ],
          "39": [
            6367,
            6435
          ]
        },
        "Administrable.createBank": {
          "24": [
            8693,
            8724
          ]
        },
        "Administrable.deleteBank": {
          "40": [
            9860,
            9881
          ]
        },
        "Administrable.dissolveDividend": {
          "20": [
            8372,
            8399
          ]
        },
        "Administrable.dividendExists": {
          "5": [
            14419,
            14450
          ]
        },
        "Administrable.getBankBalance": {
          "23": [
            12835,
            12879
          ]
        },
        "Administrable.getDividendResidual": {
          "9": [
            13589,
            13624
          ]
        },
        "Administrable.getDividendToken": {
          "3": [
            13084,
            13128
          ]
        },
        "Administrable.getDividendValue": {
          "2": [
            13339,
            13376
          ]
        },
        "Administrable.hasPermit": {
          "58": [
            15222,
            15234
          ],
          "59": [
            15245,
            15359
          ]
        },
        "Administrable.isBankAdmin": {
          "50": [
            14769,
            14845
          ]
        },
        "Administrable.isPermitAdmin": {
          "21": [
            15751,
            15763
          ],
          "22": [
            15774,
            15894
          ]
        },
        "Administrable.issueDividend": {
          "42": [
            8091,
            8134
          ]
        },
        "Administrable.issueShards": {
          "41": [
            7543,
            7585
          ]
        },
        "Administrable.liquidize": {
          "16": [
            12533,
            12545
          ]
        },
        "Administrable.moveToken": {
          "49": [
            10991,
            11045
          ]
        },
        "Administrable.registerTokenAddress": {
          "47": [
            6742,
            6777
          ]
        },
        "Administrable.removeBankAdmin": {
          "25": [
            9604,
            9640
          ]
        },
        "Administrable.setBasePermit": {
          "14": [
            11983,
            12033
          ],
          "15": [
            12043,
            12078
          ]
        },
        "Administrable.setNonShardHolderState": {
          "43": [
            12293,
            12340
          ],
          "44": [
            12350,
            12383
          ]
        },
        "Administrable.setPermit": {
          "55": [
            11467,
            11531
          ],
          "56": [
            11541,
            11597
          ],
          "57": [
            11607,
            11646
          ]
        },
        "Administrable.transferTokenFromBank": {
          "60": [
            10402,
            10456
          ]
        },
        "Administrable.unregisterTokenAddress": {
          "45": [
            7090,
            7127
          ]
        }
      },
      "1": {
        "Idea.<receive>": {
          "0": [
            2199,
            2252
          ]
        },
        "Idea._issueShards": {
          "107": [
            4532,
            4567
          ],
          "108": [
            4577,
            4624
          ],
          "109": [
            4634,
            4720
          ],
          "110": [
            4730,
            4799
          ]
        },
        "Idea._liquidize": {
          "160": [
            8836,
            8850
          ]
        },
        "Idea._payProfitToSeller": {
          "153": [
            9426,
            9459
          ],
          "154": [
            9593,
            9659
          ]
        },
        "Idea._processTokenReceipt": {
          "79": [
            7355,
            7384
          ],
          "80": [
            7394,
            7431
          ]
        },
        "Idea._processTokenTransfer": {
          "162": [
            7807,
            7836
          ],
          "163": [
            7846,
            7883
          ]
        },
        "Idea._receiveToken": {
          "124": [
            6685,
            6725
          ],
          "125": [
            6778,
            6842
          ],
          "126": [
            6852,
            6918
          ],
          "127": [
            6928,
            6979
          ]
        },
        "Idea._registerTokenAddress": {
          "175": [
            8164,
            8206
          ],
          "176": [
            8216,
            8256
          ]
        },
        "Idea._transferEther": {
          "161": [
            6313,
            6335
          ]
        },
        "Idea._transferToken": {
          "96": [
            5266,
            5310
          ],
          "97": [
            5354,
            5379
          ],
          "98": [
            5456,
            5495
          ],
          "99": [
            5734,
            5773
          ],
          "100": [
            5840,
            5879
          ],
          "101": [
            5926,
            5967
          ]
        },
        "Idea._unregisterTokenAddress": {
          "172": [
            8543,
            8584
          ],
          "173": [
            8594,
            8634
          ],
          "174": [
            8644,
            8685
          ]
        },
        "Idea.acceptsToken": {
          "46": [
            4058,
            4136
          ]
        },
        "Idea.claimLiquid": {
          "26": [
            2948,
            2989
          ],
          "27": [
            3049,
            3102
          ],
          "28": [
            3112,
            3156
          ],
          "29": [
            3279,
            3308
          ],
          "30": [
            3318,
            3361
          ],
          "31": [
            3371,
            3422
          ],
          "32": [
            3432,
            3487
          ]
        },
        "Idea.getLiquidResidual": {
          "1": [
            3744,
            3779
          ]
        },
        "Idea.receiveToken": {
          "48": [
            2601,
            2634
          ]
        }
      },
      "2": {
        "Shardable._cancelSale": {
          "85": [
            12746,
            12774
          ]
        },
        "Shardable._expireShard": {
          "164": [
            16480,
            16531
          ],
          "165": [
            16541,
            16586
          ],
          "166": [
            16596,
            16636
          ]
        },
        "Shardable._pushShard": {
          "167": [
            15592,
            15617
          ],
          "168": [
            15747,
            15774
          ],
          "169": [
            15784,
            15831
          ],
          "170": [
            15918,
            16139
          ],
          "171": [
            16149,
            16189
          ]
        },
        "Shardable._putForSale": {
          "155": [
            14876,
            14914
          ],
          "156": [
            14924,
            14974
          ],
          "157": [
            14984,
            15140
          ],
          "158": [
            15150,
            15177
          ],
          "159": [
            15187,
            15238
          ]
        },
        "Shardable._split": {
          "137": [
            13262,
            13317
          ],
          "138": [
            13547,
            13577
          ],
          "139": [
            13636,
            13673
          ],
          "140": [
            13811,
            13838
          ],
          "141": [
            13898,
            13930
          ],
          "142": [
            14117,
            14170
          ],
          "143": [
            14190,
            14239
          ]
        },
        "Shardable.cancelSale": {
          "17": [
            10482,
            10517
          ],
          "18": [
            10527,
            10545
          ]
        },
        "Shardable.getCurrentClock": {
          "8": [
            11169,
            11181
          ]
        },
        "Shardable.getShardExpirationClock": {
          "7": [
            11354,
            11388
          ]
        },
        "Shardable.getShardSalePrice": {
          "4": [
            11547,
            11578
          ]
        },
        "Shardable.isShardHolder": {
          "76": [
            12103,
            12145
          ]
        },
        "Shardable.isValidShard": {
          "6": [
            11819,
            11864
          ]
        },
        "Shardable.purchase": {
          "61": [
            7358,
            7393
          ],
          "62": [
            7403,
            7448
          ],
          "63": [
            7458,
            7508
          ],
          "64": [
            7518,
            7613
          ],
          "65": [
            7623,
            7641
          ],
          "66": [
            7851,
            7878
          ],
          "67": [
            8003,
            8041
          ],
          "68": [
            8372,
            8422
          ],
          "69": [
            8528,
            8597
          ],
          "70": [
            8661,
            8767
          ],
          "71": [
            8820,
            8911
          ],
          "72": [
            8931,
            8963
          ],
          "73": [
            9117,
            9157
          ],
          "74": [
            9177,
            9272
          ],
          "75": [
            9420,
            9583
          ]
        },
        "Shardable.putForSale": {
          "77": [
            10230,
            10277
          ]
        },
        "Shardable.shardExisted": {
          "78": [
            12462,
            12556
          ]
        },
        "Shardable.split": {
          "53": [
            11026,
            11055
          ]
        },
        "divideUnequallyIntoTwoWithRemainder": {
          "151": [
            748,
            780
          ],
          "152": [
            912,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "Idea",
    "Shardable"
  ],
  "deployedBytecode": "6080604052600436106102765760003560e01c8063859d9fd51161014f578063b4af7d59116100c1578063e123182b1161007a578063e123182b14610868578063e1c34c1f1461087b578063e6778fce1461089b578063efae89f8146108c8578063f7aae621146108f5578063fd06636b1461091557600080fd5b8063b4af7d5914610753578063bcedb2e014610773578063c4802eb2146107db578063c5438a5514610808578063db5dc9b714610828578063de9d68051461084857600080fd5b80639995b9a9116101135780639995b9a91461068e578063a1916aef146106be578063a80aed76146106de578063a902780f146106fe578063a907b6c514610713578063b2cb78ab1461073357600080fd5b8063859d9fd5146105de578063868399a5146105fe5780638786df6a1461061e5780639211b7b31461063e57806397235a1e1461066e57600080fd5b8063350546d8116101e85780634c46360b116101ac5780634c46360b146104c35780635beeff33146104f357806362748dcc1461052057806363879c0b1461056e5780637b7854931461058e57806381005219146105be57600080fd5b8063350546d81461040d578063354cd1351461042d578063384fe2b51461044d5780633baf28f81461046d5780633dbeaa541461048d57600080fd5b8063169936b41161023a578063169936b41461034d578063236566421461036d578063258e4d9f1461038d5780632dec7cd2146103ad5780632ef37926146103cd5780632f2e9a2a146103ed57600080fd5b806302fb0c5e1461028e578063036f3aec146102bd57806305c558f5146102dd578063066792d2146102f25780630bea89851461032d57600080fd5b366102895761028760003433610935565b005b600080fd5b34801561029a57600080fd5b506001546102a89060ff1681565b60405190151581526020015b60405180910390f35b3480156102c957600080fd5b506102876102d8366004613bbc565b610a83565b3480156102e957600080fd5b50610287610b23565b3480156102fe57600080fd5b5061031f61030d366004613c0a565b60026020526000908152604090205481565b6040519081526020016102b4565b34801561033957600080fd5b50610287610348366004613c0a565b610b5c565b34801561035957600080fd5b506102a8610368366004613c23565b610c19565b34801561037957600080fd5b50610287610388366004613c0a565b610c77565b34801561039957600080fd5b506102a86103a8366004613c77565b610cb2565b3480156103b957600080fd5b5061031f6103c8366004613c77565b610d67565b3480156103d957600080fd5b506102876103e8366004613c77565b610da8565b3480156103f957600080fd5b50610287610408366004613c77565b610e06565b34801561041957600080fd5b50610287610428366004613cbc565b610e58565b34801561043957600080fd5b50610287610448366004613cd7565b611032565b34801561045957600080fd5b50610287610468366004613c23565b611268565b34801561047957600080fd5b50610287610488366004613cf9565b6112b3565b34801561049957600080fd5b5061031f6104a8366004613cbc565b6001600160a01b03166000908152600a602052604090205490565b3480156104cf57600080fd5b5061031f6104de366004613c0a565b60009081526014602052604090206001015490565b3480156104ff57600080fd5b5061031f61050e366004613cbc565b60096020526000908152604090205481565b34801561052c57600080fd5b5061055661053b366004613c0a565b6000908152601460205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016102b4565b34801561057a57600080fd5b50610287610589366004613d3f565b6112f4565b34801561059a57600080fd5b5061031f6105a9366004613c0a565b60009081526006602052604090206002015490565b3480156105ca57600080fd5b506102876105d9366004613da4565b611341565b3480156105ea57600080fd5b506102876105f9366004613cbc565b6113b8565b34801561060a57600080fd5b506102a8610619366004613cbc565b611416565b34801561062a57600080fd5b50610287610639366004613cbc565b61144b565b34801561064a57600080fd5b506102a8610659366004613c0a565b60009081526013602052604090205460ff1690565b34801561067a57600080fd5b50610287610689366004613dc1565b6114a9565b34801561069a57600080fd5b506102a86106a9366004613c0a565b60008054918152600760205260409020541190565b3480156106ca57600080fd5b506102876106d9366004613deb565b6114b3565b3480156106ea57600080fd5b506102a86106f9366004613c77565b6114d3565b34801561070a57600080fd5b5060005461031f565b34801561071f57600080fd5b5061028761072e366004613c77565b61153e565b34801561073f57600080fd5b5061028761074e366004613e67565b6115d4565b34801561075f57600080fd5b506102a861076e366004613c23565b611650565b34801561077f57600080fd5b506107b861078e366004613c0a565b60036020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b039092166020840152908201526060016102b4565b3480156107e757600080fd5b5061031f6107f6366004613cbc565b60046020526000908152604090205481565b34801561081457600080fd5b50610287610823366004613e9c565b611680565b34801561083457600080fd5b506102a8610843366004613c77565b611777565b34801561085457600080fd5b50610287610863366004613ef1565b61182d565b610287610876366004613cd7565b61184d565b34801561088757600080fd5b506102a8610896366004613cbc565b611e40565b3480156108a757600080fd5b5061031f6108b6366004613c0a565b60009081526015602052604090205490565b3480156108d457600080fd5b5061031f6108e3366004613c0a565b60009081526007602052604090205490565b34801561090157600080fd5b50610287610910366004613f39565b611e72565b34801561092157600080fd5b506102a8610930366004613cd7565b611ef0565b610940838383611f21565b6040516336b0b4b760e11b8152600f9060040190815260408051602092819003830190206001600160a01b0386166000908152925290205415801561098d57506001600160a01b03831615155b156109d0576001600e6040516109ad906336b0b4b760e11b815260040190565b908152602001604051809103902060008282546109ca9190613f9f565b90915550505b81600f6040516109ea906336b0b4b760e11b815260040190565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a2a9190613f9f565b9091555050604080516001600160a01b038086168252602082018590528316918101919091527fde49bbe8e448cdfa40e6fa0d22592be9a03b28ba746527635dbe5235416659cf906060015b60405180910390a1505050565b81610a8e8133610cb2565b610a9757600080fd5b816002811115610aa957610aa9613fb2565b601284604051610ab99190613fec565b9081526040519081900360200190205460ff166002811115610add57610add613fb2565b03610b145760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064015b60405180910390fd5b610b1e8383611f76565b505050565b604051806040016040528060028152602001616c4560f01b815250610b488133611777565b610b5157600080fd5b610b59612025565b50565b60008181526003602052604090206001015481906001600160a01b03163314610b975760405162461bcd60e51b8152600401610b0b90614008565b81610bb18160008054918152600760205260409020541190565b610bcd5760405162461bcd60e51b8152600401610b0b90614024565b60008381526005602052604090205460ff16610c105760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610b0b565b610b1e83612077565b6000600e82604051610c2b9190613fec565b9081526020016040518091039020546000148015610c715750600f82604051610c549190613fec565b908152604080516020928190038301902060008080529252902054155b92915050565b60405180604001604052806002815260200161191160f21b815250610c9c8133611777565b610ca557600080fd5b610cae826120c6565b5050565b6000610cbd82611e40565b80610cca5750600c5460ff165b610cd657506000610c71565b6002601184604051610ce89190613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff166002811115610d2157610d21613fb2565b1480610d6057506002601284604051610d3a9190613fec565b9081526040519081900360200190205460ff166002811115610d5e57610d5e613fb2565b145b9392505050565b6000600f83604051610d799190613fec565b908152604080519182900360209081019092206001600160a01b03851660009081529252902054905092915050565b6040518060400160405280600281526020016136a160f11b815250610dcd8133611777565b610dd657600080fd5b6001805460ff16151514610dfc5760405162461bcd60e51b8152600401610b0b90614040565b610b1e83836121b1565b6040518060400160405280600281526020016136a160f11b815250610e2b8133610cb2565b610e3457600080fd5b82610e3f81336114d3565b610e4857600080fd5b610e5284846122c3565b50505050565b610e6133611e40565b610e925760405162461bcd60e51b81526020600482015260026024820152610aa960f31b6044820152606401610b0b565b610e9b81611416565b610eb75760405162461bcd60e51b8152600401610b0b9061405c565b336000908152600460209081526040808320546001600160a01b0385168452600b83528184208185529092529091205460ff1615610f1c5760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610b0b565b6001600160a01b0382166000818152600b602090815260408083208584528252808320805460ff191660011790558254835260028252808320548584526003835281842054948452600990925282205491929091610f7a9190614078565b610f84919061408f565b905080600003610fb05760405162461bcd60e51b81526020600482015260006024820152604401610b0b565b6001600160a01b0383166000908152600a602052604081208054839290610fd89084906140b1565b90915550610fe9905083823361237f565b604080516001600160a01b03851681526020810183905233918101919091527f1397d005a56670cbe383372bd4743eaa779af18164d00dc6d12a6659418e1bbf90606001610a76565b60008281526003602052604090206001015482906001600160a01b0316331461106d5760405162461bcd60e51b8152600401610b0b90614008565b600082815260136020526040902054829060ff1661108a57600080fd5b6001805460ff161515146110b05760405162461bcd60e51b8152600401610b0b90614040565b6110ba8484611ef0565b6110ec5760405162461bcd60e51b81526020600482015260036024820152622720a360e91b6044820152606401610b0b565b600083815260166020908152604080832087845290915290205460ff161561113b5760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610b0b565b60008381526016602090815260408083208784528252808320805460ff19166001908117909155835484526002835281842054888552600384528285205488865260149094529184200154909161119191614078565b61119b919061408f565b9050806000036111d35760405162461bcd60e51b815260206004820152600360248201526244545360e81b6044820152606401610b0b565b600084815260156020526040812080548392906111f19084906140b1565b9091555050600084815260146020526040902054611219906001600160a01b0316823361237f565b60408051602081018690529081018290526000805160206145728339815191529060600160408051601f19818403018152908290526112599133906140f0565b60405180910390a15050505050565b6040518060400160405280600281526020016136a160f11b81525061128d8133610cb2565b61129657600080fd5b816112a181336114d3565b6112aa57600080fd5b610b1e83612624565b60405180604001604052806002815260200161695360f01b8152506112d88133611777565b6112e157600080fd5b6112ed858585856127a9565b5050505050565b604051806040016040528060028152602001611a5160f21b8152506113198133611777565b61132257600080fd5b8361132d81336114d3565b61133657600080fd5b6112ed858585612828565b60405180604001604052806003815260200162734e5360e81b8152506113678133611777565b61137057600080fd5b600c5482151560ff9091161515036113af5760405162461bcd60e51b8152602060048201526002602482015261415360f01b6044820152606401610b0b565b610cae82612a32565b604051806040016040528060038152602001621b505560ea1b8152506113de8133611777565b6113e757600080fd5b6001805460ff1615151461140d5760405162461bcd60e51b8152600401610b0b90614040565b610cae82612aa2565b6001600160a01b03811660009081526008602052604081205460ff16151560011480610c715750506001600160a01b03161590565b604051806040016040528060038152602001621b505560ea1b8152506114718133611777565b61147a57600080fd5b6001805460ff161515146114a05760405162461bcd60e51b8152600401610b0b90614040565b610cae82612aeb565b610cae8282612b34565b836114be81336114d3565b6114c757600080fd5b6112ed85858585612c87565b60006010836040516114e59190613fec565b908152604080519182900360209081019092206001600160a01b0385166000908152925290205460ff16151560011480610d605750610d606040518060400160405280600281526020016136a160f11b81525083610cb2565b6040518060400160405280600281526020016136a160f11b8152506115638133611777565b61156c57600080fd5b8261157781336114d3565b61158057600080fd5b61158983611e40565b806115965750600c5460ff165b6115ca5760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610b0b565b610e528484612f1b565b60008381526003602052604090206001015483906001600160a01b0316331461160f5760405162461bcd60e51b8152600401610b0b90614008565b836116298160008054918152600760205260409020541190565b6116455760405162461bcd60e51b8152600401610b0b90614024565b6112ed858585613019565b6000600d826040516116629190613fec565b9081526040519081900360200190205460ff16151560011492915050565b8261168b8133610cb2565b61169457600080fd5b61169d83611e40565b806116aa5750600c5460ff165b6116de5760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610b0b565b8160028111156116f0576116f0613fb2565b6011856040516117009190613fec565b90815260408051602092819003830190206001600160a01b0387166000908152925290205460ff16600281111561173957611739613fb2565b0361176c5760405162461bcd60e51b815260206004820152600360248201526204148560ec1b6044820152606401610b0b565b610e5284848461323c565b600061178282611e40565b8061178f5750600c5460ff165b61179b57506000610c71565b60016011846040516117ad9190613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff1660028111156117e6576117e6613fb2565b101580610d60575060016012846040516118009190613fec565b9081526040519081900360200190205460ff16600281111561182457611824613fb2565b10159392505050565b8361183881336114d3565b61184157600080fd5b6112ed858585856132f6565b816118678160008054918152600760205260409020541190565b6118835760405162461bcd60e51b8152600401610b0b90614024565b60008381526005602052604090205460ff166118c65760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610b0b565b60008381526006602052604081205490036119085760405162461bcd60e51b8152602060048201526002602482015261455360f01b6044820152606401610b0b565b60008381526006602052604090205482111561194b5760405162461bcd60e51b8152602060048201526002602482015261455360f01b6044820152606401610b0b565b6000838152600660205260409020600301546001600160a01b031633148061198b57506000838152600660205260409020600301546001600160a01b0316155b6119bc5760405162461bcd60e51b815260206004820152600260248201526129a960f11b6044820152606401610b0b565b6119c583612077565b6000838152600660205260408120600201546119e19084614078565b905060008060006119f68460196103e8613498565b91945092509050611a078183613f9f565b6000888152600660205260409020600101549092506001600160a01b0316611b665783341015611a5e5760405162461bcd60e51b8152602060048201526002602482015261494560f01b6044820152606401610b0b565b6040516000907349a71890aea5a751e30e740c504f2e9683f347bc9085908381818185875af1925050503d8060008114611ab4576040519150601f19603f3d011682016040523d82523d6000602084013e611ab9565b606091505b505060008981526003602052604080822060010154905192935090916001600160a01b039091169085908381818185875af1925050503d8060008114611b1b576040519150601f19603f3d011682016040523d82523d6000602084013e611b20565b606091505b50509050808015611b2e5750815b611b5f5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610b0b565b5050611cec565b60008781526006602052604090819020600101549051636eb1769f60e11b81523360048201523060248201526001600160a01b03909116908590829063dd62ed3e90604401602060405180830381865afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec9190614133565b1015611c0a5760405162461bcd60e51b8152600401610b0b9061414c565b6040516323b872dd60e01b81523360048201527349a71890aea5a751e30e740c504f2e9683f347bc6024820152604481018590526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c959190614168565b611cb15760405162461bcd60e51b8152600401610b0b90614185565b60008881526003602090815260408083206001908101546006909352922090910154611cea916001600160a01b0390811691168561350c565b505b611cf7878733613019565b600087815260036020526040902060010154306001600160a01b0390911603611d3f576000805481526002602052604081208054889290611d39908490613f9f565b90915550505b600087815260066020908152604091829020600181015460029091015483518b81529283018a905233838501526001600160a01b039091166060830152608082015290517f443732a78c29282934211eae7aa500dd12db85d4dd795dbcda5f94ee19a67e4f9181900360a00190a16000878152600660205260409020548614611e37576000878152600360209081526040808320600101546001600160a01b0316835260048252808320548a8452600690925290912054611e379190611e069089906140b1565b60008a8152600660205260409020600181015460028201546003909201546001600160a01b039182169291166135bb565b50505050505050565b6001600160a01b038116600090815260046020526040812054610c719060008054918152600760205260409020541190565b60008581526003602052604090206001015485906001600160a01b03163314611ead5760405162461bcd60e51b8152600401610b0b90614008565b85611ec78160008054918152600760205260409020541190565b611ee35760405162461bcd60e51b8152600401610b0b90614024565b611e3787878787876135bb565b6000828152600360205260408120600201548210801590610d60575050600091825260076020526040909120541190565b6001600160a01b03831660009081526009602052604081208054849290611f49908490613f9f565b90915550506001600160a01b0383166000908152600a602052604081208054849290610a2a908490613f9f565b6001805460ff16151514611f9c5760405162461bcd60e51b8152600401610b0b90614040565b80601283604051611fad9190613fec565b908152604051908190036020019020805460ff19166001836002811115611fd657611fd6613fb2565b02179055506000805160206145728339815191528282604051602001611ffd9291906141c3565b60408051601f19818403018152908290526120199133906141e5565b60405180910390a15050565b61202d61376e565b604080516060808252600290820152616c4560f01b608082015260a060208201819052600090820152338183015290516000805160206145728339815191529181900360c00190a1565b806120918160008054918152600760205260409020541190565b6120ad5760405162461bcd60e51b8152600401610b0b90614024565b506000908152600560205260409020805460ff19169055565b600081815260136020526040902054819060ff166120e357600080fd5b6001805460ff161515146121095760405162461bcd60e51b8152600401610b0b90614040565b6000828152601360209081526040808320805460ff19169055601582528083205481516336b0b4b760e11b8152600f6004820152825190819003602401902086855260148452828520546001600160a01b031685529092528220805491929091612174908490613f9f565b90915550506040805160208101849052600080516020614572833981519152910160408051601f1981840301815290829052612019913390614211565b6001805460ff161515146121d75760405162461bcd60e51b8152600401610b0b90614040565b6121e082611650565b156122125760405162461bcd60e51b8152602060048201526002602482015261414560f01b6044820152606401610b0b565b60016010836040516122249190613fec565b90815260408051602092819003830181206001600160a01b038616600090815293529120805460ff191692151592909217909155600190600d90612269908590613fec565b90815260405160209181900382018120805460ff191693151593909317909255600080516020614572833981519152916122a791859185910161423d565b60408051601f1981840301815290829052612019913390614267565b6001805460ff161515146122e95760405162461bcd60e51b8152600401610b0b90614040565b6122f382826114d3565b6122fc57600080fd5b600060108360405161230e9190613fec565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff1916931515939093179092556000805160206145728339815191529161236391859185910161423d565b60408051601f1981840301815290829052612019913390614293565b6001600160a01b0383166000908152600960205260409020548211156123b75760405162461bcd60e51b8152600401610b0b9061414c565b6001600160a01b0383166123d4576123cf82826137a0565b61260f565b60405163095ea7b360e01b81526001600160a01b0382811660048301526024820184905284919082169063095ea7b3906044016020604051808303816000875af1158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244a9190614168565b61247b5760405162461bcd60e51b81526020600482015260026024820152614e4160f01b6044820152606401610b0b565b6001600160a01b0382163b1561257e57604051634b91ad0f60e11b81526001600160a01b038581166004830152602482018590528316906397235a1e90604401600060405180830381600087803b1580156124d557600080fd5b505af19250505080156124e6575060015b6125795760405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015612539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255d9190614168565b6125795760405162461bcd60e51b8152600401610b0b90614185565b61260d565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af11580156125cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f19190614168565b61260d5760405162461bcd60e51b8152600401610b0b90614185565b505b60015460ff1615610b1e57610b1e8383613828565b6001805460ff1615151461264a5760405162461bcd60e51b8152600401610b0b90614040565b61265381611650565b6126855760405162461bcd60e51b815260206004820152600360248201526255422160e81b6044820152606401610b0b565b60408051808201909152600481526336b0b4b760e11b6020918201528151908201207f471dfab0756edc981c75dd3188ccd700755407f7d3bedf452610f7a1e240d659016126fa5760405162461bcd60e51b815260206004820152600260248201526126a160f11b6044820152606401610b0b565b61270381610c19565b6127345760405162461bcd60e51b8152602060048201526002602482015261424560f01b6044820152606401610b0b565b6000600d826040516127469190613fec565b90815260405160209181900382018120805460ff19169315159390931790925560008051602061457283398151915291612782918491016142bf565b60408051601f198184030181529082905261279e9133906142d2565b60405180910390a150565b6127b283611416565b6127bb57600080fd5b3060009081526004602052604081205490546127d79190613886565b306000908152600460209081526040808320548352600390915290205461280b906128029086613f9f565b306000546138f1565b30600090815260046020526040902054610e5290858585856135bb565b6001805460ff1615151461284e5760405162461bcd60e51b8152600401610b0b90614040565b600054604051600f90612862908690613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156128a65760405162461bcd60e51b8152600401610b0b906142fe565b81600f856040516128b79190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546128f791906140b1565b9091555050604051600f9061290d908690613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561294757506001600160a01b03831615155b15612981576001600e8560405161295e9190613fec565b9081526020016040518091039020600082825461297b91906140b1565b90915550505b6040805180820182526001600160a01b0385811682526020808301868152600086815260148352858120945185546001600160a01b031916941693909317845551600193840155601581528382208690556013815290839020805460ff1916909217909155905160008051602061457283398151915291612a08918791879187910161431a565b60408051601f1981840301815290829052612a24913390614348565b60405180910390a150505050565b6001805460ff16151514612a585760405162461bcd60e51b8152600401610b0b90614040565b600c805460ff1916821515908117909155604080516020810192909252600080516020614572833981519152910160408051601f198184030181529082905261279e913390614374565b612aab81613a15565b604080516001600160a01b0383166020820152600080516020614572833981519152910160408051601f198184030181529082905261279e9133906143a1565b612af481613aa6565b604080516001600160a01b0383166020820152600080516020614572833981519152910160408051601f198184030181529082905261279e9133906143cd565b612b3d82611416565b612b595760405162461bcd60e51b8152600401610b0b9061405c565b604051636eb1769f60e11b8152336004820152306024820152829082906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015612ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bcb9190614133565b1015612be95760405162461bcd60e51b8152600401610b0b9061414c565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015612c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c609190614168565b612c7c5760405162461bcd60e51b8152600401610b0b90614185565b610b1e838333610935565b82612c9181611650565b612cc35760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610b0b565b6001805460ff16151514612ce95760405162461bcd60e51b8152600401610b0b90614040565b600f85604051612cf99190613fec565b90815260408051602092819003830190206001600160a01b03861660009081529252902054821115612d3d5760405162461bcd60e51b8152600401610b0b906142fe565b81600f86604051612d4e9190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612d8e91906140b1565b90915550506001600160a01b03831615612e8257600f85604051612db29190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e12576001600e86604051612def9190613fec565b90815260200160405180910390206000828254612e0c91906140b1565b90915550505b600f84604051612e229190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e82576001600e85604051612e5f9190613fec565b90815260200160405180910390206000828254612e7c9190613f9f565b90915550505b81600f85604051612e939190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612ed39190613f9f565b909155505060405160008051602061457283398151915290612eff9087908790879087906020016143f9565b60408051601f198184030181529082905261125991339061443b565b6001805460ff16151514612f415760405162461bcd60e51b8152600401610b0b90614040565b612f656040518060400160405280600281526020016136a160f11b81525082611777565b612f965760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610b0b565b6001601083604051612fa89190613fec565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff19169315159390931790925560008051602061457283398151915291612ffd91859185910161423d565b60408051601f1981840301815290829052612019913390614467565b826130338160008054918152600760205260409020541190565b61304f5760405162461bcd60e51b8152600401610b0b90614024565b6001805460ff161515146130755760405162461bcd60e51b8152600401610b0b90614040565b60008481526003602052604090205483106130b75760405162461bcd60e51b8152602060048201526002602482015261494160f01b6044820152606401610b0b565b6130c082611e40565b1561312f576001600160a01b038216600090815260046020908152604080832054835260039091528120546130f59085613f9f565b905061310481846000546138f1565b6001600160a01b03831660009081526004602052604081205490546131299190613886565b5061313c565b61313c83836000546138f1565b61314884600054613886565b6000848152600360205260408120546131629085906140b1565b905080156131955760008581526003602052604081206001015490546131959183916001600160a01b03909116906138f1565b60408051868152602081018690526001600160a01b03851681830152600060608201819052608082015290517f443732a78c29282934211eae7aa500dd12db85d4dd795dbcda5f94ee19a67e4f9181900360a00190a1506000805480825260026020819052604083205492909161320d906001613f9f565b81526020019081526020016000208190555060008081548092919061323190614493565b919050555050505050565b6001805460ff161515146132625760405162461bcd60e51b8152600401610b0b90614040565b806011846040516132739190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020805460ff191660018360028111156132b1576132b1613fb2565b02179055506000805160206145728339815191528383836040516020016132da939291906144ac565b60408051601f1981840301815290829052610a769133906144dd565b6001805460ff1615151461331c5760405162461bcd60e51b8152600401610b0b90614040565b600f8460405161332c9190613fec565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156133705760405162461bcd60e51b8152600401610b0b906142fe565b61337b83838361237f565b81600f8560405161338c9190613fec565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546133cc91906140b1565b9091555050604051600f906133e2908690613fec565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561341c57506001600160a01b03831615155b15613456576001600e856040516134339190613fec565b9081526020016040518091039020600082825461345091906140b1565b90915550505b6000805160206145728339815191528484848460405160200161347c9493929190614509565b60408051601f1981840301815290829052612a24913390614545565b60008060008484116134a957600080fd5b6000846134b68789614078565b6134c0919061408f565b90506000856134cf88826140b1565b6134d9908a614078565b6134e3919061408f565b905081816134f18183613f9f565b6134fb908b6140b1565b945094509450505093509350939050565b306001600160a01b0384160361352657610b1e8282612b34565b6040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af115801561357b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061359f9190614168565b610e525760405162461bcd60e51b8152600401610b0b90614185565b846135d58160008054918152600760205260409020541190565b6135f15760405162461bcd60e51b8152600401610b0b90614024565b6001805460ff161515146136175760405162461bcd60e51b8152600401610b0b90614040565b60008681526005602052604090205460ff161561363357600080fd5b6000868152600360205260409020548511156136765760405162461bcd60e51b8152602060048201526002602482015261494160f01b6044820152606401610b0b565b604080516080810182528681526001600160a01b0380871660208084019182528385018881528784166060860190815260008d815260068452878120965187559351600180880180549288166001600160a01b031993841617905592516002880155905160039096018054969095169516949094179092556005909152829020805460ff19169091179055517f4126de2c73b6b69d46d3290ee98241c5c18ce39a61b29e4e91f877a6d56bb2139061375e908890889088908890889094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505050505050565b6001805460ff161515146137945760405162461bcd60e51b8152600401610b0b90614040565b6001805460ff19169055565b6000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146137ed576040519150601f19603f3d011682016040523d82523d6000602084013e6137f2565b606091505b5050905080610b1e5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610b0b565b6001600160a01b038216600090815260096020526040812080548392906138509084906140b1565b90915550506001600160a01b0382166000908152600a60205260408120805483929061387d9084906140b1565b90915550505050565b6000828152600360209081526040808320600101546001600160a01b0316835260048252808320839055848352600782529182902083905581518481529081018390527fa3deafde27c3ffde83f038b337d8b0405d225455ae09fbed6a211ef4ee465f4f9101612019565b600083116139265760405162461bcd60e51b815260206004820152600260248201526129ad60f11b6044820152606401610b0b565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160408051808303601f1901815282825280516020918201206001600160a01b03878116600081815260048552858120849055838152600785528581206000199055606080880187528b88528588018381528888018b8152868452600388529288902098518955516001890180546001600160a01b0319169190951617909355516002909601959095558351828152928301949094529181018590529092507f90e88e994885f1cdd31d3393f0b012e817804fc9d2adef69d0d7e5053d1e29ad9101612a24565b613a1e81611416565b613a3a5760405162461bcd60e51b8152600401610b0b9061405c565b6001600160a01b03811660009081526009602052604090205415613a855760405162461bcd60e51b8152602060048201526002602482015261272d60f11b6044820152606401610b0b565b6001600160a01b03166000908152600860205260409020805460ff19169055565b613aaf81611416565b15613ae15760405162461bcd60e51b815260206004820152600260248201526120a960f11b6044820152606401610b0b565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112613b2c57600080fd5b813567ffffffffffffffff80821115613b4757613b47613b05565b604051601f8301601f19908116603f01168101908282118183101715613b6f57613b6f613b05565b81604052838152866020858801011115613b8857600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560038110613bb757600080fd5b919050565b60008060408385031215613bcf57600080fd5b823567ffffffffffffffff811115613be657600080fd5b613bf285828601613b1b565b925050613c0160208401613ba8565b90509250929050565b600060208284031215613c1c57600080fd5b5035919050565b600060208284031215613c3557600080fd5b813567ffffffffffffffff811115613c4c57600080fd5b613c5884828501613b1b565b949350505050565b80356001600160a01b0381168114613bb757600080fd5b60008060408385031215613c8a57600080fd5b823567ffffffffffffffff811115613ca157600080fd5b613cad85828601613b1b565b925050613c0160208401613c60565b600060208284031215613cce57600080fd5b610d6082613c60565b60008060408385031215613cea57600080fd5b50508035926020909101359150565b60008060008060808587031215613d0f57600080fd5b84359350613d1f60208601613c60565b925060408501359150613d3460608601613c60565b905092959194509250565b600080600060608486031215613d5457600080fd5b833567ffffffffffffffff811115613d6b57600080fd5b613d7786828701613b1b565b935050613d8660208501613c60565b9150604084013590509250925092565b8015158114610b5957600080fd5b600060208284031215613db657600080fd5b8135610d6081613d96565b60008060408385031215613dd457600080fd5b613ddd83613c60565b946020939093013593505050565b60008060008060808587031215613e0157600080fd5b843567ffffffffffffffff80821115613e1957600080fd5b613e2588838901613b1b565b95506020870135915080821115613e3b57600080fd5b50613e4887828801613b1b565b935050613e5760408601613c60565b9396929550929360600135925050565b600080600060608486031215613e7c57600080fd5b8335925060208401359150613e9360408501613c60565b90509250925092565b600080600060608486031215613eb157600080fd5b833567ffffffffffffffff811115613ec857600080fd5b613ed486828701613b1b565b935050613ee360208501613c60565b9150613e9360408501613ba8565b60008060008060808587031215613f0757600080fd5b843567ffffffffffffffff811115613f1e57600080fd5b613f2a87828801613b1b565b945050613d1f60208601613c60565b600080600080600060a08688031215613f5157600080fd5b8535945060208601359350613f6860408701613c60565b925060608601359150613f7d60808701613c60565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c7157610c71613f89565b634e487b7160e01b600052602160045260246000fd5b60005b83811015613fe3578181015183820152602001613fcb565b50506000910152565b60008251613ffe818460208701613fc8565b9190910192915050565b60208082526002908201526109e960f31b604082015260600190565b602080825260029082015261555360f01b604082015260600190565b602080825260029082015261115360f21b604082015260600190565b602080825260029082015261155560f21b604082015260600190565b8082028115828204841417610c7157610c71613f89565b6000826140ac57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c7157610c71613f89565b600081518084526140dc816020860160208601613fc8565b601f01601f19169290920160200192915050565b60608152600260608201526118d160f21b608082015260a06020820152600061411c60a08301856140c4565b905060018060a01b03831660408301529392505050565b60006020828403121561414557600080fd5b5051919050565b602080825260029082015261125560f21b604082015260600190565b60006020828403121561417a57600080fd5b8151610d6081613d96565b602080825260029082015261139560f21b604082015260600190565b600381106141bf57634e487b7160e01b600052602160045260246000fd5b9052565b6040815260006141d660408301856140c4565b9050610d6060208301846141a1565b60608152600260608201526139a160f11b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261191160f21b608082015260a06020820152600061411c60a08301856140c4565b60408152600061425060408301856140c4565b905060018060a01b03831660208301529392505050565b60608152600260608201526131a160f11b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261724160f01b608082015260a06020820152600061411c60a08301856140c4565b602081526000610d6060208301846140c4565b606081526002606082015261322160f11b608082015260a06020820152600061411c60a08301856140c4565b60208082526002908201526124a360f11b604082015260600190565b60608152600061432d60608301866140c4565b6001600160a01b039490941660208301525060400152919050565b6060815260026060820152611a5160f21b608082015260a06020820152600061411c60a08301856140c4565b606081526003606082015262734e5360e81b608082015260a06020820152600061411c60a08301856140c4565b6060815260026060820152611d5560f21b608082015260a06020820152600061411c60a08301856140c4565b6060815260026060820152611c9560f21b608082015260a06020820152600061411c60a08301856140c4565b60808152600061440c60808301876140c4565b828103602084015261441e81876140c4565b6001600160a01b0395909516604084015250506060015292915050565b6060815260026060820152611b5560f21b608082015260a06020820152600061411c60a08301856140c4565b606081526002606082015261614160f01b608082015260a06020820152600061411c60a08301856140c4565b6000600182016144a5576144a5613f89565b5060010190565b6060815260006144bf60608301866140c4565b6001600160a01b03851660208401529050613c5860408301846141a1565b606081526002606082015261073560f41b608082015260a06020820152600061411c60a08301856140c4565b60808152600061451c60808301876140c4565b6001600160a01b0395861660208401526040830194909452509216606090920191909152919050565b6060815260026060820152611d1560f21b608082015260a06020820152600061411c60a08301856140c456fe43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055a264697066735822122052e91f409411f6121372a07745a074bce8287231923db513fb3a3cdd1ab2450e64736f6c63430008130033",
  "deployedSourceMap": "307:24200:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:53:1;2228:1;2231:9;2241:10;2199:20;:53::i;:::-;307:24200:0;;;;;2786:18:2;;;;;;;;;;-1:-1:-1;2786:18:2;;;;;;;;;;;179:14:8;;172:22;154:41;;142:2;127:18;2786::2;;;;;;;;11865:220:0;;;;;;;;;;-1:-1:-1;11865:220:0;;;;;:::i;:::-;;:::i;12472:80::-;;;;;;;;;;;;;:::i;2993:58:2:-;;;;;;;;;;-1:-1:-1;2993:58:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1973:25:8;;;1961:2;1946:18;2993:58:2;1827:177:8;10390:162:2;;;;;;;;;;-1:-1:-1;10390:162:2;;;;;:::i;:::-;;:::i;14027:180:0:-;;;;;;;;;;-1:-1:-1;14027:180:0;;;;;:::i;:::-;;:::i;8288:118::-;;;;;;;;;;-1:-1:-1;8288:118:0;;;;;:::i;:::-;;:::i;15593:308::-;;;;;;;;;;-1:-1:-1;15593:308:0;;;;;:::i;:::-;;:::i;12726:160::-;;;;;;;;;;-1:-1:-1;12726:160:0;;;;;:::i;:::-;;:::i;8578:153::-;;;;;;;;;;-1:-1:-1;8578:153:0;;;;;:::i;:::-;;:::i;9471:176::-;;;;;;;;;;-1:-1:-1;9471:176:0;;;;;:::i;:::-;;:::i;2870:624:1:-;;;;;;;;;;-1:-1:-1;2870:624:1;;;;;:::i;:::-;;:::i;5743:699:0:-;;;;;;;;;;-1:-1:-1;5743:699:0;;;;;:::i;:::-;;:::i;9751:137::-;;;;;;;;;;-1:-1:-1;9751:137:0;;;;;:::i;:::-;;:::i;7417:175::-;;;;;;;;;;-1:-1:-1;7417:175:0;;;;;:::i;:::-;;:::i;3656:130:1:-;;;;;;;;;;-1:-1:-1;3656:130:1;;;;;:::i;:::-;-1:-1:-1;;;;;3751:28:1;3725:7;3751:28;;;:14;:28;;;;;;;3656:130;13256:127:0;;;;;;;;;;-1:-1:-1;13256:127:0;;;;;:::i;:::-;13320:7;13346:24;;;:14;:24;;;;;:30;;;;13256:127;675:41:1;;;;;;;;;;-1:-1:-1;675:41:1;;;;;:::i;:::-;;;;;;;;;;;;;;13001:134:0;;;;;;;;;;-1:-1:-1;13001:134:0;;;;;:::i;:::-;13065:7;13091:24;;;:14;:24;;;;;:37;-1:-1:-1;;;;;13091:37:0;;13001:134;;;;-1:-1:-1;;;;;4110:32:8;;;4092:51;;4080:2;4065:18;13001:134:0;3946:203:8;7943:200:0;;;;;;;;;;-1:-1:-1;7943:200:0;;;;;:::i;:::-;;:::i;11466:119:2:-;;;;;;;;;;-1:-1:-1;11466:119:2;;;;;:::i;:::-;11528:7;11554:18;;;:11;:18;;;;;:24;;;;11466:119;12205:185:0;;;;;;;;;;-1:-1:-1;12205:185:0;;;;;:::i;:::-;;:::i;6982:152::-;;;;;;;;;;-1:-1:-1;6982:152:0;;;;;:::i;:::-;;:::i;3980:163:1:-;;;;;;;;;;-1:-1:-1;3980:163:1;;;;;:::i;:::-;;:::i;6636:148:0:-;;;;;;;;;;-1:-1:-1;6636:148:0;;;;;:::i;:::-;;:::i;14343:114::-;;;;;;;;;;-1:-1:-1;14343:114:0;;;;;:::i;:::-;14405:4;14426:24;;;:14;:24;;;;;;;;;14343:114;2523:118:1;;;;;;;;;;-1:-1:-1;2523:118:1;;;;;:::i;:::-;;:::i;11746:125:2:-;;;;;;;;;;-1:-1:-1;11746:125:2;;;;;:::i;:::-;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;10834:218:0;;;;;;;;;;-1:-1:-1;10834:218:0;;;;;:::i;:::-;;:::i;14671:181::-;;;;;;;;;;-1:-1:-1;14671:181:0;;;;;:::i;:::-;;:::i;11103:85:2:-;;;;;;;;;;-1:-1:-1;11150:7:2;11176:5;11103:85;;8973:245:0;;;;;;;;;;-1:-1:-1;8973:245:0;;;;;:::i;:::-;;:::i;10893:169:2:-;;;;;;;;;;-1:-1:-1;10893:169:2;;;;;:::i;:::-;;:::i;13767:122:0:-;;;;;;;;;;-1:-1:-1;13767:122:0;;;;;:::i;:::-;;:::i;3162:48:2:-;;;;;;;;;;-1:-1:-1;3162:48:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3162:48:2;;;;;;;;6471:25:8;;;-1:-1:-1;;;;;6532:32:8;;;6527:2;6512:18;;6505:60;6581:18;;;6574:34;6459:2;6444:18;3162:48:2;6269:345:8;3308:47:2;;;;;;;;;;-1:-1:-1;3308:47:2;;;;;:::i;:::-;;;;;;;;;;;;;;11336:318:0;;;;;;;;;;-1:-1:-1;11336:318:0;;;;;:::i;:::-;;:::i;15068:298::-;;;;;;;;;;-1:-1:-1;15068:298:0;;;;;:::i;:::-;;:::i;10255:208::-;;;;;;;;;;-1:-1:-1;10255:208:0;;;;;:::i;:::-;;:::i;7260:2340:2:-;;;;;;:::i;:::-;;:::i;12027:125::-;;;;;;;;;;-1:-1:-1;12027:125:2;;;;;:::i;:::-;;:::i;13503:128:0:-;;;;;;;;;;-1:-1:-1;13503:128:0;;;;;:::i;:::-;13570:7;13596:28;;;:18;:28;;;;;;;13503:128;11267::2;;;;;;;;;;-1:-1:-1;11267:128:2;;;;;:::i;:::-;11335:7;11361:27;;;:20;:27;;;;;;;11267:128;10073:211;;;;;;;;;;-1:-1:-1;10073:211:2;;;;;:::i;:::-;;:::i;12372:191::-;;;;;;;;;;-1:-1:-1;12372:191:2;;;;;:::i;:::-;;:::i;23848:453:0:-;23957:53;23984:12;23998:5;24005:4;23957:26;:53::i;:::-;24052:21;;-1:-1:-1;;;8515:19:8;;24052:13:0;;8559:1:8;8550:11;24052:21:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;24052:35:0;;;;;;;;;;;:40;:70;;;;-1:-1:-1;;;;;;24096:26:0;;;;24052:70;24048:140;;;24176:1;24138:26;:34;;;;-1:-1:-1;;;8515:19:8;;8559:1;8550:11;;8313:254;24138:34:0;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;24048:140:0;24236:5;24197:13;:21;;;;-1:-1:-1;;;8515:19:8;;8559:1;8550:11;;8313:254;24197:21:0;;;;;;;;;;;;;:35;24219:12;-1:-1:-1;;;;;24197:35:0;-1:-1:-1;;;;;24197:35:0;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;24256:38:0;;;-1:-1:-1;;;;;9092:15:8;;;9074:34;;9139:2;9124:18;;9117:34;;;9187:15;;9167:18;;;9160:43;;;;24256:38:0;;9024:2:8;9009:18;24256:38:0;;;;;;;;23848:453;;;:::o;11865:220::-;11961:10;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;12018:8:::1;11991:35;;;;;;;;:::i;:::-;:11;12003:10;11991:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:35;::::0;::::1;;;;;;:::i;:::-;::::0;11983:50:::1;;;::::0;-1:-1:-1;;;11983:50:0;;10097:2:8;11983:50:0::1;::::0;::::1;10079:21:8::0;10136:1;10116:18;;;10109:29;-1:-1:-1;;;10154:18:8;;;10147:32;10196:18;;11983:50:0::1;;;;;;;;;12043:35;12058:10;12069:8;12043:14;:35::i;:::-;11865:220:::0;;;:::o;12472:80::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;12533:12:::1;:10;:12::i;:::-;12472:80:::0;:::o;10390:162:2:-;6551:18;;;;:11;:18;;;;;:24;;;10443:5;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;10465:5:::1;6119:19;6132:5;11803:4:::0;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;10490:20:::2;::::0;;;:13:::2;:20;::::0;;;;;::::2;;10482:35;;;::::0;-1:-1:-1;;;10482:35:2;;11087:2:8;10482:35:2::2;::::0;::::2;11069:21:8::0;11126:1;11106:18;;;11099:29;-1:-1:-1;;;11144:18:8;;;11137:32;11186:18;;10482:35:2::2;10885:325:8::0;10482:35:2::2;10527:18;10539:5;10527:11;:18::i;14027:180:0:-:0;14092:4;14115:26;14142:8;14115:36;;;;;;:::i;:::-;;;;;;;;;;;;;;14155:1;14115:41;:85;;;;;14160:13;14174:8;14160:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:35;;;;;;;;;:40;14115:85;14108:92;14027:180;-1:-1:-1;;14027:180:0:o;8288:118::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8372:27:::1;8390:8;8372:17;:27::i;:::-;8288:118:::0;;:::o;15593:308::-;15679:4;15701:22;15715:7;15701:13;:22::i;:::-;:46;;;-1:-1:-1;15727:20:0;;;;15701:46;15695:70;;-1:-1:-1;15758:5:0;15751:12;;15695:70;15813:25;15781:7;15789:10;15781:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15781:28:0;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;:113;;;-1:-1:-1;15869:25:0;15842:11;15854:10;15842:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:52;;;;;;;;:::i;:::-;;15781:113;15774:120;15593:308;-1:-1:-1;;;15593:308:0:o;12726:160::-;12816:7;12842:13;12856:8;12842:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12842:37:0;;;;;;;;;;;;-1:-1:-1;12726:160:0;;;;:::o;8578:153::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;8693:31:0::2;8705:8;8714:9;8693:11;:31::i;9471:176::-:0;3934:126;;;;;;;;;;;;;-1:-1:-1;;;3934:126:0;;;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;9584:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;9604:36:::2;9621:8;9630:9;9604:16;:36::i;:::-;4051:1:::1;9471:176:::0;;;:::o;2870:624:1:-;5930:25:2;5944:10;5930:13;:25::i;:::-;5922:40;;;;-1:-1:-1;;;5922:40:2;;11747:2:8;5922:40:2;;;11729:21:8;11786:1;11766:18;;;11759:29;-1:-1:-1;;;11804:18:8;;;11797:32;11846:18;;5922:40:2;11545:325:8;5922:40:2;2956:26:1::1;2969:12;2956;:26::i;:::-;2948:41;;;;-1:-1:-1::0;;;2948:41:1::1;;;;;;;:::i;:::-;3028:10;2999:13;3015:24:::0;;;:12:::1;:24;::::0;;;;;;;;-1:-1:-1;;;;;3058:30:1;::::1;::::0;;:16:::1;:30:::0;;;;;:37;;;;;;;;;;::::1;;3057:38;3049:53;;;::::0;-1:-1:-1;;;3049:53:1;;12407:2:8;3049:53:1::1;::::0;::::1;12389:21:8::0;12446:1;12426:18;;;12419:29;-1:-1:-1;;;12464:18:8;;;12457:32;12506:18;;3049:53:1::1;12205:325:8::0;3049:53:1::1;-1:-1:-1::0;;;;;3112:30:1;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;3112:44:1::1;3152:4;3112:44;::::0;;3263:5;;3239:30;;:23:::1;:30:::0;;;;;;3211:18;;;:11:::1;:18:::0;;;;;:25;3188:20;;;:6:::1;:20:::0;;;;;;3112:30;;3239;;3188:48:::1;::::0;3211:25;3188:48:::1;:::i;:::-;:81;;;;:::i;:::-;3166:103;;3287:11;3302:1;3287:16:::0;3279:29:::1;;;::::0;-1:-1:-1;;;3279:29:1;;13132:2:8;3279:29:1::1;::::0;::::1;13114:21:8::0;-1:-1:-1;13151:18:8;;;13144:29;13190:18;;3279:29:1::1;12930:284:8::0;3279:29:1::1;-1:-1:-1::0;;;;;3318:28:1;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;3350:11;;3318:28;:43:::1;::::0;3350:11;;3318:43:::1;:::i;:::-;::::0;;;-1:-1:-1;3371:51:1::1;::::0;-1:-1:-1;3386:12:1;3399:11;3411:10:::1;3371:14;:51::i;:::-;3437:50;::::0;;-1:-1:-1;;;;;9092:15:8;;9074:34;;9139:2;9124:18;;9117:34;;;3476:10:1::1;9167:18:8::0;;;9160:43;;;;3437:50:1::1;::::0;9024:2:8;9009:18;3437:50:1::1;8834:375:8::0;5743:699:0;6551:18:2;;;;:11;:18;;;;;:24;;;5819:5:0;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;14405:4:0;14426:24;;;:14;:24;;;;;;5847:8;;14426:24;;4772:33:::1;;;::::0;::::1;;6303:6:2::2;::::0;;::::2;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::2;;;;;;;:::i;:::-;5888:28:0::3;5901:5;5907:8;5888:12;:28::i;:::-;5880:44;;;::::0;-1:-1:-1;;;5880:44:0;;13554:2:8;5880:44:0::3;::::0;::::3;13536:21:8::0;13593:1;13573:18;;;13566:29;-1:-1:-1;;;13611:18:8;;;13604:33;13654:18;;5880:44:0::3;13352:326:8::0;5880:44:0::3;5942:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;;::::3;;:44;5934:59;;;::::0;-1:-1:-1;;;5934:59:0;;12407:2:8;5934:59:0::3;::::0;::::3;12389:21:8::0;12446:1;12426:18;;;12419:29;-1:-1:-1;;;12464:18:8;;;12457:32;12506:18;;5934:59:0::3;12205:325:8::0;5934:59:0::3;6003:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;:42;;-1:-1:-1;;6003:42:0::3;6041:4;6003:42:::0;;::::3;::::0;;;6164:5;;6140:30;;:23:::3;:30:::0;;;;;;6112:18;;;:11:::3;:18:::0;;;;;:25;6079:24;;;:14:::3;:24:::0;;;;;;:30:::3;::::0;6140;;6079:58:::3;::::0;::::3;:::i;:::-;:91;;;;:::i;:::-;6055:115;;6188:13;6205:1;6188:18:::0;6180:34:::3;;;::::0;-1:-1:-1;;;6180:34:0;;13885:2:8;6180:34:0::3;::::0;::::3;13867:21:8::0;13924:1;13904:18;;;13897:29;-1:-1:-1;;;13942:18:8;;;13935:33;13985:18;;6180:34:0::3;13683:326:8::0;6180:34:0::3;6224:28;::::0;;;:18:::3;:28;::::0;;;;:45;;6256:13;;6224:28;:45:::3;::::0;6256:13;;6224:45:::3;:::i;:::-;::::0;;;-1:-1:-1;;6294:24:0::3;::::0;;;:14:::3;:24;::::0;;;;:37;6279:78:::3;::::0;-1:-1:-1;;;;;6294:37:0::3;6332:13:::0;6346:10:::3;6279:14;:78::i;:::-;6389:34;::::0;;::::3;::::0;::::3;14188:25:8::0;;;14229:18;;;14222:34;;;-1:-1:-1;;;;;;;;;;;6372:63:0;14161:18:8;;6389:34:0::3;::::0;;-1:-1:-1;;6389:34:0;;::::3;::::0;;;;;;;6372:63:::3;::::0;6424:10:::3;::::0;6372:63:::3;:::i;:::-;;;;;;;;5870:572;6606:1:2::1;5743:699:0::0;;;:::o;9751:137::-;3934:126;;;;;;;;;;;;;-1:-1:-1;;;3934:126:0;;;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;9840:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;9860:21:::2;9872:8;9860:11;:21::i;7417:175::-:0;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;7543::::1;7556:6;7563:12;7576:5;7582:2;7543:12;:42::i;:::-;7417:175:::0;;;;;:::o;7943:200::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8071:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;8091:43:::2;8106:8;8115:12;8128:5;8091:14;:43::i;12205:185::-:0;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;12301:20:::1;::::0;:32;::::1;;:20;::::0;;::::1;:32;;::::0;12293:47:::1;;;::::0;-1:-1:-1;;;12293:47:0;;10097:2:8;12293:47:0::1;::::0;::::1;10079:21:8::0;10136:1;10116:18;;;10109:29;-1:-1:-1;;;10154:18:8;;;10147:32;10196:18;;12293:47:0::1;9895:325:8::0;12293:47:0::1;12350:33;12374:8;12350:23;:33::i;6982:152::-:0;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;7090:37:0::2;7114:12;7090:23;:37::i;3980:163:1:-:0;-1:-1:-1;;;;;4065:33:1;;4044:4;4065:33;;;:19;:33;;;;;;;;:41;;:33;:41;;:71;;-1:-1:-1;;;;;;;4110:26:1;;;3980:163::o;6636:148:0:-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;6742:35:0::2;6764:12;6742:21;:35::i;2523:118:1:-:0;2601:33;2615:12;2628:5;2601:13;:33::i;10834:218:0:-;10967:12;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;;;;10991:54:::1;11002:12;11015:10;11026:12;11039:5;10991:10;:54::i;14671:181::-:0;14753:4;14776:11;14788:8;14776:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14776:30:0;;;;;;;;;;;;;:38;;:30;:38;;:69;;;14818:27;;;;;;;;;;;;;;-1:-1:-1;;;14818:27:0;;;14837:7;14818:13;:27::i;8973:245::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;9082:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;9110:24:::2;9124:9;9110:13;:24::i;:::-;:48;;;-1:-1:-1::0;9138:20:0::2;::::0;::::2;;9110:48;9102:66;;;::::0;-1:-1:-1;;;9102:66:0;;15287:2:8;9102:66:0::2;::::0;::::2;15269:21:8::0;15326:1;15306:18;;;15299:29;-1:-1:-1;;;15344:18:8;;;15337:35;15389:18;;9102:66:0::2;15085:328:8::0;9102:66:0::2;9178:33;9192:8;9201:9;9178:13;:33::i;10893:169:2:-:0;6551:18;;;;:11;:18;;;;;:24;;;10975:11;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;11003:11:::1;6119:19;6132:5;11803:4:::0;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;11026:29:::2;11033:11;11045:6;11052:2;11026:6;:29::i;13767:122:0:-:0;13831:4;13854:10;13865:8;13854:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13767:122;-1:-1:-1;;13767:122:0:o;11336:318::-;11445:10;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;11475:22:::1;11489:7;11475:13;:22::i;:::-;:46;;;-1:-1:-1::0;11501:20:0::1;::::0;::::1;;11475:46;11467:64;;;::::0;-1:-1:-1;;;11467:64:0;;15287:2:8;11467:64:0::1;::::0;::::1;15269:21:8::0;15326:1;15306:18;;;15299:29;-1:-1:-1;;;15344:18:8;;;15337:35;15389:18;;11467:64:0::1;15085:328:8::0;11467:64:0::1;11581:8;11549:40;;;;;;;;:::i;:::-;:7;11557:10;11549:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;11549:28:0;::::1;;::::0;;;;;;;;::::1;;:40;::::0;::::1;;;;;;:::i;:::-;::::0;11541:56:::1;;;::::0;-1:-1:-1;;;11541:56:0;;15620:2:8;11541:56:0::1;::::0;::::1;15602:21:8::0;15659:1;15639:18;;;15632:29;-1:-1:-1;;;15677:18:8;;;15670:33;15720:18;;11541:56:0::1;15418:326:8::0;11541:56:0::1;11607:39;11618:10;11629:7;11637:8;11607:10;:39::i;15068:298::-:0;15150:4;15172:22;15186:7;15172:13;:22::i;:::-;:46;;;-1:-1:-1;15198:20:0;;;;15172:46;15166:70;;-1:-1:-1;15229:5:0;15222:12;;15166:70;15284:22;15252:7;15260:10;15252:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15252:28:0;;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;;:107;;;-1:-1:-1;15337:22:0;15310:11;15322:10;15310:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:49;;;;;;;;:::i;:::-;;;;15068:298;-1:-1:-1;;;15068:298:0:o;10255:208::-;10382:8;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;;;;10402:54:::1;10425:8;10434:12;10447:5;10453:2;10402:22;:54::i;7260:2340:2:-:0;7341:5;6119:19;6132:5;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;7366:20:::1;::::0;;;:13:::1;:20;::::0;;;;;::::1;;7358:35;;;::::0;-1:-1:-1;;;7358:35:2;;11087:2:8;7358:35:2::1;::::0;::::1;11069:21:8::0;11126:1;11106:18;;;11099:29;-1:-1:-1;;;11144:18:8;;;11137:32;11186:18;;7358:35:2::1;10885:325:8::0;7358:35:2::1;7411:18;::::0;;;:11:::1;:18;::::0;;;;:25;:30;;7403:45:::1;;;::::0;-1:-1:-1;;;7403:45:2;;15951:2:8;7403:45:2::1;::::0;::::1;15933:21:8::0;15990:1;15970:18;;;15963:29;-1:-1:-1;;;16008:18:8;;;16001:32;16050:18;;7403:45:2::1;15749:325:8::0;7403:45:2::1;7466:18;::::0;;;:11:::1;:18;::::0;;;;:25;:35;-1:-1:-1;7466:35:2::1;7458:50;;;::::0;-1:-1:-1;;;7458:50:2;;15951:2:8;7458:50:2::1;::::0;::::1;15933:21:8::0;15990:1;15970:18;;;15963:29;-1:-1:-1;;;16008:18:8;;;16001:32;16050:18;;7458:50:2::1;15749:325:8::0;7458:50:2::1;7527:18;::::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;7527:21:2::1;7552:10;7527:35;::::0;7526:80:::1;;-1:-1:-1::0;7601:3:2::1;7568:18:::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;7568:21:2::1;:37:::0;7526:80:::1;7518:95;;;::::0;-1:-1:-1;;;7518:95:2;;16281:2:8;7518:95:2::1;::::0;::::1;16263:21:8::0;16320:1;16300:18;;;16293:29;-1:-1:-1;;;16338:18:8;;;16331:32;16380:18;;7518:95:2::1;16079:325:8::0;7518:95:2::1;7623:18;7635:5;7623:11;:18::i;:::-;7651;7681::::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;7672:33:::1;::::0;:6;:33:::1;:::i;:::-;7651:54;;7716:23;7741:22:::0;7765:17:::1;7786:55;7822:10;7833:2;7836:4;7786:35;:55::i;:::-;7715:126:::0;;-1:-1:-1;7715:126:2;-1:-1:-1;7715:126:2;-1:-1:-1;7851:27:2::1;7715:126:::0;;7851:27:::1;:::i;:::-;7983:3;7940:18:::0;;;:11:::1;:18;::::0;;;;:31:::1;;::::0;7851:27;;-1:-1:-1;;;;;;7940:31:2::1;7936:986;;8024:10;8011:9;:23;;8003:38;;;::::0;-1:-1:-1;;;8003:38:2;;16611:2:8;8003:38:2::1;::::0;::::1;16593:21:8::0;16650:1;16630:18;;;16623:29;-1:-1:-1;;;16668:18:8;;;16661:32;16710:18;;8003:38:2::1;16409:325:8::0;8003:38:2::1;8132:83;::::0;8106:21:::1;::::0;8140:42:::1;::::0;8195:15;;8106:21;8132:83;8106:21;8132:83;8195:15;8140:42;8132:83:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;8269:20:2::1;8302:18:::0;;;:11:::1;:18;::::0;;;;;:24:::1;;::::0;8294:64;;8105:110;;-1:-1:-1;8269:20:2;;-1:-1:-1;;;;;8302:24:2;;::::1;::::0;8339:14;;8269:20;8294:64;8269:20;8294:64;8339:14;8302:24;8294:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8268:90;;;8380:15;:35;;;;;8399:16;8380:35;8372:50;;;::::0;-1:-1:-1;;;8372:50:2;;17151:2:8;8372:50:2::1;::::0;::::1;17133:21:8::0;17190:1;17170:18;;;17163:29;-1:-1:-1;;;17208:18:8;;;17201:32;17250:18;;8372:50:2::1;16949:325:8::0;8372:50:2::1;7989:444;;7936:986;;;8462:11;8482:18:::0;;;:11:::1;:18;::::0;;;;;;:31:::1;;::::0;8536:41;;-1:-1:-1;;;8536:41:2;;8552:10:::1;8536:41;::::0;::::1;17491:34:8::0;8571:4:2::1;17541:18:8::0;;;17534:43;-1:-1:-1;;;;;8482:31:2;;::::1;::::0;8581:10;;8482:31;;8536:15:::1;::::0;17426:18:8;;8536:41:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;8528:69;;;;-1:-1:-1::0;;;8528:69:2::1;;;;;;;:::i;:::-;8669:91;::::0;-1:-1:-1;;;8669:91:2;;8688:10:::1;8669:91;::::0;::::1;18347:34:8::0;8700:42:2::1;18397:18:8::0;;;18390:43;18449:18;;;18442:34;;;-1:-1:-1;;;;;8669:18:2;::::1;::::0;::::1;::::0;18282::8;;8669:91:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8661:106;;;;-1:-1:-1::0;;;8661:106:2::1;;;;;;;:::i;:::-;8839:18;::::0;;;:11:::1;:18;::::0;;;;;;;:24:::1;::::0;;::::1;::::0;8864:11:::1;:18:::0;;;;;:31;;::::1;::::0;8820:91:::1;::::0;-1:-1:-1;;;;;8839:24:2;;::::1;::::0;8864:31:::1;8896:14:::0;8820:18:::1;:91::i;:::-;8448:474;7936:986;8931:32;8938:5;8945:6;8952:10;8931:6;:32::i;:::-;8977:18;::::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;9013:4:::1;-1:-1:-1::0;;;;;8977:24:2;;::::1;:41:::0;8973:195:::1;;9117:30;9141:5:::0;;9117:30;;:23:::1;:30;::::0;;;;:40;;9151:6;;9117:30;:40:::1;::::0;9151:6;;9117:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;8973:195:2::1;9215:18;::::0;;;:11:::1;:18;::::0;;;;;;;;:31:::1;::::0;::::1;::::0;9247:24:::1;::::0;;::::1;::::0;9182:90;;19326:25:8;;;19367:18;;;19360:34;;;9204:10:2::1;19448:18:8::0;;;19441:43;-1:-1:-1;;;;;9215:31:2;;::::1;19515:2:8::0;19500:18;;19493:43;19567:3;19552:19;;19545:35;9182:90:2;;::::1;::::0;;;;19313:3:8;9182:90:2;;::::1;9326:18;::::0;;;:11:::1;:18;::::0;;;;:25;:35;::::1;9322:272;;9432:38;9445:18:::0;;;:11:::1;:18;::::0;;;;;;;:24:::1;;::::0;-1:-1:-1;;;;;9445:24:2::1;9432:38:::0;;:12:::1;:38:::0;;;;;;9471:18;;;:11:::1;:18:::0;;;;;;:25;9420:163:::1;::::0;9432:38;9471:32:::1;::::0;9497:6;;9471:32:::1;:::i;:::-;9504:18;::::0;;;:11:::1;:18;::::0;;;;:31:::1;::::0;::::1;::::0;9536:24:::1;::::0;::::1;::::0;9561:21:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9504:31:2;;::::1;::::0;9536:24;9561:21:::1;9420:11;:163::i;:::-;7348:2252;;;;7260:2340:::0;;;:::o;12027:125::-;-1:-1:-1;;;;;12123:21:2;;12087:4;12123:21;;;:12;:21;;;;;;12110:35;;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;10073:211;6551:18;;;;:11;:18;;;;;:24;;;10191:5;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;10213:5:::1;6119:19;6132:5;11803:4:::0;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;10230:47:::2;10242:5;10248:6;10255:12;10268:5;10274:2;10230:11;:47::i;12372:191::-:0;12446:4;12469:18;;;:11;:18;;;;;:32;;;:43;-1:-1:-1;12469:43:2;;;:87;;-1:-1:-1;;11335:7:2;11361:27;;;:20;:27;;;;;;;-1:-1:-1;12516:40:2;12372:191::o;7247:244:1:-;-1:-1:-1;;;;;7355:20:1;;;;;;:6;:20;;;;;:29;;7379:5;;7355:20;:29;;7379:5;;7355:29;:::i;:::-;;;;-1:-1:-1;;;;;;;7394:28:1;;;;;;:14;:28;;;;;:37;;7426:5;;7394:28;:37;;7426:5;;7394:37;:::i;22275:220:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;22405:8:0::1;22379:11;22391:10;22379:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:34;;-1:-1:-1;;22379:34:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;22456:10:0::1;22467:8;22445:31;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22445:31:0;;::::1;::::0;;;;;;;22428:60:::1;::::0;22477:10:::1;::::0;22428:60:::1;:::i;:::-;;;;;;;;22275:220:::0;;:::o;24383:121::-;24433:18;:16;:18::i;:::-;24466:31;;;21035:2:8;21017:21;;;21074:1;21054:18;;;21047:29;-1:-1:-1;;;21107:3:8;21092:19;;21085:33;21156:3;21149:4;21134:20;;21127:33;;;-1:-1:-1;21176:19:8;;;21169:30;24486:10:0;21251:18:8;;;21244:60;24466:31:0;;-1:-1:-1;;;;;;;;;;;24466:31:0;;;;21231:3:8;24466:31:0;;;24383:121::o;12669:112:2:-;12729:5;6119:19;6132:5;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;-1:-1:-1;12769:5:2::1;12746:20:::0;;;:13:::1;:20;::::0;;;;:28;;-1:-1:-1;;12746:28:2::1;::::0;;12669:112::o;17140:357:0:-;14405:4;14426:24;;;:14;:24;;;;;;17215:8;;14426:24;;4772:33;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;17275:5:0::2;17248:24:::0;;;:14:::2;:24;::::0;;;;;;;:32;;-1:-1:-1;;17248:32:0::2;::::0;;17397:18:::2;:28:::0;;;;;;17333:21;;-1:-1:-1;;;8515:19:8;;17333:13:0::2;8559:1:8::0;8550:11;;17333:21:0;;;;;;;;;;;17355:24;;;:14:::2;:24:::0;;;;;:37;-1:-1:-1;;;;;17355:37:0::2;17333:60:::0;;;;;;;:92;;17397:28;;17333:60;;:92:::2;::::0;17397:28;;17333:92:::2;:::i;:::-;::::0;;;-1:-1:-1;;17457:20:0::2;::::0;;::::2;::::0;::::2;1973:25:8::0;;;-1:-1:-1;;;;;;;;;;;17440:49:0;1946:18:8;17457:20:0::2;::::0;;-1:-1:-1;;17457:20:0;;::::2;::::0;;;;;;;17440:49:::2;::::0;17478:10:::2;::::0;17440:49:::2;:::i;17669:300::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;17774:20:0::1;17785:8;17774:10;:20::i;:::-;17773:21;17765:36;;;::::0;-1:-1:-1;;;17765:36:0;;22060:2:8;17765:36:0::1;::::0;::::1;22042:21:8::0;22099:1;22079:18;;;22072:29;-1:-1:-1;;;22117:18:8;;;22110:32;22159:18;;17765:36:0::1;21858:325:8::0;17765:36:0::1;17846:4;17811:11;17823:8;17811:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17811:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17811:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17860:10:0::1;::::0;:20:::1;::::0;17871:8;;17860:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17860:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17902:59:0;17919:30:::1;::::0;17930:8;;17939:9;;17919:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17919:30:0;;::::1;::::0;;;;;;;17902:59:::1;::::0;17950:10:::1;::::0;17902:59:::1;:::i;18732:273::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;18841:31:0::1;18853:8;18862:9;18841:11;:31::i;:::-;18833:40;;;::::0;::::1;;18918:5;18883:11;18895:8;18883:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;18883:32:0;::::1;;::::0;;;;;;;;;;:40;;-1:-1:-1;;18883:40:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18938:59:0;18955:30:::1;::::0;18966:8;;18883:32;;18955:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18955:30:0;;::::1;::::0;;;;;;;18938:59:::1;::::0;18986:10:::1;::::0;18938:59:::1;:::i;5174:810:1:-:0;-1:-1:-1;;;;;5274:20:1;;;;;;:6;:20;;;;;;:29;-1:-1:-1;5274:29:1;5266:44;;;;-1:-1:-1;;;5266:44:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5324:26:1;;5320:584;;5354:25;5369:5;5376:2;5354:14;:25::i;:::-;5320:584;;;5464:24;;-1:-1:-1;;;5464:24:1;;-1:-1:-1;;;;;23787:32:8;;;5464:24:1;;;23769:51:8;23836:18;;;23829:34;;;5429:12:1;;5464:13;;;;;;23742:18:8;;5464:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5456:39;;;;-1:-1:-1;;;5456:39:1;;24076:2:8;5456:39:1;;;24058:21:8;24115:1;24095:18;;;24088:29;-1:-1:-1;;;24133:18:8;;;24126:32;24175:18;;5456:39:1;23874:325:8;5456:39:1;-1:-1:-1;;;;;5513:14:1;;;:18;5509:385;;5555:43;;-1:-1:-1;;;5555:43:1;;-1:-1:-1;;;;;23787:32:8;;;5555:43:1;;;23769:51:8;23836:18;;;23829:34;;;5555:22:1;;;;;23742:18:8;;5555:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5551:241;;5742:24;;-1:-1:-1;;;5742:24:1;;-1:-1:-1;;;;;23787:32:8;;;5742:24:1;;;23769:51:8;23836:18;;;23829:34;;;5742:14:1;;;;;23742:18:8;;5742:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5734:39;;;;-1:-1:-1;;;5734:39:1;;;;;;;:::i;:::-;5509:385;;;5848:24;;-1:-1:-1;;;5848:24:1;;-1:-1:-1;;;;;23787:32:8;;;5848:24:1;;;23769:51:8;23836:18;;;23829:34;;;5848:14:1;;;;;23742:18:8;;5848:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5840:39;;;;-1:-1:-1;;;5840:39:1;;;;;;;:::i;:::-;5395:509;5320:584;5917:6;;;;5913:56;;;5926:41;5948:12;5961:5;5926:21;:41::i;19109:348:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;19194:20:0::1;19205:8;19194:10;:20::i;:::-;19186:36;;;::::0;-1:-1:-1;;;19186:36:0;;24406:2:8;19186:36:0::1;::::0;::::1;24388:21:8::0;24445:1;24425:18;;;24418:29;-1:-1:-1;;;24463:18:8;;;24456:33;24506:18;;19186:36:0::1;24204:326:8::0;19186:36:0::1;19280:13;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;19280:13:0::1;::::0;;::::1;::::0;19240:26;;;;::::1;::::0;:54;;19232:69:::1;;;::::0;-1:-1:-1;;;19232:69:0;;24737:2:8;19232:69:0::1;::::0;::::1;24719:21:8::0;24776:1;24756:18;;;24749:29;-1:-1:-1;;;24794:18:8;;;24787:32;24836:18;;19232:69:0::1;24535:325:8::0;19232:69:0::1;19319:21;19331:8;19319:11;:21::i;:::-;19311:36;;;::::0;-1:-1:-1;;;19311:36:0;;25067:2:8;19311:36:0::1;::::0;::::1;25049:21:8::0;25106:1;25086:18;;;25079:29;-1:-1:-1;;;25124:18:8;;;25117:32;25166:18;;19311:36:0::1;24865:325:8::0;19311:36:0::1;19380:5;19357:10;19368:8;19357:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:28;;-1:-1:-1;;19357:28:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;19400:49:0;19417:20:::1;::::0;19428:8;;19417:20:::1;;:::i;:::-;;::::0;;-1:-1:-1;;19417:20:0;;::::1;::::0;;;;;;;19400:49:::1;::::0;19438:10:::1;::::0;19400:49:::1;:::i;:::-;;;;;;;;19109:348:::0;:::o;4426:380:1:-;4540:26;4553:12;4540;:26::i;:::-;4532:35;;;;;;4611:4;4590:27;;;;:12;:27;;;;;;4618:5;;4577:47;;4590:27;4577:12;:47::i;:::-;4685:4;4652:40;4664:27;;;:12;:27;;;;;;;;;4652:40;;:11;:40;;;;;:47;4634:86;;4645:54;;:6;:54;:::i;:::-;4708:4;4714:5;;4634:10;:86::i;:::-;4763:4;4742:27;;;;:12;:27;;;;;;4730:69;;4770:6;4777:12;4790:5;4796:2;4730:11;:69::i;16252:743:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;16369:21:0::1;16393:5:::0;16425:23:::1;::::0;:13:::1;::::0;:23:::1;::::0;16439:8;;16425:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;16425:37:0;::::1;;::::0;;;;;;;;16416:46;::::1;;16408:61;;;;-1:-1:-1::0;;;16408:61:0::1;;;;;;;:::i;:::-;16520:5;16479:13;16493:8;16479:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;16503:12;-1:-1:-1::0;;;;;16479:37:0::1;-1:-1:-1::0;;;;;16479:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16539:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;16553:8;;16539:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;16539:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;16585:26:0;::::1;::::0;::::1;16539:72;16535:144;;;16667:1;16627:26;16654:8;16627:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16535:144:0::1;16720:88;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;16720:88:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;16688:29:0;;;:14:::1;:29:::0;;;;;:120;;;;-1:-1:-1;;;;;;16688:120:0::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;16688:120:0;;::::1;::::0;16818:18:::1;:33:::0;;;;;:41;;;16869:14:::1;:29:::0;;;;;;:36;;-1:-1:-1;;16869:36:0::1;::::0;;::::1;::::0;;;16937:39;;-1:-1:-1;;;;;;;;;;;16920:68:0;16937:39:::1;::::0;16948:8;;16720:88;;;;16937:39:::1;;:::i;:::-;;::::0;;-1:-1:-1;;16937:39:0;;::::1;::::0;;;;;;;16920:68:::1;::::0;16977:10:::1;::::0;16920:68:::1;:::i;:::-;;;;;;;;16359:636;16252:743:::0;;;:::o;22615:183::-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;22695:20:0::1;:31:::0;;-1:-1:-1;;22695:31:0::1;::::0;::::1;;::::0;;::::1;::::0;;;22759:20:::1;::::0;;::::1;::::0;::::1;154:41:8::0;;;;-1:-1:-1;;;;;;;;;;;22741:50:0;127:18:8;22759:20:0::1;::::0;;-1:-1:-1;;22759:20:0;;::::1;::::0;;;;;;;22741:50:::1;::::0;22780:10:::1;::::0;22741:50:::1;:::i;22996:201::-:0;23079:43;23109:12;23079:29;:43::i;:::-;23154:24;;;-1:-1:-1;;;;;4110:32:8;;23154:24:0;;;4092:51:8;-1:-1:-1;;;;;;;;;;;23137:53:0;4065:18:8;23154:24:0;;;-1:-1:-1;;23154:24:0;;;;;;;;;;23137:53;;23179:10;;23137:53;:::i;23391:197::-;23472:41;23500:12;23472:27;:41::i;:::-;23545:24;;;-1:-1:-1;;;;;4110:32:8;;23545:24:0;;;4092:51:8;-1:-1:-1;;;;;;;;;;;23528:53:0;4065:18:8;23545:24:0;;;-1:-1:-1;;23545:24:0;;;;;;;;;;23528:53;;23570:10;;23528:53;:::i;6606:380:1:-;6693:26;6706:12;6693;:26::i;:::-;6685:40;;;;-1:-1:-1;;;6685:40:1;;;;;;;:::i;:::-;6786:41;;-1:-1:-1;;;6786:41:1;;6802:10;6786:41;;;17491:34:8;6821:4:1;17541:18:8;;;17534:43;6755:12:1;;6831:5;;-1:-1:-1;;;;;6786:15:1;;;;;17426:18:8;;6786:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;6778:64;;;;-1:-1:-1;;;6778:64:1;;;;;;;:::i;:::-;6860:51;;-1:-1:-1;;;6860:51:1;;6879:10;6860:51;;;18347:34:8;6898:4:1;18397:18:8;;;18390:43;18449:18;;;18442:34;;;-1:-1:-1;;;;;6860:18:1;;;;;18282::8;;6860:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6852:66;;;;-1:-1:-1;;;6852:66:1;;;;;;;:::i;:::-;6928:51;6949:12;6962:5;6968:10;6928:20;:51::i;20737:796:0:-;20874:10;4524:20;4535:8;4524:10;:20::i;:::-;4516:36;;;;-1:-1:-1;;;4516:36:0;;29059:2:8;4516:36:0;;;29041:21:8;29098:1;29078:18;;;29071:29;-1:-1:-1;;;29116:18:8;;;29109:33;29159:18;;4516:36:0;28857:326:8;4516:36:0;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;20926:13:0::2;20940:12;20926:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20926:41:0;::::2;;::::0;;;;;;;;20917:50;::::2;;20909:65;;;;-1:-1:-1::0;;;20909:65:0::2;;;;;;;:::i;:::-;21029:5;20984:13;20998:12;20984:27;;;;;;:::i;:::-;;;;;;;;;;;;;:41;21012:12;-1:-1:-1::0;;;;;20984:41:0::2;-1:-1:-1::0;;;;;20984:41:0::2;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;21048:26:0;::::2;::::0;21044:326:::2;;21094:13;21108:12;21094:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;21094:41:0;::::2;;::::0;;;;;;;;:46;;21090:131:::2;;21204:1;21160:26;21187:12;21160:40;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;21090:131:0::2;21238:13;21252:10;21238:25;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;21238:39:0;::::2;;::::0;;;;;;;;:44;;21234:126:::2;;21344:1;21302:26;21329:10;21302:38;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;21234:126:0::2;21422:5;21379:13;21393:10;21379:25;;;;;;:::i;:::-;;;;;;;;;;;;;:39;21405:12;-1:-1:-1::0;;;;;21379:39:0::2;-1:-1:-1::0;;;;;21379:39:0::2;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;21459:54:0::2;::::0;-1:-1:-1;;;;;;;;;;;21442:83:0;21459:54:::2;::::0;21470:12;;21483:10;;21494:12;;21507:5;;21459:54:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;21459:54:0;;::::2;::::0;;;;;;;21442:83:::2;::::0;21514:10:::2;::::0;21442:83:::2;:::i;18211:268::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;18317:25:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;18317:25:0::1;;::::0;18332:9:::1;18317;:25::i;:::-;18309:39;;;::::0;-1:-1:-1;;;18309:39:0;;30489:2:8;18309:39:0::1;::::0;::::1;30471:21:8::0;30528:1;30508:18;;;30501:29;-1:-1:-1;;;30546:18:8;;;30539:32;30588:18;;18309:39:0::1;30287:325:8::0;18309:39:0::1;18393:4;18358:11;18370:8;18358:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;18358:32:0;::::1;;::::0;;;;;;;;;;:39;;-1:-1:-1;;18358:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18412:59:0;18429:30:::1;::::0;18440:8;;18358:32;;18429:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18429:30:0;;::::1;::::0;;;;;;;18412:59:::1;::::0;18460:10:::1;::::0;18412:59:::1;:::i;13122:1124:2:-:0;13211:11;6119:19;6132:5;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;6303:6:::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;13279:24:::3;::::0;;;:11:::3;:24;::::0;;;;:31;13270:40;::::3;13262:55;;;::::0;-1:-1:-1;;;13262:55:2;;31362:2:8;13262:55:2::3;::::0;::::3;31344:21:8::0;31401:1;31381:18;;;31374:29;-1:-1:-1;;;31419:18:8;;;31412:32;31461:18;;13262:55:2::3;31160:325:8::0;13262:55:2::3;13331:17;13345:2;13331:13;:17::i;:::-;13327:522;;;-1:-1:-1::0;;;;;13509:16:2;::::3;13468:17;13509:16:::0;;;:12:::3;:16;::::0;;;;;;;;13497:29;;:11:::3;:29:::0;;;;;:36;13488:45:::3;::::0;:6;:45:::3;:::i;:::-;13468:65;;13547:30;13558:9;13568:2;13571:5;;13547:10;:30::i;:::-;-1:-1:-1::0;;;;;13649:16:2;::::3;;::::0;;;:12:::3;:16;::::0;;;;;13667:5;;13636:37:::3;::::0;13649:16;13636:12:::3;:37::i;:::-;13350:334;13327:522;;;13811:27;13822:6;13829:2;13832:5;;13811:10;:27::i;:::-;13898:32;13911:11;13924:5;;13898:12;:32::i;:::-;14027:12;14042:24:::0;;;:11:::3;:24;::::0;;;;:31;:40:::3;::::0;14076:6;;14042:40:::3;:::i;:::-;14027:55:::0;-1:-1:-1;14096:9:2;;14092:89:::3;;14133:24;::::0;;;:11:::3;:24;::::0;;;;:30:::3;;::::0;14164:5;;14117:53:::3;::::0;14128:4;;-1:-1:-1;;;;;14133:30:2;;::::3;::::0;14117:10:::3;:53::i;:::-;14195:44;::::0;;19326:25:8;;;19382:2;19367:18;;19360:34;;;-1:-1:-1;;;;;19468:15:8;;19448:18;;;19441:43;-1:-1:-1;19515:2:8;19500:18;;19493:43;;;19567:3;19552:19;;19545:35;14195:44:2;;::::3;::::0;;;;19313:3:8;14195:44:2;;::::3;-1:-1:-1::0;5680:30:2::2;5704:5:::0;;5680:30;;;:23:::2;:30;::::0;;;;;;;;:23;;5669:7:::2;::::0;5675:1:::2;5669:7;:::i;:::-;5645:32;;;;;;;;;;;:65;;;;5773:5;::::0;:7:::2;;;;;;;;;:::i;:::-;;;;;;13122:1124:::0;;;;:::o;21817:247:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;21965:8:0::1;21934:7;21942:10;21934:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21934:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21934:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;22016:10:0::1;22027:7;22035:8;22005:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22005:39:0;;::::1;::::0;;;;;;;21988:68:::1;::::0;22045:10:::1;::::0;21988:68:::1;:::i;19819:547::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;19973:13:0::1;19987:8;19973:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;19973:37:0;::::1;;::::0;;;;;;;;19964:46;::::1;;19956:61;;;;-1:-1:-1::0;;;19956:61:0::1;;;;;;;:::i;:::-;20027:37;20042:12;20055:5;20061:2;20027:14;:37::i;:::-;20115:5;20074:13;20088:8;20074:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;20098:12;-1:-1:-1::0;;;;;20074:37:0::1;-1:-1:-1::0;;;;;20074:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20134:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;20148:8;;20134:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;20134:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;20180:26:0;::::1;::::0;::::1;20134:72;20130:144;;;20262:1;20222:26;20249:8;20222:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20130:144:0::1;-1:-1:-1::0;;;;;;;;;;;20316:8:0::1;20325:12;20338:5;20344:2;20305:42;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;20305:42:0;;::::1;::::0;;;;;;;20288:71:::1;::::0;20348:10:::1;::::0;20288:71:::1;:::i;599:381:2:-:0;715:7;724;733;770:9;756:11;:23;748:32;;;;;;786:17;825:11;806:18;815:9;806:8;:18;:::i;:::-;:30;;;;:::i;:::-;786:50;-1:-1:-1;842:17:2;895:11;872:21;884:9;895:11;872:21;:::i;:::-;862:32;;:8;:32;:::i;:::-;:44;;;;:::i;:::-;842:64;-1:-1:-1;920:9:2;842:64;954:21;842:64;920:9;954:21;:::i;:::-;942:34;;:8;:34;:::i;:::-;912:65;;;;;;;;599:381;;;;;;;:::o;9204:481:1:-;9337:4;-1:-1:-1;;;;;9318:24:1;;;9314:356;;9426:33;9440:12;9453:5;9426:13;:33::i;9314:356::-;9601:51;;-1:-1:-1;;;9601:51:1;;9620:10;9601:51;;;18347:34:8;9639:4:1;18397:18:8;;;18390:43;18449:18;;;18442:34;;;9566:12:1;;-1:-1:-1;;;;;9601:18:1;;;;;18282::8;;9601:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9593:66;;;;-1:-1:-1;;;9593:66:1;;;;;;;:::i;14721:524:2:-;14846:5;6119:19;6132:5;11803:4;11859:5;;11361:27;;;:20;:27;;;;;;11826:38;;11746:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;6303:6:::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;14884:20:::2;::::0;;;:13:::2;:20;::::0;;;;;::::2;;:29;14876:38;;;::::0;::::2;;14942:18;::::0;;;:11:::2;:18;::::0;;;;:25;14932:35;::::2;;14924:50;;;::::0;-1:-1:-1;;;14924:50:2;;31362:2:8;14924:50:2::2;::::0;::::2;31344:21:8::0;31401:1;31381:18;;;31374:29;-1:-1:-1;;;31419:18:8;;;31412:32;31461:18;;14924:50:2::2;31160:325:8::0;14924:50:2::2;15005:135;::::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;;15005:135:2;;::::2;;::::0;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;-1:-1:-1;14984:18:2;;;:11:::2;:18:::0;;;;;:156;;;;;;::::2;::::0;;::::2;::::0;;;;::::2;-1:-1:-1::0;;;;;;14984:156:2;;::::2;;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;15150:13:::2;:20:::0;;;;;;:27;;-1:-1:-1;;15150:27:2::2;::::0;;::::2;::::0;;15192:46;::::2;::::0;::::2;::::0;14996:5;;15037:6;;15071:12;;15104:5;;15127:2;;34426:25:8;;;34482:2;34467:18;;34460:34;;;;-1:-1:-1;;;;;34568:15:8;;;34563:2;34548:18;;34541:43;34615:2;34600:18;;34593:34;34664:15;34658:3;34643:19;;34636:44;34413:3;34398:19;;34167:519;15192:46:2::2;;;;;;;;14721:524:::0;;;;;;:::o;8774:110:1:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;8836:6:1::1;:14:::0;;-1:-1:-1;;8836:14:1::1;::::0;;8774:110::o;6181:161::-;6252:12;6278:2;-1:-1:-1;;;;;6270:16:1;6293:5;6270:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6251:52;;;6321:7;6313:22;;;;-1:-1:-1;;;6313:22:1;;17151:2:8;6313:22:1;;;17133:21:8;17190:1;17170:18;;;17163:29;-1:-1:-1;;;17208:18:8;;;17201:32;17250:18;;6313:22:1;16949:325:8;7712:178:1;-1:-1:-1;;;;;7807:20:1;;;;;;:6;:20;;;;;:29;;7831:5;;7807:20;:29;;7831:5;;7807:29;:::i;:::-;;;;-1:-1:-1;;;;;;;7846:28:1;;;;;;:14;:28;;;;;:37;;7878:5;;7846:28;:37;;7878:5;;7846:37;:::i;:::-;;;;-1:-1:-1;;;;7712:178:1:o;16399:244:2:-;16529:1;16493:18;;;:11;:18;;;;;;;;:24;;;-1:-1:-1;;;;;16493:24:2;16480:38;;:12;:38;;;;;:51;;;16541:27;;;:20;:27;;;;;;:45;;;16601:35;;14188:25:8;;;14229:18;;;14222:34;;;16601:35:2;;14161:18:8;16601:35:2;14014:248:8;15499:698:2;15609:1;15600:6;:10;15592:25;;;;-1:-1:-1;;;15592:25:2;;35146:2:8;15592:25:2;;;35128:21:8;35185:1;35165:18;;;35158:29;-1:-1:-1;;;35203:18:8;;;35196:32;35245:18;;15592:25:2;34944:325:8;15592:25:2;15699:37;;-1:-1:-1;;35451:2:8;35447:15;;;35443:53;15699:37:2;;;35431:66:8;35513:12;;;35506:28;;;15673:13:2;;35550:12:8;;15699:37:2;;;;;;-1:-1:-1;;15699:37:2;;;;;;15689:48;;15699:37;15689:48;;;;-1:-1:-1;;;;;15747:19:2;;;;;;;:12;:19;;;;;:27;;;15784;;;:20;:27;;;;;-1:-1:-1;;15784:47:2;;15939:200;;;;;;;;;;;;;;;;;;;;;15918:18;;;:11;:18;;;;;;:221;;;;;;;;;;-1:-1:-1;;;;;;15918:221:2;;;;;;;;;;;;;;;;;;16154:35;;6471:25:8;;;6512:18;;;6505:60;;;;6581:18;;;6574:34;;;15689:48:2;;-1:-1:-1;16154:35:2;;6444:18:8;16154:35:2;6269:345:8;8461:231:1;8551:26;8564:12;8551;:26::i;:::-;8543:41;;;;-1:-1:-1;;;8543:41:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8602:20:1;;;;;;:6;:20;;;;;;:25;8594:40;;;;-1:-1:-1;;;8594:40:1;;36125:2:8;8594:40:1;;;36107:21:8;36164:1;36144:18;;;36137:29;-1:-1:-1;;;36182:18:8;;;36175:32;36224:18;;8594:40:1;35923:325:8;8594:40:1;-1:-1:-1;;;;;8644:33:1;8680:5;8644:33;;;:19;:33;;;;;:41;;-1:-1:-1;;8644:41:1;;;8461:231::o;8084:179::-;8173:26;8186:12;8173;:26::i;:::-;8172:27;8164:42;;;;-1:-1:-1;;;8164:42:1;;36455:2:8;8164:42:1;;;36437:21:8;36494:1;36474:18;;;36467:29;-1:-1:-1;;;36512:18:8;;;36505:32;36554:18;;8164:42:1;36253:325:8;8164:42:1;-1:-1:-1;;;;;8216:33:1;;;;;:19;:33;;;;;:40;;-1:-1:-1;;8216:40:1;8252:4;8216:40;;;8084:179::o;206:127:8:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:719;381:5;434:3;427:4;419:6;415:17;411:27;401:55;;452:1;449;442:12;401:55;488:6;475:20;514:18;551:2;547;544:10;541:36;;;557:18;;:::i;:::-;632:2;626:9;600:2;686:13;;-1:-1:-1;;682:22:8;;;706:2;678:31;674:40;662:53;;;730:18;;;750:22;;;727:46;724:72;;;776:18;;:::i;:::-;816:10;812:2;805:22;851:2;843:6;836:18;897:3;890:4;885:2;877:6;873:15;869:26;866:35;863:55;;;914:1;911;904:12;863:55;978:2;971:4;963:6;959:17;952:4;944:6;940:17;927:54;1025:1;1018:4;1013:2;1005:6;1001:15;997:26;990:37;1045:6;1036:15;;;;;;338:719;;;;:::o;1062:152::-;1139:20;;1188:1;1178:12;;1168:40;;1204:1;1201;1194:12;1168:40;1062:152;;;:::o;1219:418::-;1310:6;1318;1371:2;1359:9;1350:7;1346:23;1342:32;1339:52;;;1387:1;1384;1377:12;1339:52;1427:9;1414:23;1460:18;1452:6;1449:30;1446:50;;;1492:1;1489;1482:12;1446:50;1515;1557:7;1548:6;1537:9;1533:22;1515:50;:::i;:::-;1505:60;;;1584:47;1627:2;1616:9;1612:18;1584:47;:::i;:::-;1574:57;;1219:418;;;;;:::o;1642:180::-;1701:6;1754:2;1742:9;1733:7;1729:23;1725:32;1722:52;;;1770:1;1767;1760:12;1722:52;-1:-1:-1;1793:23:8;;1642:180;-1:-1:-1;1642:180:8:o;2194:322::-;2263:6;2316:2;2304:9;2295:7;2291:23;2287:32;2284:52;;;2332:1;2329;2322:12;2284:52;2372:9;2359:23;2405:18;2397:6;2394:30;2391:50;;;2437:1;2434;2427:12;2391:50;2460;2502:7;2493:6;2482:9;2478:22;2460:50;:::i;:::-;2450:60;2194:322;-1:-1:-1;;;;2194:322:8:o;2521:173::-;2589:20;;-1:-1:-1;;;;;2638:31:8;;2628:42;;2618:70;;2684:1;2681;2674:12;2699:396;2777:6;2785;2838:2;2826:9;2817:7;2813:23;2809:32;2806:52;;;2854:1;2851;2844:12;2806:52;2894:9;2881:23;2927:18;2919:6;2916:30;2913:50;;;2959:1;2956;2949:12;2913:50;2982;3024:7;3015:6;3004:9;3000:22;2982:50;:::i;:::-;2972:60;;;3051:38;3085:2;3074:9;3070:18;3051:38;:::i;3100:186::-;3159:6;3212:2;3200:9;3191:7;3187:23;3183:32;3180:52;;;3228:1;3225;3218:12;3180:52;3251:29;3270:9;3251:29;:::i;3291:248::-;3359:6;3367;3420:2;3408:9;3399:7;3395:23;3391:32;3388:52;;;3436:1;3433;3426:12;3388:52;-1:-1:-1;;3459:23:8;;;3529:2;3514:18;;;3501:32;;-1:-1:-1;3291:248:8:o;3544:397::-;3630:6;3638;3646;3654;3707:3;3695:9;3686:7;3682:23;3678:33;3675:53;;;3724:1;3721;3714:12;3675:53;3760:9;3747:23;3737:33;;3789:38;3823:2;3812:9;3808:18;3789:38;:::i;:::-;3779:48;;3874:2;3863:9;3859:18;3846:32;3836:42;;3897:38;3931:2;3920:9;3916:18;3897:38;:::i;:::-;3887:48;;3544:397;;;;;;;:::o;4154:464::-;4241:6;4249;4257;4310:2;4298:9;4289:7;4285:23;4281:32;4278:52;;;4326:1;4323;4316:12;4278:52;4366:9;4353:23;4399:18;4391:6;4388:30;4385:50;;;4431:1;4428;4421:12;4385:50;4454;4496:7;4487:6;4476:9;4472:22;4454:50;:::i;:::-;4444:60;;;4523:38;4557:2;4546:9;4542:18;4523:38;:::i;:::-;4513:48;;4608:2;4597:9;4593:18;4580:32;4570:42;;4154:464;;;;;:::o;4623:118::-;4709:5;4702:13;4695:21;4688:5;4685:32;4675:60;;4731:1;4728;4721:12;4746:241;4802:6;4855:2;4843:9;4834:7;4830:23;4826:32;4823:52;;;4871:1;4868;4861:12;4823:52;4910:9;4897:23;4929:28;4951:5;4929:28;:::i;4992:254::-;5060:6;5068;5121:2;5109:9;5100:7;5096:23;5092:32;5089:52;;;5137:1;5134;5127:12;5089:52;5160:29;5179:9;5160:29;:::i;:::-;5150:39;5236:2;5221:18;;;;5208:32;;-1:-1:-1;;;4992:254:8:o;5251:686::-;5357:6;5365;5373;5381;5434:3;5422:9;5413:7;5409:23;5405:33;5402:53;;;5451:1;5448;5441:12;5402:53;5491:9;5478:23;5520:18;5561:2;5553:6;5550:14;5547:34;;;5577:1;5574;5567:12;5547:34;5600:50;5642:7;5633:6;5622:9;5618:22;5600:50;:::i;:::-;5590:60;;5703:2;5692:9;5688:18;5675:32;5659:48;;5732:2;5722:8;5719:16;5716:36;;;5748:1;5745;5738:12;5716:36;;5771:52;5815:7;5804:8;5793:9;5789:24;5771:52;:::i;:::-;5761:62;;;5842:38;5876:2;5865:9;5861:18;5842:38;:::i;:::-;5251:686;;;;-1:-1:-1;5832:48:8;;5927:2;5912:18;5899:32;;-1:-1:-1;;5251:686:8:o;5942:322::-;6019:6;6027;6035;6088:2;6076:9;6067:7;6063:23;6059:32;6056:52;;;6104:1;6101;6094:12;6056:52;6140:9;6127:23;6117:33;;6197:2;6186:9;6182:18;6169:32;6159:42;;6220:38;6254:2;6243:9;6239:18;6220:38;:::i;:::-;6210:48;;5942:322;;;;;:::o;6801:492::-;6901:6;6909;6917;6970:2;6958:9;6949:7;6945:23;6941:32;6938:52;;;6986:1;6983;6976:12;6938:52;7026:9;7013:23;7059:18;7051:6;7048:30;7045:50;;;7091:1;7088;7081:12;7045:50;7114;7156:7;7147:6;7136:9;7132:22;7114:50;:::i;:::-;7104:60;;;7183:38;7217:2;7206:9;7202:18;7183:38;:::i;:::-;7173:48;;7240:47;7283:2;7272:9;7268:18;7240:47;:::i;7298:539::-;7394:6;7402;7410;7418;7471:3;7459:9;7450:7;7446:23;7442:33;7439:53;;;7488:1;7485;7478:12;7439:53;7528:9;7515:23;7561:18;7553:6;7550:30;7547:50;;;7593:1;7590;7583:12;7547:50;7616;7658:7;7649:6;7638:9;7634:22;7616:50;:::i;:::-;7606:60;;;7685:38;7719:2;7708:9;7704:18;7685:38;:::i;7842:466::-;7937:6;7945;7953;7961;7969;8022:3;8010:9;8001:7;7997:23;7993:33;7990:53;;;8039:1;8036;8029:12;7990:53;8075:9;8062:23;8052:33;;8132:2;8121:9;8117:18;8104:32;8094:42;;8155:38;8189:2;8178:9;8174:18;8155:38;:::i;:::-;8145:48;;8240:2;8229:9;8225:18;8212:32;8202:42;;8263:39;8297:3;8286:9;8282:19;8263:39;:::i;:::-;8253:49;;7842:466;;;;;;;;:::o;8572:127::-;8633:10;8628:3;8624:20;8621:1;8614:31;8664:4;8661:1;8654:15;8688:4;8685:1;8678:15;8704:125;8769:9;;;8790:10;;;8787:36;;;8803:18;;:::i;9214:127::-;9275:10;9270:3;9266:20;9263:1;9256:31;9306:4;9303:1;9296:15;9330:4;9327:1;9320:15;9346:250;9431:1;9441:113;9455:6;9452:1;9449:13;9441:113;;;9531:11;;;9525:18;9512:11;;;9505:39;9477:2;9470:10;9441:113;;;-1:-1:-1;;9588:1:8;9570:16;;9563:27;9346:250::o;9601:289::-;9732:3;9770:6;9764:13;9786:66;9845:6;9840:3;9833:4;9825:6;9821:17;9786:66;:::i;:::-;9868:16;;;;;9601:289;-1:-1:-1;;9601:289:8:o;10225:325::-;10427:2;10409:21;;;10466:1;10446:18;;;10439:29;-1:-1:-1;;;10499:2:8;10484:18;;10477:32;10541:2;10526:18;;10225:325::o;10555:::-;10757:2;10739:21;;;10796:1;10776:18;;;10769:29;-1:-1:-1;;;10829:2:8;10814:18;;10807:32;10871:2;10856:18;;10555:325::o;11215:::-;11417:2;11399:21;;;11456:1;11436:18;;;11429:29;-1:-1:-1;;;11489:2:8;11474:18;;11467:32;11531:2;11516:18;;11215:325::o;11875:::-;12077:2;12059:21;;;12116:1;12096:18;;;12089:29;-1:-1:-1;;;12149:2:8;12134:18;;12127:32;12191:2;12176:18;;11875:325::o;12535:168::-;12608:9;;;12639;;12656:15;;;12650:22;;12636:37;12626:71;;12677:18;;:::i;12708:217::-;12748:1;12774;12764:132;;12818:10;12813:3;12809:20;12806:1;12799:31;12853:4;12850:1;12843:15;12881:4;12878:1;12871:15;12764:132;-1:-1:-1;12910:9:8;;12708:217::o;13219:128::-;13286:9;;;13307:11;;;13304:37;;;13321:18;;:::i;14267:270::-;14308:3;14346:5;14340:12;14373:6;14368:3;14361:19;14389:76;14458:6;14451:4;14446:3;14442:14;14435:4;14428:5;14424:16;14389:76;:::i;:::-;14519:2;14498:15;-1:-1:-1;;14494:29:8;14485:39;;;;14526:4;14481:50;;14267:270;-1:-1:-1;;14267:270:8:o;14542:538::-;14818:2;14807:9;14800:21;14857:1;14852:2;14841:9;14837:18;14830:29;-1:-1:-1;;;14890:3:8;14879:9;14875:19;14868:33;14939:3;14932:4;14921:9;14917:20;14910:33;14781:4;14960:45;15000:3;14989:9;14985:19;14977:6;14960:45;:::i;:::-;14952:53;;15070:1;15066;15061:3;15057:11;15053:19;15045:6;15041:32;15036:2;15025:9;15021:18;15014:60;14542:538;;;;;:::o;17588:184::-;17658:6;17711:2;17699:9;17690:7;17686:23;17682:32;17679:52;;;17727:1;17724;17717:12;17679:52;-1:-1:-1;17750:16:8;;17588:184;-1:-1:-1;17588:184:8:o;17777:325::-;17979:2;17961:21;;;18018:1;17998:18;;;17991:29;-1:-1:-1;;;18051:2:8;18036:18;;18029:32;18093:2;18078:18;;17777:325::o;18487:245::-;18554:6;18607:2;18595:9;18586:7;18582:23;18578:32;18575:52;;;18623:1;18620;18613:12;18575:52;18655:9;18649:16;18674:28;18696:5;18674:28;:::i;18737:325::-;18939:2;18921:21;;;18978:1;18958:18;;;18951:29;-1:-1:-1;;;19011:2:8;18996:18;;18989:32;19053:2;19038:18;;18737:325::o;19591:239::-;19674:1;19667:5;19664:12;19654:143;;19719:10;19714:3;19710:20;19707:1;19700:31;19754:4;19751:1;19744:15;19782:4;19779:1;19772:15;19654:143;19806:18;;19591:239::o;19835:322::-;20023:2;20012:9;20005:21;19986:4;20043:44;20083:2;20072:9;20068:18;20060:6;20043:44;:::i;:::-;20035:52;;20096:55;20147:2;20136:9;20132:18;20124:6;20096:55;:::i;20162:538::-;20438:2;20427:9;20420:21;20477:1;20472:2;20461:9;20457:18;20450:29;-1:-1:-1;;;20510:3:8;20499:9;20495:19;20488:33;20559:3;20552:4;20541:9;20537:20;20530:33;20401:4;20580:45;20620:3;20609:9;20605:19;20597:6;20580:45;:::i;21315:538::-;21591:2;21580:9;21573:21;21630:1;21625:2;21614:9;21610:18;21603:29;-1:-1:-1;;;21663:3:8;21652:9;21648:19;21641:33;21712:3;21705:4;21694:9;21690:20;21683:33;21554:4;21733:45;21773:3;21762:9;21758:19;21750:6;21733:45;:::i;22188:316::-;22365:2;22354:9;22347:21;22328:4;22385:44;22425:2;22414:9;22410:18;22402:6;22385:44;:::i;:::-;22377:52;;22494:1;22490;22485:3;22481:11;22477:19;22469:6;22465:32;22460:2;22449:9;22445:18;22438:60;22188:316;;;;;:::o;22509:538::-;22785:2;22774:9;22767:21;22824:1;22819:2;22808:9;22804:18;22797:29;-1:-1:-1;;;22857:3:8;22846:9;22842:19;22835:33;22906:3;22899:4;22888:9;22884:20;22877:33;22748:4;22927:45;22967:3;22956:9;22952:19;22944:6;22927:45;:::i;23052:538::-;23328:2;23317:9;23310:21;23367:1;23362:2;23351:9;23347:18;23340:29;-1:-1:-1;;;23400:3:8;23389:9;23385:19;23378:33;23449:3;23442:4;23431:9;23427:20;23420:33;23291:4;23470:45;23510:3;23499:9;23495:19;23487:6;23470:45;:::i;25195:219::-;25344:2;25333:9;25326:21;25307:4;25364:44;25404:2;25393:9;25389:18;25381:6;25364:44;:::i;25419:538::-;25695:2;25684:9;25677:21;25734:1;25729:2;25718:9;25714:18;25707:29;-1:-1:-1;;;25767:3:8;25756:9;25752:19;25745:33;25816:3;25809:4;25798:9;25794:20;25787:33;25658:4;25837:45;25877:3;25866:9;25862:19;25854:6;25837:45;:::i;25962:325::-;26164:2;26146:21;;;26203:1;26183:18;;;26176:29;-1:-1:-1;;;26236:2:8;26221:18;;26214:32;26278:2;26263:18;;25962:325::o;26292:387::-;26497:2;26486:9;26479:21;26460:4;26517:44;26557:2;26546:9;26542:18;26534:6;26517:44;:::i;:::-;-1:-1:-1;;;;;26597:32:8;;;;26592:2;26577:18;;26570:60;-1:-1:-1;26661:2:8;26646:18;26639:34;26509:52;26292:387;-1:-1:-1;26292:387:8:o;26684:538::-;26960:2;26949:9;26942:21;26999:1;26994:2;26983:9;26979:18;26972:29;-1:-1:-1;;;27032:3:8;27021:9;27017:19;27010:33;27081:3;27074:4;27063:9;27059:20;27052:33;26923:4;27102:45;27142:3;27131:9;27127:19;27119:6;27102:45;:::i;27227:539::-;27503:2;27492:9;27485:21;27542:1;27537:2;27526:9;27522:18;27515:29;-1:-1:-1;;;27575:3:8;27564:9;27560:19;27553:34;27625:3;27618:4;27607:9;27603:20;27596:33;27466:4;27646:45;27686:3;27675:9;27671:19;27663:6;27646:45;:::i;27771:538::-;28047:2;28036:9;28029:21;28086:1;28081:2;28070:9;28066:18;28059:29;-1:-1:-1;;;28119:3:8;28108:9;28104:19;28097:33;28168:3;28161:4;28150:9;28146:20;28139:33;28010:4;28189:45;28229:3;28218:9;28214:19;28206:6;28189:45;:::i;28314:538::-;28590:2;28579:9;28572:21;28629:1;28624:2;28613:9;28609:18;28602:29;-1:-1:-1;;;28662:3:8;28651:9;28647:19;28640:33;28711:3;28704:4;28693:9;28689:20;28682:33;28553:4;28732:45;28772:3;28761:9;28757:19;28749:6;28732:45;:::i;29188:551::-;29441:3;29430:9;29423:22;29404:4;29468:45;29508:3;29497:9;29493:19;29485:6;29468:45;:::i;:::-;29561:9;29553:6;29549:22;29544:2;29533:9;29529:18;29522:50;29589:32;29614:6;29606;29589:32;:::i;:::-;-1:-1:-1;;;;;29657:32:8;;;;29652:2;29637:18;;29630:60;-1:-1:-1;;29721:2:8;29706:18;29699:34;29581:40;29188:551;-1:-1:-1;;29188:551:8:o;29744:538::-;30020:2;30009:9;30002:21;30059:1;30054:2;30043:9;30039:18;30032:29;-1:-1:-1;;;30092:3:8;30081:9;30077:19;30070:33;30141:3;30134:4;30123:9;30119:20;30112:33;29983:4;30162:45;30202:3;30191:9;30187:19;30179:6;30162:45;:::i;30617:538::-;30893:2;30882:9;30875:21;30932:1;30927:2;30916:9;30912:18;30905:29;-1:-1:-1;;;30965:3:8;30954:9;30950:19;30943:33;31014:3;31007:4;30996:9;30992:20;30985:33;30856:4;31035:45;31075:3;31064:9;31060:19;31052:6;31035:45;:::i;32022:135::-;32061:3;32082:17;;;32079:43;;32102:18;;:::i;:::-;-1:-1:-1;32149:1:8;32138:13;;32022:135::o;32162:419::-;32378:2;32367:9;32360:21;32341:4;32398:44;32438:2;32427:9;32423:18;32415:6;32398:44;:::i;:::-;-1:-1:-1;;;;;32478:32:8;;32473:2;32458:18;;32451:60;32390:52;-1:-1:-1;32520:55:8;32571:2;32556:18;;32548:6;32520:55;:::i;32586:538::-;32862:2;32851:9;32844:21;32901:1;32896:2;32885:9;32881:18;32874:29;-1:-1:-1;;;32934:3:8;32923:9;32919:19;32912:33;32983:3;32976:4;32965:9;32961:20;32954:33;32825:4;33004:45;33044:3;33033:9;33029:19;33021:6;33004:45;:::i;33129:490::-;33362:3;33351:9;33344:22;33325:4;33383:45;33423:3;33412:9;33408:19;33400:6;33383:45;:::i;:::-;-1:-1:-1;;;;;33502:15:8;;;33497:2;33482:18;;33475:43;33549:2;33534:18;;33527:34;;;;-1:-1:-1;33597:15:8;;33592:2;33577:18;;;33570:43;;;;33375:53;33129:490;-1:-1:-1;33129:490:8:o;33624:538::-;33900:2;33889:9;33882:21;33939:1;33934:2;33923:9;33919:18;33912:29;-1:-1:-1;;;33972:3:8;33961:9;33957:19;33950:33;34021:3;34014:4;34003:9;33999:20;33992:33;33863:4;34042:45;34082:3;34071:9;34067:19;34059:6;34042:45;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Frederik W. L. Christoffersen",
    "events": {
      "ActionTaken(string,bytes,address)": {
        "params": {
          "args": "The arguments passed to the function call.",
          "by": "The initiator of the action.",
          "func": "The name of the function that was called."
        }
      },
      "ExpiredShard(bytes32,uint256)": {
        "params": {
          "expirationClock": "The clock at which the shard expired.",
          "shard": "The Shard byte identifier, which expired."
        }
      },
      "LiquidClaimed(address,uint256,address)": {
        "params": {
          "tokenAddress": "The address of the claimed token.",
          "value": "The value/amount of the claimed token."
        }
      },
      "NewShard(bytes32,address,uint256)": {
        "params": {
          "creationClock": "The clock at which the shard was created.",
          "owner": "The owner of the created Shard.",
          "shard": "The Shard byte identifier, which was created."
        }
      },
      "PutForSale(bytes32,uint256,address,uint256,address)": {
        "params": {
          "amount": "Amount of the Shard put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard that was put for sale.",
          "to": "The specifically set buyer of the sale, if any.",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "SaleSold(bytes32,uint256,address,address,uint256)": {
        "params": {
          "amount": "Amount of the Shard that was sold.",
          "price": "The amount which the Shard was for sale for. The token address being the valuta.",
          "shard": "The shard that was sold from.",
          "to": "The buyer of the sale.",
          "tokenAddress": "The address of the token that was accepted in the purchase. A value of 0x0 represents ether."
        }
      },
      "TokenReceived(address,uint256,address)": {
        "params": {
          "from": "The sender of the received token.",
          "tokenAddress": "The address of the received token.",
          "value": "The value/amount of the received token."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "acceptsToken(address)": {
        "notice": "Returns a boolean value, stating if the given token address is registered as acceptable or not.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "active()": {
        "notice": "Boolean stating if the Shardable is active and tradeable or not."
      },
      "addBankAdmin(string,address)": {
        "notice": "Adds a new given administrator to a given Bank.",
        "params": {
          "bankAdmin": "The address of the new Bank administrator to be added.",
          "bankName": "The name of the Bank to which the new administrator is to be added."
        }
      },
      "bankExists(string)": {
        "notice": "Returns a boolean stating if a given Bank exists.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "bankIsEmpty(string)": {
        "notice": "Returns a boolean stating if a given Bank is empty.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "cancelSale(bytes32)": {
        "notice": "Cancels a sell of a given shard.",
        "params": {
          "shard": "The shard to be put off sale."
        }
      },
      "claimDividend(bytes32,uint256)": {
        "notice": "Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.",
        "params": {
          "dividend": "The dividend to be claimed.",
          "shard": "The shard that was valid at the clock of the Dividend creation"
        }
      },
      "claimLiquid(address)": {
        "notice": "Claims the owed liquid value corresponding to the shard holder's respective shard fraction after the entity has been liquidized/dissolved.",
        "params": {
          "tokenAddress": "The address of the token to be claimed."
        }
      },
      "constructor": {
        "notice": "Constructor function connecting the Idea entity and creating a Bank with an administrator."
      },
      "createBank(string,address)": {
        "notice": "Creates a new Bank.",
        "params": {
          "bankAdmin": "The address of the first Bank administrator.",
          "bankName": "The name of the Bank to be created."
        }
      },
      "deleteBank(string)": {
        "notice": "Deletes a given Bank.",
        "params": {
          "bankName": "The name of the Bank to be deleted."
        }
      },
      "dissolveDividend(uint256)": {
        "notice": "Dissolves a Dividend and moves its last contents to the 'main' Bank.",
        "params": {
          "dividend": "The Dividend to be dissolved."
        }
      },
      "dividendExists(uint256)": {
        "notice": "Returns a boolean stating if a given Dividend exists.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getBankBalance(string,address)": {
        "notice": "Returns the balance of a bank.",
        "params": {
          "bankName": "The name of the Bank.",
          "tokenAddress": "The address of the token balance to check for."
        }
      },
      "getCurrentClock()": {
        "notice": "Returns the clock."
      },
      "getDividendResidual(uint256)": {
        "notice": "Returns the residual value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendToken(uint256)": {
        "notice": "Returns the token of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendValue(uint256)": {
        "notice": "Returns the total value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getLiquidResidual(address)": {
        "notice": "Returns the residual of a liquid, after liquidization/inactivation.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "getShardExpirationClock(bytes32)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "getShardSalePrice(bytes32)": {
        "notice": "Returns the price, at which a shard is for sale."
      },
      "hasPermit(string,address)": {
        "notice": "Returns a boolean stating if a given address has a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "infoByShard(bytes32)": {
        "notice": "Mapping pointing to related info of a Shard given the bytes of a unique Shard instance."
      },
      "isBankAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given bank.",
        "params": {
          "account": "The address to be checked for.",
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "isPermitAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "isShardHolder(address)": {
        "notice": "Checks if address is a shard holder - at least a partial owner of the contract.",
        "params": {
          "account": "The address to be checked for."
        }
      },
      "isValidShard(bytes32)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "issueDividend(string,address,uint256)": {
        "notice": "Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.",
        "params": {
          "bankName": "The name of the Bank to issue the Dividend from.",
          "tokenAddress": "The address of the token to make up the Dividend.",
          "value": "The value/amount of the token to be issued in the Dividend."
        }
      },
      "issueShards(uint256,address,uint256,address)": {
        "notice": "Issues new shards and puts them for sale.",
        "params": {
          "price": "The price per token.",
          "to": "The specifically set buyer of the issued shards. Open to anyone, if address(0).",
          "tokenAddress": "The token address the shards are put for sale for."
        }
      },
      "liquid(address)": {
        "notice": "Mapping pointing to a value/amount given the address of an ERC20 token."
      },
      "liquidize()": {
        "notice": "Liquidizes and dissolves the entity. This cannot be undone."
      },
      "moveToken(string,string,address,uint256)": {
        "notice": "Internally moves a token from one Bank to another.",
        "params": {
          "fromBankName": "The name of the Bank from which the token is to be moved.",
          "toBankName": "The name of the Bank to which the token is to be moved.",
          "tokenAddress": "The address of the token to be moved.",
          "value": "The value/amount of the token to be moved."
        }
      },
      "purchase(bytes32,uint256)": {
        "details": "If the purchase is with tokens (ie. tokenAddress != 0x0), first call 'token.approve(Shardable.address, salePrice);'",
        "notice": "Purchases a listed Shard for sale.",
        "params": {
          "shard": "The shard of which a fraction will be purchased."
        }
      },
      "putForSale(bytes32,uint256,address,uint256,address)": {
        "notice": "Puts a given shard for sale.",
        "params": {
          "amount": "Amount of the Shard to be put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard to be put for sale.",
          "to": "The specifically set buyer of the sale. Open to anyone, if address(0).",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "receiveToken(address,uint256)": {
        "notice": "Receives a specified token and adds it to the registry. Make sure 'token.approve()' is called beforehand.",
        "params": {
          "tokenAddress": "The address of the token to be received.",
          "value": "The value/amount of the token to be received."
        }
      },
      "registerTokenAddress(address)": {
        "notice": "Adds a token address to the registry. Also approves any future receipts of said token unless removed again.",
        "params": {
          "tokenAddress": "The token address to be registered."
        }
      },
      "removeBankAdmin(string,address)": {
        "notice": "Removes a given administrator of a given Bank.",
        "params": {
          "bankAdmin": "The address of the current Bank administrator to be removed.",
          "bankName": "The name of the Bank from which the given administrator is to be removed."
        }
      },
      "setBasePermit(string,uint8)": {
        "notice": "Sets the state of a specified base permit.",
        "params": {
          "newState": "The new base Permit State to be applied.",
          "permitName": "The name of the base permit, whose state is to be set."
        }
      },
      "setNonShardHolderState(bool)": {
        "notice": "Sets the state of the Non Shard Holders.",
        "params": {
          "newState": "The Boolean state to be applied."
        }
      },
      "setPermit(string,address,uint8)": {
        "notice": "Sets the state of a specified permit of a given address.",
        "params": {
          "account": "The address, whose permit state is to be set.",
          "newState": "The new Permit State to be applied.",
          "permitName": "The name of the permit, whose state is to be set."
        }
      },
      "shardByOwner(address)": {
        "notice": "Mapping pointing to a currently valid shard given the address of its owner."
      },
      "shardExisted(bytes32,uint256)": {
        "notice": "Returns a boolean stating if the given shard was valid at a given clock.",
        "params": {
          "atClock": "The clock to be checked for.",
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "split(bytes32,uint256,address)": {
        "notice": "Splits a currently valid shard into two new ones. One is assigned to the receiver. The rest to the previous owner.",
        "params": {
          "amount": "Amount, which will be subtracted from the previous shard and sent to the receiver.",
          "senderShard": "The shard to be split.",
          "to": "The receiver of the new Shard."
        }
      },
      "totalShardAmountByClock(uint256)": {
        "notice": "Mapping pointing to integer value representing the total number of shards issued, provided the clock. Used as the denominator to represent a relative shard fraction."
      },
      "transferTokenFromBank(string,address,uint256,address)": {
        "notice": "Transfers a token bankAdmin a Bank to a recipient.",
        "params": {
          "bankName": "The name of the Bank from which the token is to be transferred.",
          "to": "The recipient of the token to be transferred.",
          "tokenAddress": "The address of the token to be transferred.",
          "value": "The value/amount of the token to be transferred."
        }
      },
      "unregisterTokenAddress(address)": {
        "notice": "Removes a token address from the registry. Also cancels any future receipts of said token unless added again.",
        "params": {
          "tokenAddress": "The token address to be unregistered."
        }
      }
    },
    "notice": "This contract adds administrability via permits and internally closed money supplies.",
    "stateVariables": {
      "permits": {
        "custom:illustration": "permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
      }
    },
    "title": "An extension of the Idea providing an administrable interface.",
    "version": 1
  },
  "offset": [
    307,
    24507
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x859D9FD5 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xB4AF7D59 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE123182B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE123182B EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE1C34C1F EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xE6778FCE EQ PUSH2 0x89B JUMPI DUP1 PUSH4 0xEFAE89F8 EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0xF7AAE621 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xFD06636B EQ PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4AF7D59 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0xBCEDB2E0 EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xC4802EB2 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xC5438A55 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xDB5DC9B7 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xDE9D6805 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9995B9A9 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x9995B9A9 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xA1916AEF EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0xA80AED76 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0xA902780F EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xA907B6C5 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xB2CB78AB EQ PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x859D9FD5 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x868399A5 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x8786DF6A EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x9211B7B3 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x97235A1E EQ PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x350546D8 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4C46360B GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4C46360B EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x5BEEFF33 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x62748DCC EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x63879C0B EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x7B785493 EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x81005219 EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x350546D8 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x354CD135 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x384FE2B5 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x3BAF28F8 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x3DBEAA54 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x169936B4 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x169936B4 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x23656642 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x258E4D9F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x2DEC7CD2 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x2EF37926 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x2F2E9A2A EQ PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x36F3AEC EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x5C558F5 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x66792D2 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xBEA8985 EQ PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x289 JUMPI PUSH2 0x287 PUSH1 0x0 CALLVALUE CALLER PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2A8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BBC JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0xB23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH2 0xB5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C23 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0xCB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0xDA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD7 JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C23 JUMP JUMPDEST PUSH2 0x1268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x50E CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x556 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D3F JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x5D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DA4 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH2 0x144B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DC1 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x6D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DEB JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x6F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x14D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x3E67 JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x76E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C23 JUMP JUMPDEST PUSH2 0x1650 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B8 PUSH2 0x78E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x823 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E9C JUMP JUMPDEST PUSH2 0x1680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x843 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x863 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EF1 JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH2 0x287 PUSH2 0x876 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD7 JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x896 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CBC JUMP JUMPDEST PUSH2 0x1E40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x8B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x8E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C0A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x910 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x1E72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x930 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD7 JUMP JUMPDEST PUSH2 0x1EF0 JUMP JUMPDEST PUSH2 0x940 DUP4 DUP4 DUP4 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xF SWAP1 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x1 PUSH1 0xE PUSH1 0x40 MLOAD PUSH2 0x9AD SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xF PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xA8E DUP2 CALLER PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xAA9 PUSH2 0x3FB2 JUMP JUMPDEST PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xADD JUMPI PUSH2 0xADD PUSH2 0x3FB2 JUMP JUMPDEST SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1E DUP4 DUP4 PUSH2 0x1F76 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C45 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xB48 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB59 PUSH2 0x2025 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4008 JUMP JUMPDEST DUP2 PUSH2 0xBB1 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xB1E DUP4 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0xC71 JUMPI POP PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1911 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0xC9C DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAE DUP3 PUSH2 0x20C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBD DUP3 PUSH2 0x1E40 JUMP JUMPDEST DUP1 PUSH2 0xCCA JUMPI POP PUSH1 0xC SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xCD6 JUMPI POP PUSH1 0x0 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCE8 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD21 JUMPI PUSH2 0xD21 PUSH2 0x3FB2 JUMP JUMPDEST EQ DUP1 PUSH2 0xD60 JUMPI POP PUSH1 0x2 PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5E PUSH2 0x3FB2 JUMP JUMPDEST EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xDCD DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xDD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0xB1E DUP4 DUP4 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xE2B DUP2 CALLER PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0xE3F DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE52 DUP5 DUP5 PUSH2 0x22C3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE61 CALLER PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0xE92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xAA9 PUSH1 0xF3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xE9B DUP2 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0xEB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x405C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xFD8 SWAP1 DUP5 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFE9 SWAP1 POP DUP4 DUP3 CALLER PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1397D005A56670CBE383372BD4743EAA779AF18164D00DC6D12A6659418E1BBF SWAP1 PUSH1 0x60 ADD PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4008 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0x10BA DUP5 DUP5 PUSH2 0x1EF0 JUMP JUMPDEST PUSH2 0x10EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x2720A3 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 SLOAD DUP5 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP9 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP9 DUP7 MSTORE PUSH1 0x14 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1191 SWAP2 PUSH2 0x4078 JUMP JUMPDEST PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x445453 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x11F1 SWAP1 DUP5 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1219 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALLER PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1259 SWAP2 CALLER SWAP1 PUSH2 0x40F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x128D DUP2 CALLER PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x12A1 DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP4 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6953 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0x12D8 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP6 DUP6 DUP6 DUP6 PUSH2 0x27A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A51 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0x1319 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x132D DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP6 DUP6 DUP6 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x734E53 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1367 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xCAE DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x13DE DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0xCAE DUP3 PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xC71 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x1471 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0xCAE DUP3 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xCAE DUP3 DUP3 PUSH2 0x2B34 JUMP JUMPDEST DUP4 PUSH2 0x14BE DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x14C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP6 DUP6 DUP6 DUP6 PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xD60 JUMPI POP PUSH2 0xD60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP4 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x1563 DUP2 CALLER PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0x1577 DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1589 DUP4 PUSH2 0x1E40 JUMP JUMPDEST DUP1 PUSH2 0x1596 JUMPI POP PUSH1 0xC SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4E53484E41 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xE52 DUP5 DUP5 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4008 JUMP JUMPDEST DUP4 PUSH2 0x1629 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH2 0x12ED DUP6 DUP6 DUP6 PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH2 0x168B DUP2 CALLER PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x1694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169D DUP4 PUSH2 0x1E40 JUMP JUMPDEST DUP1 PUSH2 0x16AA JUMPI POP PUSH1 0xC SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x16DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4E53484E41 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16F0 PUSH2 0x3FB2 JUMP JUMPDEST PUSH1 0x11 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1739 PUSH2 0x3FB2 JUMP JUMPDEST SUB PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x41485 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xE52 DUP5 DUP5 DUP5 PUSH2 0x323C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP3 PUSH2 0x1E40 JUMP JUMPDEST DUP1 PUSH2 0x178F JUMPI POP PUSH1 0xC SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x179B JUMPI POP PUSH1 0x0 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E6 PUSH2 0x3FB2 JUMP JUMPDEST LT ISZERO DUP1 PUSH2 0xD60 JUMPI POP PUSH1 0x1 PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1800 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1824 PUSH2 0x3FB2 JUMP JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x1838 DUP2 CALLER PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x1841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP6 DUP6 DUP6 DUP6 PUSH2 0x32F6 JUMP JUMPDEST DUP2 PUSH2 0x1867 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4553 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4553 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x198B JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x29A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x19C5 DUP4 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x19E1 SWAP1 DUP5 PUSH2 0x4078 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x19F6 DUP5 PUSH1 0x19 PUSH2 0x3E8 PUSH2 0x3498 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x1A07 DUP2 DUP4 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B66 JUMPI DUP4 CALLVALUE LT ISZERO PUSH2 0x1A5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4945 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B1B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1B2E JUMPI POP DUP2 JUMPDEST PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST POP POP PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP3 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x4133 JUMP JUMPDEST LT ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x414C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C95 SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x1CB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4185 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1CEA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 PUSH2 0x350C JUMP JUMPDEST POP JUMPDEST PUSH2 0x1CF7 DUP8 DUP8 CALLER PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1D3F JUMPI PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1D39 SWAP1 DUP5 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD DUP12 DUP2 MSTORE SWAP3 DUP4 ADD DUP11 SWAP1 MSTORE CALLER DUP4 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 EQ PUSH2 0x1E37 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP11 DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1E37 SWAP2 SWAP1 PUSH2 0x1E06 SWAP1 DUP10 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND PUSH2 0x35BB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC71 SWAP1 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4008 JUMP JUMPDEST DUP6 PUSH2 0x1EC7 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1EE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH2 0x1E37 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x35BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD60 JUMPI POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1F49 SWAP1 DUP5 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA2A SWAP1 DUP5 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST DUP1 PUSH1 0x12 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x3FB2 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FFD SWAP3 SWAP2 SWAP1 PUSH2 0x41C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2019 SWAP2 CALLER SWAP1 PUSH2 0x41E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x202D PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x6C45 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE CALLER DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 JUMP JUMPDEST DUP1 PUSH2 0x2091 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x20AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x15 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xF PUSH1 0x4 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 KECCAK256 DUP7 DUP6 MSTORE PUSH1 0x14 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2174 SWAP1 DUP5 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2019 SWAP2 CALLER SWAP1 PUSH2 0x4211 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x21D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0x21E0 DUP3 PUSH2 0x1650 JUMP JUMPDEST ISZERO PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4145 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2224 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 PUSH1 0xD SWAP1 PUSH2 0x2269 SWAP1 DUP6 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x22A7 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x423D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2019 SWAP2 CALLER SWAP1 PUSH2 0x4267 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x22E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0x22F3 DUP3 DUP3 PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x22FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x230E SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2363 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x423D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2019 SWAP2 CALLER SWAP1 PUSH2 0x4293 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x414C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23D4 JUMPI PUSH2 0x23CF DUP3 DUP3 PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x260F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2426 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x247B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO PUSH2 0x257E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B91AD0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x97235A1E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x24E6 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255D SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4185 JUMP JUMPDEST PUSH2 0x260D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25F1 SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x260D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4185 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1E DUP4 DUP4 PUSH2 0x3828 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x264A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0x2653 DUP2 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x2685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x554221 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659 ADD PUSH2 0x26FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x26A1 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2703 DUP2 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x2734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4245 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2746 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2782 SWAP2 DUP5 SWAP2 ADD PUSH2 0x42BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x279E SWAP2 CALLER SWAP1 PUSH2 0x42D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x27B2 DUP4 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x27BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD PUSH2 0x27D7 SWAP2 SWAP1 PUSH2 0x3886 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x280B SWAP1 PUSH2 0x2802 SWAP1 DUP7 PUSH2 0x3F9F JUMP JUMPDEST ADDRESS PUSH1 0x0 SLOAD PUSH2 0x38F1 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 DUP6 DUP6 DUP6 DUP6 PUSH2 0x35BB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x284E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x2862 SWAP1 DUP7 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x42FE JUMP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x28B7 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28F7 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x290D SWAP1 DUP7 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x2947 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2981 JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x295E SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x297B SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x14 DUP4 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE MLOAD PUSH1 0x1 SWAP4 DUP5 ADD SSTORE PUSH1 0x15 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x13 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2A08 SWAP2 DUP8 SWAP2 DUP8 SWAP2 DUP8 SWAP2 ADD PUSH2 0x431A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2A24 SWAP2 CALLER SWAP1 PUSH2 0x4348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x279E SWAP2 CALLER SWAP1 PUSH2 0x4374 JUMP JUMPDEST PUSH2 0x2AAB DUP2 PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x279E SWAP2 CALLER SWAP1 PUSH2 0x43A1 JUMP JUMPDEST PUSH2 0x2AF4 DUP2 PUSH2 0x3AA6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x279E SWAP2 CALLER SWAP1 PUSH2 0x43CD JUMP JUMPDEST PUSH2 0x2B3D DUP3 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x2B59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BCB SWAP2 SWAP1 PUSH2 0x4133 JUMP JUMPDEST LT ISZERO PUSH2 0x2BE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x414C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C60 SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x2C7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4185 JUMP JUMPDEST PUSH2 0xB1E DUP4 DUP4 CALLER PUSH2 0x935 JUMP JUMPDEST DUP3 PUSH2 0x2C91 DUP2 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x2CC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x444E45 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2CE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2CF9 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x42FE JUMP JUMPDEST DUP2 PUSH1 0xF DUP7 PUSH1 0x40 MLOAD PUSH2 0x2D4E SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D8E SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2E82 JUMPI PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DB2 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2E12 JUMPI PUSH1 0x1 PUSH1 0xE DUP7 PUSH1 0x40 MLOAD PUSH2 0x2DEF SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E0C SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E22 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2E82 JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E5F SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E7C SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E93 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ED3 SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x2EFF SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x20 ADD PUSH2 0x43F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1259 SWAP2 CALLER SWAP1 PUSH2 0x443B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2F41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH2 0x2F65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP3 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x2F96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E5 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FA8 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2FFD SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x423D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2019 SWAP2 CALLER SWAP1 PUSH2 0x4467 JUMP JUMPDEST DUP3 PUSH2 0x3033 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x304F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 LT PUSH2 0x30B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4941 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x30C0 DUP3 PUSH2 0x1E40 JUMP JUMPDEST ISZERO PUSH2 0x312F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x30F5 SWAP1 DUP6 PUSH2 0x3F9F JUMP JUMPDEST SWAP1 POP PUSH2 0x3104 DUP2 DUP5 PUSH1 0x0 SLOAD PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD PUSH2 0x3129 SWAP2 SWAP1 PUSH2 0x3886 JUMP JUMPDEST POP PUSH2 0x313C JUMP JUMPDEST PUSH2 0x313C DUP4 DUP4 PUSH1 0x0 SLOAD PUSH2 0x38F1 JUMP JUMPDEST PUSH2 0x3148 DUP5 PUSH1 0x0 SLOAD PUSH2 0x3886 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3162 SWAP1 DUP6 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3195 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SLOAD PUSH2 0x3195 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP1 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP3 SWAP1 SWAP2 PUSH2 0x320D SWAP1 PUSH1 0x1 PUSH2 0x3F9F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3231 SWAP1 PUSH2 0x4493 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3273 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x32B1 JUMPI PUSH2 0x32B1 PUSH2 0x3FB2 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32DA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xA76 SWAP2 CALLER SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x331C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x332C SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x42FE JUMP JUMPDEST PUSH2 0x337B DUP4 DUP4 DUP4 PUSH2 0x237F JUMP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x338C SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33CC SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x33E2 SWAP1 DUP7 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x341C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x3456 JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x3433 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3450 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4572 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x347C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2A24 SWAP2 CALLER SWAP1 PUSH2 0x4545 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP5 GT PUSH2 0x34A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x34B6 DUP8 DUP10 PUSH2 0x4078 JUMP JUMPDEST PUSH2 0x34C0 SWAP2 SWAP1 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x34CF DUP9 DUP3 PUSH2 0x40B1 JUMP JUMPDEST PUSH2 0x34D9 SWAP1 DUP11 PUSH2 0x4078 JUMP JUMPDEST PUSH2 0x34E3 SWAP2 SWAP1 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x34F1 DUP2 DUP4 PUSH2 0x3F9F JUMP JUMPDEST PUSH2 0x34FB SWAP1 DUP12 PUSH2 0x40B1 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x3526 JUMPI PUSH2 0xB1E DUP3 DUP3 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x357B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x359F SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4185 JUMP JUMPDEST DUP5 PUSH2 0x35D5 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x35F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4024 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x3676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4941 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP9 DUP2 MSTORE DUP8 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP1 DUP9 ADD DUP1 SLOAD SWAP3 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH32 0x4126DE2C73B6B69D46D3290EE98241C5C18CE39A61B29E4E91F877A6D56BB213 SWAP1 PUSH2 0x375E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x4040 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x37ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x37F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3850 SWAP1 DUP5 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x387D SWAP1 DUP5 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F SWAP2 ADD PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x3926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x29AD PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP4 DUP2 MSTORE PUSH1 0x7 DUP6 MSTORE DUP6 DUP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE PUSH1 0x60 DUP1 DUP9 ADD DUP8 MSTORE DUP12 DUP9 MSTORE DUP6 DUP9 ADD DUP4 DUP2 MSTORE DUP9 DUP9 ADD DUP12 DUP2 MSTORE DUP7 DUP5 MSTORE PUSH1 0x3 DUP9 MSTORE SWAP3 DUP9 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SSTORE MLOAD PUSH1 0x1 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP4 MLOAD DUP3 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH32 0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD SWAP2 ADD PUSH2 0x2A24 JUMP JUMPDEST PUSH2 0x3A1E DUP2 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x3A3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3A85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x272D PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3AAF DUP2 PUSH2 0x1416 JUMP JUMPDEST ISZERO PUSH2 0x3AE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x20A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3B47 JUMPI PUSH2 0x3B47 PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3B6F JUMPI PUSH2 0x3B6F PUSH2 0x3B05 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3B88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BF2 DUP6 DUP3 DUP7 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3C01 PUSH1 0x20 DUP5 ADD PUSH2 0x3BA8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C58 DUP5 DUP3 DUP6 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CAD DUP6 DUP3 DUP7 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3C01 PUSH1 0x20 DUP5 ADD PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD60 DUP3 PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3D1F PUSH1 0x20 DUP7 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3D34 PUSH1 0x60 DUP7 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3D54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D77 DUP7 DUP3 DUP8 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3D86 PUSH1 0x20 DUP6 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD60 DUP2 PUSH2 0x3D96 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DDD DUP4 PUSH2 0x3C60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E25 DUP9 DUP4 DUP10 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E48 DUP8 DUP3 DUP9 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3E57 PUSH1 0x40 DUP7 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3E93 PUSH1 0x40 DUP6 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3EB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3ED4 DUP7 DUP3 DUP8 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3EE3 PUSH1 0x20 DUP6 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E93 PUSH1 0x40 DUP6 ADD PUSH2 0x3BA8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F2A DUP8 DUP3 DUP9 ADD PUSH2 0x3B1B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x3D1F PUSH1 0x20 DUP7 ADD PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3F51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3F68 PUSH1 0x40 DUP8 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3F7D PUSH1 0x80 DUP8 ADD PUSH2 0x3C60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC71 PUSH2 0x3F89 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FE3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3FCB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3FFE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3FC8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x9E9 PUSH1 0xF3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x5553 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1153 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1555 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC71 JUMPI PUSH2 0xC71 PUSH2 0x3F89 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x40AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC71 PUSH2 0x3F89 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x40DC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3FC8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18D1 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x417A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD60 DUP2 PUSH2 0x3D96 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1395 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x41BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x41D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST SWAP1 POP PUSH2 0xD60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x39A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1911 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4250 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x31A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7241 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3221 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x24A3 PUSH1 0xF1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x432D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1A51 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x3 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x734E53 PUSH1 0xE8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C95 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x440C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x40C4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x441E DUP2 DUP8 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x6141 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x44A5 JUMPI PUSH2 0x44A5 PUSH2 0x3F89 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x44BF PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH2 0x3C58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x735 PUSH1 0xF4 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x451C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 AND PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D15 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x411C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x40C4 JUMP INVALID NUMBER 0xCD PUSH23 0xB5EB40DA9EA5EB31A199F443F7CF7955EC280BC5981A2E CALLVALUE GASLIMIT 0xC7 SWAP13 SWAP1 SSTORE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xE9 0x1F BLOCKHASH SWAP5 GT 0xF6 SLT SGT PUSH19 0xA07745A074BCE8287231923DB513FB3A3CDD1A 0xB2 GASLIMIT 0xE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "12": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x859D9FD5"
    },
    "25": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4AF7D59"
    },
    "36": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE123182B"
    },
    "47": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE123182B"
    },
    "58": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x868"
    },
    "62": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE1C34C1F"
    },
    "69": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87B"
    },
    "73": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6778FCE"
    },
    "80": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89B"
    },
    "84": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEFAE89F8"
    },
    "91": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C8"
    },
    "95": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF7AAE621"
    },
    "102": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F5"
    },
    "106": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD06636B"
    },
    "113": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x915"
    },
    "117": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4AF7D59"
    },
    "129": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x753"
    },
    "133": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBCEDB2E0"
    },
    "140": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x773"
    },
    "144": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC4802EB2"
    },
    "151": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DB"
    },
    "155": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC5438A55"
    },
    "162": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x808"
    },
    "166": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDB5DC9B7"
    },
    "173": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x828"
    },
    "177": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE9D6805"
    },
    "184": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x848"
    },
    "188": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9995B9A9"
    },
    "200": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9995B9A9"
    },
    "211": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68E"
    },
    "215": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1916AEF"
    },
    "222": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BE"
    },
    "226": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA80AED76"
    },
    "233": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "237": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA902780F"
    },
    "244": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FE"
    },
    "248": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA907B6C5"
    },
    "255": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x713"
    },
    "259": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB2CB78AB"
    },
    "266": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "270": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x859D9FD5"
    },
    "282": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DE"
    },
    "286": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x868399A5"
    },
    "293": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FE"
    },
    "297": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8786DF6A"
    },
    "304": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61E"
    },
    "308": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9211B7B3"
    },
    "315": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63E"
    },
    "319": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97235A1E"
    },
    "326": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66E"
    },
    "330": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x350546D8"
    },
    "342": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8"
    },
    "346": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "347": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C46360B"
    },
    "353": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "357": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C46360B"
    },
    "364": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C3"
    },
    "368": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5BEEFF33"
    },
    "375": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "379": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62748DCC"
    },
    "386": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "390": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "391": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "392": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63879C0B"
    },
    "397": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56E"
    },
    "401": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B785493"
    },
    "408": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "412": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81005219"
    },
    "419": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BE"
    },
    "423": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "424": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "427": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "428": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x350546D8"
    },
    "435": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "436": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D"
    },
    "439": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x354CD135"
    },
    "446": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "447": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D"
    },
    "450": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x384FE2B5"
    },
    "457": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "458": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "461": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "462": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BAF28F8"
    },
    "468": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46D"
    },
    "472": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "474": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3DBEAA54"
    },
    "479": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48D"
    },
    "483": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "484": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "486": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "487": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "488": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "489": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "490": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x169936B4"
    },
    "495": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "GT",
      "path": "0"
    },
    "496": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "499": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "500": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x169936B4"
    },
    "506": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "507": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D"
    },
    "510": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23656642"
    },
    "517": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "518": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36D"
    },
    "521": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "522": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x258E4D9F"
    },
    "528": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "532": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "533": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2DEC7CD2"
    },
    "539": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AD"
    },
    "543": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EF37926"
    },
    "550": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "551": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "554": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F2E9A2A"
    },
    "561": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "562": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "565": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "568": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "569": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "570": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "572": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2FB0C5E"
    },
    "577": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "578": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "581": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "582": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36F3AEC"
    },
    "588": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "589": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BD"
    },
    "592": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C558F5"
    },
    "599": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "600": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "603": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "605": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66792D2"
    },
    "610": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "611": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "614": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "615": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEA8985"
    },
    "621": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "EQ",
      "path": "0"
    },
    "622": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "625": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "626": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "630": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "632": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "635": {
      "fn": null,
      "offset": [
        307,
        24507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "636": {
      "fn": "Idea.<receive>",
      "offset": [
        2199,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 0,
      "value": "0x287"
    },
    "639": {
      "fn": "Idea.<receive>",
      "offset": [
        2228,
        2229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "641": {
      "fn": "Idea.<receive>",
      "offset": [
        2231,
        2240
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "642": {
      "fn": "Idea.<receive>",
      "offset": [
        2241,
        2251
      ],
      "op": "CALLER",
      "path": "1"
    },
    "643": {
      "fn": "Idea.<receive>",
      "offset": [
        2199,
        2219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x935"
    },
    "646": {
      "fn": "Idea.<receive>",
      "jump": "i",
      "offset": [
        2199,
        2252
      ],
      "op": "JUMP",
      "path": "1"
    },
    "647": {
      "fn": "Idea.<receive>",
      "offset": [
        2199,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "648": {
      "offset": [
        307,
        24507
      ],
      "op": "STOP",
      "path": "0"
    },
    "649": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        24507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        24507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "652": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        24507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "653": {
      "first_revert": true,
      "fn": "Idea.<receive>",
      "offset": [
        307,
        24507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "654": {
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "655": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "656": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "657": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "658": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A"
    },
    "661": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "662": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "664": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "665": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "REVERT",
      "path": "2"
    },
    "666": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "670": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "671": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "674": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "675": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "677": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "AND",
      "path": "2"
    },
    "678": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "679": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMP",
      "path": "2"
    },
    "680": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "681": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "683": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "684": {
      "op": "SWAP1"
    },
    "685": {
      "op": "ISZERO"
    },
    "686": {
      "op": "ISZERO"
    },
    "687": {
      "op": "DUP2"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "691": {
      "op": "ADD"
    },
    "692": {
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "693": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "695": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "696": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "697": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "698": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SUB",
      "path": "2"
    },
    "699": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "700": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "RETURN",
      "path": "2"
    },
    "701": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "702": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "703": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "705": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C9"
    },
    "708": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "709": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "711": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "712": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "REVERT",
      "path": "0"
    },
    "713": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "714": {
      "op": "POP"
    },
    "715": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "718": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "721": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "722": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "724": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BBC"
    },
    "727": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "728": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "729": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA83"
    },
    "732": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "735": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "736": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "737": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E9"
    },
    "740": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "741": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "743": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "744": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "REVERT",
      "path": "0"
    },
    "745": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "746": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "POP",
      "path": "0"
    },
    "747": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "750": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB23"
    },
    "753": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMP",
      "path": "0"
    },
    "754": {
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "755": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "756": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP1",
      "path": "2"
    },
    "757": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "758": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FE"
    },
    "761": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "762": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "764": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP1",
      "path": "2"
    },
    "765": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "REVERT",
      "path": "2"
    },
    "766": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "771": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "774": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "775": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "777": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "780": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "781": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "782": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "784": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "786": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "787": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "789": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "790": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "791": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "792": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "794": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "795": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "796": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "797": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "798": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "799": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "802": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "803": {
      "op": "SWAP1"
    },
    "804": {
      "op": "DUP2"
    },
    "805": {
      "op": "MSTORE"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4"
    },
    "812": {
      "op": "JUMP"
    },
    "813": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "814": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "815": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "DUP1",
      "path": "2"
    },
    "816": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "817": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x339"
    },
    "820": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "821": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "823": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "DUP1",
      "path": "2"
    },
    "824": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "REVERT",
      "path": "2"
    },
    "825": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "830": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x348"
    },
    "833": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "834": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "836": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "839": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMP",
      "path": "2"
    },
    "840": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "841": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5C"
    },
    "844": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMP",
      "path": "2"
    },
    "845": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "846": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "847": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "848": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "849": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "852": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "853": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "855": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "856": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "REVERT",
      "path": "0"
    },
    "857": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "862": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "865": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "866": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "868": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C23"
    },
    "871": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "872": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "873": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC19"
    },
    "876": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "877": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "878": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "879": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "880": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "881": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x379"
    },
    "884": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "885": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "887": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "REVERT",
      "path": "0"
    },
    "889": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "894": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "897": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "898": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "900": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0A"
    },
    "903": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMP",
      "path": "0"
    },
    "904": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC77"
    },
    "908": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMP",
      "path": "0"
    },
    "909": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "910": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "911": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "912": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "913": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "916": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "917": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "919": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "920": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "REVERT",
      "path": "0"
    },
    "921": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "922": {
      "op": "POP"
    },
    "923": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "926": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "929": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "930": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "932": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "935": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "936": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "940": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "941": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "942": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "943": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "944": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "945": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "948": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "949": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "951": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "952": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "REVERT",
      "path": "0"
    },
    "953": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "958": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C8"
    },
    "961": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "962": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "964": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "967": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMP",
      "path": "0"
    },
    "968": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "969": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD67"
    },
    "972": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMP",
      "path": "0"
    },
    "973": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "975": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "DUP1",
      "path": "0"
    },
    "976": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "977": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "980": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "981": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "983": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "DUP1",
      "path": "0"
    },
    "984": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "REVERT",
      "path": "0"
    },
    "985": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "990": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "993": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "994": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "996": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "999": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1000": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1001": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA8"
    },
    "1004": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1005": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1006": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1007": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1008": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1009": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1013": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1015": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1016": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1017": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1022": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1025": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1026": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1028": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "1031": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1032": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1033": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE06"
    },
    "1036": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1037": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1038": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1039": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1040": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1041": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x419"
    },
    "1044": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1045": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1047": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1048": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1049": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x287"
    },
    "1054": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x428"
    },
    "1057": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1058": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1060": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CBC"
    },
    "1063": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1064": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1065": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE58"
    },
    "1068": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1069": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1070": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1071": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1073": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x439"
    },
    "1076": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1077": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1079": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1080": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1081": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1086": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x448"
    },
    "1089": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1090": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1092": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD7"
    },
    "1095": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1096": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1097": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1032"
    },
    "1100": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1101": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1102": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1103": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1104": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1105": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1108": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1109": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1111": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1112": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1113": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1118": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x468"
    },
    "1121": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1122": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1124": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C23"
    },
    "1127": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1128": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1129": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1268"
    },
    "1132": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1133": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1134": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1135": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1136": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1137": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1140": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1141": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1145": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1150": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "1153": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1154": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1156": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF9"
    },
    "1159": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1160": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1161": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B3"
    },
    "1164": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1165": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1166": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1167": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1168": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1169": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "1172": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1173": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1175": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1176": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1177": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31F"
    },
    "1182": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A8"
    },
    "1185": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1186": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1188": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CBC"
    },
    "1191": {
      "fn": "Idea.getLiquidResidual",
      "jump": "i",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1192": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "AND",
      "path": "1",
      "statement": 1
    },
    "1202": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3725,
        3732
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1204": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1205": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1206": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1207": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "1209": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1211": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1212": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1214": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1215": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1216": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1217": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3751,
        3779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1218": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3656,
        3786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1219": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1220": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1221": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1222": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1223": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CF"
    },
    "1226": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1227": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1229": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1230": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1231": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1232": {
      "op": "POP"
    },
    "1233": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "1236": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "1239": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1240": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1242": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0A"
    },
    "1245": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1246": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1247": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13320,
        13327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1249": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 2
    },
    "1250": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1251": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1254": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1256": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1257": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1259": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13370
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1261": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1263": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13376
      ],
      "op": "ADD",
      "path": "0"
    },
    "1264": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13376
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1265": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13346,
        13376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        13256,
        13383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1267": {
      "offset": [
        675,
        716
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1268": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1269": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1270": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1271": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FF"
    },
    "1274": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1275": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1277": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1278": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1279": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "offset": [
        675,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31F"
    },
    "1284": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50E"
    },
    "1287": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1288": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1290": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CBC"
    },
    "1293": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        675,
        716
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1294": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1295": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1297": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1299": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1300": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1302": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1303": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1304": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1305": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1307": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1308": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1309": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1310": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1311": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        675,
        716
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1312": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1313": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1314": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1315": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1316": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52C"
    },
    "1319": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1320": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1322": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1323": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1324": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "1329": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1332": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1333": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1335": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0A"
    },
    "1338": {
      "fn": "Administrable.getDividendToken",
      "jump": "i",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1339": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13065,
        13072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1342": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 3
    },
    "1343": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1344": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1345": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1347": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1349": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1350": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1352": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1353": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13115
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1354": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "op": "SUB"
    },
    "1363": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13128
      ],
      "op": "AND",
      "path": "0"
    },
    "1364": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13091,
        13128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1365": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1366": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1367": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1369": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "op": "SWAP1"
    },
    "1379": {
      "op": "SWAP2"
    },
    "1380": {
      "op": "AND"
    },
    "1381": {
      "op": "DUP2"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        13001,
        13135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4"
    },
    "1389": {
      "op": "JUMP"
    },
    "1390": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1391": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1392": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1393": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1394": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57A"
    },
    "1397": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1398": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1400": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1401": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1402": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1407": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x589"
    },
    "1410": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1411": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1413": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3F"
    },
    "1416": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1417": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1418": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F4"
    },
    "1421": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1422": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1423": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1424": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1425": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1426": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59A"
    },
    "1429": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1430": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1432": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1433": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1434": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "1439": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A9"
    },
    "1442": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1443": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1445": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "1448": {
      "fn": "Shardable.getShardSalePrice",
      "jump": "i",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1449": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1450": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11528,
        11535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1452": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 4
    },
    "1453": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1454": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1455": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1457": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1459": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1460": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1462": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1463": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11572
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1464": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1466": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11578
      ],
      "op": "ADD",
      "path": "2"
    },
    "1467": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11578
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1468": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11554,
        11578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1469": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11466,
        11585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1470": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1471": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1472": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1473": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1474": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1477": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1478": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1480": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1481": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1482": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1487": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D9"
    },
    "1490": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1491": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1493": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DA4"
    },
    "1496": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1497": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1498": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1341"
    },
    "1501": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1502": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1503": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1504": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1505": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1506": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EA"
    },
    "1509": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1510": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1512": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1513": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1514": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1519": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "1522": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1523": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1525": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CBC"
    },
    "1528": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1529": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1530": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B8"
    },
    "1533": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1534": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1535": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1536": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1537": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1538": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60A"
    },
    "1541": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1542": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1544": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1545": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1546": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A8"
    },
    "1551": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x619"
    },
    "1554": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1555": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1557": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CBC"
    },
    "1560": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1561": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1562": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "1565": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1566": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1567": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1568": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1569": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1570": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62A"
    },
    "1573": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1574": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1576": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1577": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1578": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1583": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x639"
    },
    "1586": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1587": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1589": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CBC"
    },
    "1592": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1593": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1594": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144B"
    },
    "1597": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1598": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1599": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1600": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1601": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1602": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1605": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1606": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1608": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1609": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1610": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "1615": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "1618": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1619": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1621": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0A"
    },
    "1624": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1625": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1626": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14405,
        14409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1628": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1629": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1630": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1631": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1633": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1635": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1636": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1638": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1639": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1640": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1641": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1643": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "AND",
      "path": "0"
    },
    "1644": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14343,
        14457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1646": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1647": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1648": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1649": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1650": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67A"
    },
    "1653": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1654": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1656": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1657": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1658": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x287"
    },
    "1663": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x689"
    },
    "1666": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1667": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1669": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DC1"
    },
    "1672": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1673": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1674": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A9"
    },
    "1677": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1678": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1679": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1680": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1681": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1682": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69A"
    },
    "1685": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1686": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1688": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1689": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1690": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "1695": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A9"
    },
    "1698": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1699": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1701": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "1704": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1705": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1706": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1708": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 6
    },
    "1709": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1710": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 7
    },
    "1711": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1712": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1713": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1715": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1717": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1718": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1720": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1721": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1722": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1723": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "1724": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1725": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1726": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1727": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1728": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1729": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1730": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CA"
    },
    "1733": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1734": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1737": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1738": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1743": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D9"
    },
    "1746": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1747": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1749": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DEB"
    },
    "1752": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1753": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1754": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B3"
    },
    "1757": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1758": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1759": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1760": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1761": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1762": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EA"
    },
    "1765": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1766": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1768": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1769": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1770": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "1775": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F9"
    },
    "1778": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1779": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1781": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "1784": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1785": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1786": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "1789": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1790": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1791": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1792": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1793": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1794": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70A"
    },
    "1797": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1798": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1800": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1801": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1802": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11150,
        11157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1806": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11176,
        11181
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 8
    },
    "1807": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "1810": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11103,
        11188
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1811": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1812": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1813": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1814": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1815": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "1818": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1819": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1821": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1822": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1823": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "1828": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72E"
    },
    "1831": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1832": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1834": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "1837": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1838": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153E"
    },
    "1842": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1843": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1844": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1845": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1846": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1847": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73F"
    },
    "1850": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1851": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1853": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1854": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1855": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "1860": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x74E"
    },
    "1863": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1864": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1866": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E67"
    },
    "1869": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1870": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1871": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15D4"
    },
    "1874": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1875": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1876": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1877": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1878": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1879": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75F"
    },
    "1882": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1883": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1885": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1886": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1887": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "1892": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "1895": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1896": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1898": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C23"
    },
    "1901": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1902": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1903": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1650"
    },
    "1906": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1907": {
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1908": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1909": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1910": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1911": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x77F"
    },
    "1914": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1915": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1917": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1918": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1919": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B8"
    },
    "1924": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78E"
    },
    "1927": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1928": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1930": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "1933": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1934": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1935": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1937": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1939": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1940": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1942": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1943": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1944": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1945": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1947": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1948": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1949": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1950": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1951": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1953": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1954": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ADD",
      "path": "2"
    },
    "1955": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1956": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1958": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1959": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1960": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ADD",
      "path": "2"
    },
    "1961": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1962": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "offset": [
        3162,
        3210
      ],
      "op": "AND",
      "path": "2"
    },
    "1973": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1975": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1976": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1977": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1979": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1980": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1981": {
      "op": "SWAP4"
    },
    "1982": {
      "op": "DUP5"
    },
    "1983": {
      "op": "MSTORE"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "op": "SUB"
    },
    "1992": {
      "op": "SWAP1"
    },
    "1993": {
      "op": "SWAP3"
    },
    "1994": {
      "op": "AND"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1997": {
      "op": "DUP5"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "SWAP1"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4"
    },
    "2010": {
      "op": "JUMP"
    },
    "2011": {
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2012": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2013": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2014": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2015": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E7"
    },
    "2018": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2019": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2021": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2022": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2023": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "2028": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F6"
    },
    "2031": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2032": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2034": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CBC"
    },
    "2037": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2038": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2039": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2041": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2043": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2044": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2046": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2047": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2048": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2049": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2051": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2052": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2053": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2054": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2055": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2056": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2057": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2058": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2059": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2060": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x814"
    },
    "2063": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2064": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2066": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2067": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2068": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "2073": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x823"
    },
    "2076": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2077": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2079": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9C"
    },
    "2082": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2083": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2084": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1680"
    },
    "2087": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2088": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2089": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2090": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2091": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2092": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x834"
    },
    "2095": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2096": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2098": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2099": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2100": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "2105": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x843"
    },
    "2108": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2109": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2111": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C77"
    },
    "2114": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2115": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2116": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "2119": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2120": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2121": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2122": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2123": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2124": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x854"
    },
    "2127": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2128": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2130": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2131": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2132": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "2137": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x863"
    },
    "2140": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2141": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2143": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EF1"
    },
    "2146": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2147": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2148": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182D"
    },
    "2151": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2152": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2153": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "2156": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x876"
    },
    "2159": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2160": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2162": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CD7"
    },
    "2165": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2166": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2167": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184D"
    },
    "2170": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2171": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2172": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2173": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2174": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2175": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x887"
    },
    "2178": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2179": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2181": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2182": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2183": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "2188": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x896"
    },
    "2191": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2192": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2194": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CBC"
    },
    "2197": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2198": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2199": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E40"
    },
    "2202": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2203": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2204": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2205": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2206": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2207": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2211": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2213": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2215": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "2220": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B6"
    },
    "2223": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2224": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2226": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0A"
    },
    "2229": {
      "fn": "Administrable.getDividendResidual",
      "jump": "i",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2230": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2231": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13570,
        13577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2233": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "2234": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2235": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2236": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "2238": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2240": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2241": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2243": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2244": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2245": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2246": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13596,
        13624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2247": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13503,
        13631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2248": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2249": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2250": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2251": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2252": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D4"
    },
    "2255": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2256": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2258": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2259": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2260": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "2265": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E3"
    },
    "2268": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2269": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2271": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "2274": {
      "fn": "Shardable.getShardExpirationClock",
      "jump": "i",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2275": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2276": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11335,
        11342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2278": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2279": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2280": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2281": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2283": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2285": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2286": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2288": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2289": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2290": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2291": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2292": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11267,
        11395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2293": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2294": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2295": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2296": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2297": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x901"
    },
    "2300": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2301": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2303": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2304": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2305": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "2310": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x910"
    },
    "2313": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2314": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2316": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F39"
    },
    "2319": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2320": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2321": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E72"
    },
    "2324": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2325": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2326": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2327": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2328": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2329": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x921"
    },
    "2332": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2333": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2335": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2336": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2337": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "2342": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x930"
    },
    "2345": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2346": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2348": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CD7"
    },
    "2351": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2352": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2353": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF0"
    },
    "2356": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2357": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23848,
        24301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2358": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23957,
        24010
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x940"
    },
    "2361": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23984,
        23996
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2362": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23998,
        24003
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2363": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24005,
        24009
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2364": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23957,
        23983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F21"
    },
    "2367": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23957,
        24010
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2368": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23957,
        24010
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2369": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2371": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2372": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "DUP2"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2384": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2389": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2390": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2391": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2393": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2394": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2395": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2397": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2398": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2399": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2400": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "SUB",
      "path": "0"
    },
    "2401": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2402": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "ADD",
      "path": "0"
    },
    "2403": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2404": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24073
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "SUB"
    },
    "2413": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2414": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "AND",
      "path": "0"
    },
    "2415": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2417": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2419": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2420": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2421": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2422": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2424": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24087
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2425": {
      "branch": 177,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24092
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2426": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24122
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2427": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24122
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2428": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98D"
    },
    "2431": {
      "branch": 177,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24122
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24096,
        24122
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2442": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24096,
        24122
      ],
      "op": "AND",
      "path": "0"
    },
    "2443": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24096,
        24122
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2444": {
      "branch": 178,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24096,
        24122
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2445": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24052,
        24122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2446": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24048,
        24188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2447": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24048,
        24188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D0"
    },
    "2450": {
      "branch": 178,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24048,
        24188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2451": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24176,
        24177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "2453": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2455": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2457": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2458": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AD"
    },
    "2461": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2462": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2469": {
      "op": "SHL"
    },
    "2470": {
      "op": "DUP2"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "SWAP1"
    },
    "2476": {
      "op": "JUMP"
    },
    "2477": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2478": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2479": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2480": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2481": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2483": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "ADD",
      "path": "0"
    },
    "2484": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2486": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2487": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2488": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2489": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "SUB",
      "path": "0"
    },
    "2490": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2491": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2492": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2494": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2495": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2496": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2497": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CA"
    },
    "2500": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2501": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2502": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9F"
    },
    "2505": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        24138,
        24177
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2506": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2507": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2508": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2509": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24138,
        24177
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24048,
        24188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2513": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24236,
        24241
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "2514": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2516": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2518": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2519": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EA"
    },
    "2522": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2523": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2530": {
      "op": "SHL"
    },
    "2531": {
      "op": "DUP2"
    },
    "2532": {
      "op": "MSTORE"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2535": {
      "op": "ADD"
    },
    "2536": {
      "op": "SWAP1"
    },
    "2537": {
      "op": "JUMP"
    },
    "2538": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2539": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2540": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2541": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2542": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2544": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "ADD",
      "path": "0"
    },
    "2545": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2547": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2548": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2549": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2550": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "SUB",
      "path": "0"
    },
    "2551": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2552": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24218
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2553": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2555": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24219,
        24231
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "SUB"
    },
    "2564": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "AND",
      "path": "0"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "AND",
      "path": "0"
    },
    "2574": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2575": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2576": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2578": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "ADD",
      "path": "0"
    },
    "2579": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2580": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2581": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2582": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2584": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "ADD",
      "path": "0"
    },
    "2585": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2587": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2588": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2590": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2591": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2592": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2593": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2A"
    },
    "2596": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2597": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2598": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9F"
    },
    "2601": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        24197,
        24241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2602": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2603": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2604": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2605": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24197,
        24241
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "2610": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2611": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2618": {
      "op": "SHL"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "op": "DUP1"
    },
    "2621": {
      "op": "DUP7"
    },
    "2622": {
      "op": "AND"
    },
    "2623": {
      "op": "DUP3"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2627": {
      "op": "DUP3"
    },
    "2628": {
      "op": "ADD"
    },
    "2629": {
      "op": "DUP6"
    },
    "2630": {
      "op": "SWAP1"
    },
    "2631": {
      "op": "MSTORE"
    },
    "2632": {
      "op": "DUP4"
    },
    "2633": {
      "op": "AND"
    },
    "2634": {
      "op": "SWAP2"
    },
    "2635": {
      "op": "DUP2"
    },
    "2636": {
      "op": "ADD"
    },
    "2637": {
      "op": "SWAP2"
    },
    "2638": {
      "op": "SWAP1"
    },
    "2639": {
      "op": "SWAP2"
    },
    "2640": {
      "op": "MSTORE"
    },
    "2641": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF"
    },
    "2674": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2679": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2681": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2682": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2683": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2684": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "SUB",
      "path": "0"
    },
    "2685": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2686": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        24256,
        24294
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2687": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23848,
        24301
      ],
      "op": "POP",
      "path": "0"
    },
    "2688": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23848,
        24301
      ],
      "op": "POP",
      "path": "0"
    },
    "2689": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23848,
        24301
      ],
      "op": "POP",
      "path": "0"
    },
    "2690": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "o",
      "offset": [
        23848,
        24301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2691": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2692": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11961,
        11971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2693": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2696": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2697": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2698": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "2701": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2702": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2703": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA97"
    },
    "2706": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2707": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2709": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2710": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2711": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2712": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12018,
        12026
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2713": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2715": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2716": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "GT",
      "path": "0"
    },
    "2717": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2718": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA9"
    },
    "2721": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2722": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA9"
    },
    "2725": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "2728": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2729": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2730": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2732": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12003,
        12013
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2733": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2735": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2736": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB9"
    },
    "2739": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2740": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2741": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "2744": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11991,
        12014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2745": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2746": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2747": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2748": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2749": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2751": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2752": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2753": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2754": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2755": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SUB",
      "path": "0"
    },
    "2756": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2758": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "ADD",
      "path": "0"
    },
    "2759": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2760": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2761": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2762": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2764": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12014
      ],
      "op": "AND",
      "path": "0"
    },
    "2765": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2767": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2768": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "GT",
      "path": "0"
    },
    "2769": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2770": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADD"
    },
    "2773": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2774": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADD"
    },
    "2777": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "2780": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2781": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2782": {
      "branch": 179,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11991,
        12026
      ],
      "op": "SUB",
      "path": "0"
    },
    "2783": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "2786": {
      "branch": 179,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2787": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2789": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2798": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2801": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2803": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2804": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "ADD",
      "path": "0"
    },
    "2805": {
      "op": "MSTORE"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2810": {
      "op": "DUP3"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH2",
      "value": "0x4153"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2828": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2830": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2831": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2832": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2833": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "SUB",
      "path": "0"
    },
    "2834": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2835": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2836": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11983,
        12033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12043,
        12078
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xB1E"
    },
    "2840": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12058,
        12068
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2841": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12069,
        12077
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2842": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12043,
        12057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F76"
    },
    "2845": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        12043,
        12078
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2846": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        12043,
        12078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2847": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "POP",
      "path": "0"
    },
    "2848": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "POP",
      "path": "0"
    },
    "2849": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11865,
        12085
      ],
      "op": "POP",
      "path": "0"
    },
    "2850": {
      "fn": "Administrable.setBasePermit",
      "jump": "o",
      "offset": [
        11865,
        12085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2851": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2852": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2854": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2855": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2856": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2858": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "2859": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2861": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2862": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2863": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2865": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2866": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2867": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2869": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "2870": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2877": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2878": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "2879": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB48"
    },
    "2882": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2883": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2884": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "2887": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2888": {
      "fn": "Administrable.liquidize",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2889": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB51"
    },
    "2892": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2893": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2895": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2896": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2897": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2898": {
      "fn": "Administrable.liquidize",
      "offset": [
        12533,
        12545
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xB59"
    },
    "2901": {
      "fn": "Administrable.liquidize",
      "offset": [
        12533,
        12543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2025"
    },
    "2904": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        12533,
        12545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2905": {
      "fn": "Administrable.liquidize",
      "offset": [
        12533,
        12545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2906": {
      "fn": "Administrable.liquidize",
      "offset": [
        12472,
        12552
      ],
      "op": "POP",
      "path": "0"
    },
    "2907": {
      "fn": "Administrable.liquidize",
      "jump": "o",
      "offset": [
        12472,
        12552
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2908": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10390,
        10552
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2909": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2911": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2912": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2913": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2914": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2916": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2918": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2919": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2921": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2922": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2923": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2925": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "2926": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2927": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10443,
        10448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2928": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10443,
        10448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "2938": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2939": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "2940": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB97"
    },
    "2943": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2944": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2946": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2953": {
      "op": "SHL"
    },
    "2954": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2955": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2956": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2958": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "2959": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "2962": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2963": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4008"
    },
    "2966": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2967": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2968": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10465,
        10470
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2969": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB1"
    },
    "2972": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2973": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2975": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2976": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2977": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2978": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2979": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2980": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2982": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2984": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2985": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2987": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2988": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2989": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2990": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "2991": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2992": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2993": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2994": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCD"
    },
    "2997": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2998": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3000": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3009": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3010": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3012": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "3013": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "3016": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3017": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "3020": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3021": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3022": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x0"
    },
    "3024": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3025": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3026": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3027": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3029": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3031": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3032": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3034": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3035": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3036": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3037": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3039": {
      "branch": 233,
      "fn": "Shardable.cancelSale",
      "offset": [
        10490,
        10510
      ],
      "op": "AND",
      "path": "2"
    },
    "3040": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC10"
    },
    "3043": {
      "branch": 233,
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3044": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3046": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3055": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3058": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3060": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3061": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "ADD",
      "path": "2"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3067": {
      "op": "DUP3"
    },
    "3068": {
      "op": "ADD"
    },
    "3069": {
      "op": "MSTORE"
    },
    "3070": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3078": {
      "op": "DUP3"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "MSTORE"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3083": {
      "op": "ADD"
    },
    "3084": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "3087": {
      "op": "JUMP"
    },
    "3088": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10482,
        10517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3089": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10527,
        10545
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xB1E"
    },
    "3092": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10539,
        10544
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3093": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10527,
        10538
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2077"
    },
    "3096": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10527,
        10545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3097": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3098": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14092,
        14096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3100": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14141
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0xE"
    },
    "3102": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14142,
        14150
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3103": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3105": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3106": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2B"
    },
    "3109": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3110": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3111": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "3114": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        14115,
        14151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3115": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3116": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3117": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3118": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3119": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3121": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "ADD",
      "path": "0"
    },
    "3122": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3124": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3125": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3126": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3127": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SUB",
      "path": "0"
    },
    "3128": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3129": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3130": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14151
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3131": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14155,
        14156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3133": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14156
      ],
      "op": "EQ",
      "path": "0"
    },
    "3134": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3135": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3136": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "3139": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3140": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "POP",
      "path": "0"
    },
    "3141": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3143": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14174,
        14182
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3144": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3146": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3147": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC54"
    },
    "3150": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3151": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3152": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "3155": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        14160,
        14183
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3156": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3157": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3158": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3159": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3160": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3162": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3163": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3164": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3166": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3167": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3168": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3169": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SUB",
      "path": "0"
    },
    "3170": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3171": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "ADD",
      "path": "0"
    },
    "3172": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3173": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14183
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3174": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3176": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3177": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3178": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3179": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3180": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3181": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3182": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3183": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14195
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3184": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14160,
        14200
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3185": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14115,
        14200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3186": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14108,
        14200
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3187": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        14027,
        14207
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "o",
      "offset": [
        14027,
        14207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3191": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3192": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3194": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3195": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3196": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3198": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3199": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3201": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3202": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3203": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3205": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3206": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3207": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3209": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3210": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3217": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3218": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "3219": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9C"
    },
    "3222": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3223": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3224": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "3227": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3228": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3229": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA5"
    },
    "3232": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3233": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3235": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3236": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3237": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3238": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8372,
        8399
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0xCAE"
    },
    "3241": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8390,
        8398
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3242": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8372,
        8389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C6"
    },
    "3245": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8372,
        8399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3246": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8372,
        8399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3247": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "POP",
      "path": "0"
    },
    "3248": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8288,
        8406
      ],
      "op": "POP",
      "path": "0"
    },
    "3249": {
      "fn": "Administrable.dissolveDividend",
      "jump": "o",
      "offset": [
        8288,
        8406
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3250": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3251": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15679,
        15683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3253": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBD"
    },
    "3256": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15715,
        15722
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3257": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E40"
    },
    "3260": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15701,
        15723
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3261": {
      "branch": 180,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15723
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3262": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3263": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCA"
    },
    "3266": {
      "branch": 180,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15727,
        15747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3270": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15727,
        15747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3271": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15727,
        15747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3273": {
      "branch": 181,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15727,
        15747
      ],
      "op": "AND",
      "path": "0"
    },
    "3274": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15701,
        15747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3275": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15695,
        15765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD6"
    },
    "3278": {
      "branch": 181,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15695,
        15765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15758,
        15763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "3282": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15751,
        15763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "3285": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15751,
        15763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3286": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15695,
        15765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3287": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15813,
        15838
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x2"
    },
    "3289": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3291": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15789,
        15799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3292": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3294": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3295": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE8"
    },
    "3298": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3299": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3300": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "3303": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15781,
        15800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3304": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3305": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3306": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3307": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3308": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3310": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3311": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3312": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3314": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3315": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3316": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3317": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SUB",
      "path": "0"
    },
    "3318": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3319": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "ADD",
      "path": "0"
    },
    "3320": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3321": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15800
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3331": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "AND",
      "path": "0"
    },
    "3332": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3334": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3335": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3336": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3337": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3338": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3339": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3340": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3341": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3342": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3344": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15809
      ],
      "op": "AND",
      "path": "0"
    },
    "3345": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3347": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3348": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "GT",
      "path": "0"
    },
    "3349": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3350": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "3353": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3354": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "3357": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "3360": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15781,
        15838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3361": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3362": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15838
      ],
      "op": "EQ",
      "path": "0"
    },
    "3363": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15894
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3364": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD60"
    },
    "3367": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15894
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15869,
        15894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3371": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3373": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15854,
        15864
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3374": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3376": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3377": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3A"
    },
    "3380": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3381": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "3385": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15842,
        15865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3386": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3387": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3388": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3389": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3390": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3392": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3393": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3394": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3395": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3396": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SUB",
      "path": "0"
    },
    "3397": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3399": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "ADD",
      "path": "0"
    },
    "3400": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3401": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3402": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3403": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3405": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15865
      ],
      "op": "AND",
      "path": "0"
    },
    "3406": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3408": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3409": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "GT",
      "path": "0"
    },
    "3410": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3411": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5E"
    },
    "3414": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3415": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5E"
    },
    "3418": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "3421": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15842,
        15894
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3422": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3423": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15842,
        15894
      ],
      "op": "EQ",
      "path": "0"
    },
    "3424": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15781,
        15894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3425": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15774,
        15894
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3426": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15593,
        15901
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3427": {
      "op": "POP"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "o",
      "offset": [
        15593,
        15901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3431": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3432": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12816,
        12823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3434": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12855
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0xF"
    },
    "3436": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12856,
        12864
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3437": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3439": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3440": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD79"
    },
    "3443": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3444": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3445": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "3448": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12842,
        12865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3449": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3450": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3451": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3452": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3453": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3455": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3456": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3457": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3458": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3459": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3460": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SUB",
      "path": "0"
    },
    "3461": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3463": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3464": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3465": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "ADD",
      "path": "0"
    },
    "3466": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3467": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3468": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12865
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3478": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "AND",
      "path": "0"
    },
    "3479": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3481": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3482": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3483": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3484": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3485": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3486": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3487": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3488": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3489": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12842,
        12879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3492": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3493": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "POP",
      "path": "0"
    },
    "3494": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12726,
        12886
      ],
      "op": "POP",
      "path": "0"
    },
    "3495": {
      "fn": "Administrable.getBankBalance",
      "jump": "o",
      "offset": [
        12726,
        12886
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3496": {
      "fn": "Administrable.createBank",
      "offset": [
        8578,
        8731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3497": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3499": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3500": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3501": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3503": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3504": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3506": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3507": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3508": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3510": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3511": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3512": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3514": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3515": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3522": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3523": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "3524": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCD"
    },
    "3527": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3528": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3529": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "3532": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3533": {
      "fn": "Administrable.createBank",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3534": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD6"
    },
    "3537": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3538": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3540": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3541": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3542": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3543": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3545": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3546": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3547": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3549": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "3550": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3551": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3552": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "3553": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDFC"
    },
    "3556": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3557": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3559": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3566": {
      "op": "SHL"
    },
    "3567": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3568": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3569": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3571": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "3572": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "3575": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3576": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "3579": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3580": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3581": {
      "fn": "Administrable.createBank",
      "offset": [
        8693,
        8724
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0xB1E"
    },
    "3584": {
      "fn": "Administrable.createBank",
      "offset": [
        8705,
        8713
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3585": {
      "fn": "Administrable.createBank",
      "offset": [
        8714,
        8723
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3586": {
      "fn": "Administrable.createBank",
      "offset": [
        8693,
        8704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B1"
    },
    "3589": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8693,
        8724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3590": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3591": {
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3593": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3594": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3595": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3597": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "3598": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3600": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3601": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3602": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3604": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3605": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3606": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3608": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3614": {
      "op": "SHL"
    },
    "3615": {
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3616": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3617": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "POP",
      "path": "0"
    },
    "3618": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2B"
    },
    "3621": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3622": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3623": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "3626": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3627": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3628": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE34"
    },
    "3631": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3632": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3634": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3635": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3636": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3637": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9584,
        9592
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3638": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3F"
    },
    "3641": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3642": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3643": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "3646": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3647": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3648": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE48"
    },
    "3651": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3652": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3654": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3655": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3656": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3657": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9604,
        9640
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0xE52"
    },
    "3660": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9621,
        9629
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3661": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9630,
        9639
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3662": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9604,
        9620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C3"
    },
    "3665": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9604,
        9640
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3666": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9604,
        9640
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3667": {
      "offset": [
        4051,
        4052
      ],
      "op": "POP",
      "path": "0"
    },
    "3668": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "POP",
      "path": "0"
    },
    "3669": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "POP",
      "path": "0"
    },
    "3670": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9471,
        9647
      ],
      "op": "POP",
      "path": "0"
    },
    "3671": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "o",
      "offset": [
        9471,
        9647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3672": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2870,
        3494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3673": {
      "offset": [
        5930,
        5955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE61"
    },
    "3676": {
      "offset": [
        5944,
        5954
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3677": {
      "offset": [
        5930,
        5943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E40"
    },
    "3680": {
      "jump": "i",
      "offset": [
        5930,
        5955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3681": {
      "branch": 234,
      "fn": "Idea.claimLiquid",
      "offset": [
        5930,
        5955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3682": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE92"
    },
    "3685": {
      "branch": 234,
      "offset": [
        5922,
        5962
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3686": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3688": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "offset": [
        5922,
        5962
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3697": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3700": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3702": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3703": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "ADD",
      "path": "2"
    },
    "3704": {
      "op": "MSTORE"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3709": {
      "op": "DUP3"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "op": "MSTORE"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3720": {
      "op": "DUP3"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "MSTORE"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "3729": {
      "op": "JUMP"
    },
    "3730": {
      "offset": [
        5922,
        5962
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3731": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2956,
        2982
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0xE9B"
    },
    "3734": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2969,
        2981
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3735": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2956,
        2968
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "3738": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2956,
        2982
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3739": {
      "branch": 213,
      "fn": "Idea.claimLiquid",
      "offset": [
        2956,
        2982
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3740": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB7"
    },
    "3743": {
      "branch": 213,
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3744": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3746": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3755": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3756": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3758": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "ADD",
      "path": "1"
    },
    "3759": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "3762": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3763": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405C"
    },
    "3766": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2948,
        2989
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3767": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2948,
        2989
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3768": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3028,
        3038
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3769": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2999,
        3012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3771": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3772": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3773": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3774": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3776": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3778": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3779": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3780": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3781": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3783": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3784": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3785": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3786": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3015,
        3039
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "op": "SUB"
    },
    "3795": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 27
    },
    "3796": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "AND",
      "path": "1"
    },
    "3797": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3798": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3799": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3074
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3801": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3802": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3803": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3804": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3805": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3088
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3806": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3807": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3808": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3809": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3810": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3811": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3812": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3813": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3814": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3815": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3816": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3818": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3058,
        3095
      ],
      "op": "AND",
      "path": "1"
    },
    "3819": {
      "branch": 214,
      "fn": "Idea.claimLiquid",
      "offset": [
        3057,
        3095
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3820": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1C"
    },
    "3823": {
      "branch": 214,
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3824": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3826": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3833": {
      "op": "SHL"
    },
    "3834": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3835": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3838": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3840": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3841": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "ADD",
      "path": "1"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3847": {
      "op": "DUP3"
    },
    "3848": {
      "op": "ADD"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3858": {
      "op": "DUP3"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "op": "MSTORE"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "3867": {
      "op": "JUMP"
    },
    "3868": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3049,
        3102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "3878": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "AND",
      "path": "1"
    },
    "3879": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3881": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3882": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3883": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3884": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3886": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3888": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3889": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3890": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3891": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3893": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3894": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3895": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3896": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3897": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3898": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3899": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3900": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3901": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3902": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3903": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3149
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3904": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3905": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3908": {
      "op": "NOT"
    },
    "3909": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "AND",
      "path": "1"
    },
    "3910": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3152,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3912": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "OR",
      "path": "1"
    },
    "3913": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3914": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3156
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3915": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3263,
        3268
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3916": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3263,
        3268
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3917": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3918": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3919": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3921": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3922": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3923": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3924": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3925": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3926": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3927": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3928": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3929": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3930": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3932": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3933": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3934": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3935": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3936": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3937": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3236
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3938": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3939": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3940": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3941": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3194
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "3943": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3944": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3945": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3946": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3947": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3948": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3208
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3949": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3950": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3112,
        3142
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3951": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3952": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3239,
        3269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3953": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3236
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7A"
    },
    "3956": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3236
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3957": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3211,
        3236
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3958": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3236
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4078"
    },
    "3961": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3188,
        3236
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3962": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3236
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3963": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF84"
    },
    "3966": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3967": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3968": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x408F"
    },
    "3971": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3188,
        3269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3972": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3188,
        3269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3973": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3166,
        3269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3974": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3166,
        3269
      ],
      "op": "POP",
      "path": "1"
    },
    "3975": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3287,
        3298
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "3976": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3302,
        3303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3978": {
      "branch": 215,
      "fn": "Idea.claimLiquid",
      "offset": [
        3287,
        3303
      ],
      "op": "SUB",
      "path": "1"
    },
    "3979": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB0"
    },
    "3982": {
      "branch": 215,
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3983": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3985": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3992": {
      "op": "SHL"
    },
    "3993": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3994": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3997": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3999": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4000": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "ADD",
      "path": "1"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4006": {
      "op": "DUP3"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "MSTORE"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "4015": {
      "op": "JUMP"
    },
    "4016": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3279,
        3308
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "op": "SUB"
    },
    "4025": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 30
    },
    "4026": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "AND",
      "path": "1"
    },
    "4027": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4029": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4030": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4031": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4032": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4034": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4036": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4037": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4039": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4040": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4041": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4042": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4043": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3350,
        3361
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4044": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3350,
        3361
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4045": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4046": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD8"
    },
    "4049": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4050": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3350,
        3361
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4051": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3350,
        3361
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4052": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40B1"
    },
    "4055": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3318,
        3361
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4056": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4057": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4058": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4059": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3318,
        3361
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4060": {
      "op": "POP"
    },
    "4061": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3371,
        3422
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0xFE9"
    },
    "4064": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3371,
        3422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3386,
        3398
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4067": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3399,
        3410
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4068": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3411,
        3421
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4069": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3371,
        3385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x237F"
    },
    "4072": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3371,
        3422
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4073": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3371,
        3422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4074": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x40"
    },
    "4076": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4077": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "op": "DUP6"
    },
    "4087": {
      "op": "AND"
    },
    "4088": {
      "op": "DUP2"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "op": "DUP2"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "op": "DUP4"
    },
    "4095": {
      "op": "SWAP1"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3476,
        3486
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4098": {
      "op": "SWAP2"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "SWAP2"
    },
    "4102": {
      "op": "SWAP1"
    },
    "4103": {
      "op": "SWAP2"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x1397D005A56670CBE383372BD4743EAA779AF18164D00DC6D12A6659418E1BBF"
    },
    "4138": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3437,
        3487
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA76"
    },
    "4145": {
      "op": "JUMP"
    },
    "4146": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4147": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4149": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4150": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4151": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4152": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4154": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4156": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4157": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4159": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4160": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4161": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4163": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "4164": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4165": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5819,
        5824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4166": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5819,
        5824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "op": "SUB"
    },
    "4175": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "4176": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4177": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "4178": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x106D"
    },
    "4181": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4182": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4184": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4191": {
      "op": "SHL"
    },
    "4192": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4193": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4194": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4196": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "4197": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "4200": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4201": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4008"
    },
    "4204": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4205": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4206": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14405,
        14409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4208": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4209": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4210": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4211": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "4213": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4215": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4216": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4218": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4219": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4220": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4221": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5847,
        5855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4222": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5847,
        5855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4223": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4225": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "AND",
      "path": "0"
    },
    "4226": {
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108A"
    },
    "4229": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4230": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4232": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4233": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4234": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4235": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4237": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4238": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4239": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4241": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "4242": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4243": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4244": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "4245": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B0"
    },
    "4248": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4249": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4251": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4260": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4261": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4263": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "4264": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "4267": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4268": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "4271": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4272": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4273": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5888,
        5916
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x10BA"
    },
    "4276": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5901,
        5906
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4277": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5907,
        5915
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4278": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5888,
        5900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF0"
    },
    "4281": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5888,
        5916
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4282": {
      "branch": 182,
      "fn": "Administrable.claimDividend",
      "offset": [
        5888,
        5916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4283": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EC"
    },
    "4286": {
      "branch": 182,
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4287": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4289": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4296": {
      "op": "SHL"
    },
    "4297": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4298": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4301": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4303": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4304": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "ADD",
      "path": "0"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "MSTORE"
    },
    "4313": {
      "op": "PUSH3",
      "value": "0x2720A3"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4319": {
      "op": "SHL"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4322": {
      "op": "DUP3"
    },
    "4323": {
      "op": "ADD"
    },
    "4324": {
      "op": "MSTORE"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "4331": {
      "op": "JUMP"
    },
    "4332": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5880,
        5924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4333": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x0"
    },
    "4335": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4336": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4337": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4338": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "4340": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4342": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4343": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4344": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4345": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4347": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4348": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4349": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5970
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4350": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4351": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4352": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4353": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4354": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4355": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4356": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4357": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4358": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4359": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4361": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5977
      ],
      "op": "AND",
      "path": "0"
    },
    "4362": {
      "branch": 183,
      "fn": "Administrable.claimDividend",
      "offset": [
        5942,
        5986
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4363": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113B"
    },
    "4366": {
      "branch": 183,
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4367": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4369": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4378": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4381": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4383": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4384": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "ADD",
      "path": "0"
    },
    "4385": {
      "op": "MSTORE"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4390": {
      "op": "DUP3"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "MSTORE"
    },
    "4393": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "4410": {
      "op": "JUMP"
    },
    "4411": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5934,
        5993
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4412": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "4414": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4415": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4416": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4417": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "4419": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4421": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4422": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4423": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4424": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4426": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4427": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4428": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6031
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4429": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4430": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4431": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4432": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4433": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4434": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4435": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4436": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6038
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4437": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4438": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4441": {
      "op": "NOT"
    },
    "4442": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "AND",
      "path": "0"
    },
    "4443": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4445": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4446": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4447": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "OR",
      "path": "0"
    },
    "4448": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4449": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4450": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6003,
        6045
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4451": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6164,
        6169
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4452": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6164,
        6169
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4453": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4454": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4455": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4457": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4458": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4459": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4460": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4461": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4462": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4463": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4464": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4465": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4466": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4468": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4469": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4470": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4471": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4472": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6130
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4473": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6112,
        6137
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4474": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4475": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4476": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4477": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4479": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4480": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4481": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4482": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4483": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4484": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6103
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4485": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6109
      ],
      "op": "ADD",
      "path": "0"
    },
    "4486": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4487": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4488": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4489": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1191"
    },
    "4492": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6137
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4493": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4078"
    },
    "4496": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6079,
        6137
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4497": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6137
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4498": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119B"
    },
    "4501": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4502": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4503": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408F"
    },
    "4506": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6079,
        6170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4507": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6079,
        6170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4508": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6055,
        6170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4509": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6055,
        6170
      ],
      "op": "POP",
      "path": "0"
    },
    "4510": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6188,
        6201
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "4511": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4513": {
      "branch": 184,
      "fn": "Administrable.claimDividend",
      "offset": [
        6188,
        6206
      ],
      "op": "SUB",
      "path": "0"
    },
    "4514": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D3"
    },
    "4517": {
      "branch": 184,
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4518": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4520": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4529": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4532": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4534": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4535": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "ADD",
      "path": "0"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH3",
      "value": "0x445453"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4550": {
      "op": "SHL"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "MSTORE"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "4562": {
      "op": "JUMP"
    },
    "4563": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6180,
        6214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4564": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x0"
    },
    "4566": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4567": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4568": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4569": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "4571": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4573": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4574": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4576": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4577": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4578": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4579": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4580": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6256,
        6269
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4581": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6256,
        6269
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4582": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4583": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F1"
    },
    "4586": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4587": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6256,
        6269
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4588": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6256,
        6269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4589": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "4592": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6224,
        6269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4593": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4594": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4595": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4596": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6224,
        6269
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x0"
    },
    "4601": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4602": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4603": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4604": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4606": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4608": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4609": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4611": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4612": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6318
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4613": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4614": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6279,
        6357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1219"
    },
    "4617": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6279,
        6357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "op": "SUB"
    },
    "4626": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6294,
        6331
      ],
      "op": "AND",
      "path": "0"
    },
    "4627": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6332,
        6345
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4628": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6346,
        6356
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4629": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6279,
        6293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237F"
    },
    "4632": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6279,
        6357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4633": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6279,
        6357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4634": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "4636": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4637": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4638": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4640": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4641": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "ADD",
      "path": "0"
    },
    "4642": {
      "op": "DUP7"
    },
    "4643": {
      "op": "SWAP1"
    },
    "4644": {
      "op": "MSTORE"
    },
    "4645": {
      "op": "SWAP1"
    },
    "4646": {
      "op": "DUP2"
    },
    "4647": {
      "op": "ADD"
    },
    "4648": {
      "op": "DUP3"
    },
    "4649": {
      "op": "SWAP1"
    },
    "4650": {
      "op": "MSTORE"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "MLOAD"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4657": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "4660": {
      "op": "DUP4"
    },
    "4661": {
      "op": "CODECOPY"
    },
    "4662": {
      "op": "DUP2"
    },
    "4663": {
      "op": "MLOAD"
    },
    "4664": {
      "op": "SWAP2"
    },
    "4665": {
      "op": "MSTORE"
    },
    "4666": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4672": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4673": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4676": {
      "op": "NOT"
    },
    "4677": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4678": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4679": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "SUB",
      "path": "0"
    },
    "4680": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "ADD",
      "path": "0"
    },
    "4681": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4682": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4683": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4684": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4685": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4686": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6389,
        6423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4687": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1259"
    },
    "4690": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4691": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6424,
        6434
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4692": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6424,
        6434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4693": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40F0"
    },
    "4696": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6372,
        6435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4697": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4698": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4700": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4701": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4702": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4703": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "SUB",
      "path": "0"
    },
    "4704": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4705": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6372,
        6435
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4706": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5870,
        6442
      ],
      "op": "POP",
      "path": "0"
    },
    "4707": {
      "offset": [
        6606,
        6607
      ],
      "op": "POP",
      "path": "2"
    },
    "4708": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "POP",
      "path": "0"
    },
    "4709": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "POP",
      "path": "0"
    },
    "4710": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5743,
        6442
      ],
      "op": "POP",
      "path": "0"
    },
    "4711": {
      "fn": "Administrable.claimDividend",
      "jump": "o",
      "offset": [
        5743,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4712": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9751,
        9888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4713": {
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4715": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4716": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4717": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4719": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4720": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4722": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4723": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4724": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4726": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4727": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4728": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4730": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4736": {
      "op": "SHL"
    },
    "4737": {
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4738": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4739": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "POP",
      "path": "0"
    },
    "4740": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128D"
    },
    "4743": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4744": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4745": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "4748": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4749": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4750": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1296"
    },
    "4753": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4754": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4756": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4757": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4758": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4759": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9840,
        9848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4760": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A1"
    },
    "4763": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4764": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4765": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "4768": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4769": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4770": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AA"
    },
    "4773": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4774": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4776": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4777": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4778": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4779": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9860,
        9881
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0xB1E"
    },
    "4782": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9872,
        9880
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4783": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9860,
        9871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2624"
    },
    "4786": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9860,
        9881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4787": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4788": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4790": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4791": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4792": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4794": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4795": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4797": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4798": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4799": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4801": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4802": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4803": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4805": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x6953"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4811": {
      "op": "SHL"
    },
    "4812": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4813": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4814": {
      "fn": "Administrable.issueShards",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4815": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D8"
    },
    "4818": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4819": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4820": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "4823": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4824": {
      "fn": "Administrable.issueShards",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4825": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E1"
    },
    "4828": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4829": {
      "fn": "Administrable.issueShards",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4831": {
      "fn": "Administrable.issueShards",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4832": {
      "fn": "Administrable.issueShards",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4833": {
      "fn": "Administrable.issueShards",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4834": {
      "fn": "Administrable.issueShards",
      "offset": [
        7543,
        7585
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 41,
      "value": "0x12ED"
    },
    "4837": {
      "fn": "Administrable.issueShards",
      "offset": [
        7556,
        7562
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4838": {
      "fn": "Administrable.issueShards",
      "offset": [
        7563,
        7575
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4839": {
      "fn": "Administrable.issueShards",
      "offset": [
        7576,
        7581
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4840": {
      "fn": "Administrable.issueShards",
      "offset": [
        7582,
        7584
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4841": {
      "fn": "Administrable.issueShards",
      "offset": [
        7543,
        7555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A9"
    },
    "4844": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7543,
        7585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4845": {
      "fn": "Administrable.issueShards",
      "offset": [
        7543,
        7585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4846": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "POP",
      "path": "0"
    },
    "4847": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "POP",
      "path": "0"
    },
    "4848": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "POP",
      "path": "0"
    },
    "4849": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "POP",
      "path": "0"
    },
    "4850": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7592
      ],
      "op": "POP",
      "path": "0"
    },
    "4851": {
      "fn": "Administrable.issueShards",
      "jump": "o",
      "offset": [
        7417,
        7592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4852": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7943,
        8143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4853": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4855": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4856": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4857": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4859": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4860": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4862": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4863": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4864": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4866": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4867": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4868": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4870": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4871": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "4876": {
      "op": "SHL"
    },
    "4877": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4878": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4879": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4880": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1319"
    },
    "4883": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4884": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4885": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "4888": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4889": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4890": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1322"
    },
    "4893": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4894": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4896": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4897": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4898": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4899": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8071,
        8079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4900": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132D"
    },
    "4903": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4904": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4905": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "4908": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4909": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4910": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1336"
    },
    "4913": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4914": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4916": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4917": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4918": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4919": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8091,
        8134
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x12ED"
    },
    "4922": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8106,
        8114
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4923": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8115,
        8127
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4924": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8128,
        8133
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4925": {
      "fn": "Administrable.issueDividend",
      "offset": [
        8091,
        8105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2828"
    },
    "4928": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        8091,
        8134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4929": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12205,
        12390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4930": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4932": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4933": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4934": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4936": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4937": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4939": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4940": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4941": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4943": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4944": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4945": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4947": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4948": {
      "op": "PUSH3",
      "value": "0x734E53"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4956": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4957": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4958": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1367"
    },
    "4961": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4962": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4963": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "4966": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4967": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4968": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1370"
    },
    "4971": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4972": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4974": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4975": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4976": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4977": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0xC"
    },
    "4979": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4980": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4981": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4982": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4983": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4985": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4986": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4987": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12321
      ],
      "op": "AND",
      "path": "0"
    },
    "4988": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4989": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4990": {
      "branch": 185,
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12301,
        12333
      ],
      "op": "SUB",
      "path": "0"
    },
    "4991": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AF"
    },
    "4994": {
      "branch": 185,
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4995": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4997": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5006": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5009": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5011": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5012": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "ADD",
      "path": "0"
    },
    "5013": {
      "op": "MSTORE"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5018": {
      "op": "DUP3"
    },
    "5019": {
      "op": "ADD"
    },
    "5020": {
      "op": "MSTORE"
    },
    "5021": {
      "op": "PUSH2",
      "value": "0x4153"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5026": {
      "op": "SHL"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5029": {
      "op": "DUP3"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "op": "MSTORE"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5034": {
      "op": "ADD"
    },
    "5035": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "5038": {
      "op": "JUMP"
    },
    "5039": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12293,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5040": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12350,
        12383
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0xCAE"
    },
    "5043": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12374,
        12382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5044": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        12350,
        12373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A32"
    },
    "5047": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        12350,
        12383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5048": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6982,
        7134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5049": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5051": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5052": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5053": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5055": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5056": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5058": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5059": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5060": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5062": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5063": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5064": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5066": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5067": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5073": {
      "op": "SHL"
    },
    "5074": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5075": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5076": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "5077": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DE"
    },
    "5080": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5081": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5082": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "5085": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5086": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5087": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E7"
    },
    "5090": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5091": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5093": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5094": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5095": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5096": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5098": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5099": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5100": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5102": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "5103": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5104": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5105": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "5106": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140D"
    },
    "5109": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5110": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5112": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5119": {
      "op": "SHL"
    },
    "5120": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5121": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5122": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5124": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5125": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "5128": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5129": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "5132": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5133": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5134": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7090,
        7127
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0xCAE"
    },
    "5137": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7114,
        7126
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5138": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7090,
        7113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AA2"
    },
    "5141": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        7090,
        7127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5142": {
      "fn": "Idea.acceptsToken",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5149": {
      "op": "SHL"
    },
    "5150": {
      "op": "SUB"
    },
    "5151": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 46
    },
    "5152": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "AND",
      "path": "1"
    },
    "5153": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4044,
        4048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5155": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5156": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5157": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5158": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5160": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5162": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5163": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5165": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5166": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5167": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5168": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5170": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "AND",
      "path": "1"
    },
    "5171": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4106
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5172": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4106
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5173": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5175": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4106
      ],
      "op": "EQ",
      "path": "1"
    },
    "5176": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4106
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5177": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC71"
    },
    "5180": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4065,
        4136
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5189": {
      "op": "SHL"
    },
    "5190": {
      "op": "SUB"
    },
    "5191": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4110,
        4136
      ],
      "op": "AND",
      "path": "1"
    },
    "5192": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4110,
        4136
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5193": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4110,
        4136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5194": {
      "fn": "Idea.acceptsToken",
      "jump": "o",
      "offset": [
        3980,
        4143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5195": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6636,
        6784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5196": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5198": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5199": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5200": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5202": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5203": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5205": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5206": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5207": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5209": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5210": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5211": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5213": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5214": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5220": {
      "op": "SHL"
    },
    "5221": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5222": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5223": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "5224": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1471"
    },
    "5227": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5228": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5229": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "5232": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5233": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5234": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147A"
    },
    "5237": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5238": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5240": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5241": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5242": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5243": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5245": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5246": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5247": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5249": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "5250": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5251": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5252": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "5253": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A0"
    },
    "5256": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5257": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5259": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5266": {
      "op": "SHL"
    },
    "5267": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5268": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5269": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5271": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5272": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "5275": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5276": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "5279": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5280": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5281": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6742,
        6777
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0xCAE"
    },
    "5284": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6764,
        6776
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5285": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6742,
        6763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AEB"
    },
    "5288": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6742,
        6777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5289": {
      "fn": "Idea.receiveToken",
      "offset": [
        2523,
        2641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5290": {
      "fn": "Idea.receiveToken",
      "offset": [
        2601,
        2634
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 48,
      "value": "0xCAE"
    },
    "5293": {
      "fn": "Idea.receiveToken",
      "offset": [
        2615,
        2627
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5294": {
      "fn": "Idea.receiveToken",
      "offset": [
        2628,
        2633
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5295": {
      "fn": "Idea.receiveToken",
      "offset": [
        2601,
        2614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B34"
    },
    "5298": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2601,
        2634
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5299": {
      "fn": "Administrable.moveToken",
      "offset": [
        10834,
        11052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5300": {
      "fn": "Administrable.moveToken",
      "offset": [
        10967,
        10979
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5301": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BE"
    },
    "5304": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5305": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5306": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "5309": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5310": {
      "fn": "Administrable.moveToken",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5311": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C7"
    },
    "5314": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5315": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5317": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5318": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5319": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5320": {
      "fn": "Administrable.moveToken",
      "offset": [
        10991,
        11045
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x12ED"
    },
    "5323": {
      "fn": "Administrable.moveToken",
      "offset": [
        11002,
        11014
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5324": {
      "fn": "Administrable.moveToken",
      "offset": [
        11015,
        11025
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5325": {
      "fn": "Administrable.moveToken",
      "offset": [
        11026,
        11038
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5326": {
      "fn": "Administrable.moveToken",
      "offset": [
        11039,
        11044
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5327": {
      "fn": "Administrable.moveToken",
      "offset": [
        10991,
        11001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C87"
    },
    "5330": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10991,
        11045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5331": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14671,
        14852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5332": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14753,
        14757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5334": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14787
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x10"
    },
    "5336": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14788,
        14796
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5337": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5339": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5340": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E5"
    },
    "5343": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5344": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5345": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "5348": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14776,
        14797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5349": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5350": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5351": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5352": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5353": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5355": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5356": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5357": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5358": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5359": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5360": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SUB",
      "path": "0"
    },
    "5361": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5363": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5364": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5365": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "ADD",
      "path": "0"
    },
    "5366": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5367": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5368": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5375": {
      "op": "SHL"
    },
    "5376": {
      "op": "SUB"
    },
    "5377": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5378": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "AND",
      "path": "0"
    },
    "5379": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5381": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5382": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5383": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5384": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5385": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5386": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5387": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5388": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5389": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5391": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "AND",
      "path": "0"
    },
    "5392": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14814
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5393": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14814
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5394": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5396": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14814
      ],
      "op": "EQ",
      "path": "0"
    },
    "5397": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5398": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD60"
    },
    "5401": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5402": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14776,
        14845
      ],
      "op": "POP",
      "path": "0"
    },
    "5403": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD60"
    },
    "5406": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5408": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5409": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5410": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5412": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "ADD",
      "path": "0"
    },
    "5413": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5415": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5416": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5417": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5419": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5420": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5421": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5423": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "ADD",
      "path": "0"
    },
    "5424": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5429": {
      "op": "SHL"
    },
    "5430": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5431": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5432": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14845
      ],
      "op": "POP",
      "path": "0"
    },
    "5433": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14837,
        14844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5434": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14818,
        14831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "5437": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14818,
        14845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5438": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8973,
        9218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5439": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5441": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5442": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5443": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5445": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5446": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5448": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5449": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5450": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5452": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5453": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5454": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5456": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5457": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5462": {
      "op": "SHL"
    },
    "5463": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5464": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5465": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "5466": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1563"
    },
    "5469": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5470": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5471": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "5474": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5475": {
      "branch": 186,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5476": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156C"
    },
    "5479": {
      "branch": 186,
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5480": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5482": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5483": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5484": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5485": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9082,
        9090
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5486": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1577"
    },
    "5489": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5490": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5491": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "5494": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5495": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5496": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1580"
    },
    "5499": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5500": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5502": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5503": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5504": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5505": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9134
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x1589"
    },
    "5508": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9124,
        9133
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5509": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E40"
    },
    "5512": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        9110,
        9134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5513": {
      "branch": 187,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5514": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5515": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1596"
    },
    "5518": {
      "branch": 187,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9138,
        9158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5522": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9138,
        9158
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5523": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9138,
        9158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5525": {
      "branch": 188,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9138,
        9158
      ],
      "op": "AND",
      "path": "0"
    },
    "5526": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9110,
        9158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5527": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15CA"
    },
    "5530": {
      "branch": 188,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5531": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5533": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5540": {
      "op": "SHL"
    },
    "5541": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5542": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5545": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5547": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5548": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "ADD",
      "path": "0"
    },
    "5549": {
      "op": "MSTORE"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5554": {
      "op": "DUP3"
    },
    "5555": {
      "op": "ADD"
    },
    "5556": {
      "op": "MSTORE"
    },
    "5557": {
      "op": "PUSH5",
      "value": "0x4E53484E41"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5565": {
      "op": "SHL"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5568": {
      "op": "DUP3"
    },
    "5569": {
      "op": "ADD"
    },
    "5570": {
      "op": "MSTORE"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "5577": {
      "op": "JUMP"
    },
    "5578": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9102,
        9168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5579": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9178,
        9211
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0xE52"
    },
    "5582": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9192,
        9200
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5583": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9201,
        9210
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5584": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1B"
    },
    "5587": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        9178,
        9211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5588": {
      "fn": "Shardable.split",
      "offset": [
        10893,
        11062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5589": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5591": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5592": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5593": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5594": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5596": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5598": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5599": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5601": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5602": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5603": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5605": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5606": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5607": {
      "fn": "Shardable.split",
      "offset": [
        10975,
        10986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5608": {
      "fn": "Shardable.split",
      "offset": [
        10975,
        10986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5615": {
      "op": "SHL"
    },
    "5616": {
      "op": "SUB"
    },
    "5617": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "5618": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5619": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "5620": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160F"
    },
    "5623": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5624": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5626": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5633": {
      "op": "SHL"
    },
    "5634": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5635": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5636": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5638": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "5639": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "5642": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5643": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4008"
    },
    "5646": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5647": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5648": {
      "fn": "Shardable.split",
      "offset": [
        11003,
        11014
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5649": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1629"
    },
    "5652": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5653": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5655": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5656": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5657": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5658": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5659": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5660": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5662": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5664": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5665": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5667": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5668": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5669": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5670": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "5671": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5672": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5673": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5674": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1645"
    },
    "5677": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5678": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5680": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5689": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5690": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5692": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "5693": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "5696": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5697": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "5700": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5701": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5702": {
      "fn": "Shardable.split",
      "offset": [
        11026,
        11055
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 53,
      "value": "0x12ED"
    },
    "5705": {
      "fn": "Shardable.split",
      "offset": [
        11033,
        11044
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5706": {
      "fn": "Shardable.split",
      "offset": [
        11045,
        11051
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5707": {
      "fn": "Shardable.split",
      "offset": [
        11052,
        11054
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5708": {
      "fn": "Shardable.split",
      "offset": [
        11026,
        11032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3019"
    },
    "5711": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        11026,
        11055
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5712": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5713": {
      "fn": "Administrable.bankExists",
      "offset": [
        13831,
        13835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5715": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13864
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0xD"
    },
    "5717": {
      "fn": "Administrable.bankExists",
      "offset": [
        13865,
        13873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5718": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5720": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5721": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1662"
    },
    "5724": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5725": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5726": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "5729": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13854,
        13874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5730": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5731": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5732": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5733": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5734": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5736": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5737": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5738": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5739": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5740": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SUB",
      "path": "0"
    },
    "5741": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5743": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "ADD",
      "path": "0"
    },
    "5744": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5745": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5746": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5747": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5749": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "AND",
      "path": "0"
    },
    "5750": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13882
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5751": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13882
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5752": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5754": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13882
      ],
      "op": "EQ",
      "path": "0"
    },
    "5755": {
      "fn": "Administrable.bankExists",
      "offset": [
        13854,
        13882
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5756": {
      "fn": "Administrable.bankExists",
      "offset": [
        13767,
        13889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "op": "POP"
    },
    "5759": {
      "fn": "Administrable.bankExists",
      "jump": "o",
      "offset": [
        13767,
        13889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5760": {
      "fn": "Administrable.setPermit",
      "offset": [
        11336,
        11654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5761": {
      "fn": "Administrable.setPermit",
      "offset": [
        11445,
        11455
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5762": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "5765": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5766": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5767": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB2"
    },
    "5770": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5771": {
      "branch": 189,
      "fn": "Administrable.setPermit",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5772": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1694"
    },
    "5775": {
      "branch": 189,
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5776": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5778": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5779": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5780": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5781": {
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11497
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x169D"
    },
    "5784": {
      "fn": "Administrable.setPermit",
      "offset": [
        11489,
        11496
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5785": {
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E40"
    },
    "5788": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11475,
        11497
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5789": {
      "branch": 190,
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5790": {
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11521
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5791": {
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AA"
    },
    "5794": {
      "branch": 190,
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11521
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "fn": "Administrable.setPermit",
      "offset": [
        11501,
        11521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5798": {
      "fn": "Administrable.setPermit",
      "offset": [
        11501,
        11521
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5799": {
      "fn": "Administrable.setPermit",
      "offset": [
        11501,
        11521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5801": {
      "branch": 191,
      "fn": "Administrable.setPermit",
      "offset": [
        11501,
        11521
      ],
      "op": "AND",
      "path": "0"
    },
    "5802": {
      "fn": "Administrable.setPermit",
      "offset": [
        11475,
        11521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5803": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16DE"
    },
    "5806": {
      "branch": 191,
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5807": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5809": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5816": {
      "op": "SHL"
    },
    "5817": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5818": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5821": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5823": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5824": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "ADD",
      "path": "0"
    },
    "5825": {
      "op": "MSTORE"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5830": {
      "op": "DUP3"
    },
    "5831": {
      "op": "ADD"
    },
    "5832": {
      "op": "MSTORE"
    },
    "5833": {
      "op": "PUSH5",
      "value": "0x4E53484E41"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5844": {
      "op": "DUP3"
    },
    "5845": {
      "op": "ADD"
    },
    "5846": {
      "op": "MSTORE"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5849": {
      "op": "ADD"
    },
    "5850": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "5853": {
      "op": "JUMP"
    },
    "5854": {
      "fn": "Administrable.setPermit",
      "offset": [
        11467,
        11531
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5855": {
      "fn": "Administrable.setPermit",
      "offset": [
        11581,
        11589
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 56
    },
    "5856": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5858": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5859": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "GT",
      "path": "0"
    },
    "5860": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5861": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F0"
    },
    "5864": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5865": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F0"
    },
    "5868": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "5871": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5872": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5873": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "5875": {
      "fn": "Administrable.setPermit",
      "offset": [
        11557,
        11567
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5876": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5878": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5879": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1700"
    },
    "5882": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5883": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5884": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "5887": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11549,
        11568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5888": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5889": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5890": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5891": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5892": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5894": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5895": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5896": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5898": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5899": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5900": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5901": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SUB",
      "path": "0"
    },
    "5902": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5903": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "ADD",
      "path": "0"
    },
    "5904": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5905": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11568
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5912": {
      "op": "SHL"
    },
    "5913": {
      "op": "SUB"
    },
    "5914": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5915": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "AND",
      "path": "0"
    },
    "5916": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5918": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5919": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5920": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5921": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5922": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5923": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5924": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5925": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5926": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5928": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11577
      ],
      "op": "AND",
      "path": "0"
    },
    "5929": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5931": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5932": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "GT",
      "path": "0"
    },
    "5933": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5934": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1739"
    },
    "5937": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5938": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1739"
    },
    "5941": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "5944": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5945": {
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5946": {
      "branch": 192,
      "fn": "Administrable.setPermit",
      "offset": [
        11549,
        11589
      ],
      "op": "SUB",
      "path": "0"
    },
    "5947": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176C"
    },
    "5950": {
      "branch": 192,
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5951": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5953": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5962": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5965": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5967": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5968": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "ADD",
      "path": "0"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5974": {
      "op": "DUP3"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "MSTORE"
    },
    "5977": {
      "op": "PUSH3",
      "value": "0x41485"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5986": {
      "op": "DUP3"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5991": {
      "op": "ADD"
    },
    "5992": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "5995": {
      "op": "JUMP"
    },
    "5996": {
      "fn": "Administrable.setPermit",
      "offset": [
        11541,
        11597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5997": {
      "fn": "Administrable.setPermit",
      "offset": [
        11607,
        11646
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0xE52"
    },
    "6000": {
      "fn": "Administrable.setPermit",
      "offset": [
        11618,
        11628
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6001": {
      "fn": "Administrable.setPermit",
      "offset": [
        11629,
        11636
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6002": {
      "fn": "Administrable.setPermit",
      "offset": [
        11637,
        11645
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6003": {
      "fn": "Administrable.setPermit",
      "offset": [
        11607,
        11617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323C"
    },
    "6006": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11607,
        11646
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6007": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6008": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15150,
        15154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6010": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1782"
    },
    "6013": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15186,
        15193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6014": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E40"
    },
    "6017": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15172,
        15194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6018": {
      "branch": 193,
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6019": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6020": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178F"
    },
    "6023": {
      "branch": 193,
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6024": {
      "op": "POP"
    },
    "6025": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15198,
        15218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "6027": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15198,
        15218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6028": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15198,
        15218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6030": {
      "branch": 194,
      "fn": "Administrable.hasPermit",
      "offset": [
        15198,
        15218
      ],
      "op": "AND",
      "path": "0"
    },
    "6031": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15172,
        15218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6032": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15166,
        15236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179B"
    },
    "6035": {
      "branch": 194,
      "fn": "Administrable.hasPermit",
      "offset": [
        15166,
        15236
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6036": {
      "op": "POP"
    },
    "6037": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15229,
        15234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x0"
    },
    "6039": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15222,
        15234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "6042": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15222,
        15234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6043": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15166,
        15236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6044": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15284,
        15306
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x1"
    },
    "6046": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "6048": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15260,
        15270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6049": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6051": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6052": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17AD"
    },
    "6055": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6056": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6057": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "6060": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15252,
        15271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6061": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6062": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6063": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6064": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6065": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6067": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6068": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6069": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6071": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6072": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6073": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6074": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SUB",
      "path": "0"
    },
    "6075": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6076": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "ADD",
      "path": "0"
    },
    "6077": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6078": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15271
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "op": "SUB"
    },
    "6087": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6088": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "AND",
      "path": "0"
    },
    "6089": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6091": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6092": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6093": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6094": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6095": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6096": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6097": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6098": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6099": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6101": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15280
      ],
      "op": "AND",
      "path": "0"
    },
    "6102": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6104": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6105": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "GT",
      "path": "0"
    },
    "6106": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6107": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E6"
    },
    "6110": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6111": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E6"
    },
    "6114": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "6117": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15252,
        15306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6118": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6119": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "LT",
      "path": "0"
    },
    "6120": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6121": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6122": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD60"
    },
    "6125": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15252,
        15359
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15337,
        15359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6129": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "6131": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15322,
        15332
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6132": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6134": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6135": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1800"
    },
    "6138": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6139": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6140": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "6143": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15310,
        15333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6144": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6145": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6146": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6147": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6148": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6150": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6151": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6152": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6153": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6154": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SUB",
      "path": "0"
    },
    "6155": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6157": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "ADD",
      "path": "0"
    },
    "6158": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6159": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6160": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6161": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6163": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15333
      ],
      "op": "AND",
      "path": "0"
    },
    "6164": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6166": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6167": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "GT",
      "path": "0"
    },
    "6168": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6169": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1824"
    },
    "6172": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6173": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1824"
    },
    "6176": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "6179": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        15310,
        15359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6180": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6181": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "LT",
      "path": "0"
    },
    "6182": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6183": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15310,
        15359
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6184": {
      "fn": "Administrable.hasPermit",
      "offset": [
        15068,
        15366
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6185": {
      "op": "POP"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "op": "POP"
    },
    "6188": {
      "fn": "Administrable.hasPermit",
      "jump": "o",
      "offset": [
        15068,
        15366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6189": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10255,
        10463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6190": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10382,
        10390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6191": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1838"
    },
    "6194": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6195": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6196": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "6199": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6200": {
      "branch": 195,
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6201": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1841"
    },
    "6204": {
      "branch": 195,
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6205": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6207": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6208": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6209": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6210": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10402,
        10456
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0x12ED"
    },
    "6213": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10425,
        10433
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6214": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10434,
        10446
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6215": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10447,
        10452
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6216": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10453,
        10455
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6217": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10402,
        10424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32F6"
    },
    "6220": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10402,
        10456
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6221": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6222": {
      "fn": "Shardable.purchase",
      "offset": [
        7341,
        7346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6223": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1867"
    },
    "6226": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6227": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6229": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6230": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6231": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6232": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6233": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6234": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6236": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6238": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6239": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6241": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6242": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6243": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6244": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "6245": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6246": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6247": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6248": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1883"
    },
    "6251": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6252": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6254": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6261": {
      "op": "SHL"
    },
    "6262": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6263": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6264": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6266": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "6267": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6270": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6271": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "6274": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6275": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6276": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x0"
    },
    "6278": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6279": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6280": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6281": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6283": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6285": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6286": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6288": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6289": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6290": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6291": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6293": {
      "branch": 235,
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "AND",
      "path": "2"
    },
    "6294": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C6"
    },
    "6297": {
      "branch": 235,
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6298": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6300": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6309": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6312": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6314": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6315": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "ADD",
      "path": "2"
    },
    "6316": {
      "op": "MSTORE"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6321": {
      "op": "DUP3"
    },
    "6322": {
      "op": "ADD"
    },
    "6323": {
      "op": "MSTORE"
    },
    "6324": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6329": {
      "op": "SHL"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6332": {
      "op": "DUP3"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6337": {
      "op": "ADD"
    },
    "6338": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6341": {
      "op": "JUMP"
    },
    "6342": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6343": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x0"
    },
    "6345": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6346": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6347": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6348": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6350": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6352": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6353": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6355": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6356": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7429
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6357": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6358": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6359": {
      "branch": 236,
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7441
      ],
      "op": "SUB",
      "path": "2"
    },
    "6360": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1908"
    },
    "6363": {
      "branch": 236,
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6364": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6366": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6373": {
      "op": "SHL"
    },
    "6374": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6375": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6378": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6380": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6381": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "ADD",
      "path": "2"
    },
    "6382": {
      "op": "MSTORE"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "ADD"
    },
    "6389": {
      "op": "MSTORE"
    },
    "6390": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6398": {
      "op": "DUP3"
    },
    "6399": {
      "op": "ADD"
    },
    "6400": {
      "op": "MSTORE"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6403": {
      "op": "ADD"
    },
    "6404": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6407": {
      "op": "JUMP"
    },
    "6408": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6409": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x0"
    },
    "6411": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6412": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6413": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6414": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6416": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6418": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6419": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6421": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6422": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7484
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6423": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6424": {
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7501
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6425": {
      "op": "GT"
    },
    "6426": {
      "branch": 237,
      "fn": "Shardable.purchase",
      "offset": [
        7466,
        7501
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6427": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x194B"
    },
    "6430": {
      "branch": 237,
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6431": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6433": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6440": {
      "op": "SHL"
    },
    "6441": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6442": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6445": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6447": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6448": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "ADD",
      "path": "2"
    },
    "6449": {
      "op": "MSTORE"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6454": {
      "op": "DUP3"
    },
    "6455": {
      "op": "ADD"
    },
    "6456": {
      "op": "MSTORE"
    },
    "6457": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6462": {
      "op": "SHL"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "MSTORE"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6470": {
      "op": "ADD"
    },
    "6471": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6474": {
      "op": "JUMP"
    },
    "6475": {
      "fn": "Shardable.purchase",
      "offset": [
        7458,
        7508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6476": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0x0"
    },
    "6478": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6479": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6480": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6481": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6483": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6485": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6486": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6488": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6489": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7545
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6490": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6492": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7548
      ],
      "op": "ADD",
      "path": "2"
    },
    "6493": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6500": {
      "op": "SHL"
    },
    "6501": {
      "op": "SUB"
    },
    "6502": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7548
      ],
      "op": "AND",
      "path": "2"
    },
    "6503": {
      "fn": "Shardable.purchase",
      "offset": [
        7552,
        7562
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6504": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7562
      ],
      "op": "EQ",
      "path": "2"
    },
    "6505": {
      "fn": "Shardable.purchase",
      "offset": [
        7527,
        7562
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6506": {
      "fn": "Shardable.purchase",
      "offset": [
        7526,
        7606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198B"
    },
    "6509": {
      "fn": "Shardable.purchase",
      "offset": [
        7526,
        7606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6510": {
      "op": "POP"
    },
    "6511": {
      "fn": "Shardable.purchase",
      "offset": [
        7601,
        7604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6513": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6514": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6515": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6516": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7579
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6518": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6520": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6521": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6523": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6524": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7586
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6525": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6527": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7589
      ],
      "op": "ADD",
      "path": "2"
    },
    "6528": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7589
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6535": {
      "op": "SHL"
    },
    "6536": {
      "op": "SUB"
    },
    "6537": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7589
      ],
      "op": "AND",
      "path": "2"
    },
    "6538": {
      "fn": "Shardable.purchase",
      "offset": [
        7568,
        7605
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6539": {
      "fn": "Shardable.purchase",
      "offset": [
        7526,
        7606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6540": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19BC"
    },
    "6543": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6544": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6546": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6555": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6558": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6560": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6561": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "ADD",
      "path": "2"
    },
    "6562": {
      "op": "MSTORE"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "ADD"
    },
    "6569": {
      "op": "MSTORE"
    },
    "6570": {
      "op": "PUSH2",
      "value": "0x29A9"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6575": {
      "op": "SHL"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6578": {
      "op": "DUP3"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6583": {
      "op": "ADD"
    },
    "6584": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6587": {
      "op": "JUMP"
    },
    "6588": {
      "fn": "Shardable.purchase",
      "offset": [
        7518,
        7613
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6589": {
      "fn": "Shardable.purchase",
      "offset": [
        7623,
        7641
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x19C5"
    },
    "6592": {
      "fn": "Shardable.purchase",
      "offset": [
        7635,
        7640
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6593": {
      "fn": "Shardable.purchase",
      "offset": [
        7623,
        7634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2077"
    },
    "6596": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7623,
        7641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6597": {
      "fn": "Shardable.purchase",
      "offset": [
        7623,
        7641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6598": {
      "fn": "Shardable.purchase",
      "offset": [
        7651,
        7669
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6600": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6601": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6602": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6603": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6605": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6607": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6608": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6610": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6611": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7699
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6612": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6614": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7705
      ],
      "op": "ADD",
      "path": "2"
    },
    "6615": {
      "fn": "Shardable.purchase",
      "offset": [
        7681,
        7705
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6616": {
      "fn": "Shardable.purchase",
      "offset": [
        7672,
        7705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E1"
    },
    "6619": {
      "fn": "Shardable.purchase",
      "offset": [
        7672,
        7705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6620": {
      "fn": "Shardable.purchase",
      "offset": [
        7672,
        7678
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6621": {
      "fn": "Shardable.purchase",
      "offset": [
        7672,
        7705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4078"
    },
    "6624": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7672,
        7705
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6625": {
      "fn": "Shardable.purchase",
      "offset": [
        7672,
        7705
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6626": {
      "fn": "Shardable.purchase",
      "offset": [
        7651,
        7705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6627": {
      "fn": "Shardable.purchase",
      "offset": [
        7651,
        7705
      ],
      "op": "POP",
      "path": "2"
    },
    "6628": {
      "fn": "Shardable.purchase",
      "offset": [
        7716,
        7739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6630": {
      "fn": "Shardable.purchase",
      "offset": [
        7741,
        7763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6631": {
      "fn": "Shardable.purchase",
      "offset": [
        7765,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6633": {
      "fn": "Shardable.purchase",
      "offset": [
        7786,
        7841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F6"
    },
    "6636": {
      "fn": "Shardable.purchase",
      "offset": [
        7822,
        7832
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6637": {
      "fn": "Shardable.purchase",
      "offset": [
        7833,
        7835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "6639": {
      "fn": "Shardable.purchase",
      "offset": [
        7836,
        7840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "6642": {
      "fn": "Shardable.purchase",
      "offset": [
        7786,
        7821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3498"
    },
    "6645": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7786,
        7841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6646": {
      "fn": "Shardable.purchase",
      "offset": [
        7786,
        7841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6647": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6648": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6649": {
      "op": "POP"
    },
    "6650": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6651": {
      "op": "POP"
    },
    "6652": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6653": {
      "op": "POP"
    },
    "6654": {
      "fn": "Shardable.purchase",
      "offset": [
        7851,
        7878
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0x1A07"
    },
    "6657": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6658": {
      "fn": "Shardable.purchase",
      "offset": [
        7715,
        7841
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6659": {
      "fn": "Shardable.purchase",
      "offset": [
        7851,
        7878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9F"
    },
    "6662": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7851,
        7878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6663": {
      "fn": "Shardable.purchase",
      "offset": [
        7851,
        7878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6664": {
      "fn": "Shardable.purchase",
      "offset": [
        7983,
        7986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6666": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6667": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6668": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6669": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6671": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6673": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6674": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6676": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6677": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7958
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6678": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6680": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7971
      ],
      "op": "ADD",
      "path": "2"
    },
    "6681": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7971
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6682": {
      "fn": "Shardable.purchase",
      "offset": [
        7851,
        7878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6683": {
      "fn": "Shardable.purchase",
      "offset": [
        7851,
        7878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6684": {
      "op": "POP"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6691": {
      "op": "SHL"
    },
    "6692": {
      "op": "SUB"
    },
    "6693": {
      "fn": "Shardable.purchase",
      "offset": [
        7940,
        7971
      ],
      "op": "AND",
      "path": "2"
    },
    "6694": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B66"
    },
    "6697": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6698": {
      "fn": "Shardable.purchase",
      "offset": [
        8024,
        8034
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 67
    },
    "6699": {
      "fn": "Shardable.purchase",
      "offset": [
        8011,
        8020
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6700": {
      "fn": "Shardable.purchase",
      "offset": [
        8011,
        8034
      ],
      "op": "LT",
      "path": "2"
    },
    "6701": {
      "branch": 238,
      "fn": "Shardable.purchase",
      "offset": [
        8011,
        8034
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6702": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5E"
    },
    "6705": {
      "branch": 238,
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6706": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6708": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6709": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6715": {
      "op": "SHL"
    },
    "6716": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6717": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6720": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6722": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6723": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "ADD",
      "path": "2"
    },
    "6724": {
      "op": "MSTORE"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "op": "MSTORE"
    },
    "6732": {
      "op": "PUSH2",
      "value": "0x4945"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6737": {
      "op": "SHL"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6740": {
      "op": "DUP3"
    },
    "6741": {
      "op": "ADD"
    },
    "6742": {
      "op": "MSTORE"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "6749": {
      "op": "JUMP"
    },
    "6750": {
      "fn": "Shardable.purchase",
      "offset": [
        8003,
        8041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6751": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6753": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6754": {
      "fn": "Shardable.purchase",
      "offset": [
        8106,
        8127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6756": {
      "fn": "Shardable.purchase",
      "offset": [
        8106,
        8127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6757": {
      "fn": "Shardable.purchase",
      "offset": [
        8140,
        8182
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "6778": {
      "fn": "Shardable.purchase",
      "offset": [
        8140,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6779": {
      "fn": "Shardable.purchase",
      "offset": [
        8195,
        8210
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6780": {
      "fn": "Shardable.purchase",
      "offset": [
        8195,
        8210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6781": {
      "fn": "Shardable.purchase",
      "offset": [
        8106,
        8127
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6782": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6783": {
      "fn": "Shardable.purchase",
      "offset": [
        8106,
        8127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6784": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6785": {
      "fn": "Shardable.purchase",
      "offset": [
        8195,
        8210
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6786": {
      "fn": "Shardable.purchase",
      "offset": [
        8140,
        8182
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6787": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "GAS",
      "path": "2"
    },
    "6788": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "CALL",
      "path": "2"
    },
    "6789": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6790": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "POP",
      "path": "2"
    },
    "6791": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "POP",
      "path": "2"
    },
    "6792": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "POP",
      "path": "2"
    },
    "6793": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6794": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6795": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6797": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6798": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "EQ",
      "path": "2"
    },
    "6799": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB4"
    },
    "6802": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6803": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6805": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6806": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6807": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "POP",
      "path": "2"
    },
    "6808": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6810": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "NOT",
      "path": "2"
    },
    "6811": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6813": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6814": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "ADD",
      "path": "2"
    },
    "6815": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "AND",
      "path": "2"
    },
    "6816": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6817": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "ADD",
      "path": "2"
    },
    "6818": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6820": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6821": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6822": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6823": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6824": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6825": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6827": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6829": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6830": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "ADD",
      "path": "2"
    },
    "6831": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6832": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB9"
    },
    "6835": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6836": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6837": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6839": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6840": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "POP",
      "path": "2"
    },
    "6841": {
      "fn": "Shardable.purchase",
      "offset": [
        8132,
        8215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6842": {
      "op": "POP"
    },
    "6843": {
      "op": "POP"
    },
    "6844": {
      "fn": "Shardable.purchase",
      "offset": [
        8269,
        8289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6846": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6847": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6848": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6849": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6851": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6853": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6854": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6856": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6857": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6858": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6859": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6861": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "ADD",
      "path": "2"
    },
    "6862": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6863": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6864": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6865": {
      "fn": "Shardable.purchase",
      "offset": [
        8105,
        8215
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6866": {
      "fn": "Shardable.purchase",
      "offset": [
        8105,
        8215
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "fn": "Shardable.purchase",
      "offset": [
        8269,
        8289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6869": {
      "fn": "Shardable.purchase",
      "offset": [
        8269,
        8289
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6876": {
      "op": "SHL"
    },
    "6877": {
      "op": "SUB"
    },
    "6878": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6879": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6880": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "AND",
      "path": "2"
    },
    "6881": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6882": {
      "fn": "Shardable.purchase",
      "offset": [
        8339,
        8353
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6883": {
      "fn": "Shardable.purchase",
      "offset": [
        8339,
        8353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6884": {
      "fn": "Shardable.purchase",
      "offset": [
        8269,
        8289
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6885": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "Shardable.purchase",
      "offset": [
        8269,
        8289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6887": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6888": {
      "fn": "Shardable.purchase",
      "offset": [
        8339,
        8353
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6889": {
      "fn": "Shardable.purchase",
      "offset": [
        8302,
        8326
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6890": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "GAS",
      "path": "2"
    },
    "6891": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "CALL",
      "path": "2"
    },
    "6892": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6893": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6894": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6895": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6896": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6897": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6898": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6900": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6901": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "EQ",
      "path": "2"
    },
    "6902": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1B"
    },
    "6905": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6906": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6908": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6909": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6910": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6911": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6913": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "NOT",
      "path": "2"
    },
    "6914": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6916": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6917": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6918": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "AND",
      "path": "2"
    },
    "6919": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6920": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6921": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6923": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6924": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6925": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6926": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6927": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6928": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6930": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6932": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6933": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6934": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6935": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B20"
    },
    "6938": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6939": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6940": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6942": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6943": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6944": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6945": {
      "fn": "Shardable.purchase",
      "offset": [
        8294,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6946": {
      "fn": "Shardable.purchase",
      "offset": [
        8268,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6947": {
      "fn": "Shardable.purchase",
      "offset": [
        8268,
        8358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6948": {
      "fn": "Shardable.purchase",
      "offset": [
        8268,
        8358
      ],
      "op": "POP",
      "path": "2"
    },
    "6949": {
      "branch": 239,
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8395
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 68
    },
    "6950": {
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6951": {
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6952": {
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2E"
    },
    "6955": {
      "branch": 239,
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6956": {
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "POP",
      "path": "2"
    },
    "6957": {
      "branch": 240,
      "fn": "Shardable.purchase",
      "offset": [
        8399,
        8415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6958": {
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6959": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5F"
    },
    "6962": {
      "branch": 240,
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6963": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6965": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6972": {
      "op": "SHL"
    },
    "6973": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6974": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6977": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6979": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6980": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "ADD",
      "path": "2"
    },
    "6981": {
      "op": "MSTORE"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6986": {
      "op": "DUP3"
    },
    "6987": {
      "op": "ADD"
    },
    "6988": {
      "op": "MSTORE"
    },
    "6989": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6994": {
      "op": "SHL"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6997": {
      "op": "DUP3"
    },
    "6998": {
      "op": "ADD"
    },
    "6999": {
      "op": "MSTORE"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7002": {
      "op": "ADD"
    },
    "7003": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "7006": {
      "op": "JUMP"
    },
    "7007": {
      "fn": "Shardable.purchase",
      "offset": [
        8372,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7008": {
      "fn": "Shardable.purchase",
      "offset": [
        7989,
        8433
      ],
      "op": "POP",
      "path": "2"
    },
    "7009": {
      "fn": "Shardable.purchase",
      "offset": [
        7989,
        8433
      ],
      "op": "POP",
      "path": "2"
    },
    "7010": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEC"
    },
    "7013": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7014": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7015": {
      "fn": "Shardable.purchase",
      "offset": [
        8462,
        8473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7017": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7018": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7019": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7020": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7022": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7024": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7025": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7027": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7028": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7029": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7030": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8500
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7031": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7033": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "ADD",
      "path": "2"
    },
    "7034": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7035": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 69
    },
    "7036": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7037": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7044": {
      "op": "SHL"
    },
    "7045": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7046": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7047": {
      "fn": "Shardable.purchase",
      "offset": [
        8552,
        8562
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7048": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7050": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7051": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ADD",
      "path": "2"
    },
    "7052": {
      "op": "MSTORE"
    },
    "7053": {
      "fn": "Shardable.purchase",
      "offset": [
        8571,
        8575
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7056": {
      "op": "DUP3"
    },
    "7057": {
      "op": "ADD"
    },
    "7058": {
      "op": "MSTORE"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7065": {
      "op": "SHL"
    },
    "7066": {
      "op": "SUB"
    },
    "7067": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7068": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7069": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "AND",
      "path": "2"
    },
    "7070": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7071": {
      "fn": "Shardable.purchase",
      "offset": [
        8581,
        8591
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7072": {
      "fn": "Shardable.purchase",
      "offset": [
        8581,
        8591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7073": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7074": {
      "fn": "Shardable.purchase",
      "offset": [
        8482,
        8513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7075": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "7080": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8551
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7083": {
      "op": "ADD"
    },
    "7084": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7086": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7088": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7089": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7090": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7091": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "SUB",
      "path": "2"
    },
    "7092": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7093": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7094": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "GAS",
      "path": "2"
    },
    "7095": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7096": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7097": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7098": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7099": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC8"
    },
    "7102": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7103": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7104": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7106": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7107": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7108": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7109": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7111": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7112": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7113": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "POP",
      "path": "2"
    },
    "7114": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "POP",
      "path": "2"
    },
    "7115": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "POP",
      "path": "2"
    },
    "7116": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "POP",
      "path": "2"
    },
    "7117": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7119": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7120": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7121": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7123": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "NOT",
      "path": "2"
    },
    "7124": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7126": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7127": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ADD",
      "path": "2"
    },
    "7128": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "AND",
      "path": "2"
    },
    "7129": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7130": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ADD",
      "path": "2"
    },
    "7131": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7132": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7134": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7135": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "POP",
      "path": "2"
    },
    "7136": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7137": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "ADD",
      "path": "2"
    },
    "7138": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7139": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEC"
    },
    "7142": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7143": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7144": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4133"
    },
    "7147": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8536,
        8577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7148": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7149": {
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8591
      ],
      "op": "LT",
      "path": "2"
    },
    "7150": {
      "branch": 241,
      "fn": "Shardable.purchase",
      "offset": [
        8536,
        8591
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7151": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0A"
    },
    "7154": {
      "branch": 241,
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7155": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7157": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7164": {
      "op": "SHL"
    },
    "7165": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7166": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7167": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7169": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "ADD",
      "path": "2"
    },
    "7170": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "7173": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7174": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x414C"
    },
    "7177": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8528,
        8597
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7178": {
      "fn": "Shardable.purchase",
      "offset": [
        8528,
        8597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7179": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x40"
    },
    "7181": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7182": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7189": {
      "op": "SHL"
    },
    "7190": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7191": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7192": {
      "fn": "Shardable.purchase",
      "offset": [
        8688,
        8698
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7193": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7195": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7196": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ADD",
      "path": "2"
    },
    "7197": {
      "op": "MSTORE"
    },
    "7198": {
      "fn": "Shardable.purchase",
      "offset": [
        8700,
        8742
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7221": {
      "op": "DUP3"
    },
    "7222": {
      "op": "ADD"
    },
    "7223": {
      "op": "MSTORE"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7226": {
      "op": "DUP2"
    },
    "7227": {
      "op": "ADD"
    },
    "7228": {
      "op": "DUP6"
    },
    "7229": {
      "op": "SWAP1"
    },
    "7230": {
      "op": "MSTORE"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7237": {
      "op": "SHL"
    },
    "7238": {
      "op": "SUB"
    },
    "7239": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8687
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7240": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8687
      ],
      "op": "AND",
      "path": "2"
    },
    "7241": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7242": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8687
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "7247": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7250": {
      "op": "ADD"
    },
    "7251": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7253": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7255": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7256": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7257": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7258": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "SUB",
      "path": "2"
    },
    "7259": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7260": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7262": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7263": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "GAS",
      "path": "2"
    },
    "7264": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "CALL",
      "path": "2"
    },
    "7265": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7266": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7267": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7268": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C71"
    },
    "7271": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7272": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7273": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7275": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7276": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7277": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7278": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7280": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7281": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7282": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "7283": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "7284": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "7285": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "7286": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7288": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7289": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7290": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7292": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "NOT",
      "path": "2"
    },
    "7293": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7295": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7296": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ADD",
      "path": "2"
    },
    "7297": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "AND",
      "path": "2"
    },
    "7298": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7299": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ADD",
      "path": "2"
    },
    "7300": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7301": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7303": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7304": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "7305": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7306": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "ADD",
      "path": "2"
    },
    "7307": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7308": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C95"
    },
    "7311": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7312": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7313": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4168"
    },
    "7316": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8669,
        8760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7317": {
      "branch": 242,
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7318": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB1"
    },
    "7321": {
      "branch": 242,
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7322": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7324": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7331": {
      "op": "SHL"
    },
    "7332": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7333": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7334": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7336": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "ADD",
      "path": "2"
    },
    "7337": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "7340": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7341": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4185"
    },
    "7344": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8661,
        8767
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7345": {
      "fn": "Shardable.purchase",
      "offset": [
        8661,
        8767
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7346": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "7348": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7349": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7350": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7351": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7353": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7355": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7356": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7357": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7358": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7360": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7361": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7362": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8857
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7363": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7365": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7366": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7367": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "ADD",
      "path": "2"
    },
    "7368": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7369": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7371": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7372": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8882
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7373": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8882
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7374": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8882
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7375": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8882
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7376": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8895
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7377": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8895
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7378": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8895
      ],
      "op": "ADD",
      "path": "2"
    },
    "7379": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8895
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7380": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8911
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEA"
    },
    "7383": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8911
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7390": {
      "op": "SHL"
    },
    "7391": {
      "op": "SUB"
    },
    "7392": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7393": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7394": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "AND",
      "path": "2"
    },
    "7395": {
      "fn": "Shardable.purchase",
      "offset": [
        8839,
        8863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7396": {
      "fn": "Shardable.purchase",
      "offset": [
        8864,
        8895
      ],
      "op": "AND",
      "path": "2"
    },
    "7397": {
      "fn": "Shardable.purchase",
      "offset": [
        8896,
        8910
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7398": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x350C"
    },
    "7401": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8820,
        8911
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7402": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8911
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7403": {
      "fn": "Shardable.purchase",
      "offset": [
        8448,
        8922
      ],
      "op": "POP",
      "path": "2"
    },
    "7404": {
      "fn": "Shardable.purchase",
      "offset": [
        7936,
        8922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7405": {
      "fn": "Shardable.purchase",
      "offset": [
        8931,
        8963
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x1CF7"
    },
    "7408": {
      "fn": "Shardable.purchase",
      "offset": [
        8938,
        8943
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7409": {
      "fn": "Shardable.purchase",
      "offset": [
        8945,
        8951
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7410": {
      "fn": "Shardable.purchase",
      "offset": [
        8952,
        8962
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7411": {
      "fn": "Shardable.purchase",
      "offset": [
        8931,
        8937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3019"
    },
    "7414": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8931,
        8963
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7415": {
      "fn": "Shardable.purchase",
      "offset": [
        8931,
        8963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7416": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7418": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7419": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7420": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7421": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7423": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7425": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7426": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7428": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7429": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        8995
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7430": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7432": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "ADD",
      "path": "2"
    },
    "7433": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7434": {
      "fn": "Shardable.purchase",
      "offset": [
        9013,
        9017
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "SUB"
    },
    "7443": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7444": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7445": {
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9001
      ],
      "op": "AND",
      "path": "2"
    },
    "7446": {
      "branch": 243,
      "fn": "Shardable.purchase",
      "offset": [
        8977,
        9018
      ],
      "op": "SUB",
      "path": "2"
    },
    "7447": {
      "fn": "Shardable.purchase",
      "offset": [
        8973,
        9168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D3F"
    },
    "7450": {
      "branch": 243,
      "fn": "Shardable.purchase",
      "offset": [
        8973,
        9168
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7451": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x0"
    },
    "7453": {
      "fn": "Shardable.purchase",
      "offset": [
        9141,
        9146
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7454": {
      "fn": "Shardable.purchase",
      "offset": [
        9141,
        9146
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7455": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7456": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7457": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7459": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7461": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7462": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7464": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7465": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7466": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7467": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7468": {
      "fn": "Shardable.purchase",
      "offset": [
        9151,
        9157
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7469": {
      "fn": "Shardable.purchase",
      "offset": [
        9151,
        9157
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7470": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7471": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D39"
    },
    "7474": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7475": {
      "fn": "Shardable.purchase",
      "offset": [
        9151,
        9157
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7476": {
      "fn": "Shardable.purchase",
      "offset": [
        9151,
        9157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7477": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9F"
    },
    "7480": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9117,
        9157
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7481": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7482": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7483": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7484": {
      "fn": "Shardable.purchase",
      "offset": [
        9117,
        9157
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7485": {
      "op": "POP"
    },
    "7486": {
      "op": "POP"
    },
    "7487": {
      "fn": "Shardable.purchase",
      "offset": [
        8973,
        9168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7488": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x0"
    },
    "7490": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7491": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7492": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7493": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7495": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7497": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7498": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7499": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7500": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7502": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7503": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7504": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7505": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9233
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7506": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7508": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7509": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "ADD",
      "path": "2"
    },
    "7510": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7511": {
      "fn": "Shardable.purchase",
      "offset": [
        9247,
        9271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7513": {
      "fn": "Shardable.purchase",
      "offset": [
        9247,
        9271
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7514": {
      "fn": "Shardable.purchase",
      "offset": [
        9247,
        9271
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7515": {
      "fn": "Shardable.purchase",
      "offset": [
        9247,
        9271
      ],
      "op": "ADD",
      "path": "2"
    },
    "7516": {
      "fn": "Shardable.purchase",
      "offset": [
        9247,
        9271
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7517": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7518": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7519": {
      "op": "DUP12"
    },
    "7520": {
      "op": "DUP2"
    },
    "7521": {
      "op": "MSTORE"
    },
    "7522": {
      "op": "SWAP3"
    },
    "7523": {
      "op": "DUP4"
    },
    "7524": {
      "op": "ADD"
    },
    "7525": {
      "op": "DUP11"
    },
    "7526": {
      "op": "SWAP1"
    },
    "7527": {
      "op": "MSTORE"
    },
    "7528": {
      "fn": "Shardable.purchase",
      "offset": [
        9204,
        9214
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7529": {
      "op": "DUP4"
    },
    "7530": {
      "op": "DUP6"
    },
    "7531": {
      "op": "ADD"
    },
    "7532": {
      "op": "MSTORE"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "op": "SUB"
    },
    "7541": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7542": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7543": {
      "fn": "Shardable.purchase",
      "offset": [
        9215,
        9246
      ],
      "op": "AND",
      "path": "2"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7546": {
      "op": "DUP4"
    },
    "7547": {
      "op": "ADD"
    },
    "7548": {
      "op": "MSTORE"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7551": {
      "op": "DUP3"
    },
    "7552": {
      "op": "ADD"
    },
    "7553": {
      "op": "MSTORE"
    },
    "7554": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7555": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7556": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F"
    },
    "7589": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7590": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7591": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7592": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "SUB",
      "path": "2"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7595": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "ADD",
      "path": "2"
    },
    "7596": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7597": {
      "fn": "Shardable.purchase",
      "offset": [
        9182,
        9272
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7598": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7600": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7601": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7602": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7603": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7605": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7607": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7608": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7610": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7611": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9344
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7612": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9351
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7613": {
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9361
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7614": {
      "branch": 244,
      "fn": "Shardable.purchase",
      "offset": [
        9326,
        9361
      ],
      "op": "EQ",
      "path": "2"
    },
    "7615": {
      "fn": "Shardable.purchase",
      "offset": [
        9322,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E37"
    },
    "7618": {
      "branch": 244,
      "fn": "Shardable.purchase",
      "offset": [
        9322,
        9594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7619": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x0"
    },
    "7621": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7622": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7623": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7624": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7626": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7628": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7629": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7630": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7631": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7633": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7634": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7635": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9463
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7636": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7638": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9469
      ],
      "op": "ADD",
      "path": "2"
    },
    "7639": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9469
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "op": "SUB"
    },
    "7648": {
      "fn": "Shardable.purchase",
      "offset": [
        9445,
        9469
      ],
      "op": "AND",
      "path": "2"
    },
    "7649": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7650": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7651": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7653": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7654": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7655": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7656": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7657": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7658": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7659": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7660": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7661": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7662": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7664": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7665": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7666": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7667": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7668": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7669": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9489
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7670": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9496
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7671": {
      "fn": "Shardable.purchase",
      "offset": [
        9420,
        9583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E37"
    },
    "7674": {
      "fn": "Shardable.purchase",
      "offset": [
        9420,
        9583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7675": {
      "fn": "Shardable.purchase",
      "offset": [
        9432,
        9470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7676": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E06"
    },
    "7679": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9503
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7680": {
      "fn": "Shardable.purchase",
      "offset": [
        9497,
        9503
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7681": {
      "fn": "Shardable.purchase",
      "offset": [
        9497,
        9503
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7682": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B1"
    },
    "7685": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9471,
        9503
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7686": {
      "fn": "Shardable.purchase",
      "offset": [
        9471,
        9503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7687": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7689": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7690": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7691": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7692": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7694": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7696": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7697": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7699": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7700": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9522
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7701": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7703": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7704": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "ADD",
      "path": "2"
    },
    "7705": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7706": {
      "fn": "Shardable.purchase",
      "offset": [
        9536,
        9560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7708": {
      "fn": "Shardable.purchase",
      "offset": [
        9536,
        9560
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7709": {
      "fn": "Shardable.purchase",
      "offset": [
        9536,
        9560
      ],
      "op": "ADD",
      "path": "2"
    },
    "7710": {
      "fn": "Shardable.purchase",
      "offset": [
        9536,
        9560
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7711": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7713": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7714": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7715": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "ADD",
      "path": "2"
    },
    "7716": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "op": "SUB"
    },
    "7725": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7726": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7727": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "AND",
      "path": "2"
    },
    "7728": {
      "fn": "Shardable.purchase",
      "offset": [
        9504,
        9535
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7729": {
      "fn": "Shardable.purchase",
      "offset": [
        9536,
        9560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7730": {
      "fn": "Shardable.purchase",
      "offset": [
        9561,
        9582
      ],
      "op": "AND",
      "path": "2"
    },
    "7731": {
      "fn": "Shardable.purchase",
      "offset": [
        9420,
        9431
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35BB"
    },
    "7734": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9420,
        9583
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7735": {
      "fn": "Shardable.purchase",
      "offset": [
        9420,
        9583
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7736": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7737": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7738": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7739": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7740": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7741": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7742": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9600
      ],
      "op": "POP",
      "path": "2"
    },
    "7743": {
      "fn": "Shardable.purchase",
      "jump": "o",
      "offset": [
        7260,
        9600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7744": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12027,
        12152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7751": {
      "op": "SHL"
    },
    "7752": {
      "op": "SUB"
    },
    "7753": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 76
    },
    "7754": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "AND",
      "path": "2"
    },
    "7755": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12087,
        12091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7757": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7758": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7759": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7760": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7762": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7764": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7765": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7767": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7768": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7769": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12123,
        12144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7770": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12110,
        12145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "7773": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12110,
        12145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7774": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7776": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7777": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7778": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7779": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7780": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7781": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7783": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7785": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7786": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7788": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7789": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7790": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7791": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "7792": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7793": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7794": {
      "fn": "Shardable.putForSale",
      "offset": [
        10073,
        10284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7795": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7797": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7798": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7799": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7800": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7802": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7804": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7805": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7807": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7808": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7809": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7811": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "7812": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7813": {
      "fn": "Shardable.putForSale",
      "offset": [
        10191,
        10196
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7814": {
      "fn": "Shardable.putForSale",
      "offset": [
        10191,
        10196
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "op": "SUB"
    },
    "7823": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "7824": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7825": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "7826": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EAD"
    },
    "7829": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7830": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7832": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7841": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7842": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7844": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "7845": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "7848": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7849": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4008"
    },
    "7852": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7853": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7854": {
      "fn": "Shardable.putForSale",
      "offset": [
        10213,
        10218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7855": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC7"
    },
    "7858": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7859": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7861": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7862": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7863": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7864": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7865": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7866": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7868": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7870": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7871": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7873": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7874": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7875": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7876": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "7877": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7878": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7879": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7880": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE3"
    },
    "7883": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7884": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7886": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7893": {
      "op": "SHL"
    },
    "7894": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7895": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7896": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7898": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "7899": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "7902": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7903": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "7906": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7907": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7908": {
      "fn": "Shardable.putForSale",
      "offset": [
        10230,
        10277
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x1E37"
    },
    "7911": {
      "fn": "Shardable.putForSale",
      "offset": [
        10242,
        10247
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7912": {
      "fn": "Shardable.putForSale",
      "offset": [
        10248,
        10254
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7913": {
      "fn": "Shardable.putForSale",
      "offset": [
        10255,
        10267
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7914": {
      "fn": "Shardable.putForSale",
      "offset": [
        10268,
        10273
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7915": {
      "fn": "Shardable.putForSale",
      "offset": [
        10274,
        10276
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7916": {
      "fn": "Shardable.putForSale",
      "offset": [
        10230,
        10241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35BB"
    },
    "7919": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10230,
        10277
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7920": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7921": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12446,
        12450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7923": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 78
    },
    "7924": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7925": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7926": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7928": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7930": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7931": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7933": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7934": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12487
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7935": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12501
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7937": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12501
      ],
      "op": "ADD",
      "path": "2"
    },
    "7938": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12501
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7939": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12512
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7940": {
      "op": "LT"
    },
    "7941": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7942": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7943": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7944": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12556
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD60"
    },
    "7947": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12469,
        12556
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7948": {
      "op": "POP"
    },
    "7949": {
      "op": "POP"
    },
    "7950": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11335,
        11342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7952": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7953": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7954": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7955": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7957": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7959": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7960": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7962": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7963": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7964": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7965": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7966": {
      "op": "GT"
    },
    "7967": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12516,
        12556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7968": {
      "fn": "Shardable.shardExisted",
      "jump": "o",
      "offset": [
        12372,
        12563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7969": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7247,
        7491
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7976": {
      "op": "SHL"
    },
    "7977": {
      "op": "SUB"
    },
    "7978": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 79
    },
    "7979": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "AND",
      "path": "1"
    },
    "7980": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7982": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7983": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7984": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7985": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "7987": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7989": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7990": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7992": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7993": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7994": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7995": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7996": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7379,
        7384
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7997": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7379,
        7384
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7998": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7375
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7999": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F49"
    },
    "8002": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8003": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7379,
        7384
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8004": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7379,
        7384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8005": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9F"
    },
    "8008": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        7355,
        7384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8009": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8010": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8011": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8012": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7355,
        7384
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8013": {
      "op": "POP"
    },
    "8014": {
      "op": "POP"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8021": {
      "op": "SHL"
    },
    "8022": {
      "op": "SUB"
    },
    "8023": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 80
    },
    "8024": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "AND",
      "path": "1"
    },
    "8025": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8027": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8028": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8029": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8030": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "8032": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8034": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8035": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8037": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8038": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8039": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7431
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8040": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7431
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8041": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7426,
        7431
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8042": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7426,
        7431
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8043": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8044": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2A"
    },
    "8047": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8048": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7426,
        7431
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8049": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7426,
        7431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8050": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7394,
        7431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9F"
    },
    "8053": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        7394,
        7431
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8054": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22275,
        22495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8055": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8057": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8058": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8059": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8061": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "8062": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8063": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8064": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "8065": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9C"
    },
    "8068": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8069": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8071": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8078": {
      "op": "SHL"
    },
    "8079": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8080": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8081": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8083": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "8084": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "8087": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8088": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "8091": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8092": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8093": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22405,
        22413
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 81
    },
    "8094": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "8096": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22391,
        22401
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8097": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8099": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8100": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FAD"
    },
    "8103": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8104": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8105": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "8108": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        22379,
        22402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8109": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8110": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8111": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8112": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8113": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8115": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8116": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8117": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8118": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8119": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SUB",
      "path": "0"
    },
    "8120": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8122": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "ADD",
      "path": "0"
    },
    "8123": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8124": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22402
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8125": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8126": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8129": {
      "op": "NOT"
    },
    "8130": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "AND",
      "path": "0"
    },
    "8131": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8133": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8134": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8136": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8137": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "GT",
      "path": "0"
    },
    "8138": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8139": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD6"
    },
    "8142": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8143": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD6"
    },
    "8146": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "8149": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        22379,
        22413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8150": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8151": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "MUL",
      "path": "0"
    },
    "8152": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "OR",
      "path": "0"
    },
    "8153": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8154": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8155": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22379,
        22413
      ],
      "op": "POP",
      "path": "0"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8158": {
      "op": "DUP1"
    },
    "8159": {
      "op": "MLOAD"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8162": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "8165": {
      "op": "DUP4"
    },
    "8166": {
      "op": "CODECOPY"
    },
    "8167": {
      "op": "DUP2"
    },
    "8168": {
      "op": "MLOAD"
    },
    "8169": {
      "op": "SWAP2"
    },
    "8170": {
      "op": "MSTORE"
    },
    "8171": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22456,
        22466
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 82
    },
    "8172": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22467,
        22475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8173": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8175": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8176": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8178": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "ADD",
      "path": "0"
    },
    "8179": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FFD"
    },
    "8182": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8183": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8184": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8185": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C3"
    },
    "8188": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        22445,
        22476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8189": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8190": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8192": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8193": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8196": {
      "op": "NOT"
    },
    "8197": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8198": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8199": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SUB",
      "path": "0"
    },
    "8200": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "ADD",
      "path": "0"
    },
    "8201": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8202": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8203": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8204": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8205": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8206": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22445,
        22476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8207": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2019"
    },
    "8210": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8211": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22477,
        22487
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8212": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22477,
        22487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8213": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E5"
    },
    "8216": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        22428,
        22488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8217": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8218": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8220": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8221": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8222": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8223": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "SUB",
      "path": "0"
    },
    "8224": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8225": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22428,
        22488
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8226": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22275,
        22495
      ],
      "op": "POP",
      "path": "0"
    },
    "8227": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        22275,
        22495
      ],
      "op": "POP",
      "path": "0"
    },
    "8228": {
      "fn": "Administrable._setBasePermit",
      "jump": "o",
      "offset": [
        22275,
        22495
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8229": {
      "fn": "Administrable._liquidize",
      "offset": [
        24383,
        24504
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8230": {
      "fn": "Administrable._liquidize",
      "offset": [
        24433,
        24451
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 83,
      "value": "0x202D"
    },
    "8233": {
      "fn": "Administrable._liquidize",
      "offset": [
        24433,
        24449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x376E"
    },
    "8236": {
      "fn": "Administrable._liquidize",
      "jump": "i",
      "offset": [
        24433,
        24451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8237": {
      "fn": "Administrable._liquidize",
      "offset": [
        24433,
        24451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8238": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 84,
      "value": "0x40"
    },
    "8240": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8241": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8244": {
      "op": "DUP1"
    },
    "8245": {
      "op": "DUP3"
    },
    "8246": {
      "op": "MSTORE"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8249": {
      "op": "SWAP1"
    },
    "8250": {
      "op": "DUP3"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "op": "MSTORE"
    },
    "8253": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8258": {
      "op": "SHL"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8261": {
      "op": "DUP3"
    },
    "8262": {
      "op": "ADD"
    },
    "8263": {
      "op": "MSTORE"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8268": {
      "op": "DUP3"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "DUP2"
    },
    "8271": {
      "op": "SWAP1"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8275": {
      "op": "SWAP1"
    },
    "8276": {
      "op": "DUP3"
    },
    "8277": {
      "op": "ADD"
    },
    "8278": {
      "op": "MSTORE"
    },
    "8279": {
      "fn": "Administrable._liquidize",
      "offset": [
        24486,
        24496
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8280": {
      "op": "DUP2"
    },
    "8281": {
      "op": "DUP4"
    },
    "8282": {
      "op": "ADD"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8285": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8288": {
      "op": "DUP1"
    },
    "8289": {
      "op": "MLOAD"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8292": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "8295": {
      "op": "DUP4"
    },
    "8296": {
      "op": "CODECOPY"
    },
    "8297": {
      "op": "DUP2"
    },
    "8298": {
      "op": "MLOAD"
    },
    "8299": {
      "op": "SWAP2"
    },
    "8300": {
      "op": "MSTORE"
    },
    "8301": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8302": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8303": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8304": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "SUB",
      "path": "0"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8307": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "ADD",
      "path": "0"
    },
    "8308": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8309": {
      "fn": "Administrable._liquidize",
      "offset": [
        24466,
        24497
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8310": {
      "fn": "Administrable._liquidize",
      "jump": "o",
      "offset": [
        24383,
        24504
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8311": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12669,
        12781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8312": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12729,
        12734
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8313": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2091"
    },
    "8316": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8317": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8319": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8320": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8321": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8322": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8323": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8324": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8326": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8328": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8329": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8331": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8332": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8333": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8334": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "8335": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8336": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8337": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8338": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20AD"
    },
    "8341": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8342": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8344": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8351": {
      "op": "SHL"
    },
    "8352": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8353": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8354": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8356": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "8357": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "8360": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8361": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "8364": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8365": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8366": {
      "op": "POP"
    },
    "8367": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12769,
        12774
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x0"
    },
    "8369": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8370": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8371": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8372": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8374": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8376": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8377": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8379": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8380": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12766
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8381": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8382": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8385": {
      "op": "NOT"
    },
    "8386": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12774
      ],
      "op": "AND",
      "path": "2"
    },
    "8387": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8388": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12746,
        12774
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8389": {
      "fn": "Shardable._cancelSale",
      "jump": "o",
      "offset": [
        12669,
        12781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8390": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17140,
        17497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8391": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14405,
        14409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8393": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8394": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8395": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8396": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "8398": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8400": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8401": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8403": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8404": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8405": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8406": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17215,
        17223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8407": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17215,
        17223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8408": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8410": {
      "fn": "Administrable.dividendExists",
      "offset": [
        14426,
        14450
      ],
      "op": "AND",
      "path": "0"
    },
    "8411": {
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E3"
    },
    "8414": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8415": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8417": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8418": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8419": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8420": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8422": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8423": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8424": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8426": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "8427": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8428": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8429": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "8430": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2109"
    },
    "8433": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8434": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8436": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8445": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8446": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8448": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "8449": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "8452": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8453": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "8456": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8457": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8458": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17275,
        17280
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x0"
    },
    "8460": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8461": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8462": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8463": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "8465": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8467": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8468": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8469": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8470": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8472": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8473": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8474": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17272
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8475": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17280
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8476": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8479": {
      "op": "NOT"
    },
    "8480": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17280
      ],
      "op": "AND",
      "path": "0"
    },
    "8481": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8482": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17248,
        17280
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8483": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17415
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 87,
      "value": "0x15"
    },
    "8485": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8486": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8487": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8488": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8489": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8490": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8491": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8492": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8493": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8500": {
      "op": "SHL"
    },
    "8501": {
      "op": "DUP2"
    },
    "8502": {
      "op": "MSTORE"
    },
    "8503": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8507": {
      "op": "DUP3"
    },
    "8508": {
      "op": "ADD"
    },
    "8509": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8510": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8511": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8512": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8513": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8514": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8515": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "SUB",
      "path": "0"
    },
    "8516": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "8518": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "ADD",
      "path": "0"
    },
    "8519": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8520": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17354
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8521": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8522": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8523": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8524": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "8526": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8527": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8528": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8529": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8530": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8531": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17392
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8538": {
      "op": "SHL"
    },
    "8539": {
      "op": "SUB"
    },
    "8540": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17355,
        17392
      ],
      "op": "AND",
      "path": "0"
    },
    "8541": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8542": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8543": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8544": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8545": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8546": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8547": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8548": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8549": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8550": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8551": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8552": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8553": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17393
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8554": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2174"
    },
    "8557": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8558": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8559": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17397,
        17425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8560": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9F"
    },
    "8563": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        17333,
        17425
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8564": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8565": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8566": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8567": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17333,
        17425
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8568": {
      "op": "POP"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 88,
      "value": "0x40"
    },
    "8572": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8573": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8574": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8576": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8577": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "ADD",
      "path": "0"
    },
    "8578": {
      "op": "DUP5"
    },
    "8579": {
      "op": "SWAP1"
    },
    "8580": {
      "op": "MSTORE"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8583": {
      "op": "DUP1"
    },
    "8584": {
      "op": "MLOAD"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8587": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "8590": {
      "op": "DUP4"
    },
    "8591": {
      "op": "CODECOPY"
    },
    "8592": {
      "op": "DUP2"
    },
    "8593": {
      "op": "MLOAD"
    },
    "8594": {
      "op": "SWAP2"
    },
    "8595": {
      "op": "MSTORE"
    },
    "8596": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17440,
        17489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8597": {
      "op": "ADD"
    },
    "8598": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8600": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8601": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8604": {
      "op": "NOT"
    },
    "8605": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8606": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8607": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "SUB",
      "path": "0"
    },
    "8608": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "ADD",
      "path": "0"
    },
    "8609": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8610": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8611": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8612": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8613": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8614": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17457,
        17477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8615": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17440,
        17489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2019"
    },
    "8618": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17440,
        17489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8619": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17478,
        17488
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8620": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17478,
        17488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8621": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        17440,
        17489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4211"
    },
    "8624": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        17440,
        17489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8625": {
      "fn": "Administrable._createBank",
      "offset": [
        17669,
        17969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8626": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8628": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8629": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8630": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8632": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "8633": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8634": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8635": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "8636": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D7"
    },
    "8639": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8640": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8642": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8649": {
      "op": "SHL"
    },
    "8650": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8651": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8652": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8654": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "8655": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "8658": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8659": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "8662": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8663": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8664": {
      "fn": "Administrable._createBank",
      "offset": [
        17774,
        17794
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 89,
      "value": "0x21E0"
    },
    "8667": {
      "fn": "Administrable._createBank",
      "offset": [
        17785,
        17793
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8668": {
      "fn": "Administrable._createBank",
      "offset": [
        17774,
        17784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1650"
    },
    "8671": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17774,
        17794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8672": {
      "fn": "Administrable._createBank",
      "offset": [
        17774,
        17794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8673": {
      "branch": 196,
      "fn": "Administrable._createBank",
      "offset": [
        17773,
        17794
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8674": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2212"
    },
    "8677": {
      "branch": 196,
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8678": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8680": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8689": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8692": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8694": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8695": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "ADD",
      "path": "0"
    },
    "8696": {
      "op": "MSTORE"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8701": {
      "op": "DUP3"
    },
    "8702": {
      "op": "ADD"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "PUSH2",
      "value": "0x4145"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8709": {
      "op": "SHL"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8712": {
      "op": "DUP3"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "op": "MSTORE"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "8721": {
      "op": "JUMP"
    },
    "8722": {
      "fn": "Administrable._createBank",
      "offset": [
        17765,
        17801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8723": {
      "fn": "Administrable._createBank",
      "offset": [
        17846,
        17850
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0x1"
    },
    "8725": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "8727": {
      "fn": "Administrable._createBank",
      "offset": [
        17823,
        17831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8728": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8730": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8731": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2224"
    },
    "8734": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8735": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8736": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "8739": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17811,
        17832
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8740": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8741": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8742": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8743": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8744": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8746": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8747": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8748": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8750": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8751": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8752": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8753": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "SUB",
      "path": "0"
    },
    "8754": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8755": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "ADD",
      "path": "0"
    },
    "8756": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8757": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17832
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8764": {
      "op": "SHL"
    },
    "8765": {
      "op": "SUB"
    },
    "8766": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8767": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "AND",
      "path": "0"
    },
    "8768": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8770": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8771": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8772": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8773": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8774": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8775": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8776": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8777": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8778": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8781": {
      "op": "NOT"
    },
    "8782": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "AND",
      "path": "0"
    },
    "8783": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8784": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8785": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8786": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8787": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8788": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8789": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "OR",
      "path": "0"
    },
    "8790": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8791": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8792": {
      "fn": "Administrable._createBank",
      "offset": [
        17811,
        17850
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8795": {
      "op": "SWAP1"
    },
    "8796": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17870
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0xD"
    },
    "8798": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8799": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2269"
    },
    "8802": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8803": {
      "fn": "Administrable._createBank",
      "offset": [
        17871,
        17879
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8804": {
      "fn": "Administrable._createBank",
      "offset": [
        17871,
        17879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8805": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "8808": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17860,
        17880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8809": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8810": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8811": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8812": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8813": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8815": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8816": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8818": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8819": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8820": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8821": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "SUB",
      "path": "0"
    },
    "8822": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8823": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "ADD",
      "path": "0"
    },
    "8824": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8825": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17880
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8826": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8827": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8830": {
      "op": "NOT"
    },
    "8831": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "AND",
      "path": "0"
    },
    "8832": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8833": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8834": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8835": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8836": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8837": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8838": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "OR",
      "path": "0"
    },
    "8839": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8840": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8841": {
      "fn": "Administrable._createBank",
      "offset": [
        17860,
        17887
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8844": {
      "op": "DUP1"
    },
    "8845": {
      "op": "MLOAD"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8848": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "8851": {
      "op": "DUP4"
    },
    "8852": {
      "op": "CODECOPY"
    },
    "8853": {
      "op": "DUP2"
    },
    "8854": {
      "op": "MLOAD"
    },
    "8855": {
      "op": "SWAP2"
    },
    "8856": {
      "op": "MSTORE"
    },
    "8857": {
      "fn": "Administrable._createBank",
      "offset": [
        17902,
        17961
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 92
    },
    "8858": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A7"
    },
    "8861": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8862": {
      "fn": "Administrable._createBank",
      "offset": [
        17930,
        17938
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8863": {
      "fn": "Administrable._createBank",
      "offset": [
        17930,
        17938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8864": {
      "fn": "Administrable._createBank",
      "offset": [
        17939,
        17948
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8865": {
      "fn": "Administrable._createBank",
      "offset": [
        17939,
        17948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8866": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "ADD",
      "path": "0"
    },
    "8867": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x423D"
    },
    "8870": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17919,
        17949
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8871": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8872": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8874": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8875": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8878": {
      "op": "NOT"
    },
    "8879": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8880": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8881": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "SUB",
      "path": "0"
    },
    "8882": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "ADD",
      "path": "0"
    },
    "8883": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8884": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8885": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8886": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8887": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8888": {
      "fn": "Administrable._createBank",
      "offset": [
        17919,
        17949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8889": {
      "fn": "Administrable._createBank",
      "offset": [
        17902,
        17961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2019"
    },
    "8892": {
      "fn": "Administrable._createBank",
      "offset": [
        17902,
        17961
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8893": {
      "fn": "Administrable._createBank",
      "offset": [
        17950,
        17960
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8894": {
      "fn": "Administrable._createBank",
      "offset": [
        17950,
        17960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8895": {
      "fn": "Administrable._createBank",
      "offset": [
        17902,
        17961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4267"
    },
    "8898": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17902,
        17961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8899": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18732,
        19005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8900": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8902": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8903": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8904": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8906": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "8907": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8908": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8909": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "8910": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E9"
    },
    "8913": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8914": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8916": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8923": {
      "op": "SHL"
    },
    "8924": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8925": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8926": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8928": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "8929": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "8932": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8933": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "8936": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8937": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8938": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18841,
        18872
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 93,
      "value": "0x22F3"
    },
    "8941": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18853,
        18861
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8942": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18862,
        18871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8943": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18841,
        18852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "8946": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18841,
        18872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8947": {
      "branch": 197,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18841,
        18872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8948": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22FC"
    },
    "8951": {
      "branch": 197,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8952": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8954": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8955": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8956": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18833,
        18873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8957": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18918,
        18923
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x0"
    },
    "8959": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "8961": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18895,
        18903
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8962": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8964": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8965": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230E"
    },
    "8968": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8969": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8970": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "8973": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18883,
        18904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8974": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8975": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8976": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8977": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8978": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8980": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8981": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8982": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8984": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8985": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8986": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8987": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "SUB",
      "path": "0"
    },
    "8988": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8989": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "ADD",
      "path": "0"
    },
    "8990": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8991": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18904
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8998": {
      "op": "SHL"
    },
    "8999": {
      "op": "SUB"
    },
    "9000": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9001": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "AND",
      "path": "0"
    },
    "9002": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9004": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9005": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9006": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9007": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9008": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9009": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9010": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9011": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9012": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9013": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9014": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9015": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9018": {
      "op": "NOT"
    },
    "9019": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "AND",
      "path": "0"
    },
    "9020": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9021": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9022": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9023": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9024": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9025": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9026": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "OR",
      "path": "0"
    },
    "9027": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9028": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9029": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18923
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9032": {
      "op": "DUP1"
    },
    "9033": {
      "op": "MLOAD"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9036": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "9039": {
      "op": "DUP4"
    },
    "9040": {
      "op": "CODECOPY"
    },
    "9041": {
      "op": "DUP2"
    },
    "9042": {
      "op": "MLOAD"
    },
    "9043": {
      "op": "SWAP2"
    },
    "9044": {
      "op": "MSTORE"
    },
    "9045": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18938,
        18997
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 95
    },
    "9046": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2363"
    },
    "9049": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9050": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18966,
        18974
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9051": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18966,
        18974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9052": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9053": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18883,
        18915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9054": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "ADD",
      "path": "0"
    },
    "9055": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x423D"
    },
    "9058": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18955,
        18985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9059": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9060": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9062": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9063": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9066": {
      "op": "NOT"
    },
    "9067": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9068": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9069": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "SUB",
      "path": "0"
    },
    "9070": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "ADD",
      "path": "0"
    },
    "9071": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9072": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9073": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9074": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9075": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9076": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18955,
        18985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9077": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18938,
        18997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2019"
    },
    "9080": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18938,
        18997
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9081": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18986,
        18996
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9082": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18986,
        18996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9083": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18938,
        18997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4293"
    },
    "9086": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18938,
        18997
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9087": {
      "fn": "Idea._transferToken",
      "offset": [
        5174,
        5984
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9094": {
      "op": "SHL"
    },
    "9095": {
      "op": "SUB"
    },
    "9096": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 96
    },
    "9097": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "AND",
      "path": "1"
    },
    "9098": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9100": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9101": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9102": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9103": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5280
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9105": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9107": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9108": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9110": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9111": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9112": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5294
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9113": {
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9114": {
      "op": "GT"
    },
    "9115": {
      "branch": 216,
      "fn": "Idea._transferToken",
      "offset": [
        5274,
        5303
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9116": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23B7"
    },
    "9119": {
      "branch": 216,
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9120": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9122": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9129": {
      "op": "SHL"
    },
    "9130": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9131": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9132": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9134": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "ADD",
      "path": "1"
    },
    "9135": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "9138": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9139": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x414C"
    },
    "9142": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5266,
        5310
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9143": {
      "fn": "Idea._transferToken",
      "offset": [
        5266,
        5310
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9150": {
      "op": "SHL"
    },
    "9151": {
      "op": "SUB"
    },
    "9152": {
      "fn": "Idea._transferToken",
      "offset": [
        5324,
        5350
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9153": {
      "branch": 217,
      "fn": "Idea._transferToken",
      "offset": [
        5324,
        5350
      ],
      "op": "AND",
      "path": "1"
    },
    "9154": {
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D4"
    },
    "9157": {
      "branch": 217,
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9158": {
      "fn": "Idea._transferToken",
      "offset": [
        5354,
        5379
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 97,
      "value": "0x23CF"
    },
    "9161": {
      "fn": "Idea._transferToken",
      "offset": [
        5369,
        5374
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9162": {
      "fn": "Idea._transferToken",
      "offset": [
        5376,
        5378
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9163": {
      "fn": "Idea._transferToken",
      "offset": [
        5354,
        5368
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37A0"
    },
    "9166": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5354,
        5379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9167": {
      "fn": "Idea._transferToken",
      "offset": [
        5354,
        5379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9168": {
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260F"
    },
    "9171": {
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9172": {
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9173": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0x40"
    },
    "9175": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9176": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9183": {
      "op": "SHL"
    },
    "9184": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9185": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9192": {
      "op": "SHL"
    },
    "9193": {
      "op": "SUB"
    },
    "9194": {
      "op": "DUP3"
    },
    "9195": {
      "op": "DUP2"
    },
    "9196": {
      "op": "AND"
    },
    "9197": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9199": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9200": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ADD",
      "path": "1"
    },
    "9201": {
      "op": "MSTORE"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9204": {
      "op": "DUP3"
    },
    "9205": {
      "op": "ADD"
    },
    "9206": {
      "op": "DUP5"
    },
    "9207": {
      "op": "SWAP1"
    },
    "9208": {
      "op": "MSTORE"
    },
    "9209": {
      "fn": "Idea._transferToken",
      "offset": [
        5429,
        5441
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9210": {
      "fn": "Idea._transferToken",
      "offset": [
        5429,
        5441
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9211": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9212": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9213": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "AND",
      "path": "1"
    },
    "9214": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9215": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "9220": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9223": {
      "op": "ADD"
    },
    "9224": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9226": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9228": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9229": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9230": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9231": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "SUB",
      "path": "1"
    },
    "9232": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9233": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9235": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9236": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "GAS",
      "path": "1"
    },
    "9237": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "CALL",
      "path": "1"
    },
    "9238": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9239": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9240": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9241": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2426"
    },
    "9244": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9245": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9246": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9248": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9249": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9250": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9251": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9253": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9254": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9255": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "POP",
      "path": "1"
    },
    "9256": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "POP",
      "path": "1"
    },
    "9257": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "POP",
      "path": "1"
    },
    "9258": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "POP",
      "path": "1"
    },
    "9259": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9261": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9262": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9263": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9265": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "NOT",
      "path": "1"
    },
    "9266": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9268": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9269": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ADD",
      "path": "1"
    },
    "9270": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "AND",
      "path": "1"
    },
    "9271": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9272": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ADD",
      "path": "1"
    },
    "9273": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9274": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9276": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9277": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "POP",
      "path": "1"
    },
    "9278": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9279": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "ADD",
      "path": "1"
    },
    "9280": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9281": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244A"
    },
    "9284": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9285": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9286": {
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4168"
    },
    "9289": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5464,
        5488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9290": {
      "branch": 218,
      "fn": "Idea._transferToken",
      "offset": [
        5464,
        5488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9291": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247B"
    },
    "9294": {
      "branch": 218,
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9295": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9297": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9304": {
      "op": "SHL"
    },
    "9305": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9306": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9309": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9311": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9312": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "ADD",
      "path": "1"
    },
    "9313": {
      "op": "MSTORE"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9318": {
      "op": "DUP3"
    },
    "9319": {
      "op": "ADD"
    },
    "9320": {
      "op": "MSTORE"
    },
    "9321": {
      "op": "PUSH2",
      "value": "0x4E41"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9326": {
      "op": "SHL"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9329": {
      "op": "DUP3"
    },
    "9330": {
      "op": "ADD"
    },
    "9331": {
      "op": "MSTORE"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9334": {
      "op": "ADD"
    },
    "9335": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "9338": {
      "op": "JUMP"
    },
    "9339": {
      "fn": "Idea._transferToken",
      "offset": [
        5456,
        5495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9346": {
      "op": "SHL"
    },
    "9347": {
      "op": "SUB"
    },
    "9348": {
      "fn": "Idea._transferToken",
      "offset": [
        5513,
        5527
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9349": {
      "fn": "Idea._transferToken",
      "offset": [
        5513,
        5527
      ],
      "op": "AND",
      "path": "1"
    },
    "9350": {
      "fn": "Idea._transferToken",
      "offset": [
        5513,
        5527
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "9351": {
      "branch": 219,
      "fn": "Idea._transferToken",
      "offset": [
        5513,
        5531
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9352": {
      "fn": "Idea._transferToken",
      "offset": [
        5509,
        5894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257E"
    },
    "9355": {
      "branch": 219,
      "fn": "Idea._transferToken",
      "offset": [
        5509,
        5894
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9356": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9358": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9359": {
      "op": "PUSH4",
      "value": "0x4B91AD0F"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9366": {
      "op": "SHL"
    },
    "9367": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9368": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9375": {
      "op": "SHL"
    },
    "9376": {
      "op": "SUB"
    },
    "9377": {
      "op": "DUP6"
    },
    "9378": {
      "op": "DUP2"
    },
    "9379": {
      "op": "AND"
    },
    "9380": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9382": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9383": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "ADD",
      "path": "1"
    },
    "9384": {
      "op": "MSTORE"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9387": {
      "op": "DUP3"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "op": "DUP6"
    },
    "9390": {
      "op": "SWAP1"
    },
    "9391": {
      "op": "MSTORE"
    },
    "9392": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5577
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9393": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5577
      ],
      "op": "AND",
      "path": "1"
    },
    "9394": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9395": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5577
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x97235A1E"
    },
    "9400": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9403": {
      "op": "ADD"
    },
    "9404": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9406": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9408": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9409": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9410": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9411": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "SUB",
      "path": "1"
    },
    "9412": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9413": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9415": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9416": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9417": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "9418": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9419": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9420": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9421": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24D5"
    },
    "9424": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9425": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9427": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9428": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9429": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9430": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "POP",
      "path": "1"
    },
    "9431": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "GAS",
      "path": "1"
    },
    "9432": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "CALL",
      "path": "1"
    },
    "9433": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9434": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "POP",
      "path": "1"
    },
    "9435": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "POP",
      "path": "1"
    },
    "9436": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "POP",
      "path": "1"
    },
    "9437": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9438": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9439": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E6"
    },
    "9442": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9443": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "POP",
      "path": "1"
    },
    "9444": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9446": {
      "fn": "Idea._transferToken",
      "offset": [
        5555,
        5598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9447": {
      "fn": "Idea._transferToken",
      "offset": [
        5551,
        5792
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2579"
    },
    "9450": {
      "fn": "Idea._transferToken",
      "offset": [
        5551,
        5792
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9451": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 99,
      "value": "0x40"
    },
    "9453": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9454": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9461": {
      "op": "SHL"
    },
    "9462": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9463": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9470": {
      "op": "SHL"
    },
    "9471": {
      "op": "SUB"
    },
    "9472": {
      "op": "DUP4"
    },
    "9473": {
      "op": "DUP2"
    },
    "9474": {
      "op": "AND"
    },
    "9475": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9477": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9478": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ADD",
      "path": "1"
    },
    "9479": {
      "op": "MSTORE"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9482": {
      "op": "DUP3"
    },
    "9483": {
      "op": "ADD"
    },
    "9484": {
      "op": "DUP6"
    },
    "9485": {
      "op": "SWAP1"
    },
    "9486": {
      "op": "MSTORE"
    },
    "9487": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5756
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9488": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5756
      ],
      "op": "AND",
      "path": "1"
    },
    "9489": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9490": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5756
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "9495": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9498": {
      "op": "ADD"
    },
    "9499": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9501": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9503": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9504": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9505": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9506": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "SUB",
      "path": "1"
    },
    "9507": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9508": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9510": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9511": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "GAS",
      "path": "1"
    },
    "9512": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "CALL",
      "path": "1"
    },
    "9513": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9514": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9515": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9516": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2539"
    },
    "9519": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9520": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9521": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9523": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9524": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9525": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9526": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9528": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9529": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9530": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "POP",
      "path": "1"
    },
    "9531": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "POP",
      "path": "1"
    },
    "9532": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "POP",
      "path": "1"
    },
    "9533": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "POP",
      "path": "1"
    },
    "9534": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9536": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9537": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9538": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9540": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "NOT",
      "path": "1"
    },
    "9541": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9543": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9544": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ADD",
      "path": "1"
    },
    "9545": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "AND",
      "path": "1"
    },
    "9546": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9547": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ADD",
      "path": "1"
    },
    "9548": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9549": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9551": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9552": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "POP",
      "path": "1"
    },
    "9553": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9554": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "ADD",
      "path": "1"
    },
    "9555": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9556": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255D"
    },
    "9559": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9560": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9561": {
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4168"
    },
    "9564": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5742,
        5766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9565": {
      "branch": 220,
      "fn": "Idea._transferToken",
      "offset": [
        5742,
        5766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9566": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2579"
    },
    "9569": {
      "branch": 220,
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9570": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9572": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9579": {
      "op": "SHL"
    },
    "9580": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9581": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9582": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9584": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "ADD",
      "path": "1"
    },
    "9585": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "9588": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9589": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4185"
    },
    "9592": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5734,
        5773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9593": {
      "fn": "Idea._transferToken",
      "offset": [
        5734,
        5773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9594": {
      "fn": "Idea._transferToken",
      "offset": [
        5509,
        5894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260D"
    },
    "9597": {
      "fn": "Idea._transferToken",
      "offset": [
        5509,
        5894
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9598": {
      "fn": "Idea._transferToken",
      "offset": [
        5509,
        5894
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9599": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 100,
      "value": "0x40"
    },
    "9601": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9602": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9607": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9609": {
      "op": "SHL"
    },
    "9610": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9611": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9618": {
      "op": "SHL"
    },
    "9619": {
      "op": "SUB"
    },
    "9620": {
      "op": "DUP4"
    },
    "9621": {
      "op": "DUP2"
    },
    "9622": {
      "op": "AND"
    },
    "9623": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9625": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9626": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ADD",
      "path": "1"
    },
    "9627": {
      "op": "MSTORE"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9630": {
      "op": "DUP3"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "op": "DUP6"
    },
    "9633": {
      "op": "SWAP1"
    },
    "9634": {
      "op": "MSTORE"
    },
    "9635": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5862
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9636": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5862
      ],
      "op": "AND",
      "path": "1"
    },
    "9637": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5862
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9638": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5862
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "9643": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5862
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9644": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9646": {
      "op": "ADD"
    },
    "9647": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9649": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9651": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9652": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9653": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9654": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "SUB",
      "path": "1"
    },
    "9655": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9656": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9658": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9659": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "GAS",
      "path": "1"
    },
    "9660": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "CALL",
      "path": "1"
    },
    "9661": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9662": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9663": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9664": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25CD"
    },
    "9667": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9668": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9669": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9671": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9672": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9673": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9674": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9676": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9677": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9678": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "POP",
      "path": "1"
    },
    "9679": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "POP",
      "path": "1"
    },
    "9680": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "POP",
      "path": "1"
    },
    "9681": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "POP",
      "path": "1"
    },
    "9682": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9684": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9685": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9686": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9688": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "NOT",
      "path": "1"
    },
    "9689": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9691": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9692": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ADD",
      "path": "1"
    },
    "9693": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "AND",
      "path": "1"
    },
    "9694": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9695": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ADD",
      "path": "1"
    },
    "9696": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9697": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9699": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9700": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "POP",
      "path": "1"
    },
    "9701": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9702": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "ADD",
      "path": "1"
    },
    "9703": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9704": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F1"
    },
    "9707": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9708": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9709": {
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4168"
    },
    "9712": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5848,
        5872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9713": {
      "branch": 221,
      "fn": "Idea._transferToken",
      "offset": [
        5848,
        5872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9714": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260D"
    },
    "9717": {
      "branch": 221,
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9718": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9720": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9727": {
      "op": "SHL"
    },
    "9728": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9729": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9730": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9732": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "ADD",
      "path": "1"
    },
    "9733": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "9736": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9737": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4185"
    },
    "9740": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5840,
        5879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9741": {
      "fn": "Idea._transferToken",
      "offset": [
        5840,
        5879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9742": {
      "fn": "Idea._transferToken",
      "offset": [
        5395,
        5904
      ],
      "op": "POP",
      "path": "1"
    },
    "9743": {
      "fn": "Idea._transferToken",
      "offset": [
        5320,
        5904
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9744": {
      "fn": "Idea._transferToken",
      "offset": [
        5917,
        5923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9746": {
      "fn": "Idea._transferToken",
      "offset": [
        5917,
        5923
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9747": {
      "fn": "Idea._transferToken",
      "offset": [
        5917,
        5923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9749": {
      "branch": 222,
      "fn": "Idea._transferToken",
      "offset": [
        5917,
        5923
      ],
      "op": "AND",
      "path": "1"
    },
    "9750": {
      "fn": "Idea._transferToken",
      "offset": [
        5913,
        5969
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9751": {
      "fn": "Idea._transferToken",
      "offset": [
        5913,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1E"
    },
    "9754": {
      "branch": 222,
      "fn": "Idea._transferToken",
      "offset": [
        5913,
        5969
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9755": {
      "fn": "Idea._transferToken",
      "offset": [
        5926,
        5967
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 101,
      "value": "0xB1E"
    },
    "9758": {
      "fn": "Idea._transferToken",
      "offset": [
        5948,
        5960
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9759": {
      "fn": "Idea._transferToken",
      "offset": [
        5961,
        5966
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9760": {
      "fn": "Idea._transferToken",
      "offset": [
        5926,
        5947
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3828"
    },
    "9763": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5926,
        5967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9764": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19109,
        19457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9765": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9767": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9768": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9769": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9771": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "9772": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9773": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9774": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "9775": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x264A"
    },
    "9778": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9779": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9781": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9788": {
      "op": "SHL"
    },
    "9789": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9790": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9791": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9793": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9794": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "9797": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9798": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "9801": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9802": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9803": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19194,
        19214
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 102,
      "value": "0x2653"
    },
    "9806": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19205,
        19213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9807": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19194,
        19204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1650"
    },
    "9810": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        19194,
        19214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9811": {
      "branch": 198,
      "fn": "Administrable._deleteBank",
      "offset": [
        19194,
        19214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9812": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2685"
    },
    "9815": {
      "branch": 198,
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9816": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9818": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9825": {
      "op": "SHL"
    },
    "9826": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9827": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9830": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9832": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9833": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "ADD",
      "path": "0"
    },
    "9834": {
      "op": "MSTORE"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9839": {
      "op": "DUP3"
    },
    "9840": {
      "op": "ADD"
    },
    "9841": {
      "op": "MSTORE"
    },
    "9842": {
      "op": "PUSH3",
      "value": "0x554221"
    },
    "9846": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9848": {
      "op": "SHL"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9851": {
      "op": "DUP3"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "MSTORE"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9856": {
      "op": "ADD"
    },
    "9857": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "9860": {
      "op": "JUMP"
    },
    "9861": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19186,
        19222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9862": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x40"
    },
    "9864": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9865": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9866": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9867": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9868": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "ADD",
      "path": "0"
    },
    "9869": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9870": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9871": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9872": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9874": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9875": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9876": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "9881": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9883": {
      "op": "SHL"
    },
    "9884": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9886": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9887": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9888": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "ADD",
      "path": "0"
    },
    "9889": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19280,
        19293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9890": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9891": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9892": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9893": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9894": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "ADD",
      "path": "0"
    },
    "9895": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19266
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9896": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19294
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659"
    },
    "9929": {
      "branch": 199,
      "fn": "Administrable._deleteBank",
      "offset": [
        19240,
        19294
      ],
      "op": "ADD",
      "path": "0"
    },
    "9930": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26FA"
    },
    "9933": {
      "branch": 199,
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9934": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9936": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9943": {
      "op": "SHL"
    },
    "9944": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9945": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9948": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9950": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9951": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "ADD",
      "path": "0"
    },
    "9952": {
      "op": "MSTORE"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9957": {
      "op": "DUP3"
    },
    "9958": {
      "op": "ADD"
    },
    "9959": {
      "op": "MSTORE"
    },
    "9960": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9963": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "9965": {
      "op": "SHL"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9968": {
      "op": "DUP3"
    },
    "9969": {
      "op": "ADD"
    },
    "9970": {
      "op": "MSTORE"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9973": {
      "op": "ADD"
    },
    "9974": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "9977": {
      "op": "JUMP"
    },
    "9978": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19232,
        19301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9979": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19319,
        19340
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 104,
      "value": "0x2703"
    },
    "9982": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19331,
        19339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9983": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19319,
        19330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC19"
    },
    "9986": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        19319,
        19340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9987": {
      "branch": 200,
      "fn": "Administrable._deleteBank",
      "offset": [
        19319,
        19340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9988": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2734"
    },
    "9991": {
      "branch": 200,
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9992": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9994": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10001": {
      "op": "SHL"
    },
    "10002": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10003": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10006": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10008": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10009": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "ADD",
      "path": "0"
    },
    "10010": {
      "op": "MSTORE"
    },
    "10011": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10015": {
      "op": "DUP3"
    },
    "10016": {
      "op": "ADD"
    },
    "10017": {
      "op": "MSTORE"
    },
    "10018": {
      "op": "PUSH2",
      "value": "0x4245"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10023": {
      "op": "SHL"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10026": {
      "op": "DUP3"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "MSTORE"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10031": {
      "op": "ADD"
    },
    "10032": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "10035": {
      "op": "JUMP"
    },
    "10036": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19311,
        19347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10037": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19380,
        19385
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x0"
    },
    "10039": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "10041": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19368,
        19376
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10042": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10044": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10045": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2746"
    },
    "10048": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10049": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10050": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "10053": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        19357,
        19377
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10054": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10055": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10056": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10057": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10058": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10060": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10061": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10063": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10064": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10065": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10066": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "SUB",
      "path": "0"
    },
    "10067": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10068": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "ADD",
      "path": "0"
    },
    "10069": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10070": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10071": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10072": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10075": {
      "op": "NOT"
    },
    "10076": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "AND",
      "path": "0"
    },
    "10077": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10078": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10079": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10080": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10081": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10082": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10083": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "OR",
      "path": "0"
    },
    "10084": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10085": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10086": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19357,
        19385
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10089": {
      "op": "DUP1"
    },
    "10090": {
      "op": "MLOAD"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10093": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "10096": {
      "op": "DUP4"
    },
    "10097": {
      "op": "CODECOPY"
    },
    "10098": {
      "op": "DUP2"
    },
    "10099": {
      "op": "MLOAD"
    },
    "10100": {
      "op": "SWAP2"
    },
    "10101": {
      "op": "MSTORE"
    },
    "10102": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 106
    },
    "10103": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2782"
    },
    "10106": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10107": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19428,
        19436
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10108": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19428,
        19436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10109": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "ADD",
      "path": "0"
    },
    "10110": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42BF"
    },
    "10113": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        19417,
        19437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10114": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10115": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10117": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10118": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10121": {
      "op": "NOT"
    },
    "10122": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10123": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10124": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "SUB",
      "path": "0"
    },
    "10125": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "ADD",
      "path": "0"
    },
    "10126": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10127": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10128": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10129": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10130": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10131": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19417,
        19437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10132": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279E"
    },
    "10135": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10136": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19438,
        19448
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10137": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19438,
        19448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10138": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D2"
    },
    "10141": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        19400,
        19449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10142": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10143": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10145": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10146": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10147": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10148": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "SUB",
      "path": "0"
    },
    "10149": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10150": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19400,
        19449
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10151": {
      "fn": "Administrable._deleteBank",
      "offset": [
        19109,
        19457
      ],
      "op": "POP",
      "path": "0"
    },
    "10152": {
      "fn": "Administrable._deleteBank",
      "jump": "o",
      "offset": [
        19109,
        19457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10153": {
      "fn": "Idea._issueShards",
      "offset": [
        4426,
        4806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10154": {
      "fn": "Idea._issueShards",
      "offset": [
        4540,
        4566
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 107,
      "value": "0x27B2"
    },
    "10157": {
      "fn": "Idea._issueShards",
      "offset": [
        4553,
        4565
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10158": {
      "fn": "Idea._issueShards",
      "offset": [
        4540,
        4552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "10161": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        4540,
        4566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10162": {
      "branch": 223,
      "fn": "Idea._issueShards",
      "offset": [
        4540,
        4566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10163": {
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27BB"
    },
    "10166": {
      "branch": 223,
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10167": {
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10169": {
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10170": {
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10171": {
      "fn": "Idea._issueShards",
      "offset": [
        4532,
        4567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10172": {
      "fn": "Idea._issueShards",
      "offset": [
        4611,
        4615
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 108
    },
    "10173": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10175": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10176": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10177": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10178": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10180": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10182": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10183": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10185": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10186": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10187": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10188": {
      "fn": "Idea._issueShards",
      "offset": [
        4618,
        4623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10189": {
      "fn": "Idea._issueShards",
      "offset": [
        4618,
        4623
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10190": {
      "fn": "Idea._issueShards",
      "offset": [
        4577,
        4624
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D7"
    },
    "10193": {
      "fn": "Idea._issueShards",
      "offset": [
        4577,
        4624
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10194": {
      "fn": "Idea._issueShards",
      "offset": [
        4590,
        4617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10195": {
      "fn": "Idea._issueShards",
      "offset": [
        4577,
        4589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3886"
    },
    "10198": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        4577,
        4624
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10199": {
      "fn": "Idea._issueShards",
      "offset": [
        4577,
        4624
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10200": {
      "fn": "Idea._issueShards",
      "offset": [
        4685,
        4689
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 109
    },
    "10201": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10203": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10204": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10205": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10206": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10208": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10210": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10211": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10212": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10213": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10215": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10216": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10217": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10218": {
      "fn": "Idea._issueShards",
      "offset": [
        4664,
        4691
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10219": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10220": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10221": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "10223": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10224": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10225": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10226": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10227": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4692
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10228": {
      "fn": "Idea._issueShards",
      "offset": [
        4652,
        4699
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10229": {
      "fn": "Idea._issueShards",
      "offset": [
        4634,
        4720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x280B"
    },
    "10232": {
      "fn": "Idea._issueShards",
      "offset": [
        4634,
        4720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10233": {
      "fn": "Idea._issueShards",
      "offset": [
        4645,
        4699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2802"
    },
    "10236": {
      "fn": "Idea._issueShards",
      "offset": [
        4645,
        4699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10237": {
      "fn": "Idea._issueShards",
      "offset": [
        4645,
        4651
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10238": {
      "fn": "Idea._issueShards",
      "offset": [
        4645,
        4699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9F"
    },
    "10241": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        4645,
        4699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10242": {
      "fn": "Idea._issueShards",
      "offset": [
        4645,
        4699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10243": {
      "fn": "Idea._issueShards",
      "offset": [
        4708,
        4712
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "10244": {
      "fn": "Idea._issueShards",
      "offset": [
        4714,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10246": {
      "fn": "Idea._issueShards",
      "offset": [
        4714,
        4719
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10247": {
      "fn": "Idea._issueShards",
      "offset": [
        4634,
        4644
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38F1"
    },
    "10250": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        4634,
        4720
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10251": {
      "fn": "Idea._issueShards",
      "offset": [
        4634,
        4720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10252": {
      "fn": "Idea._issueShards",
      "offset": [
        4763,
        4767
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 110
    },
    "10253": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10255": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10256": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10257": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10258": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10260": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10262": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10263": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10265": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10266": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10267": {
      "fn": "Idea._issueShards",
      "offset": [
        4742,
        4769
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10268": {
      "fn": "Idea._issueShards",
      "offset": [
        4730,
        4799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE52"
    },
    "10271": {
      "fn": "Idea._issueShards",
      "offset": [
        4730,
        4799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10272": {
      "fn": "Idea._issueShards",
      "offset": [
        4770,
        4776
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10273": {
      "fn": "Idea._issueShards",
      "offset": [
        4777,
        4789
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10274": {
      "fn": "Idea._issueShards",
      "offset": [
        4790,
        4795
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10275": {
      "fn": "Idea._issueShards",
      "offset": [
        4796,
        4798
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10276": {
      "fn": "Idea._issueShards",
      "offset": [
        4730,
        4741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35BB"
    },
    "10279": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        4730,
        4799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10280": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16252,
        16995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10281": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10283": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10284": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10285": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10287": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "10288": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10289": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10290": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "10291": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284E"
    },
    "10294": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10295": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10297": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10304": {
      "op": "SHL"
    },
    "10305": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10306": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10307": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10309": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "10310": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "10313": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10314": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "10317": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10318": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10319": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16369,
        16390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10321": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16393,
        16398
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10322": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 111,
      "value": "0x40"
    },
    "10324": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10325": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10327": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10328": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2862"
    },
    "10331": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10332": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16439,
        16447
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10333": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16439,
        16447
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10334": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "10337": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16425,
        16448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10338": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10339": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10340": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10341": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10342": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10344": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10345": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10346": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10348": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10349": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10350": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10351": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SUB",
      "path": "0"
    },
    "10352": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10353": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "ADD",
      "path": "0"
    },
    "10354": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10355": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16448
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10362": {
      "op": "SHL"
    },
    "10363": {
      "op": "SUB"
    },
    "10364": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10365": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "AND",
      "path": "0"
    },
    "10366": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10368": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10369": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10370": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10371": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10372": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10373": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10374": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10375": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16425,
        16462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10376": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16416,
        16462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10377": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16416,
        16462
      ],
      "op": "GT",
      "path": "0"
    },
    "10378": {
      "branch": 201,
      "fn": "Administrable._issueDividend",
      "offset": [
        16416,
        16462
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10379": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A6"
    },
    "10382": {
      "branch": 201,
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10383": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10385": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10392": {
      "op": "SHL"
    },
    "10393": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10394": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10395": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10397": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "ADD",
      "path": "0"
    },
    "10398": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "10401": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10402": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42FE"
    },
    "10405": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16408,
        16469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10406": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16408,
        16469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10407": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16520,
        16525
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 112
    },
    "10408": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10410": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16493,
        16501
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10411": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10413": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10414": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B7"
    },
    "10417": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10418": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10419": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "10422": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16479,
        16502
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10423": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10424": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10425": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10426": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10427": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10429": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "ADD",
      "path": "0"
    },
    "10430": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10432": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10433": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10434": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10435": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SUB",
      "path": "0"
    },
    "10436": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10437": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16502
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10438": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10440": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16503,
        16515
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10447": {
      "op": "SHL"
    },
    "10448": {
      "op": "SUB"
    },
    "10449": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "AND",
      "path": "0"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10456": {
      "op": "SHL"
    },
    "10457": {
      "op": "SUB"
    },
    "10458": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "AND",
      "path": "0"
    },
    "10459": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10460": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10461": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10463": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "ADD",
      "path": "0"
    },
    "10464": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10465": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10466": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10467": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10469": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "ADD",
      "path": "0"
    },
    "10470": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10472": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10473": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10475": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10476": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10477": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10478": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F7"
    },
    "10481": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10482": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10483": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "10486": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16479,
        16525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10487": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10488": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10489": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10490": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16479,
        16525
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10491": {
      "op": "POP"
    },
    "10492": {
      "op": "POP"
    },
    "10493": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10495": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10496": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10498": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10499": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290D"
    },
    "10502": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10503": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16553,
        16561
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10504": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16553,
        16561
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10505": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "10508": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16539,
        16562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10509": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10510": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10511": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10512": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10513": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10515": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10516": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10517": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10519": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10520": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10521": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10522": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SUB",
      "path": "0"
    },
    "10523": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10524": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "ADD",
      "path": "0"
    },
    "10525": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10526": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16562
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10533": {
      "op": "SHL"
    },
    "10534": {
      "op": "SUB"
    },
    "10535": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10536": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "AND",
      "path": "0"
    },
    "10537": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10539": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10540": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10541": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10542": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10543": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10544": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10545": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10546": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16576
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10547": {
      "branch": 202,
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16581
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10548": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10549": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10550": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2947"
    },
    "10553": {
      "branch": 202,
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10554": {
      "op": "POP"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10561": {
      "op": "SHL"
    },
    "10562": {
      "op": "SUB"
    },
    "10563": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16585,
        16611
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10564": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16585,
        16611
      ],
      "op": "AND",
      "path": "0"
    },
    "10565": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16585,
        16611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10566": {
      "branch": 203,
      "fn": "Administrable._issueDividend",
      "offset": [
        16585,
        16611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10567": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16539,
        16611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10568": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16535,
        16679
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10569": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16535,
        16679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2981"
    },
    "10572": {
      "branch": 203,
      "fn": "Administrable._issueDividend",
      "offset": [
        16535,
        16679
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10573": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16667,
        16668
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 113,
      "value": "0x1"
    },
    "10575": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10577": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16654,
        16662
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10578": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10580": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10581": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295E"
    },
    "10584": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10585": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10586": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "10589": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16627,
        16663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10590": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10591": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10592": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10593": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10594": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10596": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "ADD",
      "path": "0"
    },
    "10597": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10599": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10600": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10601": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10602": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SUB",
      "path": "0"
    },
    "10603": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10604": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10605": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10607": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10608": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10609": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10610": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297B"
    },
    "10613": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10614": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10615": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "10618": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16627,
        16668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10619": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10620": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10621": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10622": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16627,
        16668
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10623": {
      "op": "POP"
    },
    "10624": {
      "op": "POP"
    },
    "10625": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16535,
        16679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10626": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 114,
      "value": "0x40"
    },
    "10628": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10629": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10630": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10631": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10632": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "ADD",
      "path": "0"
    },
    "10633": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10634": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "op": "SUB"
    },
    "10643": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10644": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10645": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "AND",
      "path": "0"
    },
    "10646": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10647": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10648": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10650": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10651": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10652": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "ADD",
      "path": "0"
    },
    "10653": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10654": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10655": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10658": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10659": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10660": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10661": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "10663": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10664": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10665": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10666": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10667": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16717
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10668": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10669": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10670": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10671": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10678": {
      "op": "SHL"
    },
    "10679": {
      "op": "SUB"
    },
    "10680": {
      "op": "NOT"
    },
    "10681": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "AND",
      "path": "0"
    },
    "10682": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10683": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "AND",
      "path": "0"
    },
    "10684": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10685": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10686": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10687": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "OR",
      "path": "0"
    },
    "10688": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10689": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10690": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10693": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10694": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10695": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "ADD",
      "path": "0"
    },
    "10696": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16688,
        16808
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10697": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16836
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 115,
      "value": "0x15"
    },
    "10699": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16851
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10700": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16851
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10701": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16851
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10702": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16851
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10703": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16851
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10704": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16859
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10705": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10706": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16818,
        16859
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10707": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16883
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 116,
      "value": "0x13"
    },
    "10709": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10710": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10711": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10712": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10713": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10714": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16898
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10715": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10716": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10719": {
      "op": "NOT"
    },
    "10720": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "AND",
      "path": "0"
    },
    "10721": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10722": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10723": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "OR",
      "path": "0"
    },
    "10724": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10725": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10726": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16869,
        16905
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10727": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 117
    },
    "10728": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10731": {
      "op": "DUP1"
    },
    "10732": {
      "op": "MLOAD"
    },
    "10733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "10738": {
      "op": "DUP4"
    },
    "10739": {
      "op": "CODECOPY"
    },
    "10740": {
      "op": "DUP2"
    },
    "10741": {
      "op": "MLOAD"
    },
    "10742": {
      "op": "SWAP2"
    },
    "10743": {
      "op": "MSTORE"
    },
    "10744": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10745": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A08"
    },
    "10748": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10749": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16948,
        16956
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10750": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16948,
        16956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10751": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10752": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10753": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10754": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16720,
        16808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10755": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "ADD",
      "path": "0"
    },
    "10756": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431A"
    },
    "10759": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16937,
        16976
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10760": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10761": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10763": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10764": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10767": {
      "op": "NOT"
    },
    "10768": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10769": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10770": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "SUB",
      "path": "0"
    },
    "10771": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "ADD",
      "path": "0"
    },
    "10772": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10773": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10774": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10775": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10776": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10777": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16937,
        16976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10778": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A24"
    },
    "10781": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10782": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16977,
        16987
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10783": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16977,
        16987
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10784": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4348"
    },
    "10787": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16920,
        16988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10788": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10789": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10791": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10792": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10793": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10794": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "SUB",
      "path": "0"
    },
    "10795": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10796": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16920,
        16988
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10797": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16359,
        16995
      ],
      "op": "POP",
      "path": "0"
    },
    "10798": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16252,
        16995
      ],
      "op": "POP",
      "path": "0"
    },
    "10799": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16252,
        16995
      ],
      "op": "POP",
      "path": "0"
    },
    "10800": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16252,
        16995
      ],
      "op": "POP",
      "path": "0"
    },
    "10801": {
      "fn": "Administrable._issueDividend",
      "jump": "o",
      "offset": [
        16252,
        16995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10802": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22615,
        22798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10803": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10805": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10806": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10807": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10809": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "10810": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10811": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10812": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "10813": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A58"
    },
    "10816": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10817": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10819": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10826": {
      "op": "SHL"
    },
    "10827": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10828": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10829": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10831": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "10832": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "10835": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10836": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "10839": {
      "fn": "Administrable._setNonShardHolderState",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10840": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10841": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22715
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 118,
      "value": "0xC"
    },
    "10843": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10844": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10847": {
      "op": "NOT"
    },
    "10848": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "AND",
      "path": "0"
    },
    "10849": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10850": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10851": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10852": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10853": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10854": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "OR",
      "path": "0"
    },
    "10855": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10856": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10857": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22695,
        22726
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10858": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 119,
      "value": "0x40"
    },
    "10860": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10861": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10862": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10864": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10865": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "ADD",
      "path": "0"
    },
    "10866": {
      "op": "SWAP3"
    },
    "10867": {
      "op": "SWAP1"
    },
    "10868": {
      "op": "SWAP3"
    },
    "10869": {
      "op": "MSTORE"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10872": {
      "op": "DUP1"
    },
    "10873": {
      "op": "MLOAD"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10876": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "10879": {
      "op": "DUP4"
    },
    "10880": {
      "op": "CODECOPY"
    },
    "10881": {
      "op": "DUP2"
    },
    "10882": {
      "op": "MLOAD"
    },
    "10883": {
      "op": "SWAP2"
    },
    "10884": {
      "op": "MSTORE"
    },
    "10885": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22741,
        22791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10886": {
      "op": "ADD"
    },
    "10887": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10889": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10890": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10891": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10893": {
      "op": "NOT"
    },
    "10894": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10895": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10896": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "SUB",
      "path": "0"
    },
    "10897": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "ADD",
      "path": "0"
    },
    "10898": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10899": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10900": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10901": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10902": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10903": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22759,
        22779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10904": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22741,
        22791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279E"
    },
    "10907": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22741,
        22791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10908": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22780,
        22790
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10909": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22780,
        22790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10910": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22741,
        22791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4374"
    },
    "10913": {
      "fn": "Administrable._setNonShardHolderState",
      "jump": "i",
      "offset": [
        22741,
        22791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10914": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22996,
        23197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10915": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23079,
        23122
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 120,
      "value": "0x2AAB"
    },
    "10918": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23109,
        23121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10919": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23079,
        23108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A15"
    },
    "10922": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        23079,
        23122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10923": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23079,
        23122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10924": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 121,
      "value": "0x40"
    },
    "10926": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10927": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10934": {
      "op": "SHL"
    },
    "10935": {
      "op": "SUB"
    },
    "10936": {
      "op": "DUP4"
    },
    "10937": {
      "op": "AND"
    },
    "10938": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10940": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10941": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "ADD",
      "path": "0"
    },
    "10942": {
      "op": "MSTORE"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10945": {
      "op": "DUP1"
    },
    "10946": {
      "op": "MLOAD"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "10952": {
      "op": "DUP4"
    },
    "10953": {
      "op": "CODECOPY"
    },
    "10954": {
      "op": "DUP2"
    },
    "10955": {
      "op": "MLOAD"
    },
    "10956": {
      "op": "SWAP2"
    },
    "10957": {
      "op": "MSTORE"
    },
    "10958": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23137,
        23190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10959": {
      "op": "ADD"
    },
    "10960": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10962": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10963": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10966": {
      "op": "NOT"
    },
    "10967": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10968": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10969": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "SUB",
      "path": "0"
    },
    "10970": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "ADD",
      "path": "0"
    },
    "10971": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10972": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10973": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10974": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10975": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10976": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23154,
        23178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10977": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23137,
        23190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279E"
    },
    "10980": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23137,
        23190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10981": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23179,
        23189
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10982": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23179,
        23189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10983": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        23137,
        23190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A1"
    },
    "10986": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        23137,
        23190
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10987": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23391,
        23588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10988": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23472,
        23513
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 122,
      "value": "0x2AF4"
    },
    "10991": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23500,
        23512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10992": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23472,
        23499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AA6"
    },
    "10995": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        23472,
        23513
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10996": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23472,
        23513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10997": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 123,
      "value": "0x40"
    },
    "10999": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11000": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11007": {
      "op": "SHL"
    },
    "11008": {
      "op": "SUB"
    },
    "11009": {
      "op": "DUP4"
    },
    "11010": {
      "op": "AND"
    },
    "11011": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11013": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11014": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "ADD",
      "path": "0"
    },
    "11015": {
      "op": "MSTORE"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11018": {
      "op": "DUP1"
    },
    "11019": {
      "op": "MLOAD"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11022": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "11025": {
      "op": "DUP4"
    },
    "11026": {
      "op": "CODECOPY"
    },
    "11027": {
      "op": "DUP2"
    },
    "11028": {
      "op": "MLOAD"
    },
    "11029": {
      "op": "SWAP2"
    },
    "11030": {
      "op": "MSTORE"
    },
    "11031": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23528,
        23581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11032": {
      "op": "ADD"
    },
    "11033": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11035": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11036": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11039": {
      "op": "NOT"
    },
    "11040": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11041": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11042": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "SUB",
      "path": "0"
    },
    "11043": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "ADD",
      "path": "0"
    },
    "11044": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11045": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11046": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11047": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11048": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11049": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23545,
        23569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11050": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23528,
        23581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279E"
    },
    "11053": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23528,
        23581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11054": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23570,
        23580
      ],
      "op": "CALLER",
      "path": "0"
    },
    "11055": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23570,
        23580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11056": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23528,
        23581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43CD"
    },
    "11059": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        23528,
        23581
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11060": {
      "fn": "Idea._receiveToken",
      "offset": [
        6606,
        6986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11061": {
      "fn": "Idea._receiveToken",
      "offset": [
        6693,
        6719
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 124,
      "value": "0x2B3D"
    },
    "11064": {
      "fn": "Idea._receiveToken",
      "offset": [
        6706,
        6718
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11065": {
      "fn": "Idea._receiveToken",
      "offset": [
        6693,
        6705
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "11068": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6693,
        6719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11069": {
      "branch": 224,
      "fn": "Idea._receiveToken",
      "offset": [
        6693,
        6719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11070": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B59"
    },
    "11073": {
      "branch": 224,
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11074": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11076": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11083": {
      "op": "SHL"
    },
    "11084": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11085": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11086": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11088": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "ADD",
      "path": "1"
    },
    "11089": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "11092": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11093": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405C"
    },
    "11096": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6685,
        6725
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11097": {
      "fn": "Idea._receiveToken",
      "offset": [
        6685,
        6725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11098": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 125,
      "value": "0x40"
    },
    "11100": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11101": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "11106": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11108": {
      "op": "SHL"
    },
    "11109": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11110": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11111": {
      "fn": "Idea._receiveToken",
      "offset": [
        6802,
        6812
      ],
      "op": "CALLER",
      "path": "1"
    },
    "11112": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11114": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11115": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ADD",
      "path": "1"
    },
    "11116": {
      "op": "MSTORE"
    },
    "11117": {
      "fn": "Idea._receiveToken",
      "offset": [
        6821,
        6825
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "11118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11120": {
      "op": "DUP3"
    },
    "11121": {
      "op": "ADD"
    },
    "11122": {
      "op": "MSTORE"
    },
    "11123": {
      "fn": "Idea._receiveToken",
      "offset": [
        6755,
        6767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11124": {
      "fn": "Idea._receiveToken",
      "offset": [
        6755,
        6767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11125": {
      "fn": "Idea._receiveToken",
      "offset": [
        6831,
        6836
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11126": {
      "fn": "Idea._receiveToken",
      "offset": [
        6831,
        6836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11133": {
      "op": "SHL"
    },
    "11134": {
      "op": "SUB"
    },
    "11135": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6801
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11136": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6801
      ],
      "op": "AND",
      "path": "1"
    },
    "11137": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6801
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11138": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6801
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "11143": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6801
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11146": {
      "op": "ADD"
    },
    "11147": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11149": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11151": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11152": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11153": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11154": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "SUB",
      "path": "1"
    },
    "11155": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11156": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP7",
      "path": "1"
    },
    "11157": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "GAS",
      "path": "1"
    },
    "11158": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "11159": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11160": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11161": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11162": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA7"
    },
    "11165": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11166": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11167": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11169": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11170": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "11171": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11172": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11174": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11175": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11176": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "POP",
      "path": "1"
    },
    "11177": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "POP",
      "path": "1"
    },
    "11178": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "POP",
      "path": "1"
    },
    "11179": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "POP",
      "path": "1"
    },
    "11180": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11182": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11183": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11184": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11186": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "NOT",
      "path": "1"
    },
    "11187": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11189": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11190": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ADD",
      "path": "1"
    },
    "11191": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "AND",
      "path": "1"
    },
    "11192": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11193": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ADD",
      "path": "1"
    },
    "11194": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11195": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11197": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11198": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "POP",
      "path": "1"
    },
    "11199": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11200": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "ADD",
      "path": "1"
    },
    "11201": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11202": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BCB"
    },
    "11205": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11206": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11207": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4133"
    },
    "11210": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6786,
        6827
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11211": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6827
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11212": {
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6836
      ],
      "op": "LT",
      "path": "1"
    },
    "11213": {
      "branch": 225,
      "fn": "Idea._receiveToken",
      "offset": [
        6786,
        6836
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11214": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BE9"
    },
    "11217": {
      "branch": 225,
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11218": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11220": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11227": {
      "op": "SHL"
    },
    "11228": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11229": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11230": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11232": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "ADD",
      "path": "1"
    },
    "11233": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "11236": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11237": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x414C"
    },
    "11240": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6778,
        6842
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11241": {
      "fn": "Idea._receiveToken",
      "offset": [
        6778,
        6842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11242": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 126,
      "value": "0x40"
    },
    "11244": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11245": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11252": {
      "op": "SHL"
    },
    "11253": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11254": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11255": {
      "fn": "Idea._receiveToken",
      "offset": [
        6879,
        6889
      ],
      "op": "CALLER",
      "path": "1"
    },
    "11256": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11258": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11259": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ADD",
      "path": "1"
    },
    "11260": {
      "op": "MSTORE"
    },
    "11261": {
      "fn": "Idea._receiveToken",
      "offset": [
        6898,
        6902
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "11262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11264": {
      "op": "DUP3"
    },
    "11265": {
      "op": "ADD"
    },
    "11266": {
      "op": "MSTORE"
    },
    "11267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11269": {
      "op": "DUP2"
    },
    "11270": {
      "op": "ADD"
    },
    "11271": {
      "op": "DUP4"
    },
    "11272": {
      "op": "SWAP1"
    },
    "11273": {
      "op": "MSTORE"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11280": {
      "op": "SHL"
    },
    "11281": {
      "op": "SUB"
    },
    "11282": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6878
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11283": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6878
      ],
      "op": "AND",
      "path": "1"
    },
    "11284": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11285": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6878
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "11290": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11291": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11293": {
      "op": "ADD"
    },
    "11294": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11296": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11298": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11299": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11300": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11301": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "SUB",
      "path": "1"
    },
    "11302": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11303": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11305": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP8",
      "path": "1"
    },
    "11306": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "GAS",
      "path": "1"
    },
    "11307": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "CALL",
      "path": "1"
    },
    "11308": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11309": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11310": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11311": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C3C"
    },
    "11314": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11315": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11316": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11318": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11319": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "11320": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11321": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11323": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11324": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11325": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "POP",
      "path": "1"
    },
    "11326": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "POP",
      "path": "1"
    },
    "11327": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "POP",
      "path": "1"
    },
    "11328": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "POP",
      "path": "1"
    },
    "11329": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11331": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11332": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11333": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11335": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "NOT",
      "path": "1"
    },
    "11336": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11338": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11339": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ADD",
      "path": "1"
    },
    "11340": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "AND",
      "path": "1"
    },
    "11341": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11342": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ADD",
      "path": "1"
    },
    "11343": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11344": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11346": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11347": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "POP",
      "path": "1"
    },
    "11348": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11349": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "ADD",
      "path": "1"
    },
    "11350": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11351": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C60"
    },
    "11354": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11355": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11356": {
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4168"
    },
    "11359": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6860,
        6911
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11360": {
      "branch": 226,
      "fn": "Idea._receiveToken",
      "offset": [
        6860,
        6911
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11361": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C7C"
    },
    "11364": {
      "branch": 226,
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11365": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11367": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11374": {
      "op": "SHL"
    },
    "11375": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11376": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11377": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11379": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "ADD",
      "path": "1"
    },
    "11380": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "11383": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11384": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4185"
    },
    "11387": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6852,
        6918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11388": {
      "fn": "Idea._receiveToken",
      "offset": [
        6852,
        6918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11389": {
      "fn": "Idea._receiveToken",
      "offset": [
        6928,
        6979
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 127,
      "value": "0xB1E"
    },
    "11392": {
      "fn": "Idea._receiveToken",
      "offset": [
        6949,
        6961
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11393": {
      "fn": "Idea._receiveToken",
      "offset": [
        6962,
        6967
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11394": {
      "fn": "Idea._receiveToken",
      "offset": [
        6968,
        6978
      ],
      "op": "CALLER",
      "path": "1"
    },
    "11395": {
      "fn": "Idea._receiveToken",
      "offset": [
        6928,
        6948
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x935"
    },
    "11398": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        6928,
        6979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11399": {
      "fn": "Administrable._moveToken",
      "offset": [
        20737,
        21533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11400": {
      "fn": "Administrable._moveToken",
      "offset": [
        20874,
        20884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11401": {
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C91"
    },
    "11404": {
      "offset": [
        4535,
        4543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11405": {
      "offset": [
        4524,
        4534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1650"
    },
    "11408": {
      "jump": "i",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11409": {
      "branch": 204,
      "fn": "Administrable._moveToken",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11410": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC3"
    },
    "11413": {
      "branch": 204,
      "offset": [
        4516,
        4552
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11414": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11416": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11423": {
      "op": "SHL"
    },
    "11424": {
      "offset": [
        4516,
        4552
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11425": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11428": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11430": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11431": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "ADD",
      "path": "0"
    },
    "11432": {
      "op": "MSTORE"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11437": {
      "op": "DUP3"
    },
    "11438": {
      "op": "ADD"
    },
    "11439": {
      "op": "MSTORE"
    },
    "11440": {
      "op": "PUSH3",
      "value": "0x444E45"
    },
    "11444": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11446": {
      "op": "SHL"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11449": {
      "op": "DUP3"
    },
    "11450": {
      "op": "ADD"
    },
    "11451": {
      "op": "MSTORE"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11454": {
      "op": "ADD"
    },
    "11455": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "11458": {
      "op": "JUMP"
    },
    "11459": {
      "offset": [
        4516,
        4552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11460": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11462": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11463": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11464": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11466": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "11467": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11468": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11469": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "11470": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE9"
    },
    "11473": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11474": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11476": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11483": {
      "op": "SHL"
    },
    "11484": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11485": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11486": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11488": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "11489": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "11492": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11493": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "11496": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11497": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11498": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20939
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0xF"
    },
    "11500": {
      "fn": "Administrable._moveToken",
      "offset": [
        20940,
        20952
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11501": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11503": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11504": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "11507": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11508": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11509": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11512": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20926,
        20953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11513": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11514": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11515": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11516": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11517": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11519": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11520": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11521": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11523": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11524": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11525": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11526": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SUB",
      "path": "0"
    },
    "11527": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11528": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "ADD",
      "path": "0"
    },
    "11529": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11530": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20953
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11537": {
      "op": "SHL"
    },
    "11538": {
      "op": "SUB"
    },
    "11539": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11540": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "AND",
      "path": "0"
    },
    "11541": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11543": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11544": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11545": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11546": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11547": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11548": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11549": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11550": {
      "fn": "Administrable._moveToken",
      "offset": [
        20926,
        20967
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11551": {
      "fn": "Administrable._moveToken",
      "offset": [
        20917,
        20967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11552": {
      "fn": "Administrable._moveToken",
      "offset": [
        20917,
        20967
      ],
      "op": "GT",
      "path": "0"
    },
    "11553": {
      "branch": 205,
      "fn": "Administrable._moveToken",
      "offset": [
        20917,
        20967
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11554": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3D"
    },
    "11557": {
      "branch": 205,
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11558": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11560": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11567": {
      "op": "SHL"
    },
    "11568": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11569": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11570": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11572": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "ADD",
      "path": "0"
    },
    "11573": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "11576": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11577": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42FE"
    },
    "11580": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20909,
        20974
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11581": {
      "fn": "Administrable._moveToken",
      "offset": [
        20909,
        20974
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11582": {
      "fn": "Administrable._moveToken",
      "offset": [
        21029,
        21034
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 129
    },
    "11583": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        20997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11585": {
      "fn": "Administrable._moveToken",
      "offset": [
        20998,
        21010
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11586": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11588": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11589": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4E"
    },
    "11592": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11593": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11594": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11597": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20984,
        21011
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11598": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11599": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11600": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11601": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11602": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11604": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "ADD",
      "path": "0"
    },
    "11605": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11607": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11608": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11609": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11610": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SUB",
      "path": "0"
    },
    "11611": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11612": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11613": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11615": {
      "fn": "Administrable._moveToken",
      "offset": [
        21012,
        21024
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11622": {
      "op": "SHL"
    },
    "11623": {
      "op": "SUB"
    },
    "11624": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "AND",
      "path": "0"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11631": {
      "op": "SHL"
    },
    "11632": {
      "op": "SUB"
    },
    "11633": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "AND",
      "path": "0"
    },
    "11634": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11635": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11636": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11638": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "ADD",
      "path": "0"
    },
    "11639": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11640": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11641": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11642": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11644": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "ADD",
      "path": "0"
    },
    "11645": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11647": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11648": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11650": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11651": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11652": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11653": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8E"
    },
    "11656": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11657": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11658": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "11661": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20984,
        21034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11662": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11663": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11664": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11665": {
      "fn": "Administrable._moveToken",
      "offset": [
        20984,
        21034
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11666": {
      "op": "POP"
    },
    "11667": {
      "op": "POP"
    },
    "11668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11674": {
      "op": "SHL"
    },
    "11675": {
      "op": "SUB"
    },
    "11676": {
      "fn": "Administrable._moveToken",
      "offset": [
        21048,
        21074
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11677": {
      "fn": "Administrable._moveToken",
      "offset": [
        21048,
        21074
      ],
      "op": "AND",
      "path": "0"
    },
    "11678": {
      "branch": 206,
      "fn": "Administrable._moveToken",
      "offset": [
        21048,
        21074
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11679": {
      "fn": "Administrable._moveToken",
      "offset": [
        21044,
        21370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E82"
    },
    "11682": {
      "branch": 206,
      "fn": "Administrable._moveToken",
      "offset": [
        21044,
        21370
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11683": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11685": {
      "fn": "Administrable._moveToken",
      "offset": [
        21108,
        21120
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11686": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11688": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11689": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB2"
    },
    "11692": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11693": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11694": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11697": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21094,
        21121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11698": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11699": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11700": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11701": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11702": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11704": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11705": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11706": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11708": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11709": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11710": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11711": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SUB",
      "path": "0"
    },
    "11712": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11713": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "ADD",
      "path": "0"
    },
    "11714": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11715": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21121
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11722": {
      "op": "SHL"
    },
    "11723": {
      "op": "SUB"
    },
    "11724": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11725": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "AND",
      "path": "0"
    },
    "11726": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11728": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11729": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11730": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11731": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11732": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11733": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11734": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11735": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11736": {
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11737": {
      "branch": 207,
      "fn": "Administrable._moveToken",
      "offset": [
        21094,
        21140
      ],
      "op": "SUB",
      "path": "0"
    },
    "11738": {
      "fn": "Administrable._moveToken",
      "offset": [
        21090,
        21221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E12"
    },
    "11741": {
      "branch": 207,
      "fn": "Administrable._moveToken",
      "offset": [
        21090,
        21221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11742": {
      "fn": "Administrable._moveToken",
      "offset": [
        21204,
        21205
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 130,
      "value": "0x1"
    },
    "11744": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11746": {
      "fn": "Administrable._moveToken",
      "offset": [
        21187,
        21199
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11747": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11749": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11750": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DEF"
    },
    "11753": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11754": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11755": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11758": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21160,
        21200
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11759": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11760": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11761": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11762": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11763": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11765": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "ADD",
      "path": "0"
    },
    "11766": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11768": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11769": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11770": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11771": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SUB",
      "path": "0"
    },
    "11772": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11773": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11774": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11776": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11777": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11778": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11779": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0C"
    },
    "11782": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11783": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11784": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "11787": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21160,
        21205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11788": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11789": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11790": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11791": {
      "fn": "Administrable._moveToken",
      "offset": [
        21160,
        21205
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11792": {
      "op": "POP"
    },
    "11793": {
      "op": "POP"
    },
    "11794": {
      "fn": "Administrable._moveToken",
      "offset": [
        21090,
        21221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11795": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11797": {
      "fn": "Administrable._moveToken",
      "offset": [
        21252,
        21262
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11798": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11800": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11801": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E22"
    },
    "11804": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11805": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11806": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11809": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21238,
        21263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11810": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11811": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11812": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11813": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11814": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11816": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11817": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11818": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11820": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11821": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11822": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11823": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SUB",
      "path": "0"
    },
    "11824": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11825": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "ADD",
      "path": "0"
    },
    "11826": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11827": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21263
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11834": {
      "op": "SHL"
    },
    "11835": {
      "op": "SUB"
    },
    "11836": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11837": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "AND",
      "path": "0"
    },
    "11838": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11840": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11841": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11842": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11843": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11844": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11845": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11846": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11847": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21277
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11848": {
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11849": {
      "branch": 208,
      "fn": "Administrable._moveToken",
      "offset": [
        21238,
        21282
      ],
      "op": "SUB",
      "path": "0"
    },
    "11850": {
      "fn": "Administrable._moveToken",
      "offset": [
        21234,
        21360
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E82"
    },
    "11853": {
      "branch": 208,
      "fn": "Administrable._moveToken",
      "offset": [
        21234,
        21360
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11854": {
      "fn": "Administrable._moveToken",
      "offset": [
        21344,
        21345
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 131,
      "value": "0x1"
    },
    "11856": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11858": {
      "fn": "Administrable._moveToken",
      "offset": [
        21329,
        21339
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11859": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11861": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11862": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5F"
    },
    "11865": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11866": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11867": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11870": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21302,
        21340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11871": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11872": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11873": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11874": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11875": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11877": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "ADD",
      "path": "0"
    },
    "11878": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11880": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11881": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11882": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11883": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SUB",
      "path": "0"
    },
    "11884": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11885": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11886": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11888": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11889": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11890": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11891": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E7C"
    },
    "11894": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11895": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11896": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9F"
    },
    "11899": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21302,
        21345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11900": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11901": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11902": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11903": {
      "fn": "Administrable._moveToken",
      "offset": [
        21302,
        21345
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11904": {
      "op": "POP"
    },
    "11905": {
      "op": "POP"
    },
    "11906": {
      "fn": "Administrable._moveToken",
      "offset": [
        21234,
        21360
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11907": {
      "fn": "Administrable._moveToken",
      "offset": [
        21422,
        21427
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 132
    },
    "11908": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11910": {
      "fn": "Administrable._moveToken",
      "offset": [
        21393,
        21403
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11911": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11913": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11914": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E93"
    },
    "11917": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11918": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11919": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "11922": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21379,
        21404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11923": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11924": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11925": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11926": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11927": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11929": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "ADD",
      "path": "0"
    },
    "11930": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11932": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11933": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11934": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11935": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SUB",
      "path": "0"
    },
    "11936": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11937": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21404
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11938": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11940": {
      "fn": "Administrable._moveToken",
      "offset": [
        21405,
        21417
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11947": {
      "op": "SHL"
    },
    "11948": {
      "op": "SUB"
    },
    "11949": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "AND",
      "path": "0"
    },
    "11950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11956": {
      "op": "SHL"
    },
    "11957": {
      "op": "SUB"
    },
    "11958": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "AND",
      "path": "0"
    },
    "11959": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11960": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11961": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11963": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "ADD",
      "path": "0"
    },
    "11964": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11965": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11966": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11967": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11969": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "ADD",
      "path": "0"
    },
    "11970": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11972": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11973": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11975": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11976": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11977": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11978": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED3"
    },
    "11981": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11982": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11983": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9F"
    },
    "11986": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21379,
        21427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11987": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11988": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11989": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11990": {
      "fn": "Administrable._moveToken",
      "offset": [
        21379,
        21427
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11991": {
      "op": "POP"
    },
    "11992": {
      "op": "POP"
    },
    "11993": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 133,
      "value": "0x40"
    },
    "11995": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11998": {
      "op": "DUP1"
    },
    "11999": {
      "op": "MLOAD"
    },
    "12000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12002": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "12005": {
      "op": "DUP4"
    },
    "12006": {
      "op": "CODECOPY"
    },
    "12007": {
      "op": "DUP2"
    },
    "12008": {
      "op": "MLOAD"
    },
    "12009": {
      "op": "SWAP2"
    },
    "12010": {
      "op": "MSTORE"
    },
    "12011": {
      "fn": "Administrable._moveToken",
      "offset": [
        21442,
        21525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12012": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EFF"
    },
    "12015": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12016": {
      "fn": "Administrable._moveToken",
      "offset": [
        21470,
        21482
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12017": {
      "fn": "Administrable._moveToken",
      "offset": [
        21470,
        21482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12018": {
      "fn": "Administrable._moveToken",
      "offset": [
        21483,
        21493
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12019": {
      "fn": "Administrable._moveToken",
      "offset": [
        21483,
        21493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12020": {
      "fn": "Administrable._moveToken",
      "offset": [
        21494,
        21506
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12021": {
      "fn": "Administrable._moveToken",
      "offset": [
        21494,
        21506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12022": {
      "fn": "Administrable._moveToken",
      "offset": [
        21507,
        21512
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12023": {
      "fn": "Administrable._moveToken",
      "offset": [
        21507,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12024": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12026": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "ADD",
      "path": "0"
    },
    "12027": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F9"
    },
    "12030": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21459,
        21513
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12031": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12032": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12034": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12035": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12036": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12038": {
      "op": "NOT"
    },
    "12039": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12040": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12041": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "SUB",
      "path": "0"
    },
    "12042": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "ADD",
      "path": "0"
    },
    "12043": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12044": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12045": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12046": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12047": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12048": {
      "fn": "Administrable._moveToken",
      "offset": [
        21459,
        21513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12049": {
      "fn": "Administrable._moveToken",
      "offset": [
        21442,
        21525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1259"
    },
    "12052": {
      "fn": "Administrable._moveToken",
      "offset": [
        21442,
        21525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12053": {
      "fn": "Administrable._moveToken",
      "offset": [
        21514,
        21524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12054": {
      "fn": "Administrable._moveToken",
      "offset": [
        21514,
        21524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12055": {
      "fn": "Administrable._moveToken",
      "offset": [
        21442,
        21525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x443B"
    },
    "12058": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        21442,
        21525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12059": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18211,
        18479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12060": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12062": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12063": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12064": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12066": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12067": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12068": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12069": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12070": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F41"
    },
    "12073": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12074": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12076": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12083": {
      "op": "SHL"
    },
    "12084": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12085": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12086": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12088": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12089": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "12092": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12093": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "12096": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12097": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12098": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 134,
      "value": "0x2F65"
    },
    "12101": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12103": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12104": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12105": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12107": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "ADD",
      "path": "0"
    },
    "12108": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12110": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12111": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12112": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12114": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12115": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12116": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12118": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "ADD",
      "path": "0"
    },
    "12119": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "12122": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "12124": {
      "op": "SHL"
    },
    "12125": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12126": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12127": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "POP",
      "path": "0"
    },
    "12128": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18332,
        18341
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12129": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "12132": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        18317,
        18342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12133": {
      "branch": 209,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18317,
        18342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12134": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F96"
    },
    "12137": {
      "branch": 209,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12138": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12140": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12147": {
      "op": "SHL"
    },
    "12148": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12149": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12152": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12154": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12155": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "ADD",
      "path": "0"
    },
    "12156": {
      "op": "MSTORE"
    },
    "12157": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12161": {
      "op": "DUP3"
    },
    "12162": {
      "op": "ADD"
    },
    "12163": {
      "op": "MSTORE"
    },
    "12164": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "12167": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "12169": {
      "op": "SHL"
    },
    "12170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12172": {
      "op": "DUP3"
    },
    "12173": {
      "op": "ADD"
    },
    "12174": {
      "op": "MSTORE"
    },
    "12175": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12177": {
      "op": "ADD"
    },
    "12178": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "12181": {
      "op": "JUMP"
    },
    "12182": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18309,
        18348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12183": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18393,
        18397
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 135,
      "value": "0x1"
    },
    "12185": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "12187": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18370,
        18378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12188": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12190": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12191": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA8"
    },
    "12194": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12195": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12196": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "12199": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        18358,
        18379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12200": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12201": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12202": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12203": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12204": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12206": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12207": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12208": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12210": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12211": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12212": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12213": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "SUB",
      "path": "0"
    },
    "12214": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12215": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "ADD",
      "path": "0"
    },
    "12216": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12217": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12224": {
      "op": "SHL"
    },
    "12225": {
      "op": "SUB"
    },
    "12226": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12227": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "AND",
      "path": "0"
    },
    "12228": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12230": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12231": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12232": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12233": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12234": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12235": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12236": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12237": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12238": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12239": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12240": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12241": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12244": {
      "op": "NOT"
    },
    "12245": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "AND",
      "path": "0"
    },
    "12246": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12247": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12248": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12249": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12250": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12251": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12252": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "OR",
      "path": "0"
    },
    "12253": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12254": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12255": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18397
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12258": {
      "op": "DUP1"
    },
    "12259": {
      "op": "MLOAD"
    },
    "12260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12262": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "12265": {
      "op": "DUP4"
    },
    "12266": {
      "op": "CODECOPY"
    },
    "12267": {
      "op": "DUP2"
    },
    "12268": {
      "op": "MLOAD"
    },
    "12269": {
      "op": "SWAP2"
    },
    "12270": {
      "op": "MSTORE"
    },
    "12271": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18412,
        18471
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 136
    },
    "12272": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFD"
    },
    "12275": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12276": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18440,
        18448
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12277": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18440,
        18448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12278": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12279": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18358,
        18390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12280": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "ADD",
      "path": "0"
    },
    "12281": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x423D"
    },
    "12284": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        18429,
        18459
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12285": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12286": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12288": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12289": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12292": {
      "op": "NOT"
    },
    "12293": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12294": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12295": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "SUB",
      "path": "0"
    },
    "12296": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "ADD",
      "path": "0"
    },
    "12297": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12298": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12299": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12300": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12301": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12302": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18429,
        18459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12303": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18412,
        18471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2019"
    },
    "12306": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18412,
        18471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12307": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18460,
        18470
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12308": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18460,
        18470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12309": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        18412,
        18471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4467"
    },
    "12312": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        18412,
        18471
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12313": {
      "fn": "Shardable._split",
      "offset": [
        13122,
        14246
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12314": {
      "fn": "Shardable._split",
      "offset": [
        13211,
        13222
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12315": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3033"
    },
    "12318": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12319": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12321": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12322": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12323": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12324": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12325": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12326": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "12328": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12330": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12331": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12333": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12334": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12335": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12336": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "12337": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12338": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12339": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12340": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304F"
    },
    "12343": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12344": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12346": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12353": {
      "op": "SHL"
    },
    "12354": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12355": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12356": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12358": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "12359": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "12362": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12363": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "12366": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12367": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12368": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12370": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12371": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12372": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12374": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12375": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12376": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12377": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12378": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3075"
    },
    "12381": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12382": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12384": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12391": {
      "op": "SHL"
    },
    "12392": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12393": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12394": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12396": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12397": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "12400": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12401": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "12404": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12405": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12406": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 137,
      "value": "0x0"
    },
    "12408": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12409": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12410": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12411": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12413": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12415": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12416": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12418": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12419": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13303
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12420": {
      "fn": "Shardable._split",
      "offset": [
        13279,
        13310
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12421": {
      "fn": "Shardable._split",
      "offset": [
        13270,
        13310
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12422": {
      "branch": 245,
      "fn": "Shardable._split",
      "offset": [
        13270,
        13310
      ],
      "op": "LT",
      "path": "2"
    },
    "12423": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30B7"
    },
    "12426": {
      "branch": 245,
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12427": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12429": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12430": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12436": {
      "op": "SHL"
    },
    "12437": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12438": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12441": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12443": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12444": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "ADD",
      "path": "2"
    },
    "12445": {
      "op": "MSTORE"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12450": {
      "op": "DUP3"
    },
    "12451": {
      "op": "ADD"
    },
    "12452": {
      "op": "MSTORE"
    },
    "12453": {
      "op": "PUSH2",
      "value": "0x4941"
    },
    "12456": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12458": {
      "op": "SHL"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12461": {
      "op": "DUP3"
    },
    "12462": {
      "op": "ADD"
    },
    "12463": {
      "op": "MSTORE"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12466": {
      "op": "ADD"
    },
    "12467": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "12470": {
      "op": "JUMP"
    },
    "12471": {
      "fn": "Shardable._split",
      "offset": [
        13262,
        13317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12472": {
      "fn": "Shardable._split",
      "offset": [
        13331,
        13348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C0"
    },
    "12475": {
      "fn": "Shardable._split",
      "offset": [
        13345,
        13347
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12476": {
      "fn": "Shardable._split",
      "offset": [
        13331,
        13344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E40"
    },
    "12479": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13331,
        13348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12480": {
      "branch": 246,
      "fn": "Shardable._split",
      "offset": [
        13331,
        13348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12481": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12482": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x312F"
    },
    "12485": {
      "branch": 246,
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12492": {
      "op": "SHL"
    },
    "12493": {
      "op": "SUB"
    },
    "12494": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12495": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "AND",
      "path": "2"
    },
    "12496": {
      "fn": "Shardable._split",
      "offset": [
        13468,
        13485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12498": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12499": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12500": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12501": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12503": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12505": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12506": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12507": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12508": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12510": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12511": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12512": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12513": {
      "fn": "Shardable._split",
      "offset": [
        13509,
        13525
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12514": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12515": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12516": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12518": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12519": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12520": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12521": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12522": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12523": {
      "fn": "Shardable._split",
      "offset": [
        13497,
        13533
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12524": {
      "fn": "Shardable._split",
      "offset": [
        13488,
        13533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F5"
    },
    "12527": {
      "fn": "Shardable._split",
      "offset": [
        13488,
        13533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12528": {
      "fn": "Shardable._split",
      "offset": [
        13488,
        13494
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12529": {
      "fn": "Shardable._split",
      "offset": [
        13488,
        13533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9F"
    },
    "12532": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13488,
        13533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12533": {
      "fn": "Shardable._split",
      "offset": [
        13488,
        13533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12534": {
      "fn": "Shardable._split",
      "offset": [
        13468,
        13533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12535": {
      "fn": "Shardable._split",
      "offset": [
        13468,
        13533
      ],
      "op": "POP",
      "path": "2"
    },
    "12536": {
      "fn": "Shardable._split",
      "offset": [
        13547,
        13577
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 138,
      "value": "0x3104"
    },
    "12539": {
      "fn": "Shardable._split",
      "offset": [
        13558,
        13567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12540": {
      "fn": "Shardable._split",
      "offset": [
        13568,
        13570
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12541": {
      "fn": "Shardable._split",
      "offset": [
        13571,
        13576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12543": {
      "fn": "Shardable._split",
      "offset": [
        13571,
        13576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12544": {
      "fn": "Shardable._split",
      "offset": [
        13547,
        13557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F1"
    },
    "12547": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13547,
        13577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12548": {
      "fn": "Shardable._split",
      "offset": [
        13547,
        13577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12555": {
      "op": "SHL"
    },
    "12556": {
      "op": "SUB"
    },
    "12557": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 139
    },
    "12558": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "AND",
      "path": "2"
    },
    "12559": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12561": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12562": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12563": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12564": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12566": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12568": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12569": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12571": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12572": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12573": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12574": {
      "fn": "Shardable._split",
      "offset": [
        13667,
        13672
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12575": {
      "fn": "Shardable._split",
      "offset": [
        13667,
        13672
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12576": {
      "fn": "Shardable._split",
      "offset": [
        13636,
        13673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3129"
    },
    "12579": {
      "fn": "Shardable._split",
      "offset": [
        13636,
        13673
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12580": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12581": {
      "fn": "Shardable._split",
      "offset": [
        13636,
        13648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3886"
    },
    "12584": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13636,
        13673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12585": {
      "fn": "Shardable._split",
      "offset": [
        13636,
        13673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12586": {
      "fn": "Shardable._split",
      "offset": [
        13350,
        13684
      ],
      "op": "POP",
      "path": "2"
    },
    "12587": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313C"
    },
    "12590": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12591": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12592": {
      "fn": "Shardable._split",
      "offset": [
        13811,
        13838
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 140,
      "value": "0x313C"
    },
    "12595": {
      "fn": "Shardable._split",
      "offset": [
        13822,
        13828
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12596": {
      "fn": "Shardable._split",
      "offset": [
        13829,
        13831
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12597": {
      "fn": "Shardable._split",
      "offset": [
        13832,
        13837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12599": {
      "fn": "Shardable._split",
      "offset": [
        13832,
        13837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12600": {
      "fn": "Shardable._split",
      "offset": [
        13811,
        13821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F1"
    },
    "12603": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13811,
        13838
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12604": {
      "fn": "Shardable._split",
      "offset": [
        13811,
        13838
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12605": {
      "fn": "Shardable._split",
      "offset": [
        13898,
        13930
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 141,
      "value": "0x3148"
    },
    "12608": {
      "fn": "Shardable._split",
      "offset": [
        13911,
        13922
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12609": {
      "fn": "Shardable._split",
      "offset": [
        13924,
        13929
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12611": {
      "fn": "Shardable._split",
      "offset": [
        13924,
        13929
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12612": {
      "fn": "Shardable._split",
      "offset": [
        13898,
        13910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3886"
    },
    "12615": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13898,
        13930
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12616": {
      "fn": "Shardable._split",
      "offset": [
        13898,
        13930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12617": {
      "fn": "Shardable._split",
      "offset": [
        14027,
        14039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12619": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12620": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12621": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12622": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12624": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12626": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12627": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12629": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12630": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14066
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12631": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12632": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3162"
    },
    "12635": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12636": {
      "fn": "Shardable._split",
      "offset": [
        14076,
        14082
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12637": {
      "fn": "Shardable._split",
      "offset": [
        14076,
        14082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12638": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B1"
    },
    "12641": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        14042,
        14082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12642": {
      "fn": "Shardable._split",
      "offset": [
        14042,
        14082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12643": {
      "fn": "Shardable._split",
      "offset": [
        14027,
        14082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12644": {
      "op": "POP"
    },
    "12645": {
      "fn": "Shardable._split",
      "offset": [
        14096,
        14105
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12646": {
      "branch": 247,
      "fn": "Shardable._split",
      "offset": [
        14096,
        14105
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12647": {
      "fn": "Shardable._split",
      "offset": [
        14092,
        14181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3195"
    },
    "12650": {
      "branch": 247,
      "fn": "Shardable._split",
      "offset": [
        14092,
        14181
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12651": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 142,
      "value": "0x0"
    },
    "12653": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12654": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12655": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12656": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12658": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12660": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12661": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12663": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12664": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14157
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12665": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12667": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "ADD",
      "path": "2"
    },
    "12668": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12669": {
      "fn": "Shardable._split",
      "offset": [
        14164,
        14169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12670": {
      "fn": "Shardable._split",
      "offset": [
        14164,
        14169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12671": {
      "fn": "Shardable._split",
      "offset": [
        14117,
        14170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3195"
    },
    "12674": {
      "fn": "Shardable._split",
      "offset": [
        14117,
        14170
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12675": {
      "fn": "Shardable._split",
      "offset": [
        14128,
        14132
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12676": {
      "fn": "Shardable._split",
      "offset": [
        14128,
        14132
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12683": {
      "op": "SHL"
    },
    "12684": {
      "op": "SUB"
    },
    "12685": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12686": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12687": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "AND",
      "path": "2"
    },
    "12688": {
      "fn": "Shardable._split",
      "offset": [
        14133,
        14163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12689": {
      "fn": "Shardable._split",
      "offset": [
        14117,
        14127
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F1"
    },
    "12692": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        14117,
        14170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12693": {
      "fn": "Shardable._split",
      "offset": [
        14117,
        14170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12694": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 143,
      "value": "0x40"
    },
    "12696": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12697": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12698": {
      "op": "DUP7"
    },
    "12699": {
      "op": "DUP2"
    },
    "12700": {
      "op": "MSTORE"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12703": {
      "op": "DUP2"
    },
    "12704": {
      "op": "ADD"
    },
    "12705": {
      "op": "DUP7"
    },
    "12706": {
      "op": "SWAP1"
    },
    "12707": {
      "op": "MSTORE"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12714": {
      "op": "SHL"
    },
    "12715": {
      "op": "SUB"
    },
    "12716": {
      "op": "DUP6"
    },
    "12717": {
      "op": "AND"
    },
    "12718": {
      "op": "DUP2"
    },
    "12719": {
      "op": "DUP4"
    },
    "12720": {
      "op": "ADD"
    },
    "12721": {
      "op": "MSTORE"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12726": {
      "op": "DUP3"
    },
    "12727": {
      "op": "ADD"
    },
    "12728": {
      "op": "DUP2"
    },
    "12729": {
      "op": "SWAP1"
    },
    "12730": {
      "op": "MSTORE"
    },
    "12731": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12733": {
      "op": "DUP3"
    },
    "12734": {
      "op": "ADD"
    },
    "12735": {
      "op": "MSTORE"
    },
    "12736": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12737": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12738": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F"
    },
    "12771": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12772": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12773": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12774": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "SUB",
      "path": "2"
    },
    "12775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12777": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "ADD",
      "path": "2"
    },
    "12778": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12779": {
      "fn": "Shardable._split",
      "offset": [
        14195,
        14239
      ],
      "op": "LOG1",
      "path": "2"
    },
    "12780": {
      "op": "POP"
    },
    "12781": {
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12783": {
      "offset": [
        5704,
        5709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12784": {
      "fn": "Shardable._split",
      "offset": [
        5704,
        5709
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12785": {
      "offset": [
        5680,
        5710
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12786": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12787": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12788": {
      "offset": [
        5680,
        5703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12790": {
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12792": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12793": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12794": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12795": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12797": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12798": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12799": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12800": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12801": {
      "offset": [
        5680,
        5703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12802": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5703
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12803": {
      "offset": [
        5669,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x320D"
    },
    "12806": {
      "fn": "Shardable._split",
      "offset": [
        5669,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12807": {
      "offset": [
        5675,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12809": {
      "offset": [
        5669,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9F"
    },
    "12812": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        5669,
        5676
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12813": {
      "fn": "Shardable._split",
      "offset": [
        5669,
        5676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12814": {
      "offset": [
        5645,
        5677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12815": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12816": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12818": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "ADD",
      "path": "2"
    },
    "12819": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12820": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12821": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12822": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12824": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "ADD",
      "path": "2"
    },
    "12825": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12827": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12828": {
      "offset": [
        5645,
        5710
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12829": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12830": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12831": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "POP",
      "path": "2"
    },
    "12832": {
      "offset": [
        5773,
        5778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12834": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5778
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12835": {
      "offset": [
        5773,
        5780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12836": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12837": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12838": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12839": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12840": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12841": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3231"
    },
    "12844": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12845": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4493"
    },
    "12848": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        5773,
        5780
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12849": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12850": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12851": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12852": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "POP",
      "path": "2"
    },
    "12853": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12854": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "POP",
      "path": "2"
    },
    "12855": {
      "fn": "Shardable._split",
      "offset": [
        13122,
        14246
      ],
      "op": "POP",
      "path": "2"
    },
    "12856": {
      "fn": "Shardable._split",
      "offset": [
        13122,
        14246
      ],
      "op": "POP",
      "path": "2"
    },
    "12857": {
      "fn": "Shardable._split",
      "offset": [
        13122,
        14246
      ],
      "op": "POP",
      "path": "2"
    },
    "12858": {
      "fn": "Shardable._split",
      "offset": [
        13122,
        14246
      ],
      "op": "POP",
      "path": "2"
    },
    "12859": {
      "fn": "Shardable._split",
      "jump": "o",
      "offset": [
        13122,
        14246
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12860": {
      "fn": "Administrable._setPermit",
      "offset": [
        21817,
        22064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12861": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12863": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12864": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12865": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12867": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12868": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12869": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12870": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12871": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3262"
    },
    "12874": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12875": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12877": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12884": {
      "op": "SHL"
    },
    "12885": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12886": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12887": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12889": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12890": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "12893": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12894": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "12897": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12898": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12899": {
      "fn": "Administrable._setPermit",
      "offset": [
        21965,
        21973
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 144
    },
    "12900": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "12902": {
      "fn": "Administrable._setPermit",
      "offset": [
        21942,
        21952
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12903": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12905": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12906": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3273"
    },
    "12909": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12910": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12911": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "12914": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21934,
        21953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12915": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12916": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12917": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12918": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12919": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12921": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12922": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12923": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12925": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12926": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12927": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12928": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SUB",
      "path": "0"
    },
    "12929": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12930": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "ADD",
      "path": "0"
    },
    "12931": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12932": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21953
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12939": {
      "op": "SHL"
    },
    "12940": {
      "op": "SUB"
    },
    "12941": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12942": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "AND",
      "path": "0"
    },
    "12943": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12945": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12946": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12947": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12948": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12949": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12950": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12951": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21962
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12952": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12953": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12956": {
      "op": "NOT"
    },
    "12957": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "AND",
      "path": "0"
    },
    "12958": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "12960": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12961": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12963": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12964": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "GT",
      "path": "0"
    },
    "12965": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12966": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B1"
    },
    "12969": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12970": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B1"
    },
    "12973": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB2"
    },
    "12976": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21934,
        21973
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12977": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12978": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "MUL",
      "path": "0"
    },
    "12979": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "OR",
      "path": "0"
    },
    "12980": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12981": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12982": {
      "fn": "Administrable._setPermit",
      "offset": [
        21934,
        21973
      ],
      "op": "POP",
      "path": "0"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12985": {
      "op": "DUP1"
    },
    "12986": {
      "op": "MLOAD"
    },
    "12987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12989": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "12992": {
      "op": "DUP4"
    },
    "12993": {
      "op": "CODECOPY"
    },
    "12994": {
      "op": "DUP2"
    },
    "12995": {
      "op": "MLOAD"
    },
    "12996": {
      "op": "SWAP2"
    },
    "12997": {
      "op": "MSTORE"
    },
    "12998": {
      "fn": "Administrable._setPermit",
      "offset": [
        22016,
        22026
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 145
    },
    "12999": {
      "fn": "Administrable._setPermit",
      "offset": [
        22027,
        22034
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13000": {
      "fn": "Administrable._setPermit",
      "offset": [
        22035,
        22043
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13001": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13003": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13004": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13006": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "ADD",
      "path": "0"
    },
    "13007": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32DA"
    },
    "13010": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "13011": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13012": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13013": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13014": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44AC"
    },
    "13017": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        22005,
        22044
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13018": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13019": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13021": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13022": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13023": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13025": {
      "op": "NOT"
    },
    "13026": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13027": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13028": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SUB",
      "path": "0"
    },
    "13029": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "ADD",
      "path": "0"
    },
    "13030": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13031": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13032": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13033": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13034": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13035": {
      "fn": "Administrable._setPermit",
      "offset": [
        22005,
        22044
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13036": {
      "fn": "Administrable._setPermit",
      "offset": [
        21988,
        22056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA76"
    },
    "13039": {
      "fn": "Administrable._setPermit",
      "offset": [
        21988,
        22056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13040": {
      "fn": "Administrable._setPermit",
      "offset": [
        22045,
        22055
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13041": {
      "fn": "Administrable._setPermit",
      "offset": [
        22045,
        22055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13042": {
      "fn": "Administrable._setPermit",
      "offset": [
        21988,
        22056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44DD"
    },
    "13045": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21988,
        22056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13046": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19819,
        20366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13047": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13049": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13050": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13051": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13053": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "13054": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13055": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13056": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "13057": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x331C"
    },
    "13060": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13061": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13063": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13070": {
      "op": "SHL"
    },
    "13071": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13072": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13073": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13075": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "13076": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "13079": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13080": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "13083": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13084": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13085": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19986
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 146,
      "value": "0xF"
    },
    "13087": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19987,
        19995
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13088": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13090": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13091": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332C"
    },
    "13094": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13095": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13096": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "13099": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19973,
        19996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13100": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13101": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13102": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13103": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13104": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13106": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13107": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13108": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13110": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13111": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13112": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13113": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SUB",
      "path": "0"
    },
    "13114": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13115": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "ADD",
      "path": "0"
    },
    "13116": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13117": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        19996
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13124": {
      "op": "SHL"
    },
    "13125": {
      "op": "SUB"
    },
    "13126": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13127": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "AND",
      "path": "0"
    },
    "13128": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13130": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13131": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13132": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13133": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13134": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13135": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13136": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13137": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19973,
        20010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13138": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19964,
        20010
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13139": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19964,
        20010
      ],
      "op": "GT",
      "path": "0"
    },
    "13140": {
      "branch": 210,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19964,
        20010
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13141": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3370"
    },
    "13144": {
      "branch": 210,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13145": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13147": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13154": {
      "op": "SHL"
    },
    "13155": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13156": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13157": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13159": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "ADD",
      "path": "0"
    },
    "13160": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "13163": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13164": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42FE"
    },
    "13167": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19956,
        20017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13168": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19956,
        20017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13169": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20027,
        20064
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 147,
      "value": "0x337B"
    },
    "13172": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20042,
        20054
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13173": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20055,
        20060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13174": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20061,
        20063
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13175": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20027,
        20041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237F"
    },
    "13178": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20027,
        20064
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13179": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20027,
        20064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13180": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20115,
        20120
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 148
    },
    "13181": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "13183": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20088,
        20096
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13184": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13186": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13187": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338C"
    },
    "13190": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13191": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13192": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "13195": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20074,
        20097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13196": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13197": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13198": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13199": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13200": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13202": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "ADD",
      "path": "0"
    },
    "13203": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13205": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13206": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13207": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13208": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SUB",
      "path": "0"
    },
    "13209": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13210": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20097
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13211": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13213": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20098,
        20110
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13220": {
      "op": "SHL"
    },
    "13221": {
      "op": "SUB"
    },
    "13222": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "AND",
      "path": "0"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13229": {
      "op": "SHL"
    },
    "13230": {
      "op": "SUB"
    },
    "13231": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "AND",
      "path": "0"
    },
    "13232": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13233": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13234": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13236": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "ADD",
      "path": "0"
    },
    "13237": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13238": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13239": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13240": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13242": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "ADD",
      "path": "0"
    },
    "13243": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13245": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13246": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13248": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13249": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13250": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13251": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CC"
    },
    "13254": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13255": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13256": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "13259": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20074,
        20120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13260": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13261": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13262": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13263": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20074,
        20120
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13264": {
      "op": "POP"
    },
    "13265": {
      "op": "POP"
    },
    "13266": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13268": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13269": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "13271": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13272": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E2"
    },
    "13275": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13276": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20148,
        20156
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13277": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20148,
        20156
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13278": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "13281": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20134,
        20157
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13282": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13283": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13284": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13285": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13286": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13288": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13289": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13290": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13292": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13293": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13294": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13295": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SUB",
      "path": "0"
    },
    "13296": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13297": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "ADD",
      "path": "0"
    },
    "13298": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13299": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20157
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13306": {
      "op": "SHL"
    },
    "13307": {
      "op": "SUB"
    },
    "13308": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13309": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "AND",
      "path": "0"
    },
    "13310": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13312": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13313": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13314": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13315": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13316": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13317": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13318": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13319": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20171
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13320": {
      "branch": 211,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20176
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13321": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13322": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20206
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13323": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341C"
    },
    "13326": {
      "branch": 211,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20206
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13327": {
      "op": "POP"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13334": {
      "op": "SHL"
    },
    "13335": {
      "op": "SUB"
    },
    "13336": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20180,
        20206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13337": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20180,
        20206
      ],
      "op": "AND",
      "path": "0"
    },
    "13338": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20180,
        20206
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13339": {
      "branch": 212,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20180,
        20206
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13340": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20134,
        20206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13341": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20130,
        20274
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13342": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20130,
        20274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "13345": {
      "branch": 212,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20130,
        20274
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13346": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20262,
        20263
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 149,
      "value": "0x1"
    },
    "13348": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "13350": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20249,
        20257
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13351": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13353": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13354": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3433"
    },
    "13357": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13358": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13359": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FEC"
    },
    "13362": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20222,
        20258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13363": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13364": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13365": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13366": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13367": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13369": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "ADD",
      "path": "0"
    },
    "13370": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13372": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13373": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13374": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13375": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SUB",
      "path": "0"
    },
    "13376": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13377": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13378": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13380": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13381": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13382": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13383": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3450"
    },
    "13386": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13387": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13388": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B1"
    },
    "13391": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20222,
        20263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13392": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13393": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13394": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13395": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20222,
        20263
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13396": {
      "op": "POP"
    },
    "13397": {
      "op": "POP"
    },
    "13398": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20130,
        20274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13401": {
      "op": "DUP1"
    },
    "13402": {
      "op": "MLOAD"
    },
    "13403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13405": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "13408": {
      "op": "DUP4"
    },
    "13409": {
      "op": "CODECOPY"
    },
    "13410": {
      "op": "DUP2"
    },
    "13411": {
      "op": "MLOAD"
    },
    "13412": {
      "op": "SWAP2"
    },
    "13413": {
      "op": "MSTORE"
    },
    "13414": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20316,
        20324
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 150
    },
    "13415": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20325,
        20337
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13416": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20338,
        20343
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13417": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20344,
        20346
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13418": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13420": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13421": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13423": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "ADD",
      "path": "0"
    },
    "13424": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347C"
    },
    "13427": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "13428": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "13429": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13430": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13431": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13432": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4509"
    },
    "13435": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20305,
        20347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13436": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13437": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13439": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13440": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13443": {
      "op": "NOT"
    },
    "13444": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13445": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13446": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SUB",
      "path": "0"
    },
    "13447": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "ADD",
      "path": "0"
    },
    "13448": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13449": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13450": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13451": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13452": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13453": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20305,
        20347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13454": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20288,
        20359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A24"
    },
    "13457": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20288,
        20359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13458": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20348,
        20358
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13459": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20348,
        20358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13460": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        20288,
        20359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4545"
    },
    "13463": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        20288,
        20359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13464": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13465": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        715,
        722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13467": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        724,
        731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13468": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        733,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13470": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        770,
        779
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 151
    },
    "13471": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        756,
        767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13472": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        756,
        779
      ],
      "op": "GT",
      "path": "2"
    },
    "13473": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A9"
    },
    "13476": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13477": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13479": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13480": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13481": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13482": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13484": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        825,
        836
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13485": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B6"
    },
    "13488": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        815,
        824
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13489": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        814
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13490": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4078"
    },
    "13493": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        806,
        824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13494": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13495": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C0"
    },
    "13498": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13499": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13500": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408F"
    },
    "13503": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        806,
        836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13504": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13505": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        786,
        836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13506": {
      "op": "POP"
    },
    "13507": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13509": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        895,
        906
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13510": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34CF"
    },
    "13513": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        884,
        893
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13514": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        895,
        906
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13515": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B1"
    },
    "13518": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        872,
        893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13519": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13520": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34D9"
    },
    "13523": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13524": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        870
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13525": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4078"
    },
    "13528": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        862,
        894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13529": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13530": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E3"
    },
    "13533": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13534": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13535": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408F"
    },
    "13538": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        862,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13539": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13540": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13541": {
      "op": "POP"
    },
    "13542": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        920,
        929
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 152
    },
    "13543": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13544": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F1"
    },
    "13547": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13548": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        920,
        929
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13549": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9F"
    },
    "13552": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        954,
        975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13553": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13554": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34FB"
    },
    "13557": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13558": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        950
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13559": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B1"
    },
    "13562": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        942,
        976
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13563": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13564": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13565": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13566": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13567": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13568": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13569": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13570": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13571": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13572": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13573": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13574": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13575": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13576": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13577": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13578": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13579": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "o",
      "offset": [
        599,
        980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13580": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9204,
        9685
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13581": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9337,
        9341
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "13582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13588": {
      "op": "SHL"
    },
    "13589": {
      "op": "SUB"
    },
    "13590": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9318,
        9342
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13591": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9318,
        9342
      ],
      "op": "AND",
      "path": "1"
    },
    "13592": {
      "branch": 227,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9318,
        9342
      ],
      "op": "SUB",
      "path": "1"
    },
    "13593": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9314,
        9670
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3526"
    },
    "13596": {
      "branch": 227,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9314,
        9670
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13597": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9426,
        9459
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 153,
      "value": "0xB1E"
    },
    "13600": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9440,
        9452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13601": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9453,
        9458
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13602": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9426,
        9439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B34"
    },
    "13605": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        9426,
        9459
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13606": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9314,
        9670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13607": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 154,
      "value": "0x40"
    },
    "13609": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13610": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "13615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13617": {
      "op": "SHL"
    },
    "13618": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13619": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13620": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9620,
        9630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "13621": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13623": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13624": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ADD",
      "path": "1"
    },
    "13625": {
      "op": "MSTORE"
    },
    "13626": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9639,
        9643
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13629": {
      "op": "DUP3"
    },
    "13630": {
      "op": "ADD"
    },
    "13631": {
      "op": "MSTORE"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13634": {
      "op": "DUP2"
    },
    "13635": {
      "op": "ADD"
    },
    "13636": {
      "op": "DUP3"
    },
    "13637": {
      "op": "SWAP1"
    },
    "13638": {
      "op": "MSTORE"
    },
    "13639": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9566,
        9578
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13640": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9566,
        9578
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13647": {
      "op": "SHL"
    },
    "13648": {
      "op": "SUB"
    },
    "13649": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9619
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13650": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9619
      ],
      "op": "AND",
      "path": "1"
    },
    "13651": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13652": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "13657": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13658": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13660": {
      "op": "ADD"
    },
    "13661": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13663": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13665": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13666": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13667": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13668": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "SUB",
      "path": "1"
    },
    "13669": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13670": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13672": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP8",
      "path": "1"
    },
    "13673": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "GAS",
      "path": "1"
    },
    "13674": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "CALL",
      "path": "1"
    },
    "13675": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13676": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13677": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13678": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x357B"
    },
    "13681": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13682": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13683": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13685": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13686": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "13687": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13688": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13690": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "REVERT",
      "path": "1"
    },
    "13691": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13692": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "POP",
      "path": "1"
    },
    "13693": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "POP",
      "path": "1"
    },
    "13694": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "POP",
      "path": "1"
    },
    "13695": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "POP",
      "path": "1"
    },
    "13696": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13698": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13699": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13700": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "13702": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "NOT",
      "path": "1"
    },
    "13703": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "13705": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13706": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ADD",
      "path": "1"
    },
    "13707": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "AND",
      "path": "1"
    },
    "13708": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13709": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ADD",
      "path": "1"
    },
    "13710": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13711": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13713": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13714": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "POP",
      "path": "1"
    },
    "13715": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13716": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "ADD",
      "path": "1"
    },
    "13717": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13718": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x359F"
    },
    "13721": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13722": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13723": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4168"
    },
    "13726": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        9601,
        9652
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13727": {
      "branch": 228,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9601,
        9652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13728": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE52"
    },
    "13731": {
      "branch": 228,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13732": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13734": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13741": {
      "op": "SHL"
    },
    "13742": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13743": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13744": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13746": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "ADD",
      "path": "1"
    },
    "13747": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "13750": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13751": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9593,
        9659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4185"
    },
    "13754": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        9593,
        9659
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13755": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13756": {
      "fn": "Shardable._putForSale",
      "offset": [
        14846,
        14851
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13757": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D5"
    },
    "13760": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13761": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11803,
        11807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13763": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13764": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11859,
        11864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13765": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13766": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13767": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13768": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "13770": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13772": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13773": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13775": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13776": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13777": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11361,
        11388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13778": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "GT",
      "path": "2"
    },
    "13779": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11826,
        11864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13780": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11746,
        11871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13781": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13782": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35F1"
    },
    "13785": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13786": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13788": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13795": {
      "op": "SHL"
    },
    "13796": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13797": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13798": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13800": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "13801": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "13804": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13805": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4024"
    },
    "13808": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13809": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13810": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13812": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13813": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13814": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13816": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "13817": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13818": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13819": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "13820": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3617"
    },
    "13823": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13824": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13826": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13833": {
      "op": "SHL"
    },
    "13834": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13835": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13836": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13838": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "13839": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "13842": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13843": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "13846": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13847": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13848": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 155,
      "value": "0x0"
    },
    "13850": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13851": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13852": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13853": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "13855": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13857": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13858": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13860": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13861": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13862": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13863": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13865": {
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14904
      ],
      "op": "AND",
      "path": "2"
    },
    "13866": {
      "branch": 248,
      "fn": "Shardable._putForSale",
      "offset": [
        14884,
        14913
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13867": {
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3633"
    },
    "13870": {
      "branch": 248,
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13871": {
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13873": {
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13874": {
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13875": {
      "fn": "Shardable._putForSale",
      "offset": [
        14876,
        14914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13876": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 156,
      "value": "0x0"
    },
    "13878": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13879": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13880": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13881": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "13883": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13885": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13886": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13888": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13889": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14960
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13890": {
      "fn": "Shardable._putForSale",
      "offset": [
        14942,
        14967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13891": {
      "fn": "Shardable._putForSale",
      "offset": [
        14932,
        14967
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13892": {
      "fn": "Shardable._putForSale",
      "offset": [
        14932,
        14967
      ],
      "op": "GT",
      "path": "2"
    },
    "13893": {
      "branch": 249,
      "fn": "Shardable._putForSale",
      "offset": [
        14932,
        14967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13894": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3676"
    },
    "13897": {
      "branch": 249,
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13898": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13900": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13907": {
      "op": "SHL"
    },
    "13908": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13909": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13912": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13914": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13915": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "ADD",
      "path": "2"
    },
    "13916": {
      "op": "MSTORE"
    },
    "13917": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13921": {
      "op": "DUP3"
    },
    "13922": {
      "op": "ADD"
    },
    "13923": {
      "op": "MSTORE"
    },
    "13924": {
      "op": "PUSH2",
      "value": "0x4941"
    },
    "13927": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13929": {
      "op": "SHL"
    },
    "13930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13932": {
      "op": "DUP3"
    },
    "13933": {
      "op": "ADD"
    },
    "13934": {
      "op": "MSTORE"
    },
    "13935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13937": {
      "op": "ADD"
    },
    "13938": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "13941": {
      "op": "JUMP"
    },
    "13942": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13943": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 157,
      "value": "0x40"
    },
    "13945": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13946": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13947": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "13949": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13950": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "13951": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13952": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13953": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13954": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13955": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13962": {
      "op": "SHL"
    },
    "13963": {
      "op": "SUB"
    },
    "13964": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13965": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13966": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "13967": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13969": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13970": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13971": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "13972": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13973": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13974": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13975": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13976": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13977": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "13978": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13979": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13980": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13981": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13982": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13983": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "13984": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13986": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13987": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "13988": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13989": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13990": {
      "fn": "Shardable._putForSale",
      "offset": [
        15005,
        15140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13993": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "DUP14",
      "path": "2"
    },
    "13994": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13995": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13996": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        14995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "13998": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13999": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14000": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14001": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14002": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15002
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14003": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14004": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14005": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14006": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14007": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14008": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14009": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14011": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14012": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14013": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "14014": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14015": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14016": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14017": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14018": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14025": {
      "op": "SHL"
    },
    "14026": {
      "op": "SUB"
    },
    "14027": {
      "op": "NOT"
    },
    "14028": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14029": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14030": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "14031": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "OR",
      "path": "2"
    },
    "14032": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14033": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14034": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14035": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14036": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "14038": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14039": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "14040": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14041": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14042": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14043": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14045": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14046": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14047": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "ADD",
      "path": "2"
    },
    "14048": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14049": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14050": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14051": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14052": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14053": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "14054": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14055": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "AND",
      "path": "2"
    },
    "14056": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14057": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14058": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14059": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "OR",
      "path": "2"
    },
    "14060": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14061": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14062": {
      "fn": "Shardable._putForSale",
      "offset": [
        14984,
        15140
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14063": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15163
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 158,
      "value": "0x5"
    },
    "14065": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14066": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14067": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14068": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14069": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14070": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15170
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14071": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14072": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14073": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14075": {
      "op": "NOT"
    },
    "14076": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "AND",
      "path": "2"
    },
    "14077": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14078": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14079": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "OR",
      "path": "2"
    },
    "14080": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14081": {
      "fn": "Shardable._putForSale",
      "offset": [
        15150,
        15177
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14082": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 159
    },
    "14083": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4126DE2C73B6B69D46D3290EE98241C5C18CE39A61B29E4E91F877A6D56BB213"
    },
    "14116": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14117": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375E"
    },
    "14120": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14121": {
      "fn": "Shardable._putForSale",
      "offset": [
        14996,
        15001
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14122": {
      "fn": "Shardable._putForSale",
      "offset": [
        14996,
        15001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14123": {
      "fn": "Shardable._putForSale",
      "offset": [
        15037,
        15043
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14124": {
      "fn": "Shardable._putForSale",
      "offset": [
        15037,
        15043
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14125": {
      "fn": "Shardable._putForSale",
      "offset": [
        15071,
        15083
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14126": {
      "fn": "Shardable._putForSale",
      "offset": [
        15071,
        15083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14127": {
      "fn": "Shardable._putForSale",
      "offset": [
        15104,
        15109
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14128": {
      "fn": "Shardable._putForSale",
      "offset": [
        15104,
        15109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14129": {
      "fn": "Shardable._putForSale",
      "offset": [
        15127,
        15129
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14130": {
      "fn": "Shardable._putForSale",
      "offset": [
        15127,
        15129
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14131": {
      "op": "SWAP5"
    },
    "14132": {
      "op": "DUP6"
    },
    "14133": {
      "op": "MSTORE"
    },
    "14134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14136": {
      "op": "DUP6"
    },
    "14137": {
      "op": "ADD"
    },
    "14138": {
      "op": "SWAP4"
    },
    "14139": {
      "op": "SWAP1"
    },
    "14140": {
      "op": "SWAP4"
    },
    "14141": {
      "op": "MSTORE"
    },
    "14142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14148": {
      "op": "SHL"
    },
    "14149": {
      "op": "SUB"
    },
    "14150": {
      "op": "SWAP2"
    },
    "14151": {
      "op": "DUP3"
    },
    "14152": {
      "op": "AND"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14155": {
      "op": "DUP6"
    },
    "14156": {
      "op": "ADD"
    },
    "14157": {
      "op": "MSTORE"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14160": {
      "op": "DUP5"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "MSTORE"
    },
    "14163": {
      "op": "AND"
    },
    "14164": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14166": {
      "op": "DUP3"
    },
    "14167": {
      "op": "ADD"
    },
    "14168": {
      "op": "MSTORE"
    },
    "14169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14171": {
      "op": "ADD"
    },
    "14172": {
      "op": "SWAP1"
    },
    "14173": {
      "op": "JUMP"
    },
    "14174": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14175": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14177": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14178": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14179": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14180": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "SUB",
      "path": "2"
    },
    "14181": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14182": {
      "fn": "Shardable._putForSale",
      "offset": [
        15192,
        15238
      ],
      "op": "LOG1",
      "path": "2"
    },
    "14183": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14184": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14185": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14186": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14187": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14188": {
      "fn": "Shardable._putForSale",
      "offset": [
        14721,
        15245
      ],
      "op": "POP",
      "path": "2"
    },
    "14189": {
      "fn": "Shardable._putForSale",
      "jump": "o",
      "offset": [
        14721,
        15245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14190": {
      "fn": "Idea._liquidize",
      "offset": [
        8774,
        8884
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14191": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14193": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14194": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14195": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "14197": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "14198": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14199": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14200": {
      "branch": 250,
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "14201": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3794"
    },
    "14204": {
      "branch": 250,
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14205": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14207": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14214": {
      "op": "SHL"
    },
    "14215": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14216": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14217": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14219": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "14220": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "14223": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14224": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4040"
    },
    "14227": {
      "fn": "Idea._liquidize",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14228": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14229": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 160,
      "value": "0x1"
    },
    "14231": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8850
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14232": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8850
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14233": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14235": {
      "op": "NOT"
    },
    "14236": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8850
      ],
      "op": "AND",
      "path": "1"
    },
    "14237": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14238": {
      "fn": "Idea._liquidize",
      "offset": [
        8836,
        8850
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14239": {
      "fn": "Idea._liquidize",
      "jump": "o",
      "offset": [
        8774,
        8884
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14240": {
      "fn": "Idea._transferEther",
      "offset": [
        6181,
        6342
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14241": {
      "fn": "Idea._transferEther",
      "offset": [
        6252,
        6264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14243": {
      "fn": "Idea._transferEther",
      "offset": [
        6278,
        6280
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14250": {
      "op": "SHL"
    },
    "14251": {
      "op": "SUB"
    },
    "14252": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6286
      ],
      "op": "AND",
      "path": "1"
    },
    "14253": {
      "fn": "Idea._transferEther",
      "offset": [
        6293,
        6298
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14254": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14256": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14257": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14259": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14261": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14262": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14263": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14264": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "SUB",
      "path": "1"
    },
    "14265": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14266": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP6",
      "path": "1"
    },
    "14267": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP8",
      "path": "1"
    },
    "14268": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "GAS",
      "path": "1"
    },
    "14269": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "CALL",
      "path": "1"
    },
    "14270": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14271": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14272": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14273": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14274": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14275": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14276": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14278": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14279": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "EQ",
      "path": "1"
    },
    "14280": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37ED"
    },
    "14283": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14284": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14286": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14287": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14288": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14289": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "14291": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "NOT",
      "path": "1"
    },
    "14292": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "14294": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14295": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "ADD",
      "path": "1"
    },
    "14296": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "AND",
      "path": "1"
    },
    "14297": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14298": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "ADD",
      "path": "1"
    },
    "14299": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14301": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14302": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14303": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14304": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14305": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14306": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14308": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14310": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14311": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "ADD",
      "path": "1"
    },
    "14312": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "14313": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37F2"
    },
    "14316": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14317": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14318": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "14320": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14321": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14322": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14323": {
      "fn": "Idea._transferEther",
      "offset": [
        6270,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14324": {
      "fn": "Idea._transferEther",
      "offset": [
        6251,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14325": {
      "fn": "Idea._transferEther",
      "offset": [
        6251,
        6303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14326": {
      "fn": "Idea._transferEther",
      "offset": [
        6251,
        6303
      ],
      "op": "POP",
      "path": "1"
    },
    "14327": {
      "branch": 229,
      "fn": "Idea._transferEther",
      "offset": [
        6321,
        6328
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 161
    },
    "14328": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1E"
    },
    "14331": {
      "branch": 229,
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14332": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14334": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14341": {
      "op": "SHL"
    },
    "14342": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14343": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14346": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14348": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14349": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "ADD",
      "path": "1"
    },
    "14350": {
      "op": "MSTORE"
    },
    "14351": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14355": {
      "op": "DUP3"
    },
    "14356": {
      "op": "ADD"
    },
    "14357": {
      "op": "MSTORE"
    },
    "14358": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14363": {
      "op": "SHL"
    },
    "14364": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14366": {
      "op": "DUP3"
    },
    "14367": {
      "op": "ADD"
    },
    "14368": {
      "op": "MSTORE"
    },
    "14369": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14371": {
      "op": "ADD"
    },
    "14372": {
      "fn": "Idea._transferEther",
      "offset": [
        6313,
        6335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "14375": {
      "op": "JUMP"
    },
    "14376": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7712,
        7890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14383": {
      "op": "SHL"
    },
    "14384": {
      "op": "SUB"
    },
    "14385": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 162
    },
    "14386": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "AND",
      "path": "1"
    },
    "14387": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14389": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14390": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14391": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14392": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "14394": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14396": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14397": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14399": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14400": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14401": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14402": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14403": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7831,
        7836
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14404": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7831,
        7836
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14405": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14406": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3850"
    },
    "14409": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14410": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7831,
        7836
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14411": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7831,
        7836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14412": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40B1"
    },
    "14415": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        7807,
        7836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14416": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14417": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14418": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14419": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7807,
        7836
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14420": {
      "op": "POP"
    },
    "14421": {
      "op": "POP"
    },
    "14422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14428": {
      "op": "SHL"
    },
    "14429": {
      "op": "SUB"
    },
    "14430": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 163
    },
    "14431": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "AND",
      "path": "1"
    },
    "14432": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14434": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14435": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14436": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14437": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "14439": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14441": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14442": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14444": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14445": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14446": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14447": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14448": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7878,
        7883
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14449": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7878,
        7883
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14450": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14451": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x387D"
    },
    "14454": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14455": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7878,
        7883
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14456": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7878,
        7883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14457": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40B1"
    },
    "14460": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        7846,
        7883
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14461": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14462": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14463": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14464": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        7846,
        7883
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14465": {
      "op": "POP"
    },
    "14466": {
      "op": "POP"
    },
    "14467": {
      "op": "POP"
    },
    "14468": {
      "op": "POP"
    },
    "14469": {
      "fn": "Idea._processTokenTransfer",
      "jump": "o",
      "offset": [
        7712,
        7890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14470": {
      "fn": "Shardable._expireShard",
      "offset": [
        16399,
        16643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14471": {
      "fn": "Shardable._expireShard",
      "offset": [
        16529,
        16530
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 164,
      "value": "0x0"
    },
    "14473": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14474": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14475": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14476": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14478": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14480": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14481": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14482": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14483": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14485": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14486": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14487": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16511
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14488": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14490": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16517
      ],
      "op": "ADD",
      "path": "2"
    },
    "14491": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14498": {
      "op": "SHL"
    },
    "14499": {
      "op": "SUB"
    },
    "14500": {
      "fn": "Shardable._expireShard",
      "offset": [
        16493,
        16517
      ],
      "op": "AND",
      "path": "2"
    },
    "14501": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14502": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14503": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14505": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14506": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14507": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14508": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14509": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16518
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14510": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16531
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14511": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14512": {
      "fn": "Shardable._expireShard",
      "offset": [
        16480,
        16531
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14513": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 165
    },
    "14514": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14515": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14516": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "14518": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14519": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14520": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14521": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14522": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14523": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16568
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14524": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16586
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14525": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14526": {
      "fn": "Shardable._expireShard",
      "offset": [
        16541,
        16586
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14527": {
      "fn": "Shardable._expireShard",
      "offset": [
        16601,
        16636
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 166
    },
    "14528": {
      "fn": "Shardable._expireShard",
      "offset": [
        16601,
        16636
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14529": {
      "op": "DUP5"
    },
    "14530": {
      "op": "DUP2"
    },
    "14531": {
      "op": "MSTORE"
    },
    "14532": {
      "op": "SWAP1"
    },
    "14533": {
      "op": "DUP2"
    },
    "14534": {
      "op": "ADD"
    },
    "14535": {
      "op": "DUP4"
    },
    "14536": {
      "op": "SWAP1"
    },
    "14537": {
      "op": "MSTORE"
    },
    "14538": {
      "fn": "Shardable._expireShard",
      "offset": [
        16601,
        16636
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F"
    },
    "14571": {
      "fn": "Shardable._expireShard",
      "offset": [
        16601,
        16636
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14572": {
      "op": "ADD"
    },
    "14573": {
      "fn": "Shardable._expireShard",
      "offset": [
        16601,
        16636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2019"
    },
    "14576": {
      "op": "JUMP"
    },
    "14577": {
      "fn": "Shardable._pushShard",
      "offset": [
        15499,
        16197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14578": {
      "fn": "Shardable._pushShard",
      "offset": [
        15609,
        15610
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 167,
      "value": "0x0"
    },
    "14580": {
      "fn": "Shardable._pushShard",
      "offset": [
        15600,
        15606
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14581": {
      "branch": 251,
      "fn": "Shardable._pushShard",
      "offset": [
        15600,
        15610
      ],
      "op": "GT",
      "path": "2"
    },
    "14582": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3926"
    },
    "14585": {
      "branch": 251,
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14586": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14588": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14595": {
      "op": "SHL"
    },
    "14596": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14597": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14600": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14602": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14603": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "ADD",
      "path": "2"
    },
    "14604": {
      "op": "MSTORE"
    },
    "14605": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14609": {
      "op": "DUP3"
    },
    "14610": {
      "op": "ADD"
    },
    "14611": {
      "op": "MSTORE"
    },
    "14612": {
      "op": "PUSH2",
      "value": "0x29AD"
    },
    "14615": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14617": {
      "op": "SHL"
    },
    "14618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14620": {
      "op": "DUP3"
    },
    "14621": {
      "op": "ADD"
    },
    "14622": {
      "op": "MSTORE"
    },
    "14623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14625": {
      "op": "ADD"
    },
    "14626": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "14629": {
      "op": "JUMP"
    },
    "14630": {
      "fn": "Shardable._pushShard",
      "offset": [
        15592,
        15617
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14631": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14633": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14634": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "14647": {
      "op": "NOT"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14650": {
      "op": "DUP5"
    },
    "14651": {
      "op": "SWAP1"
    },
    "14652": {
      "op": "SHL"
    },
    "14653": {
      "op": "AND"
    },
    "14654": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14656": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14657": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "ADD",
      "path": "2"
    },
    "14658": {
      "op": "MSTORE"
    },
    "14659": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "14661": {
      "op": "DUP2"
    },
    "14662": {
      "op": "ADD"
    },
    "14663": {
      "op": "DUP3"
    },
    "14664": {
      "op": "SWAP1"
    },
    "14665": {
      "op": "MSTORE"
    },
    "14666": {
      "fn": "Shardable._pushShard",
      "offset": [
        15673,
        15686
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14668": {
      "fn": "Shardable._pushShard",
      "offset": [
        15673,
        15686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14669": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "14671": {
      "op": "ADD"
    },
    "14672": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14674": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14675": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14676": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14677": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14678": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "SUB",
      "path": "2"
    },
    "14679": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14681": {
      "op": "NOT"
    },
    "14682": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "ADD",
      "path": "2"
    },
    "14683": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14684": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14685": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14686": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14687": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14688": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14689": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14690": {
      "fn": "Shardable._pushShard",
      "offset": [
        15699,
        15736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14692": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14693": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14694": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "ADD",
      "path": "2"
    },
    "14695": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14702": {
      "op": "SHL"
    },
    "14703": {
      "op": "SUB"
    },
    "14704": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 168
    },
    "14705": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14706": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "AND",
      "path": "2"
    },
    "14707": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14709": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14710": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14711": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14712": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14714": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14715": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14716": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14717": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14718": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15766
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14719": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15774
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14720": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14721": {
      "fn": "Shardable._pushShard",
      "offset": [
        15747,
        15774
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14722": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 169
    },
    "14723": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14724": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14725": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "14727": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14728": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14729": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14730": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14731": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14734": {
      "op": "NOT"
    },
    "14735": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14736": {
      "fn": "Shardable._pushShard",
      "offset": [
        15784,
        15831
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14737": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 170,
      "value": "0x60"
    },
    "14739": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14740": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14741": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "ADD",
      "path": "2"
    },
    "14742": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14743": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14744": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14745": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14746": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14747": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14748": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14749": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "ADD",
      "path": "2"
    },
    "14750": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14751": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14752": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14753": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14754": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14755": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "ADD",
      "path": "2"
    },
    "14756": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14757": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14758": {
      "fn": "Shardable._pushShard",
      "offset": [
        15939,
        16139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14759": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14760": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14761": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14762": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15929
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14764": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14765": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14766": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14767": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14768": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14769": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        15936
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14770": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "14771": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14772": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14773": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14774": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14775": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14777": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14778": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "ADD",
      "path": "2"
    },
    "14779": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14780": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14787": {
      "op": "SHL"
    },
    "14788": {
      "op": "SUB"
    },
    "14789": {
      "op": "NOT"
    },
    "14790": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "AND",
      "path": "2"
    },
    "14791": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14792": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14793": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14794": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "AND",
      "path": "2"
    },
    "14795": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "OR",
      "path": "2"
    },
    "14796": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14797": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14798": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14799": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14800": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "14802": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14803": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14804": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "ADD",
      "path": "2"
    },
    "14805": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14806": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14807": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14808": {
      "fn": "Shardable._pushShard",
      "offset": [
        15918,
        16139
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14809": {
      "fn": "Shardable._pushShard",
      "offset": [
        16154,
        16189
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 171
    },
    "14810": {
      "fn": "Shardable._pushShard",
      "offset": [
        16154,
        16189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14811": {
      "op": "DUP3"
    },
    "14812": {
      "op": "DUP2"
    },
    "14813": {
      "op": "MSTORE"
    },
    "14814": {
      "op": "SWAP3"
    },
    "14815": {
      "op": "DUP4"
    },
    "14816": {
      "op": "ADD"
    },
    "14817": {
      "op": "SWAP5"
    },
    "14818": {
      "op": "SWAP1"
    },
    "14819": {
      "op": "SWAP5"
    },
    "14820": {
      "op": "MSTORE"
    },
    "14821": {
      "op": "SWAP2"
    },
    "14822": {
      "op": "DUP2"
    },
    "14823": {
      "op": "ADD"
    },
    "14824": {
      "op": "DUP6"
    },
    "14825": {
      "op": "SWAP1"
    },
    "14826": {
      "op": "MSTORE"
    },
    "14827": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14828": {
      "fn": "Shardable._pushShard",
      "offset": [
        15689,
        15737
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14829": {
      "op": "POP"
    },
    "14830": {
      "fn": "Shardable._pushShard",
      "offset": [
        16154,
        16189
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD"
    },
    "14863": {
      "fn": "Shardable._pushShard",
      "offset": [
        16154,
        16189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14864": {
      "op": "ADD"
    },
    "14865": {
      "fn": "Shardable._pushShard",
      "offset": [
        16154,
        16189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A24"
    },
    "14868": {
      "op": "JUMP"
    },
    "14869": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8461,
        8692
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14870": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8551,
        8577
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 172,
      "value": "0x3A1E"
    },
    "14873": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8564,
        8576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14874": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8551,
        8563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "14877": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        8551,
        8577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14878": {
      "branch": 230,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8551,
        8577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14879": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A3A"
    },
    "14882": {
      "branch": 230,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14883": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14885": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14892": {
      "op": "SHL"
    },
    "14893": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14894": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14895": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14897": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "ADD",
      "path": "1"
    },
    "14898": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "14901": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14902": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405C"
    },
    "14905": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        8543,
        8584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14906": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8543,
        8584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14913": {
      "op": "SHL"
    },
    "14914": {
      "op": "SUB"
    },
    "14915": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 173
    },
    "14916": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "AND",
      "path": "1"
    },
    "14917": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14919": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14920": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14921": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14922": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "14924": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14926": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14927": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14929": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14930": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14931": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8622
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14932": {
      "branch": 231,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8602,
        8627
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "14933": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A85"
    },
    "14936": {
      "branch": 231,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14937": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14939": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14940": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14944": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14946": {
      "op": "SHL"
    },
    "14947": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14948": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14951": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14953": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14954": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "ADD",
      "path": "1"
    },
    "14955": {
      "op": "MSTORE"
    },
    "14956": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14960": {
      "op": "DUP3"
    },
    "14961": {
      "op": "ADD"
    },
    "14962": {
      "op": "MSTORE"
    },
    "14963": {
      "op": "PUSH2",
      "value": "0x272D"
    },
    "14966": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14968": {
      "op": "SHL"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14971": {
      "op": "DUP3"
    },
    "14972": {
      "op": "ADD"
    },
    "14973": {
      "op": "MSTORE"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14976": {
      "op": "ADD"
    },
    "14977": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "14980": {
      "op": "JUMP"
    },
    "14981": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8594,
        8634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14988": {
      "op": "SHL"
    },
    "14989": {
      "op": "SUB"
    },
    "14990": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "AND",
      "path": "1",
      "statement": 174
    },
    "14991": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8680,
        8685
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14993": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14994": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14995": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14996": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "14998": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "15000": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "15001": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "15003": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "15004": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8677
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "15005": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8685
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15006": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8685
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15009": {
      "op": "NOT"
    },
    "15010": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8685
      ],
      "op": "AND",
      "path": "1"
    },
    "15011": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8685
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "15012": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        8644,
        8685
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "15013": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "o",
      "offset": [
        8461,
        8692
      ],
      "op": "JUMP",
      "path": "1"
    },
    "15014": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8084,
        8263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "15015": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8173,
        8199
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 175,
      "value": "0x3AAF"
    },
    "15018": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8186,
        8198
      ],
      "op": "DUP2",
      "path": "1"
    },
    "15019": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8173,
        8185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1416"
    },
    "15022": {
      "fn": "Idea._registerTokenAddress",
      "jump": "i",
      "offset": [
        8173,
        8199
      ],
      "op": "JUMP",
      "path": "1"
    },
    "15023": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8173,
        8199
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "15024": {
      "branch": 232,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8172,
        8199
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "15025": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AE1"
    },
    "15028": {
      "branch": 232,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "15029": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "15031": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "15032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15038": {
      "op": "SHL"
    },
    "15039": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "DUP2",
      "path": "1"
    },
    "15040": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "15041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15043": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "15045": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "DUP3",
      "path": "1"
    },
    "15046": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "ADD",
      "path": "1"
    },
    "15047": {
      "op": "MSTORE"
    },
    "15048": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15052": {
      "op": "DUP3"
    },
    "15053": {
      "op": "ADD"
    },
    "15054": {
      "op": "MSTORE"
    },
    "15055": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "15060": {
      "op": "SHL"
    },
    "15061": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15063": {
      "op": "DUP3"
    },
    "15064": {
      "op": "ADD"
    },
    "15065": {
      "op": "MSTORE"
    },
    "15066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15068": {
      "op": "ADD"
    },
    "15069": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0B"
    },
    "15072": {
      "op": "JUMP"
    },
    "15073": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8164,
        8206
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15080": {
      "op": "SHL"
    },
    "15081": {
      "op": "SUB"
    },
    "15082": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "AND",
      "path": "1",
      "statement": 176
    },
    "15083": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15085": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "15086": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "DUP2",
      "path": "1"
    },
    "15087": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "15088": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "15090": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "15092": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "15093": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "15095": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "15096": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8249
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "15097": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15098": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "15099": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15101": {
      "op": "NOT"
    },
    "15102": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "AND",
      "path": "1"
    },
    "15103": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8252,
        8256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "15105": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "OR",
      "path": "1"
    },
    "15106": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "15107": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8216,
        8256
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "15108": {
      "fn": "Idea._registerTokenAddress",
      "jump": "o",
      "offset": [
        8084,
        8263
      ],
      "op": "JUMP",
      "path": "1"
    },
    "15109": {
      "op": "JUMPDEST"
    },
    "15110": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15115": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15117": {
      "op": "SHL"
    },
    "15118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15120": {
      "op": "MSTORE"
    },
    "15121": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "15123": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15125": {
      "op": "MSTORE"
    },
    "15126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15130": {
      "op": "REVERT"
    },
    "15131": {
      "op": "JUMPDEST"
    },
    "15132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15134": {
      "op": "DUP3"
    },
    "15135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15137": {
      "op": "DUP4"
    },
    "15138": {
      "op": "ADD"
    },
    "15139": {
      "op": "SLT"
    },
    "15140": {
      "op": "PUSH2",
      "value": "0x3B2C"
    },
    "15143": {
      "op": "JUMPI"
    },
    "15144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15146": {
      "op": "DUP1"
    },
    "15147": {
      "op": "REVERT"
    },
    "15148": {
      "op": "JUMPDEST"
    },
    "15149": {
      "op": "DUP2"
    },
    "15150": {
      "op": "CALLDATALOAD"
    },
    "15151": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15160": {
      "op": "DUP1"
    },
    "15161": {
      "op": "DUP3"
    },
    "15162": {
      "op": "GT"
    },
    "15163": {
      "op": "ISZERO"
    },
    "15164": {
      "op": "PUSH2",
      "value": "0x3B47"
    },
    "15167": {
      "op": "JUMPI"
    },
    "15168": {
      "op": "PUSH2",
      "value": "0x3B47"
    },
    "15171": {
      "op": "PUSH2",
      "value": "0x3B05"
    },
    "15174": {
      "jump": "i",
      "op": "JUMP"
    },
    "15175": {
      "op": "JUMPDEST"
    },
    "15176": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15178": {
      "op": "MLOAD"
    },
    "15179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15181": {
      "op": "DUP4"
    },
    "15182": {
      "op": "ADD"
    },
    "15183": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15185": {
      "op": "NOT"
    },
    "15186": {
      "op": "SWAP1"
    },
    "15187": {
      "op": "DUP2"
    },
    "15188": {
      "op": "AND"
    },
    "15189": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15191": {
      "op": "ADD"
    },
    "15192": {
      "op": "AND"
    },
    "15193": {
      "op": "DUP2"
    },
    "15194": {
      "op": "ADD"
    },
    "15195": {
      "op": "SWAP1"
    },
    "15196": {
      "op": "DUP3"
    },
    "15197": {
      "op": "DUP3"
    },
    "15198": {
      "op": "GT"
    },
    "15199": {
      "op": "DUP2"
    },
    "15200": {
      "op": "DUP4"
    },
    "15201": {
      "op": "LT"
    },
    "15202": {
      "op": "OR"
    },
    "15203": {
      "op": "ISZERO"
    },
    "15204": {
      "op": "PUSH2",
      "value": "0x3B6F"
    },
    "15207": {
      "op": "JUMPI"
    },
    "15208": {
      "op": "PUSH2",
      "value": "0x3B6F"
    },
    "15211": {
      "op": "PUSH2",
      "value": "0x3B05"
    },
    "15214": {
      "jump": "i",
      "op": "JUMP"
    },
    "15215": {
      "op": "JUMPDEST"
    },
    "15216": {
      "op": "DUP2"
    },
    "15217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15219": {
      "op": "MSTORE"
    },
    "15220": {
      "op": "DUP4"
    },
    "15221": {
      "op": "DUP2"
    },
    "15222": {
      "op": "MSTORE"
    },
    "15223": {
      "op": "DUP7"
    },
    "15224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15226": {
      "op": "DUP6"
    },
    "15227": {
      "op": "DUP9"
    },
    "15228": {
      "op": "ADD"
    },
    "15229": {
      "op": "ADD"
    },
    "15230": {
      "op": "GT"
    },
    "15231": {
      "op": "ISZERO"
    },
    "15232": {
      "op": "PUSH2",
      "value": "0x3B88"
    },
    "15235": {
      "op": "JUMPI"
    },
    "15236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15238": {
      "op": "DUP1"
    },
    "15239": {
      "op": "REVERT"
    },
    "15240": {
      "op": "JUMPDEST"
    },
    "15241": {
      "op": "DUP4"
    },
    "15242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15244": {
      "op": "DUP8"
    },
    "15245": {
      "op": "ADD"
    },
    "15246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15248": {
      "op": "DUP4"
    },
    "15249": {
      "op": "ADD"
    },
    "15250": {
      "op": "CALLDATACOPY"
    },
    "15251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15255": {
      "op": "DUP6"
    },
    "15256": {
      "op": "DUP4"
    },
    "15257": {
      "op": "ADD"
    },
    "15258": {
      "op": "ADD"
    },
    "15259": {
      "op": "MSTORE"
    },
    "15260": {
      "op": "DUP1"
    },
    "15261": {
      "op": "SWAP5"
    },
    "15262": {
      "op": "POP"
    },
    "15263": {
      "op": "POP"
    },
    "15264": {
      "op": "POP"
    },
    "15265": {
      "op": "POP"
    },
    "15266": {
      "op": "POP"
    },
    "15267": {
      "op": "SWAP3"
    },
    "15268": {
      "op": "SWAP2"
    },
    "15269": {
      "op": "POP"
    },
    "15270": {
      "op": "POP"
    },
    "15271": {
      "jump": "o",
      "op": "JUMP"
    },
    "15272": {
      "op": "JUMPDEST"
    },
    "15273": {
      "op": "DUP1"
    },
    "15274": {
      "op": "CALLDATALOAD"
    },
    "15275": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15277": {
      "op": "DUP2"
    },
    "15278": {
      "op": "LT"
    },
    "15279": {
      "op": "PUSH2",
      "value": "0x3BB7"
    },
    "15282": {
      "op": "JUMPI"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15285": {
      "op": "DUP1"
    },
    "15286": {
      "op": "REVERT"
    },
    "15287": {
      "op": "JUMPDEST"
    },
    "15288": {
      "op": "SWAP2"
    },
    "15289": {
      "op": "SWAP1"
    },
    "15290": {
      "op": "POP"
    },
    "15291": {
      "jump": "o",
      "op": "JUMP"
    },
    "15292": {
      "op": "JUMPDEST"
    },
    "15293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15295": {
      "op": "DUP1"
    },
    "15296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15298": {
      "op": "DUP4"
    },
    "15299": {
      "op": "DUP6"
    },
    "15300": {
      "op": "SUB"
    },
    "15301": {
      "op": "SLT"
    },
    "15302": {
      "op": "ISZERO"
    },
    "15303": {
      "op": "PUSH2",
      "value": "0x3BCF"
    },
    "15306": {
      "op": "JUMPI"
    },
    "15307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15309": {
      "op": "DUP1"
    },
    "15310": {
      "op": "REVERT"
    },
    "15311": {
      "op": "JUMPDEST"
    },
    "15312": {
      "op": "DUP3"
    },
    "15313": {
      "op": "CALLDATALOAD"
    },
    "15314": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15323": {
      "op": "DUP2"
    },
    "15324": {
      "op": "GT"
    },
    "15325": {
      "op": "ISZERO"
    },
    "15326": {
      "op": "PUSH2",
      "value": "0x3BE6"
    },
    "15329": {
      "op": "JUMPI"
    },
    "15330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15332": {
      "op": "DUP1"
    },
    "15333": {
      "op": "REVERT"
    },
    "15334": {
      "op": "JUMPDEST"
    },
    "15335": {
      "op": "PUSH2",
      "value": "0x3BF2"
    },
    "15338": {
      "op": "DUP6"
    },
    "15339": {
      "op": "DUP3"
    },
    "15340": {
      "op": "DUP7"
    },
    "15341": {
      "op": "ADD"
    },
    "15342": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15345": {
      "jump": "i",
      "op": "JUMP"
    },
    "15346": {
      "op": "JUMPDEST"
    },
    "15347": {
      "op": "SWAP3"
    },
    "15348": {
      "op": "POP"
    },
    "15349": {
      "op": "POP"
    },
    "15350": {
      "op": "PUSH2",
      "value": "0x3C01"
    },
    "15353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15355": {
      "op": "DUP5"
    },
    "15356": {
      "op": "ADD"
    },
    "15357": {
      "op": "PUSH2",
      "value": "0x3BA8"
    },
    "15360": {
      "jump": "i",
      "op": "JUMP"
    },
    "15361": {
      "op": "JUMPDEST"
    },
    "15362": {
      "op": "SWAP1"
    },
    "15363": {
      "op": "POP"
    },
    "15364": {
      "op": "SWAP3"
    },
    "15365": {
      "op": "POP"
    },
    "15366": {
      "op": "SWAP3"
    },
    "15367": {
      "op": "SWAP1"
    },
    "15368": {
      "op": "POP"
    },
    "15369": {
      "jump": "o",
      "op": "JUMP"
    },
    "15370": {
      "op": "JUMPDEST"
    },
    "15371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15375": {
      "op": "DUP3"
    },
    "15376": {
      "op": "DUP5"
    },
    "15377": {
      "op": "SUB"
    },
    "15378": {
      "op": "SLT"
    },
    "15379": {
      "op": "ISZERO"
    },
    "15380": {
      "op": "PUSH2",
      "value": "0x3C1C"
    },
    "15383": {
      "op": "JUMPI"
    },
    "15384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15386": {
      "op": "DUP1"
    },
    "15387": {
      "op": "REVERT"
    },
    "15388": {
      "op": "JUMPDEST"
    },
    "15389": {
      "op": "POP"
    },
    "15390": {
      "op": "CALLDATALOAD"
    },
    "15391": {
      "op": "SWAP2"
    },
    "15392": {
      "op": "SWAP1"
    },
    "15393": {
      "op": "POP"
    },
    "15394": {
      "jump": "o",
      "op": "JUMP"
    },
    "15395": {
      "op": "JUMPDEST"
    },
    "15396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15400": {
      "op": "DUP3"
    },
    "15401": {
      "op": "DUP5"
    },
    "15402": {
      "op": "SUB"
    },
    "15403": {
      "op": "SLT"
    },
    "15404": {
      "op": "ISZERO"
    },
    "15405": {
      "op": "PUSH2",
      "value": "0x3C35"
    },
    "15408": {
      "op": "JUMPI"
    },
    "15409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15411": {
      "op": "DUP1"
    },
    "15412": {
      "op": "REVERT"
    },
    "15413": {
      "op": "JUMPDEST"
    },
    "15414": {
      "op": "DUP2"
    },
    "15415": {
      "op": "CALLDATALOAD"
    },
    "15416": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15425": {
      "op": "DUP2"
    },
    "15426": {
      "op": "GT"
    },
    "15427": {
      "op": "ISZERO"
    },
    "15428": {
      "op": "PUSH2",
      "value": "0x3C4C"
    },
    "15431": {
      "op": "JUMPI"
    },
    "15432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15434": {
      "op": "DUP1"
    },
    "15435": {
      "op": "REVERT"
    },
    "15436": {
      "op": "JUMPDEST"
    },
    "15437": {
      "op": "PUSH2",
      "value": "0x3C58"
    },
    "15440": {
      "op": "DUP5"
    },
    "15441": {
      "op": "DUP3"
    },
    "15442": {
      "op": "DUP6"
    },
    "15443": {
      "op": "ADD"
    },
    "15444": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15447": {
      "jump": "i",
      "op": "JUMP"
    },
    "15448": {
      "op": "JUMPDEST"
    },
    "15449": {
      "op": "SWAP5"
    },
    "15450": {
      "op": "SWAP4"
    },
    "15451": {
      "op": "POP"
    },
    "15452": {
      "op": "POP"
    },
    "15453": {
      "op": "POP"
    },
    "15454": {
      "op": "POP"
    },
    "15455": {
      "jump": "o",
      "op": "JUMP"
    },
    "15456": {
      "op": "JUMPDEST"
    },
    "15457": {
      "op": "DUP1"
    },
    "15458": {
      "op": "CALLDATALOAD"
    },
    "15459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15465": {
      "op": "SHL"
    },
    "15466": {
      "op": "SUB"
    },
    "15467": {
      "op": "DUP2"
    },
    "15468": {
      "op": "AND"
    },
    "15469": {
      "op": "DUP2"
    },
    "15470": {
      "op": "EQ"
    },
    "15471": {
      "op": "PUSH2",
      "value": "0x3BB7"
    },
    "15474": {
      "op": "JUMPI"
    },
    "15475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15477": {
      "op": "DUP1"
    },
    "15478": {
      "op": "REVERT"
    },
    "15479": {
      "op": "JUMPDEST"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15482": {
      "op": "DUP1"
    },
    "15483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15485": {
      "op": "DUP4"
    },
    "15486": {
      "op": "DUP6"
    },
    "15487": {
      "op": "SUB"
    },
    "15488": {
      "op": "SLT"
    },
    "15489": {
      "op": "ISZERO"
    },
    "15490": {
      "op": "PUSH2",
      "value": "0x3C8A"
    },
    "15493": {
      "op": "JUMPI"
    },
    "15494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15496": {
      "op": "DUP1"
    },
    "15497": {
      "op": "REVERT"
    },
    "15498": {
      "op": "JUMPDEST"
    },
    "15499": {
      "op": "DUP3"
    },
    "15500": {
      "op": "CALLDATALOAD"
    },
    "15501": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15510": {
      "op": "DUP2"
    },
    "15511": {
      "op": "GT"
    },
    "15512": {
      "op": "ISZERO"
    },
    "15513": {
      "op": "PUSH2",
      "value": "0x3CA1"
    },
    "15516": {
      "op": "JUMPI"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15519": {
      "op": "DUP1"
    },
    "15520": {
      "op": "REVERT"
    },
    "15521": {
      "op": "JUMPDEST"
    },
    "15522": {
      "op": "PUSH2",
      "value": "0x3CAD"
    },
    "15525": {
      "op": "DUP6"
    },
    "15526": {
      "op": "DUP3"
    },
    "15527": {
      "op": "DUP7"
    },
    "15528": {
      "op": "ADD"
    },
    "15529": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15532": {
      "jump": "i",
      "op": "JUMP"
    },
    "15533": {
      "op": "JUMPDEST"
    },
    "15534": {
      "op": "SWAP3"
    },
    "15535": {
      "op": "POP"
    },
    "15536": {
      "op": "POP"
    },
    "15537": {
      "op": "PUSH2",
      "value": "0x3C01"
    },
    "15540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15542": {
      "op": "DUP5"
    },
    "15543": {
      "op": "ADD"
    },
    "15544": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15547": {
      "jump": "i",
      "op": "JUMP"
    },
    "15548": {
      "op": "JUMPDEST"
    },
    "15549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15553": {
      "op": "DUP3"
    },
    "15554": {
      "op": "DUP5"
    },
    "15555": {
      "op": "SUB"
    },
    "15556": {
      "op": "SLT"
    },
    "15557": {
      "op": "ISZERO"
    },
    "15558": {
      "op": "PUSH2",
      "value": "0x3CCE"
    },
    "15561": {
      "op": "JUMPI"
    },
    "15562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15564": {
      "op": "DUP1"
    },
    "15565": {
      "op": "REVERT"
    },
    "15566": {
      "op": "JUMPDEST"
    },
    "15567": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "15570": {
      "op": "DUP3"
    },
    "15571": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15574": {
      "jump": "i",
      "op": "JUMP"
    },
    "15575": {
      "op": "JUMPDEST"
    },
    "15576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15578": {
      "op": "DUP1"
    },
    "15579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15581": {
      "op": "DUP4"
    },
    "15582": {
      "op": "DUP6"
    },
    "15583": {
      "op": "SUB"
    },
    "15584": {
      "op": "SLT"
    },
    "15585": {
      "op": "ISZERO"
    },
    "15586": {
      "op": "PUSH2",
      "value": "0x3CEA"
    },
    "15589": {
      "op": "JUMPI"
    },
    "15590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15592": {
      "op": "DUP1"
    },
    "15593": {
      "op": "REVERT"
    },
    "15594": {
      "op": "JUMPDEST"
    },
    "15595": {
      "op": "POP"
    },
    "15596": {
      "op": "POP"
    },
    "15597": {
      "op": "DUP1"
    },
    "15598": {
      "op": "CALLDATALOAD"
    },
    "15599": {
      "op": "SWAP3"
    },
    "15600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15602": {
      "op": "SWAP1"
    },
    "15603": {
      "op": "SWAP2"
    },
    "15604": {
      "op": "ADD"
    },
    "15605": {
      "op": "CALLDATALOAD"
    },
    "15606": {
      "op": "SWAP2"
    },
    "15607": {
      "op": "POP"
    },
    "15608": {
      "jump": "o",
      "op": "JUMP"
    },
    "15609": {
      "op": "JUMPDEST"
    },
    "15610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15612": {
      "op": "DUP1"
    },
    "15613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15615": {
      "op": "DUP1"
    },
    "15616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15618": {
      "op": "DUP6"
    },
    "15619": {
      "op": "DUP8"
    },
    "15620": {
      "op": "SUB"
    },
    "15621": {
      "op": "SLT"
    },
    "15622": {
      "op": "ISZERO"
    },
    "15623": {
      "op": "PUSH2",
      "value": "0x3D0F"
    },
    "15626": {
      "op": "JUMPI"
    },
    "15627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15629": {
      "op": "DUP1"
    },
    "15630": {
      "op": "REVERT"
    },
    "15631": {
      "op": "JUMPDEST"
    },
    "15632": {
      "op": "DUP5"
    },
    "15633": {
      "op": "CALLDATALOAD"
    },
    "15634": {
      "op": "SWAP4"
    },
    "15635": {
      "op": "POP"
    },
    "15636": {
      "op": "PUSH2",
      "value": "0x3D1F"
    },
    "15639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15641": {
      "op": "DUP7"
    },
    "15642": {
      "op": "ADD"
    },
    "15643": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15646": {
      "jump": "i",
      "op": "JUMP"
    },
    "15647": {
      "op": "JUMPDEST"
    },
    "15648": {
      "op": "SWAP3"
    },
    "15649": {
      "op": "POP"
    },
    "15650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15652": {
      "op": "DUP6"
    },
    "15653": {
      "op": "ADD"
    },
    "15654": {
      "op": "CALLDATALOAD"
    },
    "15655": {
      "op": "SWAP2"
    },
    "15656": {
      "op": "POP"
    },
    "15657": {
      "op": "PUSH2",
      "value": "0x3D34"
    },
    "15660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15662": {
      "op": "DUP7"
    },
    "15663": {
      "op": "ADD"
    },
    "15664": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15667": {
      "jump": "i",
      "op": "JUMP"
    },
    "15668": {
      "op": "JUMPDEST"
    },
    "15669": {
      "op": "SWAP1"
    },
    "15670": {
      "op": "POP"
    },
    "15671": {
      "op": "SWAP3"
    },
    "15672": {
      "op": "SWAP6"
    },
    "15673": {
      "op": "SWAP2"
    },
    "15674": {
      "op": "SWAP5"
    },
    "15675": {
      "op": "POP"
    },
    "15676": {
      "op": "SWAP3"
    },
    "15677": {
      "op": "POP"
    },
    "15678": {
      "jump": "o",
      "op": "JUMP"
    },
    "15679": {
      "op": "JUMPDEST"
    },
    "15680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15682": {
      "op": "DUP1"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15685": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15687": {
      "op": "DUP5"
    },
    "15688": {
      "op": "DUP7"
    },
    "15689": {
      "op": "SUB"
    },
    "15690": {
      "op": "SLT"
    },
    "15691": {
      "op": "ISZERO"
    },
    "15692": {
      "op": "PUSH2",
      "value": "0x3D54"
    },
    "15695": {
      "op": "JUMPI"
    },
    "15696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15698": {
      "op": "DUP1"
    },
    "15699": {
      "op": "REVERT"
    },
    "15700": {
      "op": "JUMPDEST"
    },
    "15701": {
      "op": "DUP4"
    },
    "15702": {
      "op": "CALLDATALOAD"
    },
    "15703": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15712": {
      "op": "DUP2"
    },
    "15713": {
      "op": "GT"
    },
    "15714": {
      "op": "ISZERO"
    },
    "15715": {
      "op": "PUSH2",
      "value": "0x3D6B"
    },
    "15718": {
      "op": "JUMPI"
    },
    "15719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15721": {
      "op": "DUP1"
    },
    "15722": {
      "op": "REVERT"
    },
    "15723": {
      "op": "JUMPDEST"
    },
    "15724": {
      "op": "PUSH2",
      "value": "0x3D77"
    },
    "15727": {
      "op": "DUP7"
    },
    "15728": {
      "op": "DUP3"
    },
    "15729": {
      "op": "DUP8"
    },
    "15730": {
      "op": "ADD"
    },
    "15731": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15734": {
      "jump": "i",
      "op": "JUMP"
    },
    "15735": {
      "op": "JUMPDEST"
    },
    "15736": {
      "op": "SWAP4"
    },
    "15737": {
      "op": "POP"
    },
    "15738": {
      "op": "POP"
    },
    "15739": {
      "op": "PUSH2",
      "value": "0x3D86"
    },
    "15742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15744": {
      "op": "DUP6"
    },
    "15745": {
      "op": "ADD"
    },
    "15746": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15749": {
      "jump": "i",
      "op": "JUMP"
    },
    "15750": {
      "op": "JUMPDEST"
    },
    "15751": {
      "op": "SWAP2"
    },
    "15752": {
      "op": "POP"
    },
    "15753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15755": {
      "op": "DUP5"
    },
    "15756": {
      "op": "ADD"
    },
    "15757": {
      "op": "CALLDATALOAD"
    },
    "15758": {
      "op": "SWAP1"
    },
    "15759": {
      "op": "POP"
    },
    "15760": {
      "op": "SWAP3"
    },
    "15761": {
      "op": "POP"
    },
    "15762": {
      "op": "SWAP3"
    },
    "15763": {
      "op": "POP"
    },
    "15764": {
      "op": "SWAP3"
    },
    "15765": {
      "jump": "o",
      "op": "JUMP"
    },
    "15766": {
      "op": "JUMPDEST"
    },
    "15767": {
      "op": "DUP1"
    },
    "15768": {
      "op": "ISZERO"
    },
    "15769": {
      "op": "ISZERO"
    },
    "15770": {
      "op": "DUP2"
    },
    "15771": {
      "op": "EQ"
    },
    "15772": {
      "op": "PUSH2",
      "value": "0xB59"
    },
    "15775": {
      "op": "JUMPI"
    },
    "15776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15778": {
      "op": "DUP1"
    },
    "15779": {
      "op": "REVERT"
    },
    "15780": {
      "op": "JUMPDEST"
    },
    "15781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15785": {
      "op": "DUP3"
    },
    "15786": {
      "op": "DUP5"
    },
    "15787": {
      "op": "SUB"
    },
    "15788": {
      "op": "SLT"
    },
    "15789": {
      "op": "ISZERO"
    },
    "15790": {
      "op": "PUSH2",
      "value": "0x3DB6"
    },
    "15793": {
      "op": "JUMPI"
    },
    "15794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15796": {
      "op": "DUP1"
    },
    "15797": {
      "op": "REVERT"
    },
    "15798": {
      "op": "JUMPDEST"
    },
    "15799": {
      "op": "DUP2"
    },
    "15800": {
      "op": "CALLDATALOAD"
    },
    "15801": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "15804": {
      "op": "DUP2"
    },
    "15805": {
      "op": "PUSH2",
      "value": "0x3D96"
    },
    "15808": {
      "jump": "i",
      "op": "JUMP"
    },
    "15809": {
      "op": "JUMPDEST"
    },
    "15810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15812": {
      "op": "DUP1"
    },
    "15813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15815": {
      "op": "DUP4"
    },
    "15816": {
      "op": "DUP6"
    },
    "15817": {
      "op": "SUB"
    },
    "15818": {
      "op": "SLT"
    },
    "15819": {
      "op": "ISZERO"
    },
    "15820": {
      "op": "PUSH2",
      "value": "0x3DD4"
    },
    "15823": {
      "op": "JUMPI"
    },
    "15824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15826": {
      "op": "DUP1"
    },
    "15827": {
      "op": "REVERT"
    },
    "15828": {
      "op": "JUMPDEST"
    },
    "15829": {
      "op": "PUSH2",
      "value": "0x3DDD"
    },
    "15832": {
      "op": "DUP4"
    },
    "15833": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15836": {
      "jump": "i",
      "op": "JUMP"
    },
    "15837": {
      "op": "JUMPDEST"
    },
    "15838": {
      "op": "SWAP5"
    },
    "15839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15841": {
      "op": "SWAP4"
    },
    "15842": {
      "op": "SWAP1"
    },
    "15843": {
      "op": "SWAP4"
    },
    "15844": {
      "op": "ADD"
    },
    "15845": {
      "op": "CALLDATALOAD"
    },
    "15846": {
      "op": "SWAP4"
    },
    "15847": {
      "op": "POP"
    },
    "15848": {
      "op": "POP"
    },
    "15849": {
      "op": "POP"
    },
    "15850": {
      "jump": "o",
      "op": "JUMP"
    },
    "15851": {
      "op": "JUMPDEST"
    },
    "15852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15854": {
      "op": "DUP1"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15857": {
      "op": "DUP1"
    },
    "15858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15860": {
      "op": "DUP6"
    },
    "15861": {
      "op": "DUP8"
    },
    "15862": {
      "op": "SUB"
    },
    "15863": {
      "op": "SLT"
    },
    "15864": {
      "op": "ISZERO"
    },
    "15865": {
      "op": "PUSH2",
      "value": "0x3E01"
    },
    "15868": {
      "op": "JUMPI"
    },
    "15869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15871": {
      "op": "DUP1"
    },
    "15872": {
      "op": "REVERT"
    },
    "15873": {
      "op": "JUMPDEST"
    },
    "15874": {
      "op": "DUP5"
    },
    "15875": {
      "op": "CALLDATALOAD"
    },
    "15876": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15885": {
      "op": "DUP1"
    },
    "15886": {
      "op": "DUP3"
    },
    "15887": {
      "op": "GT"
    },
    "15888": {
      "op": "ISZERO"
    },
    "15889": {
      "op": "PUSH2",
      "value": "0x3E19"
    },
    "15892": {
      "op": "JUMPI"
    },
    "15893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15895": {
      "op": "DUP1"
    },
    "15896": {
      "op": "REVERT"
    },
    "15897": {
      "op": "JUMPDEST"
    },
    "15898": {
      "op": "PUSH2",
      "value": "0x3E25"
    },
    "15901": {
      "op": "DUP9"
    },
    "15902": {
      "op": "DUP4"
    },
    "15903": {
      "op": "DUP10"
    },
    "15904": {
      "op": "ADD"
    },
    "15905": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15908": {
      "jump": "i",
      "op": "JUMP"
    },
    "15909": {
      "op": "JUMPDEST"
    },
    "15910": {
      "op": "SWAP6"
    },
    "15911": {
      "op": "POP"
    },
    "15912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15914": {
      "op": "DUP8"
    },
    "15915": {
      "op": "ADD"
    },
    "15916": {
      "op": "CALLDATALOAD"
    },
    "15917": {
      "op": "SWAP2"
    },
    "15918": {
      "op": "POP"
    },
    "15919": {
      "op": "DUP1"
    },
    "15920": {
      "op": "DUP3"
    },
    "15921": {
      "op": "GT"
    },
    "15922": {
      "op": "ISZERO"
    },
    "15923": {
      "op": "PUSH2",
      "value": "0x3E3B"
    },
    "15926": {
      "op": "JUMPI"
    },
    "15927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15929": {
      "op": "DUP1"
    },
    "15930": {
      "op": "REVERT"
    },
    "15931": {
      "op": "JUMPDEST"
    },
    "15932": {
      "op": "POP"
    },
    "15933": {
      "op": "PUSH2",
      "value": "0x3E48"
    },
    "15936": {
      "op": "DUP8"
    },
    "15937": {
      "op": "DUP3"
    },
    "15938": {
      "op": "DUP9"
    },
    "15939": {
      "op": "ADD"
    },
    "15940": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "15943": {
      "jump": "i",
      "op": "JUMP"
    },
    "15944": {
      "op": "JUMPDEST"
    },
    "15945": {
      "op": "SWAP4"
    },
    "15946": {
      "op": "POP"
    },
    "15947": {
      "op": "POP"
    },
    "15948": {
      "op": "PUSH2",
      "value": "0x3E57"
    },
    "15951": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15953": {
      "op": "DUP7"
    },
    "15954": {
      "op": "ADD"
    },
    "15955": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "15958": {
      "jump": "i",
      "op": "JUMP"
    },
    "15959": {
      "op": "JUMPDEST"
    },
    "15960": {
      "op": "SWAP4"
    },
    "15961": {
      "op": "SWAP7"
    },
    "15962": {
      "op": "SWAP3"
    },
    "15963": {
      "op": "SWAP6"
    },
    "15964": {
      "op": "POP"
    },
    "15965": {
      "op": "SWAP3"
    },
    "15966": {
      "op": "SWAP4"
    },
    "15967": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15969": {
      "op": "ADD"
    },
    "15970": {
      "op": "CALLDATALOAD"
    },
    "15971": {
      "op": "SWAP3"
    },
    "15972": {
      "op": "POP"
    },
    "15973": {
      "op": "POP"
    },
    "15974": {
      "jump": "o",
      "op": "JUMP"
    },
    "15975": {
      "op": "JUMPDEST"
    },
    "15976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15978": {
      "op": "DUP1"
    },
    "15979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15983": {
      "op": "DUP5"
    },
    "15984": {
      "op": "DUP7"
    },
    "15985": {
      "op": "SUB"
    },
    "15986": {
      "op": "SLT"
    },
    "15987": {
      "op": "ISZERO"
    },
    "15988": {
      "op": "PUSH2",
      "value": "0x3E7C"
    },
    "15991": {
      "op": "JUMPI"
    },
    "15992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15994": {
      "op": "DUP1"
    },
    "15995": {
      "op": "REVERT"
    },
    "15996": {
      "op": "JUMPDEST"
    },
    "15997": {
      "op": "DUP4"
    },
    "15998": {
      "op": "CALLDATALOAD"
    },
    "15999": {
      "op": "SWAP3"
    },
    "16000": {
      "op": "POP"
    },
    "16001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16003": {
      "op": "DUP5"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "op": "CALLDATALOAD"
    },
    "16006": {
      "op": "SWAP2"
    },
    "16007": {
      "op": "POP"
    },
    "16008": {
      "op": "PUSH2",
      "value": "0x3E93"
    },
    "16011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16013": {
      "op": "DUP6"
    },
    "16014": {
      "op": "ADD"
    },
    "16015": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "16018": {
      "jump": "i",
      "op": "JUMP"
    },
    "16019": {
      "op": "JUMPDEST"
    },
    "16020": {
      "op": "SWAP1"
    },
    "16021": {
      "op": "POP"
    },
    "16022": {
      "op": "SWAP3"
    },
    "16023": {
      "op": "POP"
    },
    "16024": {
      "op": "SWAP3"
    },
    "16025": {
      "op": "POP"
    },
    "16026": {
      "op": "SWAP3"
    },
    "16027": {
      "jump": "o",
      "op": "JUMP"
    },
    "16028": {
      "op": "JUMPDEST"
    },
    "16029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16031": {
      "op": "DUP1"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16034": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16036": {
      "op": "DUP5"
    },
    "16037": {
      "op": "DUP7"
    },
    "16038": {
      "op": "SUB"
    },
    "16039": {
      "op": "SLT"
    },
    "16040": {
      "op": "ISZERO"
    },
    "16041": {
      "op": "PUSH2",
      "value": "0x3EB1"
    },
    "16044": {
      "op": "JUMPI"
    },
    "16045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16047": {
      "op": "DUP1"
    },
    "16048": {
      "op": "REVERT"
    },
    "16049": {
      "op": "JUMPDEST"
    },
    "16050": {
      "op": "DUP4"
    },
    "16051": {
      "op": "CALLDATALOAD"
    },
    "16052": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16061": {
      "op": "DUP2"
    },
    "16062": {
      "op": "GT"
    },
    "16063": {
      "op": "ISZERO"
    },
    "16064": {
      "op": "PUSH2",
      "value": "0x3EC8"
    },
    "16067": {
      "op": "JUMPI"
    },
    "16068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16070": {
      "op": "DUP1"
    },
    "16071": {
      "op": "REVERT"
    },
    "16072": {
      "op": "JUMPDEST"
    },
    "16073": {
      "op": "PUSH2",
      "value": "0x3ED4"
    },
    "16076": {
      "op": "DUP7"
    },
    "16077": {
      "op": "DUP3"
    },
    "16078": {
      "op": "DUP8"
    },
    "16079": {
      "op": "ADD"
    },
    "16080": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "16083": {
      "jump": "i",
      "op": "JUMP"
    },
    "16084": {
      "op": "JUMPDEST"
    },
    "16085": {
      "op": "SWAP4"
    },
    "16086": {
      "op": "POP"
    },
    "16087": {
      "op": "POP"
    },
    "16088": {
      "op": "PUSH2",
      "value": "0x3EE3"
    },
    "16091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16093": {
      "op": "DUP6"
    },
    "16094": {
      "op": "ADD"
    },
    "16095": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "16098": {
      "jump": "i",
      "op": "JUMP"
    },
    "16099": {
      "op": "JUMPDEST"
    },
    "16100": {
      "op": "SWAP2"
    },
    "16101": {
      "op": "POP"
    },
    "16102": {
      "op": "PUSH2",
      "value": "0x3E93"
    },
    "16105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16107": {
      "op": "DUP6"
    },
    "16108": {
      "op": "ADD"
    },
    "16109": {
      "op": "PUSH2",
      "value": "0x3BA8"
    },
    "16112": {
      "jump": "i",
      "op": "JUMP"
    },
    "16113": {
      "op": "JUMPDEST"
    },
    "16114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16116": {
      "op": "DUP1"
    },
    "16117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16119": {
      "op": "DUP1"
    },
    "16120": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16122": {
      "op": "DUP6"
    },
    "16123": {
      "op": "DUP8"
    },
    "16124": {
      "op": "SUB"
    },
    "16125": {
      "op": "SLT"
    },
    "16126": {
      "op": "ISZERO"
    },
    "16127": {
      "op": "PUSH2",
      "value": "0x3F07"
    },
    "16130": {
      "op": "JUMPI"
    },
    "16131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16133": {
      "op": "DUP1"
    },
    "16134": {
      "op": "REVERT"
    },
    "16135": {
      "op": "JUMPDEST"
    },
    "16136": {
      "op": "DUP5"
    },
    "16137": {
      "op": "CALLDATALOAD"
    },
    "16138": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16147": {
      "op": "DUP2"
    },
    "16148": {
      "op": "GT"
    },
    "16149": {
      "op": "ISZERO"
    },
    "16150": {
      "op": "PUSH2",
      "value": "0x3F1E"
    },
    "16153": {
      "op": "JUMPI"
    },
    "16154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16156": {
      "op": "DUP1"
    },
    "16157": {
      "op": "REVERT"
    },
    "16158": {
      "op": "JUMPDEST"
    },
    "16159": {
      "op": "PUSH2",
      "value": "0x3F2A"
    },
    "16162": {
      "op": "DUP8"
    },
    "16163": {
      "op": "DUP3"
    },
    "16164": {
      "op": "DUP9"
    },
    "16165": {
      "op": "ADD"
    },
    "16166": {
      "op": "PUSH2",
      "value": "0x3B1B"
    },
    "16169": {
      "jump": "i",
      "op": "JUMP"
    },
    "16170": {
      "op": "JUMPDEST"
    },
    "16171": {
      "op": "SWAP5"
    },
    "16172": {
      "op": "POP"
    },
    "16173": {
      "op": "POP"
    },
    "16174": {
      "op": "PUSH2",
      "value": "0x3D1F"
    },
    "16177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16179": {
      "op": "DUP7"
    },
    "16180": {
      "op": "ADD"
    },
    "16181": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "16184": {
      "jump": "i",
      "op": "JUMP"
    },
    "16185": {
      "op": "JUMPDEST"
    },
    "16186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16188": {
      "op": "DUP1"
    },
    "16189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16191": {
      "op": "DUP1"
    },
    "16192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16196": {
      "op": "DUP7"
    },
    "16197": {
      "op": "DUP9"
    },
    "16198": {
      "op": "SUB"
    },
    "16199": {
      "op": "SLT"
    },
    "16200": {
      "op": "ISZERO"
    },
    "16201": {
      "op": "PUSH2",
      "value": "0x3F51"
    },
    "16204": {
      "op": "JUMPI"
    },
    "16205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16207": {
      "op": "DUP1"
    },
    "16208": {
      "op": "REVERT"
    },
    "16209": {
      "op": "JUMPDEST"
    },
    "16210": {
      "op": "DUP6"
    },
    "16211": {
      "op": "CALLDATALOAD"
    },
    "16212": {
      "op": "SWAP5"
    },
    "16213": {
      "op": "POP"
    },
    "16214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16216": {
      "op": "DUP7"
    },
    "16217": {
      "op": "ADD"
    },
    "16218": {
      "op": "CALLDATALOAD"
    },
    "16219": {
      "op": "SWAP4"
    },
    "16220": {
      "op": "POP"
    },
    "16221": {
      "op": "PUSH2",
      "value": "0x3F68"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16226": {
      "op": "DUP8"
    },
    "16227": {
      "op": "ADD"
    },
    "16228": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "16231": {
      "jump": "i",
      "op": "JUMP"
    },
    "16232": {
      "op": "JUMPDEST"
    },
    "16233": {
      "op": "SWAP3"
    },
    "16234": {
      "op": "POP"
    },
    "16235": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16237": {
      "op": "DUP7"
    },
    "16238": {
      "op": "ADD"
    },
    "16239": {
      "op": "CALLDATALOAD"
    },
    "16240": {
      "op": "SWAP2"
    },
    "16241": {
      "op": "POP"
    },
    "16242": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16247": {
      "op": "DUP8"
    },
    "16248": {
      "op": "ADD"
    },
    "16249": {
      "op": "PUSH2",
      "value": "0x3C60"
    },
    "16252": {
      "jump": "i",
      "op": "JUMP"
    },
    "16253": {
      "op": "JUMPDEST"
    },
    "16254": {
      "op": "SWAP1"
    },
    "16255": {
      "op": "POP"
    },
    "16256": {
      "op": "SWAP3"
    },
    "16257": {
      "op": "SWAP6"
    },
    "16258": {
      "op": "POP"
    },
    "16259": {
      "op": "SWAP3"
    },
    "16260": {
      "op": "SWAP6"
    },
    "16261": {
      "op": "SWAP1"
    },
    "16262": {
      "op": "SWAP4"
    },
    "16263": {
      "op": "POP"
    },
    "16264": {
      "jump": "o",
      "op": "JUMP"
    },
    "16265": {
      "op": "JUMPDEST"
    },
    "16266": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16271": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16273": {
      "op": "SHL"
    },
    "16274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16276": {
      "op": "MSTORE"
    },
    "16277": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16279": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16281": {
      "op": "MSTORE"
    },
    "16282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16286": {
      "op": "REVERT"
    },
    "16287": {
      "op": "JUMPDEST"
    },
    "16288": {
      "op": "DUP1"
    },
    "16289": {
      "op": "DUP3"
    },
    "16290": {
      "op": "ADD"
    },
    "16291": {
      "op": "DUP1"
    },
    "16292": {
      "op": "DUP3"
    },
    "16293": {
      "op": "GT"
    },
    "16294": {
      "op": "ISZERO"
    },
    "16295": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16298": {
      "op": "JUMPI"
    },
    "16299": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16302": {
      "op": "PUSH2",
      "value": "0x3F89"
    },
    "16305": {
      "jump": "i",
      "op": "JUMP"
    },
    "16306": {
      "op": "JUMPDEST"
    },
    "16307": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16312": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16314": {
      "op": "SHL"
    },
    "16315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16317": {
      "op": "MSTORE"
    },
    "16318": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16320": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16322": {
      "op": "MSTORE"
    },
    "16323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16327": {
      "op": "REVERT"
    },
    "16328": {
      "op": "JUMPDEST"
    },
    "16329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16331": {
      "op": "JUMPDEST"
    },
    "16332": {
      "op": "DUP4"
    },
    "16333": {
      "op": "DUP2"
    },
    "16334": {
      "op": "LT"
    },
    "16335": {
      "op": "ISZERO"
    },
    "16336": {
      "op": "PUSH2",
      "value": "0x3FE3"
    },
    "16339": {
      "op": "JUMPI"
    },
    "16340": {
      "op": "DUP2"
    },
    "16341": {
      "op": "DUP2"
    },
    "16342": {
      "op": "ADD"
    },
    "16343": {
      "op": "MLOAD"
    },
    "16344": {
      "op": "DUP4"
    },
    "16345": {
      "op": "DUP3"
    },
    "16346": {
      "op": "ADD"
    },
    "16347": {
      "op": "MSTORE"
    },
    "16348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16350": {
      "op": "ADD"
    },
    "16351": {
      "op": "PUSH2",
      "value": "0x3FCB"
    },
    "16354": {
      "op": "JUMP"
    },
    "16355": {
      "op": "JUMPDEST"
    },
    "16356": {
      "op": "POP"
    },
    "16357": {
      "op": "POP"
    },
    "16358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16360": {
      "op": "SWAP2"
    },
    "16361": {
      "op": "ADD"
    },
    "16362": {
      "op": "MSTORE"
    },
    "16363": {
      "jump": "o",
      "op": "JUMP"
    },
    "16364": {
      "op": "JUMPDEST"
    },
    "16365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16367": {
      "op": "DUP3"
    },
    "16368": {
      "op": "MLOAD"
    },
    "16369": {
      "op": "PUSH2",
      "value": "0x3FFE"
    },
    "16372": {
      "op": "DUP2"
    },
    "16373": {
      "op": "DUP5"
    },
    "16374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16376": {
      "op": "DUP8"
    },
    "16377": {
      "op": "ADD"
    },
    "16378": {
      "op": "PUSH2",
      "value": "0x3FC8"
    },
    "16381": {
      "jump": "i",
      "op": "JUMP"
    },
    "16382": {
      "op": "JUMPDEST"
    },
    "16383": {
      "op": "SWAP2"
    },
    "16384": {
      "op": "SWAP1"
    },
    "16385": {
      "op": "SWAP2"
    },
    "16386": {
      "op": "ADD"
    },
    "16387": {
      "op": "SWAP3"
    },
    "16388": {
      "op": "SWAP2"
    },
    "16389": {
      "op": "POP"
    },
    "16390": {
      "op": "POP"
    },
    "16391": {
      "jump": "o",
      "op": "JUMP"
    },
    "16392": {
      "op": "JUMPDEST"
    },
    "16393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16395": {
      "op": "DUP1"
    },
    "16396": {
      "op": "DUP3"
    },
    "16397": {
      "op": "MSTORE"
    },
    "16398": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16400": {
      "op": "SWAP1"
    },
    "16401": {
      "op": "DUP3"
    },
    "16402": {
      "op": "ADD"
    },
    "16403": {
      "op": "MSTORE"
    },
    "16404": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "16407": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "16409": {
      "op": "SHL"
    },
    "16410": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16412": {
      "op": "DUP3"
    },
    "16413": {
      "op": "ADD"
    },
    "16414": {
      "op": "MSTORE"
    },
    "16415": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16417": {
      "op": "ADD"
    },
    "16418": {
      "op": "SWAP1"
    },
    "16419": {
      "jump": "o",
      "op": "JUMP"
    },
    "16420": {
      "op": "JUMPDEST"
    },
    "16421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16423": {
      "op": "DUP1"
    },
    "16424": {
      "op": "DUP3"
    },
    "16425": {
      "op": "MSTORE"
    },
    "16426": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16428": {
      "op": "SWAP1"
    },
    "16429": {
      "op": "DUP3"
    },
    "16430": {
      "op": "ADD"
    },
    "16431": {
      "op": "MSTORE"
    },
    "16432": {
      "op": "PUSH2",
      "value": "0x5553"
    },
    "16435": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "16437": {
      "op": "SHL"
    },
    "16438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16440": {
      "op": "DUP3"
    },
    "16441": {
      "op": "ADD"
    },
    "16442": {
      "op": "MSTORE"
    },
    "16443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16445": {
      "op": "ADD"
    },
    "16446": {
      "op": "SWAP1"
    },
    "16447": {
      "jump": "o",
      "op": "JUMP"
    },
    "16448": {
      "op": "JUMPDEST"
    },
    "16449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16451": {
      "op": "DUP1"
    },
    "16452": {
      "op": "DUP3"
    },
    "16453": {
      "op": "MSTORE"
    },
    "16454": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16456": {
      "op": "SWAP1"
    },
    "16457": {
      "op": "DUP3"
    },
    "16458": {
      "op": "ADD"
    },
    "16459": {
      "op": "MSTORE"
    },
    "16460": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "16463": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16465": {
      "op": "SHL"
    },
    "16466": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16468": {
      "op": "DUP3"
    },
    "16469": {
      "op": "ADD"
    },
    "16470": {
      "op": "MSTORE"
    },
    "16471": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16473": {
      "op": "ADD"
    },
    "16474": {
      "op": "SWAP1"
    },
    "16475": {
      "jump": "o",
      "op": "JUMP"
    },
    "16476": {
      "op": "JUMPDEST"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16479": {
      "op": "DUP1"
    },
    "16480": {
      "op": "DUP3"
    },
    "16481": {
      "op": "MSTORE"
    },
    "16482": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16484": {
      "op": "SWAP1"
    },
    "16485": {
      "op": "DUP3"
    },
    "16486": {
      "op": "ADD"
    },
    "16487": {
      "op": "MSTORE"
    },
    "16488": {
      "op": "PUSH2",
      "value": "0x1555"
    },
    "16491": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16493": {
      "op": "SHL"
    },
    "16494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16496": {
      "op": "DUP3"
    },
    "16497": {
      "op": "ADD"
    },
    "16498": {
      "op": "MSTORE"
    },
    "16499": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16501": {
      "op": "ADD"
    },
    "16502": {
      "op": "SWAP1"
    },
    "16503": {
      "jump": "o",
      "op": "JUMP"
    },
    "16504": {
      "op": "JUMPDEST"
    },
    "16505": {
      "op": "DUP1"
    },
    "16506": {
      "op": "DUP3"
    },
    "16507": {
      "op": "MUL"
    },
    "16508": {
      "op": "DUP2"
    },
    "16509": {
      "op": "ISZERO"
    },
    "16510": {
      "op": "DUP3"
    },
    "16511": {
      "op": "DUP3"
    },
    "16512": {
      "op": "DIV"
    },
    "16513": {
      "op": "DUP5"
    },
    "16514": {
      "op": "EQ"
    },
    "16515": {
      "op": "OR"
    },
    "16516": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16519": {
      "op": "JUMPI"
    },
    "16520": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16523": {
      "op": "PUSH2",
      "value": "0x3F89"
    },
    "16526": {
      "jump": "i",
      "op": "JUMP"
    },
    "16527": {
      "op": "JUMPDEST"
    },
    "16528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16530": {
      "op": "DUP3"
    },
    "16531": {
      "op": "PUSH2",
      "value": "0x40AC"
    },
    "16534": {
      "op": "JUMPI"
    },
    "16535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16542": {
      "op": "SHL"
    },
    "16543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16545": {
      "op": "MSTORE"
    },
    "16546": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "16548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16550": {
      "op": "MSTORE"
    },
    "16551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16555": {
      "op": "REVERT"
    },
    "16556": {
      "op": "JUMPDEST"
    },
    "16557": {
      "op": "POP"
    },
    "16558": {
      "op": "DIV"
    },
    "16559": {
      "op": "SWAP1"
    },
    "16560": {
      "jump": "o",
      "op": "JUMP"
    },
    "16561": {
      "op": "JUMPDEST"
    },
    "16562": {
      "op": "DUP2"
    },
    "16563": {
      "op": "DUP2"
    },
    "16564": {
      "op": "SUB"
    },
    "16565": {
      "op": "DUP2"
    },
    "16566": {
      "op": "DUP2"
    },
    "16567": {
      "op": "GT"
    },
    "16568": {
      "op": "ISZERO"
    },
    "16569": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16572": {
      "op": "JUMPI"
    },
    "16573": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "16576": {
      "op": "PUSH2",
      "value": "0x3F89"
    },
    "16579": {
      "jump": "i",
      "op": "JUMP"
    },
    "16580": {
      "op": "JUMPDEST"
    },
    "16581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16583": {
      "op": "DUP2"
    },
    "16584": {
      "op": "MLOAD"
    },
    "16585": {
      "op": "DUP1"
    },
    "16586": {
      "op": "DUP5"
    },
    "16587": {
      "op": "MSTORE"
    },
    "16588": {
      "op": "PUSH2",
      "value": "0x40DC"
    },
    "16591": {
      "op": "DUP2"
    },
    "16592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16594": {
      "op": "DUP7"
    },
    "16595": {
      "op": "ADD"
    },
    "16596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16598": {
      "op": "DUP7"
    },
    "16599": {
      "op": "ADD"
    },
    "16600": {
      "op": "PUSH2",
      "value": "0x3FC8"
    },
    "16603": {
      "jump": "i",
      "op": "JUMP"
    },
    "16604": {
      "op": "JUMPDEST"
    },
    "16605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16607": {
      "op": "ADD"
    },
    "16608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16610": {
      "op": "NOT"
    },
    "16611": {
      "op": "AND"
    },
    "16612": {
      "op": "SWAP3"
    },
    "16613": {
      "op": "SWAP1"
    },
    "16614": {
      "op": "SWAP3"
    },
    "16615": {
      "op": "ADD"
    },
    "16616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16618": {
      "op": "ADD"
    },
    "16619": {
      "op": "SWAP3"
    },
    "16620": {
      "op": "SWAP2"
    },
    "16621": {
      "op": "POP"
    },
    "16622": {
      "op": "POP"
    },
    "16623": {
      "jump": "o",
      "op": "JUMP"
    },
    "16624": {
      "op": "JUMPDEST"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16627": {
      "op": "DUP2"
    },
    "16628": {
      "op": "MSTORE"
    },
    "16629": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16631": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16633": {
      "op": "DUP3"
    },
    "16634": {
      "op": "ADD"
    },
    "16635": {
      "op": "MSTORE"
    },
    "16636": {
      "op": "PUSH2",
      "value": "0x18D1"
    },
    "16639": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16641": {
      "op": "SHL"
    },
    "16642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16644": {
      "op": "DUP3"
    },
    "16645": {
      "op": "ADD"
    },
    "16646": {
      "op": "MSTORE"
    },
    "16647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16651": {
      "op": "DUP3"
    },
    "16652": {
      "op": "ADD"
    },
    "16653": {
      "op": "MSTORE"
    },
    "16654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16656": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "16659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16661": {
      "op": "DUP4"
    },
    "16662": {
      "op": "ADD"
    },
    "16663": {
      "op": "DUP6"
    },
    "16664": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16667": {
      "jump": "i",
      "op": "JUMP"
    },
    "16668": {
      "op": "JUMPDEST"
    },
    "16669": {
      "op": "SWAP1"
    },
    "16670": {
      "op": "POP"
    },
    "16671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16673": {
      "op": "DUP1"
    },
    "16674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16676": {
      "op": "SHL"
    },
    "16677": {
      "op": "SUB"
    },
    "16678": {
      "op": "DUP4"
    },
    "16679": {
      "op": "AND"
    },
    "16680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16682": {
      "op": "DUP4"
    },
    "16683": {
      "op": "ADD"
    },
    "16684": {
      "op": "MSTORE"
    },
    "16685": {
      "op": "SWAP4"
    },
    "16686": {
      "op": "SWAP3"
    },
    "16687": {
      "op": "POP"
    },
    "16688": {
      "op": "POP"
    },
    "16689": {
      "op": "POP"
    },
    "16690": {
      "jump": "o",
      "op": "JUMP"
    },
    "16691": {
      "op": "JUMPDEST"
    },
    "16692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16696": {
      "op": "DUP3"
    },
    "16697": {
      "op": "DUP5"
    },
    "16698": {
      "op": "SUB"
    },
    "16699": {
      "op": "SLT"
    },
    "16700": {
      "op": "ISZERO"
    },
    "16701": {
      "op": "PUSH2",
      "value": "0x4145"
    },
    "16704": {
      "op": "JUMPI"
    },
    "16705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16707": {
      "op": "DUP1"
    },
    "16708": {
      "op": "REVERT"
    },
    "16709": {
      "op": "JUMPDEST"
    },
    "16710": {
      "op": "POP"
    },
    "16711": {
      "op": "MLOAD"
    },
    "16712": {
      "op": "SWAP2"
    },
    "16713": {
      "op": "SWAP1"
    },
    "16714": {
      "op": "POP"
    },
    "16715": {
      "jump": "o",
      "op": "JUMP"
    },
    "16716": {
      "op": "JUMPDEST"
    },
    "16717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16719": {
      "op": "DUP1"
    },
    "16720": {
      "op": "DUP3"
    },
    "16721": {
      "op": "MSTORE"
    },
    "16722": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16724": {
      "op": "SWAP1"
    },
    "16725": {
      "op": "DUP3"
    },
    "16726": {
      "op": "ADD"
    },
    "16727": {
      "op": "MSTORE"
    },
    "16728": {
      "op": "PUSH2",
      "value": "0x1255"
    },
    "16731": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16733": {
      "op": "SHL"
    },
    "16734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16736": {
      "op": "DUP3"
    },
    "16737": {
      "op": "ADD"
    },
    "16738": {
      "op": "MSTORE"
    },
    "16739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16741": {
      "op": "ADD"
    },
    "16742": {
      "op": "SWAP1"
    },
    "16743": {
      "jump": "o",
      "op": "JUMP"
    },
    "16744": {
      "op": "JUMPDEST"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16749": {
      "op": "DUP3"
    },
    "16750": {
      "op": "DUP5"
    },
    "16751": {
      "op": "SUB"
    },
    "16752": {
      "op": "SLT"
    },
    "16753": {
      "op": "ISZERO"
    },
    "16754": {
      "op": "PUSH2",
      "value": "0x417A"
    },
    "16757": {
      "op": "JUMPI"
    },
    "16758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16760": {
      "op": "DUP1"
    },
    "16761": {
      "op": "REVERT"
    },
    "16762": {
      "op": "JUMPDEST"
    },
    "16763": {
      "op": "DUP2"
    },
    "16764": {
      "op": "MLOAD"
    },
    "16765": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "16768": {
      "op": "DUP2"
    },
    "16769": {
      "op": "PUSH2",
      "value": "0x3D96"
    },
    "16772": {
      "jump": "i",
      "op": "JUMP"
    },
    "16773": {
      "op": "JUMPDEST"
    },
    "16774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16776": {
      "op": "DUP1"
    },
    "16777": {
      "op": "DUP3"
    },
    "16778": {
      "op": "MSTORE"
    },
    "16779": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16781": {
      "op": "SWAP1"
    },
    "16782": {
      "op": "DUP3"
    },
    "16783": {
      "op": "ADD"
    },
    "16784": {
      "op": "MSTORE"
    },
    "16785": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "16788": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16790": {
      "op": "SHL"
    },
    "16791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16793": {
      "op": "DUP3"
    },
    "16794": {
      "op": "ADD"
    },
    "16795": {
      "op": "MSTORE"
    },
    "16796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16798": {
      "op": "ADD"
    },
    "16799": {
      "op": "SWAP1"
    },
    "16800": {
      "jump": "o",
      "op": "JUMP"
    },
    "16801": {
      "op": "JUMPDEST"
    },
    "16802": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16804": {
      "op": "DUP2"
    },
    "16805": {
      "op": "LT"
    },
    "16806": {
      "op": "PUSH2",
      "value": "0x41BF"
    },
    "16809": {
      "op": "JUMPI"
    },
    "16810": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16817": {
      "op": "SHL"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16820": {
      "op": "MSTORE"
    },
    "16821": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16823": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16825": {
      "op": "MSTORE"
    },
    "16826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16830": {
      "op": "REVERT"
    },
    "16831": {
      "op": "JUMPDEST"
    },
    "16832": {
      "op": "SWAP1"
    },
    "16833": {
      "op": "MSTORE"
    },
    "16834": {
      "jump": "o",
      "op": "JUMP"
    },
    "16835": {
      "op": "JUMPDEST"
    },
    "16836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16838": {
      "op": "DUP2"
    },
    "16839": {
      "op": "MSTORE"
    },
    "16840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16842": {
      "op": "PUSH2",
      "value": "0x41D6"
    },
    "16845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16847": {
      "op": "DUP4"
    },
    "16848": {
      "op": "ADD"
    },
    "16849": {
      "op": "DUP6"
    },
    "16850": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16853": {
      "jump": "i",
      "op": "JUMP"
    },
    "16854": {
      "op": "JUMPDEST"
    },
    "16855": {
      "op": "SWAP1"
    },
    "16856": {
      "op": "POP"
    },
    "16857": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "16860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16862": {
      "op": "DUP4"
    },
    "16863": {
      "op": "ADD"
    },
    "16864": {
      "op": "DUP5"
    },
    "16865": {
      "op": "PUSH2",
      "value": "0x41A1"
    },
    "16868": {
      "jump": "i",
      "op": "JUMP"
    },
    "16869": {
      "op": "JUMPDEST"
    },
    "16870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16872": {
      "op": "DUP2"
    },
    "16873": {
      "op": "MSTORE"
    },
    "16874": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16878": {
      "op": "DUP3"
    },
    "16879": {
      "op": "ADD"
    },
    "16880": {
      "op": "MSTORE"
    },
    "16881": {
      "op": "PUSH2",
      "value": "0x39A1"
    },
    "16884": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16886": {
      "op": "SHL"
    },
    "16887": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16889": {
      "op": "DUP3"
    },
    "16890": {
      "op": "ADD"
    },
    "16891": {
      "op": "MSTORE"
    },
    "16892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16896": {
      "op": "DUP3"
    },
    "16897": {
      "op": "ADD"
    },
    "16898": {
      "op": "MSTORE"
    },
    "16899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16901": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "16904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16906": {
      "op": "DUP4"
    },
    "16907": {
      "op": "ADD"
    },
    "16908": {
      "op": "DUP6"
    },
    "16909": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16912": {
      "jump": "i",
      "op": "JUMP"
    },
    "16913": {
      "op": "JUMPDEST"
    },
    "16914": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16916": {
      "op": "DUP2"
    },
    "16917": {
      "op": "MSTORE"
    },
    "16918": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16920": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16922": {
      "op": "DUP3"
    },
    "16923": {
      "op": "ADD"
    },
    "16924": {
      "op": "MSTORE"
    },
    "16925": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "16928": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16930": {
      "op": "SHL"
    },
    "16931": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16933": {
      "op": "DUP3"
    },
    "16934": {
      "op": "ADD"
    },
    "16935": {
      "op": "MSTORE"
    },
    "16936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16940": {
      "op": "DUP3"
    },
    "16941": {
      "op": "ADD"
    },
    "16942": {
      "op": "MSTORE"
    },
    "16943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16945": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "16948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16950": {
      "op": "DUP4"
    },
    "16951": {
      "op": "ADD"
    },
    "16952": {
      "op": "DUP6"
    },
    "16953": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16956": {
      "jump": "i",
      "op": "JUMP"
    },
    "16957": {
      "op": "JUMPDEST"
    },
    "16958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16960": {
      "op": "DUP2"
    },
    "16961": {
      "op": "MSTORE"
    },
    "16962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16964": {
      "op": "PUSH2",
      "value": "0x4250"
    },
    "16967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16969": {
      "op": "DUP4"
    },
    "16970": {
      "op": "ADD"
    },
    "16971": {
      "op": "DUP6"
    },
    "16972": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16975": {
      "jump": "i",
      "op": "JUMP"
    },
    "16976": {
      "op": "JUMPDEST"
    },
    "16977": {
      "op": "SWAP1"
    },
    "16978": {
      "op": "POP"
    },
    "16979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16981": {
      "op": "DUP1"
    },
    "16982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16984": {
      "op": "SHL"
    },
    "16985": {
      "op": "SUB"
    },
    "16986": {
      "op": "DUP4"
    },
    "16987": {
      "op": "AND"
    },
    "16988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16990": {
      "op": "DUP4"
    },
    "16991": {
      "op": "ADD"
    },
    "16992": {
      "op": "MSTORE"
    },
    "16993": {
      "op": "SWAP4"
    },
    "16994": {
      "op": "SWAP3"
    },
    "16995": {
      "op": "POP"
    },
    "16996": {
      "op": "POP"
    },
    "16997": {
      "op": "POP"
    },
    "16998": {
      "jump": "o",
      "op": "JUMP"
    },
    "16999": {
      "op": "JUMPDEST"
    },
    "17000": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17002": {
      "op": "DUP2"
    },
    "17003": {
      "op": "MSTORE"
    },
    "17004": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17006": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17008": {
      "op": "DUP3"
    },
    "17009": {
      "op": "ADD"
    },
    "17010": {
      "op": "MSTORE"
    },
    "17011": {
      "op": "PUSH2",
      "value": "0x31A1"
    },
    "17014": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "17016": {
      "op": "SHL"
    },
    "17017": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17019": {
      "op": "DUP3"
    },
    "17020": {
      "op": "ADD"
    },
    "17021": {
      "op": "MSTORE"
    },
    "17022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17026": {
      "op": "DUP3"
    },
    "17027": {
      "op": "ADD"
    },
    "17028": {
      "op": "MSTORE"
    },
    "17029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17031": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17036": {
      "op": "DUP4"
    },
    "17037": {
      "op": "ADD"
    },
    "17038": {
      "op": "DUP6"
    },
    "17039": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17042": {
      "jump": "i",
      "op": "JUMP"
    },
    "17043": {
      "op": "JUMPDEST"
    },
    "17044": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17046": {
      "op": "DUP2"
    },
    "17047": {
      "op": "MSTORE"
    },
    "17048": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17050": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17052": {
      "op": "DUP3"
    },
    "17053": {
      "op": "ADD"
    },
    "17054": {
      "op": "MSTORE"
    },
    "17055": {
      "op": "PUSH2",
      "value": "0x7241"
    },
    "17058": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17060": {
      "op": "SHL"
    },
    "17061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17063": {
      "op": "DUP3"
    },
    "17064": {
      "op": "ADD"
    },
    "17065": {
      "op": "MSTORE"
    },
    "17066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17070": {
      "op": "DUP3"
    },
    "17071": {
      "op": "ADD"
    },
    "17072": {
      "op": "MSTORE"
    },
    "17073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17075": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17080": {
      "op": "DUP4"
    },
    "17081": {
      "op": "ADD"
    },
    "17082": {
      "op": "DUP6"
    },
    "17083": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17086": {
      "jump": "i",
      "op": "JUMP"
    },
    "17087": {
      "op": "JUMPDEST"
    },
    "17088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17090": {
      "op": "DUP2"
    },
    "17091": {
      "op": "MSTORE"
    },
    "17092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17094": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "17097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17099": {
      "op": "DUP4"
    },
    "17100": {
      "op": "ADD"
    },
    "17101": {
      "op": "DUP5"
    },
    "17102": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17105": {
      "jump": "i",
      "op": "JUMP"
    },
    "17106": {
      "op": "JUMPDEST"
    },
    "17107": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17109": {
      "op": "DUP2"
    },
    "17110": {
      "op": "MSTORE"
    },
    "17111": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17115": {
      "op": "DUP3"
    },
    "17116": {
      "op": "ADD"
    },
    "17117": {
      "op": "MSTORE"
    },
    "17118": {
      "op": "PUSH2",
      "value": "0x3221"
    },
    "17121": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "17123": {
      "op": "SHL"
    },
    "17124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17126": {
      "op": "DUP3"
    },
    "17127": {
      "op": "ADD"
    },
    "17128": {
      "op": "MSTORE"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17133": {
      "op": "DUP3"
    },
    "17134": {
      "op": "ADD"
    },
    "17135": {
      "op": "MSTORE"
    },
    "17136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17138": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17143": {
      "op": "DUP4"
    },
    "17144": {
      "op": "ADD"
    },
    "17145": {
      "op": "DUP6"
    },
    "17146": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17149": {
      "jump": "i",
      "op": "JUMP"
    },
    "17150": {
      "op": "JUMPDEST"
    },
    "17151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17153": {
      "op": "DUP1"
    },
    "17154": {
      "op": "DUP3"
    },
    "17155": {
      "op": "MSTORE"
    },
    "17156": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17158": {
      "op": "SWAP1"
    },
    "17159": {
      "op": "DUP3"
    },
    "17160": {
      "op": "ADD"
    },
    "17161": {
      "op": "MSTORE"
    },
    "17162": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "17165": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "17167": {
      "op": "SHL"
    },
    "17168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17170": {
      "op": "DUP3"
    },
    "17171": {
      "op": "ADD"
    },
    "17172": {
      "op": "MSTORE"
    },
    "17173": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17175": {
      "op": "ADD"
    },
    "17176": {
      "op": "SWAP1"
    },
    "17177": {
      "jump": "o",
      "op": "JUMP"
    },
    "17178": {
      "op": "JUMPDEST"
    },
    "17179": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17181": {
      "op": "DUP2"
    },
    "17182": {
      "op": "MSTORE"
    },
    "17183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17185": {
      "op": "PUSH2",
      "value": "0x432D"
    },
    "17188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17190": {
      "op": "DUP4"
    },
    "17191": {
      "op": "ADD"
    },
    "17192": {
      "op": "DUP7"
    },
    "17193": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17196": {
      "jump": "i",
      "op": "JUMP"
    },
    "17197": {
      "op": "JUMPDEST"
    },
    "17198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17204": {
      "op": "SHL"
    },
    "17205": {
      "op": "SUB"
    },
    "17206": {
      "op": "SWAP5"
    },
    "17207": {
      "op": "SWAP1"
    },
    "17208": {
      "op": "SWAP5"
    },
    "17209": {
      "op": "AND"
    },
    "17210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17212": {
      "op": "DUP4"
    },
    "17213": {
      "op": "ADD"
    },
    "17214": {
      "op": "MSTORE"
    },
    "17215": {
      "op": "POP"
    },
    "17216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17218": {
      "op": "ADD"
    },
    "17219": {
      "op": "MSTORE"
    },
    "17220": {
      "op": "SWAP2"
    },
    "17221": {
      "op": "SWAP1"
    },
    "17222": {
      "op": "POP"
    },
    "17223": {
      "jump": "o",
      "op": "JUMP"
    },
    "17224": {
      "op": "JUMPDEST"
    },
    "17225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17227": {
      "op": "DUP2"
    },
    "17228": {
      "op": "MSTORE"
    },
    "17229": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17233": {
      "op": "DUP3"
    },
    "17234": {
      "op": "ADD"
    },
    "17235": {
      "op": "MSTORE"
    },
    "17236": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "17239": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17241": {
      "op": "SHL"
    },
    "17242": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17244": {
      "op": "DUP3"
    },
    "17245": {
      "op": "ADD"
    },
    "17246": {
      "op": "MSTORE"
    },
    "17247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17251": {
      "op": "DUP3"
    },
    "17252": {
      "op": "ADD"
    },
    "17253": {
      "op": "MSTORE"
    },
    "17254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17256": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17261": {
      "op": "DUP4"
    },
    "17262": {
      "op": "ADD"
    },
    "17263": {
      "op": "DUP6"
    },
    "17264": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17267": {
      "jump": "i",
      "op": "JUMP"
    },
    "17268": {
      "op": "JUMPDEST"
    },
    "17269": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17271": {
      "op": "DUP2"
    },
    "17272": {
      "op": "MSTORE"
    },
    "17273": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17275": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17277": {
      "op": "DUP3"
    },
    "17278": {
      "op": "ADD"
    },
    "17279": {
      "op": "MSTORE"
    },
    "17280": {
      "op": "PUSH3",
      "value": "0x734E53"
    },
    "17284": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "17286": {
      "op": "SHL"
    },
    "17287": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17289": {
      "op": "DUP3"
    },
    "17290": {
      "op": "ADD"
    },
    "17291": {
      "op": "MSTORE"
    },
    "17292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17296": {
      "op": "DUP3"
    },
    "17297": {
      "op": "ADD"
    },
    "17298": {
      "op": "MSTORE"
    },
    "17299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17301": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17306": {
      "op": "DUP4"
    },
    "17307": {
      "op": "ADD"
    },
    "17308": {
      "op": "DUP6"
    },
    "17309": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17312": {
      "jump": "i",
      "op": "JUMP"
    },
    "17313": {
      "op": "JUMPDEST"
    },
    "17314": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17316": {
      "op": "DUP2"
    },
    "17317": {
      "op": "MSTORE"
    },
    "17318": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17322": {
      "op": "DUP3"
    },
    "17323": {
      "op": "ADD"
    },
    "17324": {
      "op": "MSTORE"
    },
    "17325": {
      "op": "PUSH2",
      "value": "0x1D55"
    },
    "17328": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17330": {
      "op": "SHL"
    },
    "17331": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17333": {
      "op": "DUP3"
    },
    "17334": {
      "op": "ADD"
    },
    "17335": {
      "op": "MSTORE"
    },
    "17336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17340": {
      "op": "DUP3"
    },
    "17341": {
      "op": "ADD"
    },
    "17342": {
      "op": "MSTORE"
    },
    "17343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17345": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17350": {
      "op": "DUP4"
    },
    "17351": {
      "op": "ADD"
    },
    "17352": {
      "op": "DUP6"
    },
    "17353": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17356": {
      "jump": "i",
      "op": "JUMP"
    },
    "17357": {
      "op": "JUMPDEST"
    },
    "17358": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17360": {
      "op": "DUP2"
    },
    "17361": {
      "op": "MSTORE"
    },
    "17362": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17366": {
      "op": "DUP3"
    },
    "17367": {
      "op": "ADD"
    },
    "17368": {
      "op": "MSTORE"
    },
    "17369": {
      "op": "PUSH2",
      "value": "0x1C95"
    },
    "17372": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17374": {
      "op": "SHL"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17377": {
      "op": "DUP3"
    },
    "17378": {
      "op": "ADD"
    },
    "17379": {
      "op": "MSTORE"
    },
    "17380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17384": {
      "op": "DUP3"
    },
    "17385": {
      "op": "ADD"
    },
    "17386": {
      "op": "MSTORE"
    },
    "17387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17389": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17394": {
      "op": "DUP4"
    },
    "17395": {
      "op": "ADD"
    },
    "17396": {
      "op": "DUP6"
    },
    "17397": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17400": {
      "jump": "i",
      "op": "JUMP"
    },
    "17401": {
      "op": "JUMPDEST"
    },
    "17402": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17404": {
      "op": "DUP2"
    },
    "17405": {
      "op": "MSTORE"
    },
    "17406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17408": {
      "op": "PUSH2",
      "value": "0x440C"
    },
    "17411": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17413": {
      "op": "DUP4"
    },
    "17414": {
      "op": "ADD"
    },
    "17415": {
      "op": "DUP8"
    },
    "17416": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17419": {
      "jump": "i",
      "op": "JUMP"
    },
    "17420": {
      "op": "JUMPDEST"
    },
    "17421": {
      "op": "DUP3"
    },
    "17422": {
      "op": "DUP2"
    },
    "17423": {
      "op": "SUB"
    },
    "17424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17426": {
      "op": "DUP5"
    },
    "17427": {
      "op": "ADD"
    },
    "17428": {
      "op": "MSTORE"
    },
    "17429": {
      "op": "PUSH2",
      "value": "0x441E"
    },
    "17432": {
      "op": "DUP2"
    },
    "17433": {
      "op": "DUP8"
    },
    "17434": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17437": {
      "jump": "i",
      "op": "JUMP"
    },
    "17438": {
      "op": "JUMPDEST"
    },
    "17439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17445": {
      "op": "SHL"
    },
    "17446": {
      "op": "SUB"
    },
    "17447": {
      "op": "SWAP6"
    },
    "17448": {
      "op": "SWAP1"
    },
    "17449": {
      "op": "SWAP6"
    },
    "17450": {
      "op": "AND"
    },
    "17451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17453": {
      "op": "DUP5"
    },
    "17454": {
      "op": "ADD"
    },
    "17455": {
      "op": "MSTORE"
    },
    "17456": {
      "op": "POP"
    },
    "17457": {
      "op": "POP"
    },
    "17458": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17460": {
      "op": "ADD"
    },
    "17461": {
      "op": "MSTORE"
    },
    "17462": {
      "op": "SWAP3"
    },
    "17463": {
      "op": "SWAP2"
    },
    "17464": {
      "op": "POP"
    },
    "17465": {
      "op": "POP"
    },
    "17466": {
      "jump": "o",
      "op": "JUMP"
    },
    "17467": {
      "op": "JUMPDEST"
    },
    "17468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17470": {
      "op": "DUP2"
    },
    "17471": {
      "op": "MSTORE"
    },
    "17472": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17474": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17476": {
      "op": "DUP3"
    },
    "17477": {
      "op": "ADD"
    },
    "17478": {
      "op": "MSTORE"
    },
    "17479": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "17482": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17484": {
      "op": "SHL"
    },
    "17485": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17487": {
      "op": "DUP3"
    },
    "17488": {
      "op": "ADD"
    },
    "17489": {
      "op": "MSTORE"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17494": {
      "op": "DUP3"
    },
    "17495": {
      "op": "ADD"
    },
    "17496": {
      "op": "MSTORE"
    },
    "17497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17499": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17504": {
      "op": "DUP4"
    },
    "17505": {
      "op": "ADD"
    },
    "17506": {
      "op": "DUP6"
    },
    "17507": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17510": {
      "jump": "i",
      "op": "JUMP"
    },
    "17511": {
      "op": "JUMPDEST"
    },
    "17512": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17514": {
      "op": "DUP2"
    },
    "17515": {
      "op": "MSTORE"
    },
    "17516": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17518": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17520": {
      "op": "DUP3"
    },
    "17521": {
      "op": "ADD"
    },
    "17522": {
      "op": "MSTORE"
    },
    "17523": {
      "op": "PUSH2",
      "value": "0x6141"
    },
    "17526": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17528": {
      "op": "SHL"
    },
    "17529": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17531": {
      "op": "DUP3"
    },
    "17532": {
      "op": "ADD"
    },
    "17533": {
      "op": "MSTORE"
    },
    "17534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17538": {
      "op": "DUP3"
    },
    "17539": {
      "op": "ADD"
    },
    "17540": {
      "op": "MSTORE"
    },
    "17541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17543": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17548": {
      "op": "DUP4"
    },
    "17549": {
      "op": "ADD"
    },
    "17550": {
      "op": "DUP6"
    },
    "17551": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17554": {
      "jump": "i",
      "op": "JUMP"
    },
    "17555": {
      "op": "JUMPDEST"
    },
    "17556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17560": {
      "op": "DUP3"
    },
    "17561": {
      "op": "ADD"
    },
    "17562": {
      "op": "PUSH2",
      "value": "0x44A5"
    },
    "17565": {
      "op": "JUMPI"
    },
    "17566": {
      "op": "PUSH2",
      "value": "0x44A5"
    },
    "17569": {
      "op": "PUSH2",
      "value": "0x3F89"
    },
    "17572": {
      "jump": "i",
      "op": "JUMP"
    },
    "17573": {
      "op": "JUMPDEST"
    },
    "17574": {
      "op": "POP"
    },
    "17575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17577": {
      "op": "ADD"
    },
    "17578": {
      "op": "SWAP1"
    },
    "17579": {
      "jump": "o",
      "op": "JUMP"
    },
    "17580": {
      "op": "JUMPDEST"
    },
    "17581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17583": {
      "op": "DUP2"
    },
    "17584": {
      "op": "MSTORE"
    },
    "17585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17587": {
      "op": "PUSH2",
      "value": "0x44BF"
    },
    "17590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17592": {
      "op": "DUP4"
    },
    "17593": {
      "op": "ADD"
    },
    "17594": {
      "op": "DUP7"
    },
    "17595": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17598": {
      "jump": "i",
      "op": "JUMP"
    },
    "17599": {
      "op": "JUMPDEST"
    },
    "17600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17606": {
      "op": "SHL"
    },
    "17607": {
      "op": "SUB"
    },
    "17608": {
      "op": "DUP6"
    },
    "17609": {
      "op": "AND"
    },
    "17610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17612": {
      "op": "DUP5"
    },
    "17613": {
      "op": "ADD"
    },
    "17614": {
      "op": "MSTORE"
    },
    "17615": {
      "op": "SWAP1"
    },
    "17616": {
      "op": "POP"
    },
    "17617": {
      "op": "PUSH2",
      "value": "0x3C58"
    },
    "17620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17622": {
      "op": "DUP4"
    },
    "17623": {
      "op": "ADD"
    },
    "17624": {
      "op": "DUP5"
    },
    "17625": {
      "op": "PUSH2",
      "value": "0x41A1"
    },
    "17628": {
      "jump": "i",
      "op": "JUMP"
    },
    "17629": {
      "op": "JUMPDEST"
    },
    "17630": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17632": {
      "op": "DUP2"
    },
    "17633": {
      "op": "MSTORE"
    },
    "17634": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17638": {
      "op": "DUP3"
    },
    "17639": {
      "op": "ADD"
    },
    "17640": {
      "op": "MSTORE"
    },
    "17641": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "17644": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "17646": {
      "op": "SHL"
    },
    "17647": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17649": {
      "op": "DUP3"
    },
    "17650": {
      "op": "ADD"
    },
    "17651": {
      "op": "MSTORE"
    },
    "17652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17656": {
      "op": "DUP3"
    },
    "17657": {
      "op": "ADD"
    },
    "17658": {
      "op": "MSTORE"
    },
    "17659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17661": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17666": {
      "op": "DUP4"
    },
    "17667": {
      "op": "ADD"
    },
    "17668": {
      "op": "DUP6"
    },
    "17669": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17672": {
      "jump": "i",
      "op": "JUMP"
    },
    "17673": {
      "op": "JUMPDEST"
    },
    "17674": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17676": {
      "op": "DUP2"
    },
    "17677": {
      "op": "MSTORE"
    },
    "17678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17680": {
      "op": "PUSH2",
      "value": "0x451C"
    },
    "17683": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17685": {
      "op": "DUP4"
    },
    "17686": {
      "op": "ADD"
    },
    "17687": {
      "op": "DUP8"
    },
    "17688": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17691": {
      "jump": "i",
      "op": "JUMP"
    },
    "17692": {
      "op": "JUMPDEST"
    },
    "17693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17699": {
      "op": "SHL"
    },
    "17700": {
      "op": "SUB"
    },
    "17701": {
      "op": "SWAP6"
    },
    "17702": {
      "op": "DUP7"
    },
    "17703": {
      "op": "AND"
    },
    "17704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17706": {
      "op": "DUP5"
    },
    "17707": {
      "op": "ADD"
    },
    "17708": {
      "op": "MSTORE"
    },
    "17709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17711": {
      "op": "DUP4"
    },
    "17712": {
      "op": "ADD"
    },
    "17713": {
      "op": "SWAP5"
    },
    "17714": {
      "op": "SWAP1"
    },
    "17715": {
      "op": "SWAP5"
    },
    "17716": {
      "op": "MSTORE"
    },
    "17717": {
      "op": "POP"
    },
    "17718": {
      "op": "SWAP3"
    },
    "17719": {
      "op": "AND"
    },
    "17720": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17722": {
      "op": "SWAP1"
    },
    "17723": {
      "op": "SWAP3"
    },
    "17724": {
      "op": "ADD"
    },
    "17725": {
      "op": "SWAP2"
    },
    "17726": {
      "op": "SWAP1"
    },
    "17727": {
      "op": "SWAP2"
    },
    "17728": {
      "op": "MSTORE"
    },
    "17729": {
      "op": "SWAP2"
    },
    "17730": {
      "op": "SWAP1"
    },
    "17731": {
      "op": "POP"
    },
    "17732": {
      "jump": "o",
      "op": "JUMP"
    },
    "17733": {
      "op": "JUMPDEST"
    },
    "17734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17736": {
      "op": "DUP2"
    },
    "17737": {
      "op": "MSTORE"
    },
    "17738": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17742": {
      "op": "DUP3"
    },
    "17743": {
      "op": "ADD"
    },
    "17744": {
      "op": "MSTORE"
    },
    "17745": {
      "op": "PUSH2",
      "value": "0x1D15"
    },
    "17748": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17750": {
      "op": "SHL"
    },
    "17751": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17753": {
      "op": "DUP3"
    },
    "17754": {
      "op": "ADD"
    },
    "17755": {
      "op": "MSTORE"
    },
    "17756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17760": {
      "op": "DUP3"
    },
    "17761": {
      "op": "ADD"
    },
    "17762": {
      "op": "MSTORE"
    },
    "17763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17765": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "17768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17770": {
      "op": "DUP4"
    },
    "17771": {
      "op": "ADD"
    },
    "17772": {
      "op": "DUP6"
    },
    "17773": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "17776": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "8bb87f4a88477f086c0dc0d0748349e1d06df4f0",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.4;\n\nimport \"./idea.sol\";\n\n/// @title An extension of the Idea providing an administrable interface.\n/// @author Frederik W. L. Christoffersen\n/// @notice This contract adds administrability via permits and internally closed money supplies.\ncontract Administrable is Idea {\n\n    /// @notice An enum representing a Permit State of one of the many permits.\n    /// @param unauthorized The permit is NOT authorized.\n    /// @param authorized The permit is authorized.\n    /// @param administrator The holder of the permit is not only authorized but also an administrator of it too.\n    enum PermitState {\n        unauthorized,\n        authorized,\n        administrator\n    }\n\n    /// @notice A struct representing the information of a Dividend given to all current Shard holders.\n    /// @param tokenAddress The address of the token, in which the value of the Dividend is issued.\n    /// @param value The original value/amount of the Dividend before claims.\n    struct DividendInfo {\n        address tokenAddress;\n        uint256 value;\n    }\n\n    /// @notice A boolean stating if Non Shard Holders are allowed to administer the administrable or not.\n    bool allowNonShardHolders;\n\n    /// @notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not.\n    mapping(string => bool) validBanks;\n    \n    /// @notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank.\n    mapping(string => uint256) storedTokenAddressesByBank;\n\n    /// @notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address.\n    mapping(string => mapping(address => uint256)) balanceByBank;\n\n     /// @notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds.\n    mapping(string => mapping(address => bool)) adminOfBank;\n\n    /// @notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n    /// @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;\n    mapping(string => mapping(address => PermitState)) permits;\n\n    /// @notice A mapping pointing to a base Permit State, given the name of the permit.\n    mapping(string => PermitState) basePermits;\n    \n    /// @notice A mapping pointing to a boolean stating if a given Dividend is valid or not.\n    mapping(uint256 => bool) validDividends;\n\n    /// @notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => DividendInfo) infoByDividend;\n\n    /// @notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => uint256) residualByDividend;\n\n    /// @notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard.\n    mapping(uint256 => mapping(bytes32  => bool)) hasClaimedDividend;\n\n    /// @notice Event that triggers when an action is taken by somebody.\n    /// @param func The name of the function that was called.\n    /// @param args The arguments passed to the function call.\n    /// @param by The initiator of the action.\n    event ActionTaken(\n        string func,\n        bytes args,\n        address by\n        );\n\n    /// @notice Modifier that makes sure msg.sender has a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyWithPermit(string memory permitName) {\n        require(hasPermit(permitName, msg.sender));\n        _;\n    }\n    \n    /// @notice Modifier that makes sure msg.sender is an admin of a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyPermitAdmin(string memory permitName) {\n        require(isPermitAdmin(permitName, msg.sender));\n        _;\n\n    }\n\n    /// @notice Modifier that makes sure msg.sender is admin of a given bank.\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyBankAdmin(string memory bankName) {\n        require(isBankAdmin(bankName, msg.sender));\n        _;\n    }\n\n    /// @notice Modifier that makes sure a given bank exists\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyExistingBank(string memory bankName) {\n        require(bankExists(bankName), \"DNE\");\n        _;\n    }\n    \n    /// @notice Modifier that makes sure a given dividend exists and is valid\n    /// @param dividend The Dividend to be checked for.\n    modifier onlyExistingDividend(uint256 dividend) {\n        require(dividendExists(dividend));\n        _;\n    }\n\n    /// @notice Constructor function connecting the Idea entity and creating a Bank with an administrator.\n    constructor(uint256 amount) Idea(amount) {\n        _createBank(\"main\",msg.sender);\n        _setPermit(\"sNS\", msg.sender, PermitState.administrator);\n        _setPermit(\"iS\", msg.sender, PermitState.administrator);\n        _setPermit(\"iD\", msg.sender, PermitState.administrator);\n        _setPermit(\"dD\", msg.sender, PermitState.administrator);\n        _setPermit(\"mB\", msg.sender, PermitState.administrator);\n        _setPermit(\"lE\", msg.sender, PermitState.administrator);\n        _setPermit(\"mAT\", msg.sender, PermitState.administrator);\n    }\n\n    /// @notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n    /// @param shard The shard that was valid at the clock of the Dividend creation\n    /// @param dividend The dividend to be claimed.\n    function claimDividend(bytes32 shard, uint256 dividend) external onlyHolder(shard) onlyExistingDividend(dividend) onlyIfActive {\n        require(shardExisted(shard,dividend), \"NAF\");\n        require(hasClaimedDividend[dividend][shard] == false, \"AC\");\n        hasClaimedDividend[dividend][shard] = true;\n        uint256 dividendValue = infoByDividend[dividend].value * infoByShard[shard].amount / totalShardAmountByClock[clock];\n        require(dividendValue != 0, \"DTS\");\n        residualByDividend[dividend] -= dividendValue;\n        _transferToken(infoByDividend[dividend].tokenAddress,dividendValue,msg.sender);\n        emit ActionTaken(\"cD\",abi.encode(dividend,dividendValue),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function registerTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _registerTokenAddress(tokenAddress);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function unregisterTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _unregisterTokenAddress(tokenAddress);\n    }\n\n    /// @notice Issues new shards and puts them for sale.\n    /// @param tokenAddress The token address the shards are put for sale for.\n    /// @param price The price per token.\n    /// @param to The specifically set buyer of the issued shards. Open to anyone, if address(0).\n    function issueShards(uint256 amount, address tokenAddress, uint256 price, address to) external onlyWithPermit(\"iS\") {\n        _issueShards(amount,tokenAddress,price,to);\n    }\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function issueDividend(string memory bankName, address tokenAddress, uint256 value) external onlyWithPermit(\"iD\") onlyBankAdmin(bankName) {\n        _issueDividend(bankName,tokenAddress,value);  \n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function dissolveDividend(uint256 dividend) external onlyWithPermit(\"dD\") {\n        _dissolveDividend(dividend);\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function createBank(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyIfActive {\n       _createBank(bankName,bankAdmin);\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function addBankAdmin(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyBankAdmin(bankName) {\n        require(isShardHolder(bankAdmin) || allowNonShardHolders, \"NSHNA\");\n        _addBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function removeBankAdmin(string memory bankName, address bankAdmin) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _removeBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function deleteBank(string memory bankName) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _deleteBank(bankName);\n    }\n\n    /// @notice Transfers a token bankAdmin a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) external onlyBankAdmin(bankName) {\n        _transferTokenFromBank(bankName,tokenAddress,value,to);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) external onlyBankAdmin(fromBankName) {\n        _moveToken(fromBankName,toBankName,tokenAddress,value);\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param account The address, whose permit state is to be set.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function setPermit(string memory permitName, address account, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(isShardHolder(account) || allowNonShardHolders, \"NSHNA\");\n        require(permits[permitName][account] != newState, \"AHP\");\n        _setPermit(permitName,account,newState);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function setBasePermit(string memory permitName, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(basePermits[permitName] != newState, \"AS\");\n        _setBasePermit(permitName,newState);\n    }\n\n    /// @notice Sets the state of the Non Shard Holders.\n    /// @param newState The Boolean state to be applied.\n    function setNonShardHolderState(bool newState) external onlyWithPermit(\"sNS\") {\n        require(allowNonShardHolders != newState, \"AS\");\n        _setNonShardHolderState(newState);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function liquidize() external onlyWithPermit(\"lE\") {\n        _liquidize();\n    }\n\n    /// @notice Returns the balance of a bank.\n    /// @param bankName The name of the Bank.\n    /// @param tokenAddress The address of the token balance to check for.\n    function getBankBalance(string memory bankName, address tokenAddress) public view returns(uint256) {\n        return balanceByBank[bankName][tokenAddress];\n    }\n    \n    /// @notice Returns the token of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendToken(uint256 dividend) public view returns(address) {\n        return infoByDividend[dividend].tokenAddress;\n    }\n    \n    /// @notice Returns the total value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendValue(uint256 dividend) public view returns(uint256) {\n        return infoByDividend[dividend].value;\n    }\n\n    /// @notice Returns the residual value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendResidual(uint256 dividend) public view returns(uint256) {\n        return residualByDividend[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given Bank exists.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankExists(string memory bankName) public view returns(bool) {\n        return validBanks[bankName] == true;\n    }\n\n    /// @notice Returns a boolean stating if a given Bank is empty.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankIsEmpty(string memory bankName) public view returns(bool) {\n        return storedTokenAddressesByBank[bankName] == 0 && balanceByBank[bankName][address(0)] == 0;\n    }\n    \n    /// @notice Returns a boolean stating if a given Dividend exists.\n    /// @param dividend The Dividend to be checked for.\n    function dividendExists(uint256 dividend) public view returns(bool) {\n      return validDividends[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given bank.\n    /// @param account The address to be checked for.\n    /// @param bankName The name of the Bank to be checked for.\n    function isBankAdmin(string memory bankName, address account) public view returns(bool) {\n        return adminOfBank[bankName][account] == true || isPermitAdmin(\"mB\",account);\n    }\n\n    /// @notice Returns a boolean stating if a given address has a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function hasPermit(string memory permitName, address account) public view returns(bool) {\n        if (!(isShardHolder(account) || allowNonShardHolders)) {return false;}\n        return permits[permitName][account] >= PermitState.authorized || basePermits[permitName] >= PermitState.authorized;\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function isPermitAdmin(string memory permitName, address account) public view returns(bool) {\n        if (!(isShardHolder(account) || allowNonShardHolders)) {return false;}\n        return permits[permitName][account] == PermitState.administrator || basePermits[permitName] == PermitState.administrator;\n    }\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function _issueDividend(string memory bankName, address tokenAddress, uint256 value) internal onlyIfActive {\n        uint256 transferClock = clock;\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        infoByDividend[transferClock] = DividendInfo({\n            tokenAddress:tokenAddress,\n            value:value\n        });\n        residualByDividend[transferClock] = value;\n        validDividends[transferClock] = true;\n        emit ActionTaken(\"iD\",abi.encode(bankName,tokenAddress,value),msg.sender);\n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function _dissolveDividend(uint256 dividend) internal onlyExistingDividend(dividend) onlyIfActive {\n        validDividends[dividend] = false; // -1 to distinguish between empty values;\n        balanceByBank[\"main\"][infoByDividend[dividend].tokenAddress] += residualByDividend[dividend];\n        emit ActionTaken(\"dD\",abi.encode(dividend),msg.sender);\n\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function _createBank(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(!bankExists(bankName), \"AE\");\n        adminOfBank[bankName][bankAdmin] = true;\n        validBanks[bankName] = true;\n        emit ActionTaken(\"cB\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function _addBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(hasPermit(\"mB\",bankAdmin),\"NP\");\n        adminOfBank[bankName][bankAdmin] = true;\n        emit ActionTaken(\"aA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function _removeBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(isBankAdmin(bankName,bankAdmin));\n        adminOfBank[bankName][bankAdmin] = false;\n        emit ActionTaken(\"rA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function _deleteBank(string memory bankName) internal onlyIfActive {\n        require(bankExists(bankName), \"UB!\");\n        require(keccak256(bytes(bankName)) != keccak256(bytes(\"main\")), \"MB\");\n        require(bankIsEmpty(bankName), \"BE\");\n        validBanks[bankName] = false;\n        emit ActionTaken(\"dB\",abi.encode(bankName),msg.sender);\n\n    }\n\n    /// @notice Transfers a token from a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function _transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) internal onlyIfActive {\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        _transferToken(tokenAddress,value,to);\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        emit ActionTaken(\"tT\",abi.encode(bankName,tokenAddress,value,to),msg.sender);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function _moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) internal onlyExistingBank(toBankName) onlyIfActive {\n        require(value <= balanceByBank[fromBankName][tokenAddress], \"IF\");\n        balanceByBank[fromBankName][tokenAddress] -= value;\n        if (tokenAddress != address(0)) {\n            if (balanceByBank[fromBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[fromBankName] -= 1;\n\n            }\n            if (balanceByBank[toBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[toBankName] += 1;\n            }\n        }\n        balanceByBank[toBankName][tokenAddress] += value;\n        emit ActionTaken(\"mT\",abi.encode(fromBankName,toBankName,tokenAddress,value),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param account The address, whose permit state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function _setPermit(string memory permitName, address account, PermitState newState) internal onlyIfActive {\n        permits[permitName][account] = newState;\n        emit ActionTaken(\"sP\",abi.encode(permitName,account,newState),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function _setBasePermit(string memory permitName, PermitState newState) internal onlyIfActive {\n        basePermits[permitName] = newState;\n        emit ActionTaken(\"sB\",abi.encode(permitName,newState),msg.sender);\n    }\n\n    /// @notice Sets the state of the Non Shard Holders.\n    /// @param newState The Boolean state to be applied.\n    function _setNonShardHolderState(bool newState) internal onlyIfActive {\n        allowNonShardHolders = newState;\n        emit ActionTaken(\"sNS\",abi.encode(newState),msg.sender);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function _unregisterTokenAddress(address tokenAddress) override internal {\n        super._unregisterTokenAddress(tokenAddress);\n        emit ActionTaken(\"uT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function _registerTokenAddress(address tokenAddress) override internal {\n        super._registerTokenAddress(tokenAddress);\n        emit ActionTaken(\"rT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Keeps track of a token receipt by adding it to the registry\n    /// @param tokenAddress The address of the received token.\n    /// @param value The value/amount of the received token.\n    /// @param from The sender of the received token.\n    function _processTokenReceipt(address tokenAddress, uint256 value, address from) override internal {\n        super._processTokenReceipt(tokenAddress, value, from);\n        // Then: Bank logic\n        if (balanceByBank[\"main\"][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[\"main\"] += 1;\n        }\n        balanceByBank[\"main\"][tokenAddress] += value;\n        emit TokenReceived(tokenAddress,value,from);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function _liquidize() override internal {\n        super._liquidize();\n        emit ActionTaken(\"lE\",\"\",msg.sender);\n    }\n\n}",
  "sourceMap": "307:24200:0:-:0;;;2697:1:2;2681:17;;4936:545:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4969:6;;6892:33:2;4969:6:0;6911:10:2;6923:1;6892:10;:33::i;:::-;6935:30;6959:5;;6935:30;;:23;:30;;;;;;;;;:39;;;;6993:4;6984:13;;-1:-1:-1;;6984:13:2;;;;;4987:30:0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4987:30:0;;::::1;::::0;;;;::::1;::::0;-1:-1:-1;5006:10:0::1;4987:11;:30::i;:::-;5027:56;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5027:56:0::1;::::0;::::1;::::0;::::1;::::0;5045:10:::1;5057:25;5027:10;:56::i;:::-;5093:55;;;;;;;;;;;;;;-1:-1:-1::0;;;5093:55:0::1;;::::0;5110:10:::1;5122:25;5093:10;;;:55;;:::i;:::-;5158;;;;;;;;;;;;;;-1:-1:-1::0;;;5158:55:0::1;;::::0;5175:10:::1;5187:25;5158:10;;;:55;;:::i;:::-;5223;;;;;;;;;;;;;;-1:-1:-1::0;;;5223:55:0::1;;::::0;5240:10:::1;5252:25;5223:10;;;:55;;:::i;:::-;5288;;;;;;;;;;;;;;-1:-1:-1::0;;;5288:55:0::1;;::::0;5305:10:::1;5317:25;5288:10;;;:55;;:::i;:::-;5353;;;;;;;;;;;;;;-1:-1:-1::0;;;5353:55:0::1;;::::0;5370:10:::1;5382:25;5353:10;;;:55;;:::i;:::-;5418:56;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5418:56:0::1;::::0;::::1;::::0;::::1;::::0;5436:10:::1;5448:25;5418:10;:56::i;:::-;4936:545:::0;307:24200;;15499:698:2;15609:1;15600:6;:10;15592:25;;;;-1:-1:-1;;;15592:25:2;;405:2:8;15592:25:2;;;387:21:8;444:1;424:18;;;417:29;-1:-1:-1;;;462:18:8;;;455:32;504:18;;15592:25:2;;;;;;;;;15699:37;;-1:-1:-1;;;;;;735:2:8;706:15;;;702:45;15699:37:2;;;690:58:8;764:12;;;757:28;;;15673:13:2;;801:12:8;;15699:37:2;;;;;;-1:-1:-1;;15699:37:2;;;;;;15689:48;;15699:37;15689:48;;;;-1:-1:-1;;;;;15747:19:2;;;;;;;:12;:19;;;;;:27;;;15784;;;:20;:27;;;;;-1:-1:-1;;15784:47:2;;15939:200;;;;;;;;;;;;;;;;;;;;;15918:18;;;:11;:18;;;;;;:221;;;;;;;;;;-1:-1:-1;;;;;;15918:221:2;;;;;;;;;;;;;;;;;;16154:35;;1026:25:8;;;1067:18;;;1060:60;;;;1136:18;;;1129:34;;;15689:48:2;;-1:-1:-1;16154:35:2;;999:18:8;16154:35:2;;;;;;;15582:615;15499:698;;;:::o;17669:300:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;1376:2:8;6295:29:2;;;1358:21:8;1415:1;1395:18;;;1388:29;-1:-1:-1;;;1433:18:8;;;1426:32;1475:18;;6295:29:2;1174:325:8;6295:29:2;17774:20:0::1;17785:8:::0;17774:10:::1;:20::i;:::-;17773:21;17765:36;;;::::0;-1:-1:-1;;;17765:36:0;;1706:2:8;17765:36:0::1;::::0;::::1;1688:21:8::0;1745:1;1725:18;;;1718:29;-1:-1:-1;;;1763:18:8;;;1756:32;1805:18;;17765:36:0::1;1504:325:8::0;17765:36:0::1;17846:4;17811:11;17823:8;17811:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17811:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17811:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17860:10:0::1;::::0;:20:::1;::::0;17871:8;;17860:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17860:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17902:59:0;17919:30:::1;::::0;17930:8;;17939:9;;17919:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17919:30:0;;::::1;::::0;;;;;;;17902:59:::1;::::0;17950:10:::1;::::0;17902:59:::1;:::i;:::-;;;;;;;;17669:300:::0;;:::o;21817:247::-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;1376:2:8;6295:29:2;;;1358:21:8;1415:1;1395:18;;;1388:29;-1:-1:-1;;;1433:18:8;;;1426:32;1475:18;;6295:29:2;1174:325:8;6295:29:2;21965:8:0::1;21934:7;21942:10;21934:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21934:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21934:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;22016:10:0::1;22027:7;22035:8;22005:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22005:39:0;;::::1;::::0;;;;;;;21988:68:::1;::::0;22045:10:::1;::::0;21988:68:::1;:::i;:::-;;;;;;;;21817:247:::0;;;:::o;13767:122::-;13831:4;13854:10;13865:8;13854:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13767:122;-1:-1:-1;;13767:122:0:o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;1834:250::-;1919:1;1929:113;1943:6;1940:1;1937:13;1929:113;;;2019:11;;;2013:18;2000:11;;;1993:39;1965:2;1958:10;1929:113;;;-1:-1:-1;;2076:1:8;2058:16;;2051:27;1834:250::o;2089:289::-;2220:3;2258:6;2252:13;2274:66;2333:6;2328:3;2321:4;2313:6;2309:17;2274:66;:::i;:::-;2356:16;;;;;2089:289;-1:-1:-1;;2089:289:8:o;2383:271::-;2425:3;2463:5;2457:12;2490:6;2485:3;2478:19;2506:76;2575:6;2568:4;2563:3;2559:14;2552:4;2545:5;2541:16;2506:76;:::i;:::-;2636:2;2615:15;-1:-1:-1;;2611:29:8;2602:39;;;;2643:4;2598:50;;2383:271;-1:-1:-1;;2383:271:8:o;2659:317::-;2836:2;2825:9;2818:21;2799:4;2856:45;2897:2;2886:9;2882:18;2874:6;2856:45;:::i;:::-;2848:53;;2966:1;2962;2957:3;2953:11;2949:19;2941:6;2937:32;2932:2;2921:9;2917:18;2910:60;2659:317;;;;;:::o;2981:539::-;3257:2;3246:9;3239:21;3296:1;3291:2;3280:9;3276:18;3269:29;-1:-1:-1;;;3329:3:8;3318:9;3314:19;3307:33;3378:3;3371:4;3360:9;3356:20;3349:33;3220:4;3399:46;3440:3;3429:9;3425:19;3417:6;3399:46;:::i;:::-;3391:54;;3510:1;3506;3501:3;3497:11;3493:19;3485:6;3481:32;3476:2;3465:9;3461:18;3454:60;2981:539;;;;;:::o;3525:127::-;3586:10;3581:3;3577:20;3574:1;3567:31;3617:4;3614:1;3607:15;3641:4;3638:1;3631:15;3657:552;3873:2;3862:9;3855:21;3836:4;3893:45;3934:2;3923:9;3919:18;3911:6;3893:45;:::i;:::-;-1:-1:-1;;;;;3974:32:8;;3969:2;3954:18;;3947:60;3885:53;-1:-1:-1;4037:1:8;4026:13;;4016:144;;4082:10;4077:3;4073:20;4070:1;4063:31;4117:4;4114:1;4107:15;4145:4;4142:1;4135:15;4016:144;4196:6;4191:2;4180:9;4176:18;4169:34;3657:552;;;;;;:::o;4214:539::-;4490:2;4479:9;4472:21;4529:1;4524:2;4513:9;4509:18;4502:29;-1:-1:-1;;;4562:3:8;4551:9;4547:19;4540:33;4611:3;4604:4;4593:9;4589:20;4582:33;4453:4;4632:46;4673:3;4662:9;4658:19;4650:6;4632:46;:::i;4214:539::-;307:24200:0;;;;;;",
  "sourcePath": "contracts/administrable.sol",
  "type": "contract"
}