{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "ActionTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationClock",
          "type": "uint256"
        }
      ],
      "name": "ExpiredShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "LiquidClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "name": "NewShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "PutForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "SaleSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "acceptsToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "addBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankIsEmpty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "claimDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimLiquid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "createBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "deleteBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dissolveDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dividendExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBankBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getLiquidResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardExpirationClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardSalePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasPermit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "infoByShard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBankAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPermitAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isShardHolder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "isValidShard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "issueDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromBankName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "toBankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "moveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "putForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "receiveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "removeBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setBasePermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setNonShardHolderState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shardByOwner",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "atClock",
          "type": "uint256"
        }
      ],
      "name": "shardExisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "senderShard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "split",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferTokenFromBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "unregisterTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/administrable.sol",
    "1": "contracts/idea.sol",
    "2": "contracts/shardable.sol"
  },
  "ast": {
    "absolutePath": "contracts/administrable.sol",
    "exportedSymbols": {
      "Administrable": [
        1512
      ],
      "Context": [
        4789
      ],
      "ERC20": [
        4664
      ],
      "IERC20": [
        4742
      ],
      "IERC20Metadata": [
        4767
      ],
      "IIdea": [
        1523
      ],
      "Idea": [
        1985
      ],
      "Shardable": [
        3067
      ],
      "addFractions": [
        2151
      ],
      "divideUnequallyIntoTwoWithRemainder": [
        2040
      ],
      "getCommonDenominator": [
        2068
      ],
      "simplifyFraction": [
        2114
      ],
      "subtractFractions": [
        2188
      ]
    },
    "id": 1513,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:0"
      },
      {
        "absolutePath": "contracts/idea.sol",
        "file": "./idea.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1513,
        "sourceUnit": 1986,
        "src": "71:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Idea",
              "nameLocations": [
                "333:4:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1985,
              "src": "333:4:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "333:4:0"
          }
        ],
        "canonicalName": "Administrable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "93:214:0",
          "text": "@title An extension of the Idea providing an administrable interface.\n @author Frederik W. L. Christoffersen\n @notice This contract adds administrability via permits and internally closed money supplies."
        },
        "fullyImplemented": true,
        "id": 1512,
        "linearizedBaseContracts": [
          1512,
          1985,
          3067
        ],
        "name": "Administrable",
        "nameLocation": "316:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Administrable.PermitState",
            "id": 9,
            "members": [
              {
                "id": 6,
                "name": "unauthorized",
                "nameLocation": "676:12:0",
                "nodeType": "EnumValue",
                "src": "676:12:0"
              },
              {
                "id": 7,
                "name": "authorized",
                "nameLocation": "698:10:0",
                "nodeType": "EnumValue",
                "src": "698:10:0"
              },
              {
                "id": 8,
                "name": "administrator",
                "nameLocation": "718:13:0",
                "nodeType": "EnumValue",
                "src": "718:13:0"
              }
            ],
            "name": "PermitState",
            "nameLocation": "654:11:0",
            "nodeType": "EnumDefinition",
            "src": "649:88:0"
          },
          {
            "canonicalName": "Administrable.DividendInfo",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "1063:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1055:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1055:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1093:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1085:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DividendInfo",
            "nameLocation": "1032:12:0",
            "nodeType": "StructDefinition",
            "scope": 1512,
            "src": "1025:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "1111:102:0",
              "text": "@notice A boolean stating if Non Shard Holders are allowed to administer the administrable or not."
            },
            "id": 17,
            "mutability": "mutable",
            "name": "allowNonShardHolders",
            "nameLocation": "1223:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1218:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 16,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1218:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "1250:91:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not."
            },
            "id": 22,
            "mutability": "mutable",
            "name": "validBanks",
            "nameLocation": "1370:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1346:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 21,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 19,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1354:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1346:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 20,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1364:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "1391:114:0",
              "text": "@notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank."
            },
            "id": 27,
            "mutability": "mutable",
            "name": "storedTokenAddressesByBank",
            "nameLocation": "1537:26:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1510:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 24,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1518:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1510:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1528:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1570:136:0",
              "text": "@notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address."
            },
            "id": 34,
            "mutability": "mutable",
            "name": "balanceByBank",
            "nameLocation": "1758:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1711:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(string => mapping(address => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1719:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1711:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(string => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1737:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1729:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1748:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "1779:169:0",
              "text": "@notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds."
            },
            "id": 41,
            "mutability": "mutable",
            "name": "adminOfBank",
            "nameLocation": "1997:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1953:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(string => mapping(address => bool))"
            },
            "typeName": {
              "id": 40,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1961:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1953:43:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(string => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 39,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1979:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1971:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "2015:260:0",
              "text": "@notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
            },
            "id": 49,
            "mutability": "mutable",
            "name": "permits",
            "nameLocation": "2331:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "2280:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
              "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
            },
            "typeName": {
              "id": 48,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 43,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2288:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2280:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2306:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2298:31:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                  "typeString": "mapping(address => enum Administrable.PermitState)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "PermitState",
                    "nameLocations": [
                      "2317:11:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9,
                    "src": "2317:11:0"
                  },
                  "referencedDeclaration": 9,
                  "src": "2317:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "2345:84:0",
              "text": "@notice A mapping pointing to a base Permit State, given the name of the permit."
            },
            "id": 55,
            "mutability": "mutable",
            "name": "basePermits",
            "nameLocation": "2465:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "2434:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
              "typeString": "mapping(string => enum Administrable.PermitState)"
            },
            "typeName": {
              "id": 54,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 51,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2442:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2434:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                "typeString": "mapping(string => enum Administrable.PermitState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "PermitState",
                  "nameLocations": [
                    "2452:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9,
                  "src": "2452:11:0"
                },
                "referencedDeclaration": 9,
                "src": "2452:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PermitState_$9",
                  "typeString": "enum Administrable.PermitState"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "2487:88:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Dividend is valid or not."
            },
            "id": 60,
            "mutability": "mutable",
            "name": "validDividends",
            "nameLocation": "2605:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "2580:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 59,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 57,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2588:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2580:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 58,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2599:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "2626:98:0",
              "text": "@notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend."
            },
            "id": 66,
            "mutability": "mutable",
            "name": "infoByDividend",
            "nameLocation": "2762:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "2729:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
              "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
            },
            "typeName": {
              "id": 65,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2737:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2729:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "DividendInfo",
                  "nameLocations": [
                    "2748:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "2748:12:0"
                },
                "referencedDeclaration": 14,
                "src": "2748:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DividendInfo_$14_storage_ptr",
                  "typeString": "struct Administrable.DividendInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "2783:102:0",
              "text": "@notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend."
            },
            "id": 71,
            "mutability": "mutable",
            "name": "residualByDividend",
            "nameLocation": "2918:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "2890:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 70,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2898:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2890:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 69,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2909:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "2943:154:0",
              "text": "@notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard."
            },
            "id": 78,
            "mutability": "mutable",
            "name": "hasClaimedDividend",
            "nameLocation": "3148:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "3102:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 77,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3110:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3102:45:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 76,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 74,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3129:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "3121:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 75,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3141:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "3173:240:0",
              "text": "@notice Event that triggers when an action is taken by somebody.\n @param func The name of the function that was called.\n @param args The arguments passed to the function call.\n @param by The initiator of the action."
            },
            "eventSelector": "43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055",
            "id": 87,
            "name": "ActionTaken",
            "nameLocation": "3424:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "func",
                  "nameLocation": "3452:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3445:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3445:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3472:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3466:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "3494:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "3486:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:71:0"
            },
            "src": "3418:89:0"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "3703:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 94,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3731:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 95,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3743:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3747:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3743:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 93,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "3721:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3721:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3713:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3713:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "3713:42:0"
                },
                {
                  "id": 100,
                  "nodeType": "PlaceholderStatement",
                  "src": "3765:1:0"
                }
              ]
            },
            "documentation": {
              "id": 88,
              "nodeType": "StructuredDocumentation",
              "src": "3513:135:0",
              "text": "@notice Modifier that makes sure msg.sender has a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 102,
            "name": "onlyWithPermit",
            "nameLocation": "3662:14:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3691:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "3677:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3677:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3676:26:0"
            },
            "src": "3653:120:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "3985:75:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "4017:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 110,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4029:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4033:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4029:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 108,
                          "name": "isPermitAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 825,
                          "src": "4003:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4003:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:46:0"
                },
                {
                  "id": 115,
                  "nodeType": "PlaceholderStatement",
                  "src": "4051:1:0"
                }
              ]
            },
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "3783:146:0",
              "text": "@notice Modifier that makes sure msg.sender is an admin of a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 117,
            "name": "onlyPermitAdmin",
            "nameLocation": "3943:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3973:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "3959:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:26:0"
            },
            "src": "3934:126:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "4255:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 124,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "4285:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 125,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4295:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4299:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4295:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 749,
                          "src": "4273:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4273:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4265:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:42:0"
                },
                {
                  "id": 130,
                  "nodeType": "PlaceholderStatement",
                  "src": "4317:1:0"
                }
              ]
            },
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "4066:137:0",
              "text": "@notice Modifier that makes sure msg.sender is admin of a given bank.\n @param bankName The name of the Bank to be checked for."
            },
            "id": 132,
            "name": "onlyBankAdmin",
            "nameLocation": "4217:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4245:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "4231:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4231:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4230:24:0"
            },
            "src": "4208:117:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "4506:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 139,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4535:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 138,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "4524:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4524:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444e45",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4546:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        },
                        "value": "DNE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:36:0"
                },
                {
                  "id": 144,
                  "nodeType": "PlaceholderStatement",
                  "src": "4562:1:0"
                }
              ]
            },
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "4331:120:0",
              "text": "@notice Modifier that makes sure a given bank exists\n @param bankName The name of the Bank to be checked for."
            },
            "id": 146,
            "name": "onlyExistingBank",
            "nameLocation": "4465:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4496:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "4482:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4481:24:0"
            },
            "src": "4456:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "4762:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 153,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "4795:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 152,
                          "name": "dividendExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "4780:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4780:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4772:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4772:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "4772:33:0"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "4815:1:0"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "4580:129:0",
              "text": "@notice Modifier that makes sure a given dividend exists and is valid\n @param dividend The Dividend to be checked for."
            },
            "id": 159,
            "name": "onlyExistingDividend",
            "nameLocation": "4723:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "4752:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4744:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:18:0"
            },
            "src": "4714:109:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "4950:439:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d61696e",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4972:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        "value": "main"
                      },
                      {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4979:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4983:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4979:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 163,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "4960:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "734e53",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5011:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        "value": "sNS"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5018:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5022:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5018:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 173,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5030:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5042:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5030:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 169,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5000:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5000:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "5000:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5077:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5083:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5087:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5083:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 181,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5095:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5107:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5095:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 177,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5066:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "5066:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5142:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "expression": {
                          "id": 187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5148:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5152:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5148:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 189,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5160:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5172:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5160:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 185,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5131:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d42",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5207:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        "value": "mB"
                      },
                      {
                        "expression": {
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5217:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 197,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5225:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5237:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5225:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 193,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5196:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5196:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "5196:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5272:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "expression": {
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5278:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5282:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 205,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5290:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5302:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5290:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 201,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5261:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5261:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "5261:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d4154",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5337:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        "value": "mAT"
                      },
                      {
                        "expression": {
                          "id": 211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5344:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5348:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5344:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 213,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5356:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5368:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5356:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 209,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "5326:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5326:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "5326:56:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "4829:102:0",
              "text": "@notice Constructor function connecting the Idea entity and creating a Bank with an administrator."
            },
            "id": 218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4947:2:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4950:0:0"
            },
            "scope": 1512,
            "src": "4936:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "5778:575:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 236,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5809:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 237,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "5815:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 235,
                          "name": "shardExisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2763,
                          "src": "5796:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32,uint256) view returns (bool)"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5796:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4146",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5826:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        },
                        "value": "NAF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5788:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5788:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "5788:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 243,
                              "name": "hasClaimedDividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "5850:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 245,
                            "indexExpression": {
                              "id": 244,
                              "name": "dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "5869:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5850:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 247,
                          "indexExpression": {
                            "id": 246,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5879:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5850:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5889:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5850:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4143",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5896:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        },
                        "value": "AC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5842:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5842:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "5842:59:0"
                },
                {
                  "expression": {
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 253,
                          "name": "hasClaimedDividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5911:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "id": 254,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5930:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5911:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 257,
                      "indexExpression": {
                        "id": 255,
                        "name": "shard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "5940:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5911:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5949:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5911:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:42:0"
                },
                {
                  "assignments": [
                    262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 262,
                      "mutability": "mutable",
                      "name": "dividendValue",
                      "nameLocation": "5971:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 312,
                      "src": "5963:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 261,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5963:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 263,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "5987:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 265,
                          "indexExpression": {
                            "id": 264,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6002:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5987:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6012:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "5987:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 267,
                            "name": "infoByShard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2222,
                            "src": "6020:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ShardInfo_$2198_storage_$",
                              "typeString": "mapping(bytes32 => struct Shardable.ShardInfo storage ref)"
                            }
                          },
                          "id": 269,
                          "indexExpression": {
                            "id": 268,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "6032:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6020:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ShardInfo_$2198_storage",
                            "typeString": "struct Shardable.ShardInfo storage ref"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6039:9:0",
                        "memberName": "numerator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2191,
                        "src": "6020:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5987:61:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 272,
                          "name": "infoByShard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2222,
                          "src": "6051:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ShardInfo_$2198_storage_$",
                            "typeString": "mapping(bytes32 => struct Shardable.ShardInfo storage ref)"
                          }
                        },
                        "id": 274,
                        "indexExpression": {
                          "id": 273,
                          "name": "shard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "6063:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6051:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ShardInfo_$2198_storage",
                          "typeString": "struct Shardable.ShardInfo storage ref"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6070:11:0",
                      "memberName": "denominator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2193,
                      "src": "6051:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5987:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5963:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 279,
                          "name": "dividendValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "6099:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6116:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6099:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "445453",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6119:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        },
                        "value": "DTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6091:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6091:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "6091:34:0"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 285,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6135:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "6154:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6135:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "dividendValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "6167:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6135:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "6135:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6205:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6220:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6205:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6230:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "6205:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 296,
                        "name": "dividendValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "6243:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6257:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6261:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6257:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 291,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "6190:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6190:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "6190:78:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6344",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6295:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        "value": "cD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6311:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 306,
                            "name": "dividendValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "6320:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6300:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6304:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6300:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6300:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6335:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6339:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6335:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 301,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "6283:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6283:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "EmitStatement",
                  "src": "6278:68:0"
                }
              ]
            },
            "documentation": {
              "id": 219,
              "nodeType": "StructuredDocumentation",
              "src": "5395:251:0",
              "text": "@notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n @param shard The shard that was valid at the clock of the Dividend creation\n @param dividend The dividend to be claimed."
            },
            "functionSelector": "354cd135",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 226,
                    "name": "shard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 221,
                    "src": "5727:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "onlyHolder",
                  "nameLocations": [
                    "5716:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2352,
                  "src": "5716:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5716:17:0"
              },
              {
                "arguments": [
                  {
                    "id": 229,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 223,
                    "src": "5755:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "5734:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "5734:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5734:30:0"
              },
              {
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 231,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "5765:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "5765:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5765:12:0"
              }
            ],
            "name": "claimDividend",
            "nameLocation": "5660:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "shard",
                  "nameLocation": "5682:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "5674:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5674:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "5697:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "5689:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5689:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5673:33:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5778:0:0"
            },
            "scope": 1512,
            "src": "5651:702:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "6643:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "6675:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 324,
                      "name": "_registerTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1437
                      ],
                      "referencedDeclaration": 1437,
                      "src": "6653:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6653:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "6653:35:0"
                }
              ]
            },
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "6359:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "functionSelector": "8786df6a",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6623:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 318,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "6608:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "6608:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6608:21:0"
              },
              {
                "id": 322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 321,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "6630:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "6630:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6630:12:0"
              }
            ],
            "name": "registerTokenAddress",
            "nameLocation": "6556:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6585:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "6577:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6576:22:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6643:0:0"
            },
            "scope": 1512,
            "src": "6547:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "6991:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 341,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "7025:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 340,
                      "name": "_unregisterTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1413
                      ],
                      "referencedDeclaration": 1413,
                      "src": "7001:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7001:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "7001:37:0"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "6701:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "functionSelector": "859d9fd5",
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6971:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "6956:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "6956:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6956:21:0"
              },
              {
                "id": 338,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 337,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "6978:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "6978:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6978:12:0"
              }
            ],
            "name": "unregisterTokenAddress",
            "nameLocation": "6902:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6933:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "6925:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6925:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6924:22:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6991:0:0"
            },
            "scope": 1512,
            "src": "6893:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "7535:62:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 362,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7560:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 363,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "7569:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 364,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "7582:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "_issueDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "7545:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7545:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "7545:43:0"
                }
              ]
            },
            "documentation": {
              "id": 346,
              "nodeType": "StructuredDocumentation",
              "src": "7052:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "functionSelector": "63879c0b",
            "id": 368,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6944",
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7505:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                      "typeString": "literal_string \"iD\""
                    },
                    "value": "iD"
                  }
                ],
                "id": 356,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 354,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7490:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "7490:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7490:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 358,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 348,
                    "src": "7525:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 357,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "7511:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "7511:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7511:23:0"
              }
            ],
            "name": "issueDividend",
            "nameLocation": "7406:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "7434:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "7420:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7420:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7452:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "7444:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7444:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7474:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "7466:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7419:61:0"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7535:0:0"
            },
            "scope": 1512,
            "src": "7397:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "7816:44:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 378,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "7844:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 377,
                      "name": "_dissolveDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "7826:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7826:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "7826:27:0"
                }
              ]
            },
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "7603:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "functionSelector": "23656642",
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6444",
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7810:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                      "typeString": "literal_string \"dD\""
                    },
                    "value": "dD"
                  }
                ],
                "id": 375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 373,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7795:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "7795:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7795:20:0"
              }
            ],
            "name": "dissolveDividend",
            "nameLocation": "7751:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "7776:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "7768:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7768:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7767:18:0"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7816:0:0"
            },
            "scope": 1512,
            "src": "7742:118:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "8138:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "8159:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 397,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "8168:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 395,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "8147:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8147:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "8147:31:0"
                }
              ]
            },
            "documentation": {
              "id": 383,
              "nodeType": "StructuredDocumentation",
              "src": "7866:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "functionSelector": "2ef37926",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8119:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 389,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8104:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "8104:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8104:20:0"
              },
              {
                "id": 393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 392,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "8125:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "8125:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8125:12:0"
              }
            ],
            "name": "createBank",
            "nameLocation": "8041:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8066:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "8052:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8052:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8084:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "8076:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8076:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8051:43:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8138:0:0"
            },
            "scope": 1512,
            "src": "8032:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "8546:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 417,
                              "name": "bankAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "8578:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 416,
                            "name": "isShardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2739,
                            "src": "8564:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8564:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 419,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "8592:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8564:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e53484e41",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8614:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        },
                        "value": "NSHNA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        }
                      ],
                      "id": 415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8556:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "8556:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 425,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "8646:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 426,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "8655:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 424,
                      "name": "_addBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "8632:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8632:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "8632:33:0"
                }
              ]
            },
            "documentation": {
              "id": 402,
              "nodeType": "StructuredDocumentation",
              "src": "8191:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "functionSelector": "a907b6c5",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8516:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 408,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8501:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "8501:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8501:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 412,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 404,
                    "src": "8536:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 413,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 411,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "8522:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "8522:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8522:23:0"
              }
            ],
            "name": "addBankAdmin",
            "nameLocation": "8436:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8463:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "8449:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8449:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8481:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "8473:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:43:0"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8546:0:0"
            },
            "scope": 1512,
            "src": "8427:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "9048:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 445,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "9075:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 446,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "9084:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 444,
                      "name": "_removeBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "9058:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9058:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "9058:36:0"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "8678:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "functionSelector": "2f2e9a2a",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9018:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 437,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9002:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "9002:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9002:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 441,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 433,
                    "src": "9038:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 442,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 440,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9024:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9024:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9024:23:0"
              }
            ],
            "name": "removeBankAdmin",
            "nameLocation": "8934:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8964:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "8950:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8950:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8982:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "8974:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8974:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8949:43:0"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9048:0:0"
            },
            "scope": 1512,
            "src": "8925:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "9304:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 463,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "9326:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 462,
                      "name": "_deleteBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "9314:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9314:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "9314:21:0"
                }
              ]
            },
            "documentation": {
              "id": 451,
              "nodeType": "StructuredDocumentation",
              "src": "9107:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "functionSelector": "384fe2b5",
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9274:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 457,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 455,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9258:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "9258:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9258:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 459,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 453,
                    "src": "9294:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 458,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9280:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9280:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9280:23:0"
              }
            ],
            "name": "deleteBank",
            "nameLocation": "9214:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9239:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "9225:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9225:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9224:24:0"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9304:0:0"
            },
            "scope": 1512,
            "src": "9205:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "9846:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 483,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "9879:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 484,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "9888:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 485,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "9901:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 486,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "9907:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 482,
                      "name": "_transferTokenFromBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "9856:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,uint256,address)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9856:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "9856:54:0"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "9348:356:0",
              "text": "@notice Transfers a token bankAdmin a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "functionSelector": "de9d6805",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 479,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 470,
                    "src": "9836:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 478,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9822:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "9822:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9822:23:0"
              }
            ],
            "name": "transferTokenFromBank",
            "nameLocation": "9718:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9754:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "9740:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9740:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "9772:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "9764:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9764:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9794:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "9786:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9786:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9809:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "9801:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9801:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9739:73:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9846:0:0"
            },
            "scope": 1512,
            "src": "9709:208:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "10435:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 506,
                        "name": "fromBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "10456:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 507,
                        "name": "toBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "10469:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 508,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "10480:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 509,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "10493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 505,
                      "name": "_moveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "10445:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10445:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "10445:54:0"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "9923:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "functionSelector": "a1916aef",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 502,
                    "name": "fromBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 493,
                    "src": "10421:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 503,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 501,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "10407:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "10407:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10407:27:0"
              }
            ],
            "name": "moveToken",
            "nameLocation": "10297:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "10321:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10307:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10307:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "10349:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10335:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "10369:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10361:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10361:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10391:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10383:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10383:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10306:91:0"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10435:0:0"
            },
            "scope": 1512,
            "src": "10288:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "10911:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 529,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "10943:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 528,
                            "name": "isShardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2739,
                            "src": "10929:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10929:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 531,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "10955:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10929:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e53484e41",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10977:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        },
                        "value": "NSHNA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21bb29a481836351ad948362e20300df71caadd341ad93655cc9ad6824a26cb7",
                          "typeString": "literal_string \"NSHNA\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10921:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10921:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "10921:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 537,
                              "name": "permits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "11003:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                                "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                              }
                            },
                            "id": 539,
                            "indexExpression": {
                              "id": 538,
                              "name": "permitName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "11011:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11003:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(address => enum Administrable.PermitState)"
                            }
                          },
                          "id": 541,
                          "indexExpression": {
                            "id": 540,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "11023:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11003:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 542,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "11035:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11003:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414850",
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11045:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        },
                        "value": "AHP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "10995:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 548,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "11072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 549,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "11083:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 550,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "11091:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 547,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "11061:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11061:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "11061:39:0"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "10512:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param account The address, whose permit state is to be set.\n @param permitName The name of the permit, whose state is to be set.\n @param newState The new Permit State to be applied."
            },
            "functionSelector": "c5438a55",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 524,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 516,
                    "src": "10899:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 523,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "10883:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "10883:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10883:27:0"
              }
            ],
            "name": "setPermit",
            "nameLocation": "10799:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "10823:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "10809:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10809:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10843:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "10835:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10835:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "10864:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "10852:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 520,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 519,
                      "name": "PermitState",
                      "nameLocations": [
                        "10852:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "10852:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "10852:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10808:65:0"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10911:0:0"
            },
            "scope": 1512,
            "src": "10790:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "11427:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 567,
                            "name": "basePermits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "11445:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(string memory => enum Administrable.PermitState)"
                            }
                          },
                          "id": 569,
                          "indexExpression": {
                            "id": 568,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "11457:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11445:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 570,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "11472:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11445:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4153",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11482:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        },
                        "value": "AS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11437:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11437:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "11437:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 576,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "11512:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 577,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "11523:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 575,
                      "name": "_setBasePermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "11497:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,enum Administrable.PermitState)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11497:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "11497:35:0"
                }
              ]
            },
            "documentation": {
              "id": 555,
              "nodeType": "StructuredDocumentation",
              "src": "11114:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "functionSelector": "036f3aec",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 563,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 557,
                    "src": "11415:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 562,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "11399:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "11399:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11399:27:0"
              }
            ],
            "name": "setBasePermit",
            "nameLocation": "11328:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "11356:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "11342:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11342:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11380:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "11368:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 558,
                      "name": "PermitState",
                      "nameLocations": [
                        "11368:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "11368:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "11368:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11341:48:0"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11427:0:0"
            },
            "scope": 1512,
            "src": "11319:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 601,
              "nodeType": "Block",
              "src": "11737:107:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 591,
                          "name": "allowNonShardHolders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "11755:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 592,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "11779:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11755:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4153",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11789:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        },
                        "value": "AS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11747:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11747:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "11747:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 598,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "11828:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 597,
                      "name": "_setNonShardHolderState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "11804:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11804:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "11804:33:0"
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "11545:109:0",
              "text": "@notice Sets the state of the Non Shard Holders.\n @param newState The Boolean state to be applied."
            },
            "functionSelector": "81005219",
            "id": 602,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "734e53",
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11730:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                      "typeString": "literal_string \"sNS\""
                    },
                    "value": "sNS"
                  }
                ],
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 586,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "11715:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "11715:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11715:21:0"
              }
            ],
            "name": "setNonShardHolderState",
            "nameLocation": "11668:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11696:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "11691:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11691:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11690:15:0"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11737:0:0"
            },
            "scope": 1512,
            "src": "11659:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "11977:29:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 609,
                      "name": "_liquidize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1511
                      ],
                      "referencedDeclaration": 1511,
                      "src": "11987:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11987:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "11987:12:0"
                }
              ]
            },
            "documentation": {
              "id": 603,
              "nodeType": "StructuredDocumentation",
              "src": "11850:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "functionSelector": "05c558f5",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6c45",
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11971:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                      "typeString": "literal_string \"lE\""
                    },
                    "value": "lE"
                  }
                ],
                "id": 607,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 605,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "11956:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "11956:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11956:20:0"
              }
            ],
            "name": "liquidize",
            "nameLocation": "11935:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11944:2:0"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11977:0:0"
            },
            "scope": 1512,
            "src": "11926:80:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 629,
              "nodeType": "Block",
              "src": "12279:61:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 623,
                        "name": "balanceByBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "12296:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(string memory => mapping(address => uint256))"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "id": 624,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "12310:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12296:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 627,
                    "indexExpression": {
                      "id": 626,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "12320:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12296:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 628,
                  "nodeType": "Return",
                  "src": "12289:44:0"
                }
              ]
            },
            "documentation": {
              "id": 614,
              "nodeType": "StructuredDocumentation",
              "src": "12012:163:0",
              "text": "@notice Returns the balance of a bank.\n @param bankName The name of the Bank.\n @param tokenAddress The address of the token balance to check for."
            },
            "functionSelector": "2dec7cd2",
            "id": 630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBankBalance",
            "nameLocation": "12189:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "12218:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "12204:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "12236:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "12228:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12228:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12203:46:0"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "12270:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12270:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12269:9:0"
            },
            "scope": 1512,
            "src": "12180:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "12528:61:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 638,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "12545:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 640,
                      "indexExpression": {
                        "id": 639,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "12560:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12545:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12570:12:0",
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "12545:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 637,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "12538:44:0"
                }
              ]
            },
            "documentation": {
              "id": 631,
              "nodeType": "StructuredDocumentation",
              "src": "12350:100:0",
              "text": "@notice Returns the token of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "62748dcc",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendToken",
            "nameLocation": "12464:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12489:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "12481:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12480:18:0"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "12519:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12518:9:0"
            },
            "scope": 1512,
            "src": "12455:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "12783:54:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 652,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "12800:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "id": 653,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "12815:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12800:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12825:5:0",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13,
                    "src": "12800:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 651,
                  "id": 656,
                  "nodeType": "Return",
                  "src": "12793:37:0"
                }
              ]
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "12599:106:0",
              "text": "@notice Returns the total value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "4c46360b",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendValue",
            "nameLocation": "12719:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12744:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "12736:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12736:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12735:18:0"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "12774:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12774:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12773:9:0"
            },
            "scope": 1512,
            "src": "12710:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "13033:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 666,
                      "name": "residualByDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "13050:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 668,
                    "indexExpression": {
                      "id": 667,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "13069:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13050:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 665,
                  "id": 669,
                  "nodeType": "Return",
                  "src": "13043:35:0"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "12843:109:0",
              "text": "@notice Returns the residual value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "e6778fce",
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendResidual",
            "nameLocation": "12966:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12994:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "12986:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12986:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12985:18:0"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "13024:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13024:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13023:9:0"
            },
            "scope": 1512,
            "src": "12957:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "13291:52:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 679,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "13308:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 681,
                      "indexExpression": {
                        "id": 680,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "13319:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13308:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13332:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13308:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 678,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "13301:35:0"
                }
              ]
            },
            "documentation": {
              "id": 672,
              "nodeType": "StructuredDocumentation",
              "src": "13091:125:0",
              "text": "@notice Returns a boolean stating if a given Bank exists.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "b4af7d59",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankExists",
            "nameLocation": "13230:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "13255:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "13241:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13241:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13240:24:0"
            },
            "returnParameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "13285:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13285:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13284:6:0"
            },
            "scope": 1512,
            "src": "13221:122:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "13552:109:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 694,
                          "name": "storedTokenAddressesByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "13569:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 696,
                        "indexExpression": {
                          "id": 695,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "13596:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13569:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13609:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13569:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 699,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "13614:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 701,
                          "indexExpression": {
                            "id": 700,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 689,
                            "src": "13628:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13614:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 706,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13646:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13638:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 702,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13638:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13638:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13614:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13653:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13614:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13569:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 693,
                  "id": 710,
                  "nodeType": "Return",
                  "src": "13562:92:0"
                }
              ]
            },
            "documentation": {
              "id": 687,
              "nodeType": "StructuredDocumentation",
              "src": "13349:127:0",
              "text": "@notice Returns a boolean stating if a given Bank is empty.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "169936b4",
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankIsEmpty",
            "nameLocation": "13490:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "13516:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "13502:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13501:24:0"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "13546:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13546:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13545:6:0"
            },
            "scope": 1512,
            "src": "13481:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 724,
              "nodeType": "Block",
              "src": "13865:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 720,
                      "name": "validDividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "13880:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 722,
                    "indexExpression": {
                      "id": 721,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "13895:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13880:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 719,
                  "id": 723,
                  "nodeType": "Return",
                  "src": "13873:31:0"
                }
              ]
            },
            "documentation": {
              "id": 713,
              "nodeType": "StructuredDocumentation",
              "src": "13671:121:0",
              "text": "@notice Returns a boolean stating if a given Dividend exists.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "9211b7b3",
            "id": 725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dividendExists",
            "nameLocation": "13806:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "13829:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "13821:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13821:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13820:18:0"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "13859:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13859:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13858:6:0"
            },
            "scope": 1512,
            "src": "13797:114:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "14213:93:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 735,
                            "name": "adminOfBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "14230:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(string memory => mapping(address => bool))"
                            }
                          },
                          "id": 737,
                          "indexExpression": {
                            "id": 736,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "14242:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14230:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 739,
                        "indexExpression": {
                          "id": 738,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "14252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14230:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14264:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "14230:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "6d42",
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14286:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          "value": "mB"
                        },
                        {
                          "id": 744,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "14291:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 742,
                        "name": "isPermitAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "14272:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (string memory,address) view returns (bool)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14272:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14230:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 734,
                  "id": 747,
                  "nodeType": "Return",
                  "src": "14223:76:0"
                }
              ]
            },
            "documentation": {
              "id": 726,
              "nodeType": "StructuredDocumentation",
              "src": "13917:203:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given bank.\n @param account The address to be checked for.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "a80aed76",
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBankAdmin",
            "nameLocation": "14134:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "14160:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "14146:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14146:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14178:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "14170:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14170:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14145:41:0"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "14207:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14207:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14206:6:0"
            },
            "scope": 1512,
            "src": "14125:181:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "14610:210:0",
              "statements": [
                {
                  "condition": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14624:49:0",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 760,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 754,
                                "src": "14640:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 759,
                              "name": "isShardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2739,
                              "src": "14626:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14626:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 762,
                            "name": "allowNonShardHolders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "14652:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14626:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 764,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14625:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 769,
                  "nodeType": "IfStatement",
                  "src": "14620:70:0",
                  "trueBody": {
                    "id": 768,
                    "nodeType": "Block",
                    "src": "14675:15:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14683:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 758,
                        "id": 767,
                        "nodeType": "Return",
                        "src": "14676:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 770,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "14706:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 772,
                          "indexExpression": {
                            "id": 771,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "14714:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14706:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 774,
                        "indexExpression": {
                          "id": 773,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "14726:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14706:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 775,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "14738:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14750:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "14738:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "14706:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 778,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "14764:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 780,
                        "indexExpression": {
                          "id": 779,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "14776:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14764:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 781,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "14791:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14803:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "14791:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "14764:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14706:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 785,
                  "nodeType": "Return",
                  "src": "14699:114:0"
                }
              ]
            },
            "documentation": {
              "id": 750,
              "nodeType": "StructuredDocumentation",
              "src": "14312:205:0",
              "text": "@notice Returns a boolean stating if a given address has a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "db5dc9b7",
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPermit",
            "nameLocation": "14531:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "14555:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "14541:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14575:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "14567:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14567:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14540:43:0"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "14604:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14604:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14603:6:0"
            },
            "scope": 1512,
            "src": "14522:298:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "15139:216:0",
              "statements": [
                {
                  "condition": {
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15153:49:0",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 798,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 792,
                                "src": "15169:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 797,
                              "name": "isShardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2739,
                              "src": "15155:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15155:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 800,
                            "name": "allowNonShardHolders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "15181:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15155:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 802,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15154:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 807,
                  "nodeType": "IfStatement",
                  "src": "15149:70:0",
                  "trueBody": {
                    "id": 806,
                    "nodeType": "Block",
                    "src": "15204:15:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15212:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 796,
                        "id": 805,
                        "nodeType": "Return",
                        "src": "15205:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 808,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "15235:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 810,
                          "indexExpression": {
                            "id": 809,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "15243:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15235:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 812,
                        "indexExpression": {
                          "id": 811,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 792,
                          "src": "15255:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15235:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 813,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15267:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15279:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15267:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15235:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 816,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "15296:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 818,
                        "indexExpression": {
                          "id": 817,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "15308:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15296:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 819,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15323:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15335:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15323:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15296:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15235:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 796,
                  "id": 823,
                  "nodeType": "Return",
                  "src": "15228:120:0"
                }
              ]
            },
            "documentation": {
              "id": 788,
              "nodeType": "StructuredDocumentation",
              "src": "14826:216:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "258e4d9f",
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermitAdmin",
            "nameLocation": "15056:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "15084:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "15070:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15104:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "15096:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15096:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15069:43:0"
            },
            "returnParameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "15133:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15132:6:0"
            },
            "scope": 1512,
            "src": "15047:308:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "15813:636:0",
              "statements": [
                {
                  "assignments": [
                    838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 838,
                      "mutability": "mutable",
                      "name": "transferClock",
                      "nameLocation": "15831:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "15823:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 837,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15823:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 840,
                  "initialValue": {
                    "id": 839,
                    "name": "clock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2213,
                    "src": "15847:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15823:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 842,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "15870:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 843,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "15879:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 845,
                            "indexExpression": {
                              "id": 844,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "15893:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15879:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 847,
                          "indexExpression": {
                            "id": 846,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "15903:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15879:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15870:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15918:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15862:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15862:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "15862:61:0"
                },
                {
                  "expression": {
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 852,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "15933:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 855,
                        "indexExpression": {
                          "id": 853,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "15947:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15933:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 856,
                      "indexExpression": {
                        "id": 854,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "15957:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15933:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 857,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "15974:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15933:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "15933:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 860,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "15993:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 862,
                          "indexExpression": {
                            "id": 861,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "16007:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15993:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "id": 863,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 830,
                          "src": "16017:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15993:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16034:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15993:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 867,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "16039:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16063:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16055:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16055:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16055:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16039:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15993:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 881,
                  "nodeType": "IfStatement",
                  "src": "15989:144:0",
                  "trueBody": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "16067:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 874,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "16081:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 876,
                            "indexExpression": {
                              "id": 875,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "16108:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16081:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16121:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16081:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 879,
                        "nodeType": "ExpressionStatement",
                        "src": "16081:41:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 882,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "16142:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "id": 883,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "16157:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16142:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 886,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 830,
                          "src": "16214:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 887,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "16246:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 885,
                        "name": "DividendInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "16174:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DividendInfo_$14_storage_ptr_$",
                          "typeString": "type(struct Administrable.DividendInfo storage pointer)"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "16201:12:0",
                        "16240:5:0"
                      ],
                      "names": [
                        "tokenAddress",
                        "value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "16174:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_memory_ptr",
                        "typeString": "struct Administrable.DividendInfo memory"
                      }
                    },
                    "src": "16142:120:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                      "typeString": "struct Administrable.DividendInfo storage ref"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "16142:120:0"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 891,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "16272:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 893,
                      "indexExpression": {
                        "id": 892,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "16291:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16272:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 894,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "16308:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16272:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "16272:41:0"
                },
                {
                  "expression": {
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 897,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "16323:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 899,
                      "indexExpression": {
                        "id": 898,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "16338:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16323:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16355:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16323:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "16323:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16386:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 907,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "16402:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 908,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "16411:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 909,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "16424:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 905,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16391:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16395:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16391:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16391:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 911,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16431:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16435:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16431:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 903,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "16374:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16374:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "EmitStatement",
                  "src": "16369:73:0"
                }
              ]
            },
            "documentation": {
              "id": 826,
              "nodeType": "StructuredDocumentation",
              "src": "15361:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 834,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "15800:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "15800:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "15800:12:0"
              }
            ],
            "name": "_issueDividend",
            "nameLocation": "15715:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "15744:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "15730:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15730:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "15762:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "15754:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15754:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "15784:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "15776:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15729:61:0"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15813:0:0"
            },
            "scope": 1512,
            "src": "15706:743:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 956,
              "nodeType": "Block",
              "src": "16692:259:0",
              "statements": [
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 927,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "16702:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 929,
                      "indexExpression": {
                        "id": 928,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "16717:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16702:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16729:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "16702:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "16702:32:0"
                },
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 933,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "16787:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16801:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16787:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 940,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 935,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "16809:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 937,
                          "indexExpression": {
                            "id": 936,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "16824:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16809:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16834:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "16809:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16787:60:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 941,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "16851:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 943,
                      "indexExpression": {
                        "id": 942,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "16870:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16851:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16787:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "16787:92:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16906:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 950,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "16922:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 948,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16911:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16915:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16911:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16911:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16932:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16936:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16932:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 946,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "16894:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16894:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "EmitStatement",
                  "src": "16889:54:0"
                }
              ]
            },
            "documentation": {
              "id": 917,
              "nodeType": "StructuredDocumentation",
              "src": "16455:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "id": 957,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 922,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 919,
                    "src": "16669:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 921,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "16648:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "16648:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16648:30:0"
              },
              {
                "id": 925,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 924,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "16679:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "16679:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16679:12:0"
              }
            ],
            "name": "_dissolveDividend",
            "nameLocation": "16603:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "16629:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "16621:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16620:18:0"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16692:0:0"
            },
            "scope": 1512,
            "src": "16594:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "17209:214:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17227:21:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 969,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "17239:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 968,
                            "name": "bankExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "17228:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17228:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4145",
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17250:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        },
                        "value": "AE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17219:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17219:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "17219:36:0"
                },
                {
                  "expression": {
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 975,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "17265:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 978,
                        "indexExpression": {
                          "id": 976,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "17277:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17265:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 979,
                      "indexExpression": {
                        "id": 977,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "17287:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17265:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17300:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17265:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "17265:39:0"
                },
                {
                  "expression": {
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 983,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "17314:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 985,
                      "indexExpression": {
                        "id": 984,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "17325:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17314:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17337:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17314:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "17314:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6342",
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17368:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        "value": "cB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "17384:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 994,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 962,
                            "src": "17393:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 991,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17377:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17373:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 996,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17404:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17408:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17404:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17356:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17356:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "EmitStatement",
                  "src": "17351:64:0"
                }
              ]
            },
            "documentation": {
              "id": 958,
              "nodeType": "StructuredDocumentation",
              "src": "16957:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "id": 1001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 964,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "17196:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "17196:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17196:12:0"
              }
            ],
            "name": "_createBank",
            "nameLocation": "17132:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "17158:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "17144:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17144:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "17176:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "17168:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17168:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17143:43:0"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17209:0:0"
            },
            "scope": 1512,
            "src": "17123:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "17753:180:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6d42",
                            "id": 1013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17781:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            "value": "mB"
                          },
                          {
                            "id": 1014,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "17786:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1012,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "17771:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17771:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e50",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17797:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        },
                        "value": "NP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        }
                      ],
                      "id": 1011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17763:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17763:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "17763:39:0"
                },
                {
                  "expression": {
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1019,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "17812:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1022,
                        "indexExpression": {
                          "id": 1020,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "17824:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17812:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1023,
                      "indexExpression": {
                        "id": 1021,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "17834:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17812:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17847:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17812:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "17812:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6141",
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17878:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        "value": "aA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1031,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "17894:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1032,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "17903:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1029,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17883:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17887:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17883:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17883:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1034,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17914:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17918:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17914:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1027,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17866:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17866:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "EmitStatement",
                  "src": "17861:64:0"
                }
              ]
            },
            "documentation": {
              "id": 1002,
              "nodeType": "StructuredDocumentation",
              "src": "17429:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1009,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1008,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "17740:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "17740:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17740:12:0"
              }
            ],
            "name": "_addBankAdmin",
            "nameLocation": "17674:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "17702:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "17688:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17688:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "17720:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "17712:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17712:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17687:43:0"
            },
            "returnParameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17753:0:0"
            },
            "scope": 1512,
            "src": "17665:268:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "18277:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1051,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "18307:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1052,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "18316:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1050,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 749,
                          "src": "18295:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18295:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18287:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18287:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "18287:40:0"
                },
                {
                  "expression": {
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1056,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "18337:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1059,
                        "indexExpression": {
                          "id": 1057,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "18349:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18337:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1060,
                      "indexExpression": {
                        "id": 1058,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "18359:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18337:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18372:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "18337:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "18337:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7241",
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18404:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        "value": "rA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1068,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "18420:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1069,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "18429:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1066,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18409:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18413:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18409:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18409:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18440:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18444:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18440:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1064,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "18392:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18392:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1074,
                  "nodeType": "EmitStatement",
                  "src": "18387:64:0"
                }
              ]
            },
            "documentation": {
              "id": 1040,
              "nodeType": "StructuredDocumentation",
              "src": "17939:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1047,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1046,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18264:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "18264:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18264:12:0"
              }
            ],
            "name": "_removeBankAdmin",
            "nameLocation": "18195:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18226:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "18212:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "18244:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "18236:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18236:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18211:43:0"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18277:0:0"
            },
            "scope": 1512,
            "src": "18186:273:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "18630:281:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1086,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "18659:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1085,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "18648:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18648:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554221",
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18670:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        },
                        "value": "UB!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18640:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "18640:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1095,
                                  "name": "bankName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1079,
                                  "src": "18710:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18704:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1093,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18704:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18704:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1092,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18694:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18694:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d61696e",
                                  "id": 1101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18740:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  },
                                  "value": "main"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  }
                                ],
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18734:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1099,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18734:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18734:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1098,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18724:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18724:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18694:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d42",
                        "id": 1105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18750:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        },
                        "value": "MB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        }
                      ],
                      "id": 1091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18686:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18686:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "18686:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1110,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "18785:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1109,
                          "name": "bankIsEmpty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "18773:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18773:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4245",
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18796:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        },
                        "value": "BE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18765:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "18765:36:0"
                },
                {
                  "expression": {
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1115,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "18811:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1117,
                      "indexExpression": {
                        "id": 1116,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "18822:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18811:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18834:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "18811:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "18811:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6442",
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18866:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        "value": "dB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1125,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "18882:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1123,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18871:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18875:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18871:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18871:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18892:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18896:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18892:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1121,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "18854:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18854:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "EmitStatement",
                  "src": "18849:54:0"
                }
              ]
            },
            "documentation": {
              "id": 1077,
              "nodeType": "StructuredDocumentation",
              "src": "18465:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18617:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "18617:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18617:12:0"
              }
            ],
            "name": "_deleteBank",
            "nameLocation": "18572:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18598:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "18584:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18584:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18583:24:0"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18630:0:0"
            },
            "scope": 1512,
            "src": "18563:348:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "19400:420:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1147,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1139,
                          "src": "19418:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1148,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "19427:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1150,
                            "indexExpression": {
                              "id": 1149,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "19441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19427:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1152,
                          "indexExpression": {
                            "id": 1151,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "19451:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19427:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19418:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19466:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19410:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19410:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "19410:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1158,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1137,
                        "src": "19496:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1159,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "19509:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1160,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "19515:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1157,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "19481:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19481:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "19481:37:0"
                },
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1163,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "19528:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1166,
                        "indexExpression": {
                          "id": 1164,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1135,
                          "src": "19542:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19528:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1167,
                      "indexExpression": {
                        "id": 1165,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1137,
                        "src": "19552:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19528:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1168,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1139,
                      "src": "19569:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19528:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "19528:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1171,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "19588:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1173,
                          "indexExpression": {
                            "id": 1172,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "19602:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19588:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1175,
                        "indexExpression": {
                          "id": 1174,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1137,
                          "src": "19612:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19588:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19629:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19588:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1178,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1137,
                        "src": "19634:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19658:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19650:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19650:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19650:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "19634:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19588:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1192,
                  "nodeType": "IfStatement",
                  "src": "19584:144:0",
                  "trueBody": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "19662:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1185,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "19676:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1187,
                            "indexExpression": {
                              "id": 1186,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "19703:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19676:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19716:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19676:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "19676:41:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7454",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19754:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        "value": "tT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1197,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "19770:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1198,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "19779:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1199,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "19792:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1200,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "19798:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1195,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19759:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19763:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "19759:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19759:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19802:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19806:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19802:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1193,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "19742:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19742:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "EmitStatement",
                  "src": "19737:76:0"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "18917:351:0",
              "text": "@notice Transfers a token from a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "id": 1207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1143,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "19387:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "19387:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19387:12:0"
              }
            ],
            "name": "_transferTokenFromBank",
            "nameLocation": "19282:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "19319:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "19305:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19305:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "19337:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "19329:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19329:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19359:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "19351:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19374:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "19366:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19304:73:0"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19400:0:0"
            },
            "scope": 1512,
            "src": "19273:547:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1302,
              "nodeType": "Block",
              "src": "20353:634:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1225,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "20371:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1226,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "20380:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1228,
                            "indexExpression": {
                              "id": 1227,
                              "name": "fromBankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "20394:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20380:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1230,
                          "indexExpression": {
                            "id": 1229,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "20408:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20380:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20371:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20423:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20363:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20363:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "20363:65:0"
                },
                {
                  "expression": {
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1235,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "20438:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1238,
                        "indexExpression": {
                          "id": 1236,
                          "name": "fromBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "20452:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20438:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1239,
                      "indexExpression": {
                        "id": 1237,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "20466:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20438:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1240,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "20483:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20438:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "20438:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1243,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "20502:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20526:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20518:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20518:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20518:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20502:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1280,
                  "nodeType": "IfStatement",
                  "src": "20498:326:0",
                  "trueBody": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "20530:294:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1249,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "20548:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1251,
                              "indexExpression": {
                                "id": 1250,
                                "name": "fromBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "20562:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20548:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1253,
                            "indexExpression": {
                              "id": 1252,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1214,
                              "src": "20576:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20548:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20593:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20548:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1263,
                        "nodeType": "IfStatement",
                        "src": "20544:131:0",
                        "trueBody": {
                          "id": 1262,
                          "nodeType": "Block",
                          "src": "20596:79:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1256,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "20614:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1258,
                                  "indexExpression": {
                                    "id": 1257,
                                    "name": "fromBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "20641:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20614:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20658:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "20614:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1261,
                              "nodeType": "ExpressionStatement",
                              "src": "20614:45:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1264,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "20692:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1266,
                              "indexExpression": {
                                "id": 1265,
                                "name": "toBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1212,
                                "src": "20706:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20692:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1268,
                            "indexExpression": {
                              "id": 1267,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1214,
                              "src": "20718:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20692:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20735:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20692:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1278,
                        "nodeType": "IfStatement",
                        "src": "20688:126:0",
                        "trueBody": {
                          "id": 1277,
                          "nodeType": "Block",
                          "src": "20738:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1271,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "20756:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1273,
                                  "indexExpression": {
                                    "id": 1272,
                                    "name": "toBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "20783:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20756:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20798:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "20756:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1276,
                              "nodeType": "ExpressionStatement",
                              "src": "20756:43:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1281,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "20833:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1284,
                        "indexExpression": {
                          "id": 1282,
                          "name": "toBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1212,
                          "src": "20847:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20833:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1285,
                      "indexExpression": {
                        "id": 1283,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "20859:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20833:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1286,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "20876:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20833:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "20833:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6d54",
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20908:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        "value": "mT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1293,
                            "name": "fromBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "20924:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1294,
                            "name": "toBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1212,
                            "src": "20937:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1295,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "20948:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1296,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "20961:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1291,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20913:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20917:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "20913:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20913:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20968:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20972:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20968:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1289,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "20896:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20896:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "EmitStatement",
                  "src": "20891:88:0"
                }
              ]
            },
            "documentation": {
              "id": 1208,
              "nodeType": "StructuredDocumentation",
              "src": "19826:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "id": 1303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1219,
                    "name": "toBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1212,
                    "src": "20328:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1218,
                  "name": "onlyExistingBank",
                  "nameLocations": [
                    "20311:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 146,
                  "src": "20311:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20311:28:0"
              },
              {
                "id": 1222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1221,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "20340:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "20340:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20340:12:0"
              }
            ],
            "name": "_moveToken",
            "nameLocation": "20200:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1210,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "20225:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "20211:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "20253:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "20239:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20239:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "20273:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "20265:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20265:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "20295:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "20287:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20287:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20210:91:0"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20353:0:0"
            },
            "scope": 1512,
            "src": "20191:796:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "21378:140:0",
              "statements": [
                {
                  "expression": {
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1316,
                          "name": "permits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "21388:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                            "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                          }
                        },
                        "id": 1319,
                        "indexExpression": {
                          "id": 1317,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1306,
                          "src": "21396:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21388:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(address => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1320,
                      "indexExpression": {
                        "id": 1318,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "21408:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21388:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1321,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "21419:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "21388:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "21388:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7350",
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21454:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        "value": "sP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1328,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "21470:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1329,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "21481:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1330,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "21489:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1326,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21459:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21463:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21459:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21499:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21503:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1324,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "21442:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21442:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "EmitStatement",
                  "src": "21437:73:0"
                }
              ]
            },
            "documentation": {
              "id": 1304,
              "nodeType": "StructuredDocumentation",
              "src": "20993:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param permitName The name of the permit, whose state is to be set.\n @param account The address, whose permit state is to be set.\n @param newState The new Permit State to be applied."
            },
            "id": 1337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1313,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "21365:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "21365:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21365:12:0"
              }
            ],
            "name": "_setPermit",
            "nameLocation": "21280:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "21305:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "21291:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21291:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21325:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "21317:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "21346:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "21334:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1309,
                      "name": "PermitState",
                      "nameLocations": [
                        "21334:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "21334:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "21334:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21290:65:0"
            },
            "returnParameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21378:0:0"
            },
            "scope": 1512,
            "src": "21271:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1365,
              "nodeType": "Block",
              "src": "21823:126:0",
              "statements": [
                {
                  "expression": {
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1348,
                        "name": "basePermits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "21833:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(string memory => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1350,
                      "indexExpression": {
                        "id": 1349,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "21845:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21833:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1351,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "21859:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "21833:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "21833:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7342",
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21894:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        "value": "sB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1358,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "21910:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1359,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "21921:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1356,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21899:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21903:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21899:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21899:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1361,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21931:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21935:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21931:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1354,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "21882:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21882:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "EmitStatement",
                  "src": "21877:65:0"
                }
              ]
            },
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "21524:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "id": 1366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1345,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "21810:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "21810:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21810:12:0"
              }
            ],
            "name": "_setBasePermit",
            "nameLocation": "21738:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "21767:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1366,
                  "src": "21753:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21753:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "21791:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1366,
                  "src": "21779:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1341,
                      "name": "PermitState",
                      "nameLocations": [
                        "21779:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "21779:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "21779:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21752:48:0"
            },
            "returnParameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21823:0:0"
            },
            "scope": 1512,
            "src": "21729:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1388,
              "nodeType": "Block",
              "src": "22139:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1374,
                      "name": "allowNonShardHolders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "22149:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1375,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1369,
                      "src": "22172:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "22149:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "22149:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "734e53",
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22207:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        "value": "sNS"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1382,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1369,
                            "src": "22224:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 1380,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22213:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22217:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22213:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22213:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22234:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22238:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22234:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1378,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22195:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22195:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1387,
                  "nodeType": "EmitStatement",
                  "src": "22190:55:0"
                }
              ]
            },
            "documentation": {
              "id": 1367,
              "nodeType": "StructuredDocumentation",
              "src": "21955:109:0",
              "text": "@notice Sets the state of the Non Shard Holders.\n @param newState The Boolean state to be applied."
            },
            "id": 1389,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1371,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "22126:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2334,
                  "src": "22126:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "22126:12:0"
              }
            ],
            "name": "_setNonShardHolderState",
            "nameLocation": "22078:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "22107:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1389,
                  "src": "22102:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22102:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22101:15:0"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22139:0:0"
            },
            "scope": 1512,
            "src": "22069:183:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1984
            ],
            "body": {
              "id": 1412,
              "nodeType": "Block",
              "src": "22523:128:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1399,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "22563:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1396,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22533:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1512_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22539:23:0",
                      "memberName": "_unregisterTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "22533:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22533:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "22533:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7554",
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22603:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        "value": "uT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1406,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1392,
                            "src": "22619:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1404,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22608:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22612:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22608:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22608:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22633:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22637:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22633:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1402,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22591:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22591:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "EmitStatement",
                  "src": "22586:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1390,
              "nodeType": "StructuredDocumentation",
              "src": "22258:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "id": 1413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unregisterTokenAddress",
            "nameLocation": "22459:23:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1394,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22505:8:0"
            },
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1392,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "22491:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1413,
                  "src": "22483:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22483:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22482:22:0"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22523:0:0"
            },
            "scope": 1512,
            "src": "22450:201:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1955
            ],
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "22916:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1423,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "22954:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1420,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22926:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1512_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22932:21:0",
                      "memberName": "_registerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1955,
                      "src": "22926:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22926:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "22926:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7254",
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22994:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        "value": "rT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1430,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "23010:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1428,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22999:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "23003:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22999:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22999:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23024:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23028:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23024:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1426,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22982:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22982:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "EmitStatement",
                  "src": "22977:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1414,
              "nodeType": "StructuredDocumentation",
              "src": "22657:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTokenAddress",
            "nameLocation": "22854:21:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1418,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22898:8:0"
            },
            "parameters": {
              "id": 1417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "22884:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "22876:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22876:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22875:22:0"
            },
            "returnParameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22916:0:0"
            },
            "scope": 1512,
            "src": "22845:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1913
            ],
            "body": {
              "id": 1492,
              "nodeType": "Block",
              "src": "23401:354:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1451,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "23438:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1452,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "23452:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1453,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "23459:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1448,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23411:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1512_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23417:20:0",
                      "memberName": "_processTokenReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1913,
                      "src": "23411:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23411:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "23411:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1456,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "23506:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1458,
                          "indexExpression": {
                            "hexValue": "6d61696e",
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23520:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                              "typeString": "literal_string \"main\""
                            },
                            "value": "main"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23506:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1460,
                        "indexExpression": {
                          "id": 1459,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1440,
                          "src": "23528:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23506:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23545:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "23506:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1463,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "23550:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23574:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23566:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23566:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23566:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "23550:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "23506:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1477,
                  "nodeType": "IfStatement",
                  "src": "23502:140:0",
                  "trueBody": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "23578:64:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1470,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "23592:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1472,
                            "indexExpression": {
                              "hexValue": "6d61696e",
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23619:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                "typeString": "literal_string \"main\""
                              },
                              "value": "main"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23592:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23630:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "23592:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "23592:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1478,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "23651:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1481,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23665:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23651:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1482,
                      "indexExpression": {
                        "id": 1480,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "23673:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23651:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1483,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1442,
                      "src": "23690:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23651:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "23651:44:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1487,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "23724:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1488,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "23737:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1489,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "23743:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1486,
                      "name": "TokenReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "23710:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23710:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1491,
                  "nodeType": "EmitStatement",
                  "src": "23705:43:0"
                }
              ]
            },
            "documentation": {
              "id": 1438,
              "nodeType": "StructuredDocumentation",
              "src": "23048:249:0",
              "text": "@notice Keeps track of a token receipt by adding it to the registry\n @param tokenAddress The address of the received token.\n @param value The value/amount of the received token.\n @param from The sender of the received token."
            },
            "id": 1493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processTokenReceipt",
            "nameLocation": "23311:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23383:8:0"
            },
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23340:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "23332:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23332:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "23362:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "23354:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23354:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "23377:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "23369:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23369:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23331:51:0"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23401:0:0"
            },
            "scope": 1512,
            "src": "23302:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1884
            ],
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "23877:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1498,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23887:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1512_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23893:10:0",
                      "memberName": "_liquidize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1884,
                      "src": "23887:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23887:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "23887:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 1504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "hexValue": "",
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23937:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "id": 1506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23940:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23944:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23940:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1503,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "23920:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23920:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1509,
                  "nodeType": "EmitStatement",
                  "src": "23915:36:0"
                }
              ]
            },
            "documentation": {
              "id": 1494,
              "nodeType": "StructuredDocumentation",
              "src": "23761:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "id": 1511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidize",
            "nameLocation": "23846:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1496,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23859:8:0"
            },
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23856:2:0"
            },
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23877:0:0"
            },
            "scope": 1512,
            "src": "23837:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1513,
        "src": "307:23654:0",
        "usedErrors": []
      }
    ],
    "src": "46:23915:0"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Administrable",
  "coverageMap": {
    "branches": {
      "0": {
        "Administrable._addBankAdmin": {
          "205": [
            17771,
            17796,
            true
          ]
        },
        "Administrable._createBank": {
          "192": [
            17227,
            17248,
            true
          ]
        },
        "Administrable._deleteBank": {
          "194": [
            18648,
            18668,
            true
          ],
          "195": [
            18694,
            18748,
            true
          ],
          "196": [
            18773,
            18794,
            true
          ]
        },
        "Administrable._issueDividend": {
          "197": [
            15870,
            15916,
            true
          ],
          "198": [
            15993,
            16035,
            false
          ],
          "199": [
            16039,
            16065,
            false
          ]
        },
        "Administrable._moveToken": {
          "200": [
            4524,
            4544,
            true
          ],
          "201": [
            20371,
            20421,
            true
          ],
          "202": [
            20502,
            20528,
            false
          ],
          "203": [
            20548,
            20594,
            false
          ],
          "204": [
            20692,
            20736,
            false
          ]
        },
        "Administrable._processTokenReceipt": {
          "173": [
            23506,
            23546,
            false
          ],
          "174": [
            23550,
            23576,
            false
          ]
        },
        "Administrable._removeBankAdmin": {
          "193": [
            18295,
            18326,
            true
          ]
        },
        "Administrable._transferTokenFromBank": {
          "206": [
            19418,
            19464,
            true
          ],
          "207": [
            19588,
            19630,
            false
          ],
          "208": [
            19634,
            19660,
            false
          ]
        },
        "Administrable.addBankAdmin": {
          "182": [
            3721,
            3754,
            true
          ],
          "183": [
            8564,
            8588,
            true
          ],
          "184": [
            8592,
            8612,
            true
          ]
        },
        "Administrable.claimDividend": {
          "178": [
            5796,
            5824,
            true
          ],
          "179": [
            5850,
            5894,
            true
          ],
          "180": [
            6099,
            6117,
            true
          ]
        },
        "Administrable.hasPermit": {
          "189": [
            14626,
            14648,
            true
          ],
          "190": [
            14652,
            14672,
            false
          ]
        },
        "Administrable.isPermitAdmin": {
          "176": [
            15155,
            15177,
            true
          ],
          "177": [
            15181,
            15201,
            false
          ]
        },
        "Administrable.setBasePermit": {
          "175": [
            11445,
            11480,
            true
          ]
        },
        "Administrable.setNonShardHolderState": {
          "181": [
            11755,
            11787,
            true
          ]
        },
        "Administrable.setPermit": {
          "185": [
            4003,
            4040,
            true
          ],
          "186": [
            10929,
            10951,
            true
          ],
          "187": [
            10955,
            10975,
            true
          ],
          "188": [
            11003,
            11043,
            true
          ]
        },
        "Administrable.transferTokenFromBank": {
          "191": [
            4273,
            4306,
            true
          ]
        }
      },
      "1": {
        "Idea._registerTokenAddress": {
          "224": [
            7097,
            7124,
            true
          ]
        },
        "Idea._transferEther": {
          "221": [
            5698,
            5705,
            true
          ]
        },
        "Idea._transferToken": {
          "215": [
            4712,
            4741,
            true
          ],
          "216": [
            4762,
            4788,
            false
          ],
          "217": [
            4902,
            4926,
            true
          ],
          "218": [
            4951,
            4969,
            false
          ],
          "219": [
            5225,
            5249,
            true
          ],
          "220": [
            5294,
            5300,
            false
          ]
        },
        "Idea._unregisterTokenAddress": {
          "222": [
            7476,
            7502,
            true
          ],
          "223": [
            7527,
            7552,
            true
          ]
        },
        "Idea.claimLiquid": {
          "209": [
            3054,
            3080,
            true
          ],
          "210": [
            3155,
            3193,
            true
          ],
          "211": [
            3388,
            3404,
            true
          ]
        },
        "Idea.receiveToken": {
          "212": [
            2446,
            2472,
            true
          ],
          "213": [
            2539,
            2589,
            true
          ],
          "214": [
            2613,
            2664,
            true
          ]
        }
      },
      "2": {
        "Idea._liquidize": {
          "238": [
            8396,
            8410,
            true
          ]
        },
        "Idea.claimLiquid": {
          "226": [
            8023,
            8048,
            true
          ]
        },
        "Shardable._putForSale": {
          "237": [
            17460,
            17544,
            true
          ]
        },
        "Shardable._split": {
          "234": [
            15277,
            15372,
            true
          ],
          "235": [
            15432,
            15449,
            false
          ],
          "236": [
            16461,
            16481,
            false
          ]
        },
        "Shardable.cancelSale": {
          "225": [
            12107,
            12127,
            true
          ]
        },
        "Shardable.purchase": {
          "227": [
            9310,
            9330,
            true
          ],
          "228": [
            9790,
            9827,
            true
          ],
          "229": [
            10173,
            10188,
            false
          ],
          "230": [
            10192,
            10208,
            true
          ],
          "231": [
            10329,
            10398,
            true
          ],
          "232": [
            10711,
            10744,
            false
          ],
          "233": [
            10748,
            10783,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Administrable._addBankAdmin": {
          "131": [
            17763,
            17802
          ],
          "132": [
            17812,
            17851
          ],
          "133": [
            17861,
            17925
          ]
        },
        "Administrable._createBank": {
          "88": [
            17219,
            17255
          ],
          "89": [
            17265,
            17304
          ],
          "90": [
            17314,
            17341
          ],
          "91": [
            17351,
            17415
          ]
        },
        "Administrable._deleteBank": {
          "100": [
            18640,
            18676
          ],
          "101": [
            18686,
            18755
          ],
          "102": [
            18765,
            18801
          ],
          "103": [
            18811,
            18839
          ],
          "104": [
            18849,
            18903
          ]
        },
        "Administrable._dissolveDividend": {
          "85": [
            16702,
            16734
          ],
          "86": [
            16787,
            16879
          ],
          "87": [
            16889,
            16943
          ]
        },
        "Administrable._issueDividend": {
          "105": [
            15862,
            15923
          ],
          "106": [
            15933,
            15979
          ],
          "107": [
            16081,
            16122
          ],
          "108": [
            16142,
            16262
          ],
          "109": [
            16272,
            16313
          ],
          "110": [
            16323,
            16359
          ],
          "111": [
            16369,
            16442
          ]
        },
        "Administrable._liquidize": {
          "82": [
            23887,
            23905
          ],
          "83": [
            23915,
            23951
          ]
        },
        "Administrable._moveToken": {
          "125": [
            20363,
            20428
          ],
          "126": [
            20438,
            20488
          ],
          "127": [
            20614,
            20659
          ],
          "128": [
            20756,
            20799
          ],
          "129": [
            20833,
            20881
          ],
          "130": [
            20891,
            20979
          ]
        },
        "Administrable._processTokenReceipt": {
          "10": [
            23411,
            23464
          ],
          "11": [
            23592,
            23631
          ],
          "12": [
            23651,
            23695
          ],
          "13": [
            23705,
            23748
          ]
        },
        "Administrable._registerTokenAddress": {
          "116": [
            22926,
            22967
          ],
          "117": [
            22977,
            23035
          ]
        },
        "Administrable._removeBankAdmin": {
          "92": [
            18287,
            18327
          ],
          "93": [
            18337,
            18377
          ],
          "94": [
            18387,
            18451
          ]
        },
        "Administrable._setBasePermit": {
          "80": [
            21833,
            21867
          ],
          "81": [
            21877,
            21942
          ]
        },
        "Administrable._setNonShardHolderState": {
          "112": [
            22149,
            22180
          ],
          "113": [
            22190,
            22245
          ]
        },
        "Administrable._setPermit": {
          "134": [
            21388,
            21427
          ],
          "135": [
            21437,
            21510
          ]
        },
        "Administrable._transferTokenFromBank": {
          "138": [
            19410,
            19471
          ],
          "139": [
            19481,
            19518
          ],
          "140": [
            19528,
            19574
          ],
          "141": [
            19676,
            19717
          ],
          "142": [
            19737,
            19813
          ]
        },
        "Administrable._unregisterTokenAddress": {
          "114": [
            22533,
            22576
          ],
          "115": [
            22586,
            22644
          ]
        },
        "Administrable.addBankAdmin": {
          "54": [
            8556,
            8622
          ],
          "55": [
            8632,
            8665
          ]
        },
        "Administrable.bankExists": {
          "56": [
            13301,
            13336
          ]
        },
        "Administrable.bankIsEmpty": {
          "19": [
            13562,
            13654
          ]
        },
        "Administrable.claimDividend": {
          "33": [
            5788,
            5832
          ],
          "34": [
            5842,
            5901
          ],
          "35": [
            5911,
            5953
          ],
          "36": [
            6091,
            6125
          ],
          "37": [
            6135,
            6180
          ],
          "38": [
            6190,
            6268
          ],
          "39": [
            6278,
            6346
          ]
        },
        "Administrable.createBank": {
          "24": [
            8147,
            8178
          ]
        },
        "Administrable.deleteBank": {
          "40": [
            9314,
            9335
          ]
        },
        "Administrable.dissolveDividend": {
          "20": [
            7826,
            7853
          ]
        },
        "Administrable.dividendExists": {
          "5": [
            13873,
            13904
          ]
        },
        "Administrable.getBankBalance": {
          "23": [
            12289,
            12333
          ]
        },
        "Administrable.getDividendResidual": {
          "9": [
            13043,
            13078
          ]
        },
        "Administrable.getDividendToken": {
          "3": [
            12538,
            12582
          ]
        },
        "Administrable.getDividendValue": {
          "2": [
            12793,
            12830
          ]
        },
        "Administrable.hasPermit": {
          "72": [
            14676,
            14688
          ],
          "73": [
            14699,
            14813
          ]
        },
        "Administrable.isBankAdmin": {
          "53": [
            14223,
            14299
          ]
        },
        "Administrable.isPermitAdmin": {
          "21": [
            15205,
            15217
          ],
          "22": [
            15228,
            15348
          ]
        },
        "Administrable.issueDividend": {
          "41": [
            7545,
            7588
          ]
        },
        "Administrable.liquidize": {
          "16": [
            11987,
            11999
          ]
        },
        "Administrable.moveToken": {
          "52": [
            10445,
            10499
          ]
        },
        "Administrable.registerTokenAddress": {
          "46": [
            6653,
            6688
          ]
        },
        "Administrable.removeBankAdmin": {
          "25": [
            9058,
            9094
          ]
        },
        "Administrable.setBasePermit": {
          "14": [
            11437,
            11487
          ],
          "15": [
            11497,
            11532
          ]
        },
        "Administrable.setNonShardHolderState": {
          "42": [
            11747,
            11794
          ],
          "43": [
            11804,
            11837
          ]
        },
        "Administrable.setPermit": {
          "57": [
            10921,
            10985
          ],
          "58": [
            10995,
            11051
          ],
          "59": [
            11061,
            11100
          ]
        },
        "Administrable.transferTokenFromBank": {
          "74": [
            9856,
            9910
          ]
        },
        "Administrable.unregisterTokenAddress": {
          "44": [
            7001,
            7038
          ]
        }
      },
      "1": {
        "Idea.<receive>": {
          "0": [
            2036,
            2089
          ]
        },
        "Idea._liquidize": {
          "148": [
            5863,
            5877
          ]
        },
        "Idea._processTokenReceipt": {
          "78": [
            6280,
            6309
          ],
          "79": [
            6319,
            6356
          ]
        },
        "Idea._processTokenTransfer": {
          "150": [
            6732,
            6761
          ],
          "151": [
            6771,
            6808
          ]
        },
        "Idea._registerTokenAddress": {
          "155": [
            7089,
            7131
          ],
          "156": [
            7141,
            7181
          ]
        },
        "Idea._transferEther": {
          "149": [
            5690,
            5712
          ]
        },
        "Idea._transferToken": {
          "95": [
            4704,
            4748
          ],
          "96": [
            4792,
            4817
          ],
          "97": [
            4894,
            4933
          ],
          "98": [
            5217,
            5256
          ],
          "99": [
            5303,
            5344
          ]
        },
        "Idea._unregisterTokenAddress": {
          "152": [
            7468,
            7509
          ],
          "153": [
            7519,
            7559
          ],
          "154": [
            7569,
            7610
          ]
        },
        "Idea.acceptsToken": {
          "45": [
            4159,
            4237
          ]
        },
        "Idea.claimLiquid": {
          "26": [
            3046,
            3087
          ],
          "27": [
            3147,
            3200
          ],
          "28": [
            3210,
            3254
          ],
          "29": [
            3380,
            3409
          ],
          "30": [
            3419,
            3462
          ],
          "31": [
            3472,
            3523
          ],
          "32": [
            3533,
            3588
          ]
        },
        "Idea.getLiquidResidual": {
          "1": [
            3845,
            3880
          ]
        },
        "Idea.receiveToken": {
          "48": [
            2438,
            2478
          ],
          "49": [
            2531,
            2595
          ],
          "50": [
            2605,
            2671
          ],
          "51": [
            2681,
            2732
          ]
        }
      },
      "2": {
        "Shardable._cancelSale": {
          "84": [
            14573,
            14601
          ]
        },
        "Shardable._expireShard": {
          "164": [
            19351,
            19396
          ],
          "165": [
            19406,
            19446
          ]
        },
        "Shardable._pushShard": {
          "160": [
            18554,
            18581
          ],
          "161": [
            18591,
            18638
          ],
          "162": [
            18725,
            19009
          ],
          "163": [
            19019,
            19059
          ]
        },
        "Shardable._putForSale": {
          "143": [
            17452,
            17551
          ],
          "144": [
            17561,
            17627
          ],
          "145": [
            17637,
            17837
          ],
          "146": [
            17847,
            17874
          ],
          "147": [
            17884,
            17950
          ]
        },
        "Shardable._split": {
          "118": [
            15269,
            15379
          ],
          "119": [
            15733,
            15789
          ],
          "120": [
            15848,
            15893
          ],
          "121": [
            16033,
            16083
          ],
          "122": [
            16143,
            16183
          ],
          "123": [
            16493,
            16579
          ],
          "124": [
            16599,
            16663
          ]
        },
        "Shardable.cancelSale": {
          "17": [
            12099,
            12134
          ],
          "18": [
            12144,
            12162
          ]
        },
        "Shardable.getCurrentClock": {
          "8": [
            12996,
            13008
          ]
        },
        "Shardable.getShardExpirationClock": {
          "7": [
            13181,
            13215
          ]
        },
        "Shardable.getShardSalePrice": {
          "4": [
            13374,
            13405
          ]
        },
        "Shardable.isShardHolder": {
          "75": [
            13930,
            13972
          ]
        },
        "Shardable.isValidShard": {
          "6": [
            13646,
            13691
          ]
        },
        "Shardable.purchase": {
          "60": [
            9302,
            9337
          ],
          "61": [
            9347,
            9442
          ],
          "62": [
            9452,
            9470
          ],
          "63": [
            9630,
            9657
          ],
          "64": [
            9782,
            9834
          ],
          "65": [
            10165,
            10215
          ],
          "66": [
            10321,
            10404
          ],
          "67": [
            10468,
            10559
          ],
          "68": [
            10612,
            10682
          ],
          "69": [
            10703,
            10790
          ],
          "70": [
            10800,
            10885
          ],
          "71": [
            10895,
            11043
          ]
        },
        "Shardable.putForSale": {
          "76": [
            11832,
            11894
          ]
        },
        "Shardable.shardExisted": {
          "77": [
            14289,
            14383
          ]
        },
        "Shardable.split": {
          "47": [
            12838,
            12882
          ]
        },
        "addFractions": {
          "157": [
            2131,
            2169
          ],
          "158": [
            2175,
            2213
          ],
          "159": [
            2219,
            2275
          ]
        },
        "divideUnequallyIntoTwoWithRemainder": {
          "136": [
            673,
            705
          ],
          "137": [
            837,
            902
          ]
        },
        "getCommonDenominator": {
          "171": [
            1137,
            1156
          ],
          "172": [
            1176,
            1184
          ]
        },
        "simplifyFraction": {
          "169": [
            1551,
            1654
          ],
          "170": [
            1660,
            1726
          ]
        },
        "subtractFractions": {
          "166": [
            2729,
            2767
          ],
          "167": [
            2773,
            2811
          ],
          "168": [
            2817,
            2873
          ]
        }
      }
    }
  },
  "dependencies": [
    "Idea",
    "Shardable"
  ],
  "deployedBytecode": "6080604052600436106102605760003560e01c8063868399a511610144578063bcedb2e0116100b6578063de9d68051161007a578063de9d68051461080c578063e1c34c1f1461082c578063e6778fce1461084c578063efae89f814610879578063f9983896146108a6578063fd06636b146108c657600080fd5b8063bcedb2e014610710578063c4802eb21461078c578063c5438a55146107b9578063cc445611146107d9578063db5dc9b7146107ec57600080fd5b80639995b9a9116101085780639995b9a91461064b578063a1916aef1461067b578063a80aed761461069b578063a902780f146106bb578063a907b6c5146106d0578063b4af7d59146106f057600080fd5b8063868399a51461059b5780638786df6a146105bb5780638d7844a6146105db5780639211b7b3146105fb57806397235a1e1461062b57600080fd5b8063350546d8116101dd5780635beeff33116101a15780635beeff331461049057806362748dcc146104bd57806363879c0b1461050b5780637b7854931461052b578063810052191461055b578063859d9fd51461057b57600080fd5b8063350546d8146103ca578063354cd135146103ea578063384fe2b51461040a5780633dbeaa541461042a5780634c46360b1461046057600080fd5b80632365664211610224578063236566421461031c578063258e4d9f1461033c5780632dec7cd21461035c5780632ef379261461038a5780632f2e9a2a146103aa57600080fd5b806302fb0c5e14610278578063036f3aec146102a757806305c558f5146102c75780630bea8985146102dc578063169936b4146102fc57600080fd5b3661027357610271600034336108e6565b005b600080fd5b34801561028457600080fd5b506001546102929060ff1681565b60405190151581526020015b60405180910390f35b3480156102b357600080fd5b506102716102c2366004613a2b565b610a34565b3480156102d357600080fd5b50610271610ad4565b3480156102e857600080fd5b506102716102f7366004613a79565b610b0d565b34801561030857600080fd5b50610292610317366004613a92565b610bcb565b34801561032857600080fd5b50610271610337366004613a79565b610c29565b34801561034857600080fd5b50610292610357366004613ae6565b610c64565b34801561036857600080fd5b5061037c610377366004613ae6565b610d19565b60405190815260200161029e565b34801561039657600080fd5b506102716103a5366004613ae6565b610d5a565b3480156103b657600080fd5b506102716103c5366004613ae6565b610db8565b3480156103d657600080fd5b506102716103e5366004613b2b565b610e0a565b3480156103f657600080fd5b50610271610405366004613b46565b610fdd565b34801561041657600080fd5b50610271610425366004613a92565b61120a565b34801561043657600080fd5b5061037c610445366004613b2b565b6001600160a01b031660009081526009602052604090205490565b34801561046c57600080fd5b5061037c61047b366004613a79565b60009081526013602052604090206001015490565b34801561049c57600080fd5b5061037c6104ab366004613b2b565b60086020526000908152604090205481565b3480156104c957600080fd5b506104f36104d8366004613a79565b6000908152601360205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161029e565b34801561051757600080fd5b50610271610526366004613b68565b611255565b34801561053757600080fd5b5061037c610546366004613a79565b60009081526005602052604090206003015490565b34801561056757600080fd5b50610271610576366004613bcd565b6112a9565b34801561058757600080fd5b50610271610596366004613b2b565b611320565b3480156105a757600080fd5b506102926105b6366004613b2b565b61137e565b3480156105c757600080fd5b506102716105d6366004613b2b565b6113b3565b3480156105e757600080fd5b506102716105f6366004613bea565b611411565b34801561060757600080fd5b50610292610616366004613a79565b60009081526012602052604090205460ff1690565b34801561063757600080fd5b50610271610646366004613c29565b611497565b34801561065757600080fd5b50610292610666366004613a79565b60008054918152600660205260409020541190565b34801561068757600080fd5b50610271610696366004613c53565b6115ff565b3480156106a757600080fd5b506102926106b6366004613ae6565b61161f565b3480156106c757600080fd5b5060005461037c565b3480156106dc57600080fd5b506102716106eb366004613ae6565b61168a565b3480156106fc57600080fd5b5061029261070b366004613a92565b611720565b34801561071c57600080fd5b5061075d61072b366004613a79565b600260208190526000918252604090912080546001820154928201546003909201549092916001600160a01b03169084565b60405161029e949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b34801561079857600080fd5b5061037c6107a7366004613b2b565b60036020526000908152604090205481565b3480156107c557600080fd5b506102716107d4366004613ccf565b611750565b6102716107e7366004613a79565b611847565b3480156107f857600080fd5b50610292610807366004613ae6565b611da4565b34801561081857600080fd5b50610271610827366004613d2d565b611e5a565b34801561083857600080fd5b50610292610847366004613b2b565b611e7a565b34801561085857600080fd5b5061037c610867366004613a79565b60009081526014602052604090205490565b34801561088557600080fd5b5061037c610894366004613a79565b60009081526006602052604090205490565b3480156108b257600080fd5b506102716108c1366004613d8a565b611eac565b3480156108d257600080fd5b506102926108e1366004613b46565b611f36565b6108f1838383611f67565b6040516336b0b4b760e11b8152600e9060040190815260408051602092819003830190206001600160a01b0386166000908152925290205415801561093e57506001600160a01b03831615155b15610981576001600d60405161095e906336b0b4b760e11b815260040190565b9081526020016040518091039020600082825461097b9190613df8565b90915550505b81600e60405161099b906336b0b4b760e11b815260040190565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109db9190613df8565b9091555050604080516001600160a01b038086168252602082018590528316918101919091527fde49bbe8e448cdfa40e6fa0d22592be9a03b28ba746527635dbe5235416659cf906060015b60405180910390a1505050565b81610a3f8133610c64565b610a4857600080fd5b816002811115610a5a57610a5a613e0b565b601184604051610a6a9190613e45565b9081526040519081900360200190205460ff166002811115610a8e57610a8e613e0b565b03610ac55760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064015b60405180910390fd5b610acf8383611fbc565b505050565b604051806040016040528060028152602001616c4560f01b815250610af98133611da4565b610b0257600080fd5b610b0a61206b565b50565b6000818152600260208190526040909120015481906001600160a01b03163314610b495760405162461bcd60e51b8152600401610abc90613e61565b81610b638160008054918152600660205260409020541190565b610b7f5760405162461bcd60e51b8152600401610abc90613e7d565b60008381526004602052604090205460ff16610bc25760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610abc565b610acf836120bd565b6000600d82604051610bdd9190613e45565b9081526020016040518091039020546000148015610c235750600e82604051610c069190613e45565b908152604080516020928190038301902060008080529252902054155b92915050565b60405180604001604052806002815260200161191160f21b815250610c4e8133611da4565b610c5757600080fd5b610c608261210c565b5050565b6000610c6f82611e7a565b80610c7c5750600b5460ff165b610c8857506000610c23565b6002601084604051610c9a9190613e45565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff166002811115610cd357610cd3613e0b565b1480610d1257506002601184604051610cec9190613e45565b9081526040519081900360200190205460ff166002811115610d1057610d10613e0b565b145b9392505050565b6000600e83604051610d2b9190613e45565b908152604080519182900360209081019092206001600160a01b03851660009081529252902054905092915050565b6040518060400160405280600281526020016136a160f11b815250610d7f8133611da4565b610d8857600080fd5b6001805460ff16151514610dae5760405162461bcd60e51b8152600401610abc90613e99565b610acf83836121f7565b6040518060400160405280600281526020016136a160f11b815250610ddd8133610c64565b610de657600080fd5b82610df1813361161f565b610dfa57600080fd5b610e048484612309565b50505050565b610e1333611e7a565b610e445760405162461bcd60e51b81526020600482015260026024820152610aa960f31b6044820152606401610abc565b610e4d8161137e565b610e695760405162461bcd60e51b8152600401610abc90613eb5565b336000908152600360209081526040808320546001600160a01b0385168452600a83528184208185529092529091205460ff1615610ece5760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610abc565b6001600160a01b0382166000818152600a602090815260408083208584528252808320805460ff1916600190811790915560028352818420908101549054948452600890925282205491929091610f259190613ed1565b610f2f9190613efe565b905080600003610f5b5760405162461bcd60e51b81526020600482015260006024820152604401610abc565b6001600160a01b03831660009081526009602052604081208054839290610f83908490613f12565b90915550610f9490508382336123c5565b604080516001600160a01b03851681526020810183905233918101919091527f1397d005a56670cbe383372bd4743eaa779af18164d00dc6d12a6659418e1bbf90606001610a27565b6000828152600260208190526040909120015482906001600160a01b031633146110195760405162461bcd60e51b8152600401610abc90613e61565b600082815260126020526040902054829060ff1661103657600080fd5b6001805460ff1615151461105c5760405162461bcd60e51b8152600401610abc90613e99565b6110668484611f36565b6110985760405162461bcd60e51b81526020600482015260036024820152622720a360e91b6044820152606401610abc565b600083815260156020908152604080832087845290915290205460ff16156110e75760405162461bcd60e51b8152602060048201526002602482015261414360f01b6044820152606401610abc565b60008381526015602090815260408083208784528252808320805460ff191660019081179091556002835281842080820154905488865260139094529184200154909161113391613ed1565b61113d9190613efe565b9050806000036111755760405162461bcd60e51b815260206004820152600360248201526244545360e81b6044820152606401610abc565b60008481526014602052604081208054839290611193908490613f12565b90915550506000848152601360205260409020546111bb906001600160a01b031682336123c5565b60408051602081018690529081018290526000805160206143b28339815191529060600160408051601f19818403018152908290526111fb913390613f51565b60405180910390a15050505050565b6040518060400160405280600281526020016136a160f11b81525061122f8133610c64565b61123857600080fd5b81611243813361161f565b61124c57600080fd5b610acf836125f1565b604051806040016040528060028152602001611a5160f21b81525061127a8133611da4565b61128357600080fd5b8361128e813361161f565b61129757600080fd5b6112a2858585612776565b5050505050565b60405180604001604052806003815260200162734e5360e81b8152506112cf8133611da4565b6112d857600080fd5b600b5482151560ff9091161515036113175760405162461bcd60e51b8152602060048201526002602482015261415360f01b6044820152606401610abc565b610c6082612980565b604051806040016040528060038152602001621b505560ea1b8152506113468133611da4565b61134f57600080fd5b6001805460ff161515146113755760405162461bcd60e51b8152600401610abc90613e99565b610c60826129f0565b6001600160a01b03811660009081526007602052604081205460ff16151560011480610c235750506001600160a01b03161590565b604051806040016040528060038152602001621b505560ea1b8152506113d98133611da4565b6113e257600080fd5b6001805460ff161515146114085760405162461bcd60e51b8152600401610abc90613e99565b610c6082612a39565b6000848152600260208190526040909120015484906001600160a01b0316331461144d5760405162461bcd60e51b8152600401610abc90613e61565b846114678160008054918152600660205260409020541190565b6114835760405162461bcd60e51b8152600401610abc90613e7d565b61148f86868686612a82565b505050505050565b6114a08261137e565b6114bc5760405162461bcd60e51b8152600401610abc90613eb5565b604051636eb1769f60e11b8152336004820152306024820152829082906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa15801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190613f94565b101561154c5760405162461bcd60e51b8152600401610abc90613fad565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561159f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c39190613fc9565b6115f45760405162461bcd60e51b8152602060048201526002602482015261139560f21b6044820152606401610abc565b610acf8383336108e6565b8361160a813361161f565b61161357600080fd5b6112a285858585612c80565b6000600f836040516116319190613e45565b908152604080519182900360209081019092206001600160a01b0385166000908152925290205460ff16151560011480610d125750610d126040518060400160405280600281526020016136a160f11b81525083610c64565b6040518060400160405280600281526020016136a160f11b8152506116af8133611da4565b6116b857600080fd5b826116c3813361161f565b6116cc57600080fd5b6116d583611e7a565b806116e25750600b5460ff165b6117165760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610abc565b610e048484612f14565b6000600c826040516117329190613e45565b9081526040519081900360200190205460ff16151560011492915050565b8261175b8133610c64565b61176457600080fd5b61176d83611e7a565b8061177a5750600b5460ff165b6117ae5760405162461bcd60e51b81526020600482015260056024820152644e53484e4160d81b6044820152606401610abc565b8160028111156117c0576117c0613e0b565b6010856040516117d09190613e45565b90815260408051602092819003830190206001600160a01b0387166000908152925290205460ff16600281111561180957611809613e0b565b0361183c5760405162461bcd60e51b815260206004820152600360248201526204148560ec1b6044820152606401610abc565b610e04848484613012565b806118618160008054918152600660205260409020541190565b61187d5760405162461bcd60e51b8152600401610abc90613e7d565b60008281526004602052604090205460ff166118c05760405162461bcd60e51b81526020600482015260026024820152614e5360f01b6044820152606401610abc565b6000828152600560205260409020600401546001600160a01b031633148061190057506000828152600560205260409020600401546001600160a01b0316155b6119315760405162461bcd60e51b815260206004820152600260248201526129a960f11b6044820152606401610abc565b61193a826120bd565b6000828152600560205260408120600301548190819061195e9060196103e86130cc565b9194509250905061196f8183613df8565b6000868152600560205260409020600201549092506001600160a01b0316611ae1576000858152600560205260409020600301543410156119d75760405162461bcd60e51b8152602060048201526002602482015261494560f01b6044820152606401610abc565b6040516000907349a71890aea5a751e30e740c504f2e9683f347bc9085908381818185875af1925050503d8060008114611a2d576040519150601f19603f3d011682016040523d82523d6000602084013e611a32565b606091505b5050600087815260026020819052604080832090910154905192935090916001600160a01b039091169085908381818185875af1925050503d8060008114611a96576040519150601f19603f3d011682016040523d82523d6000602084013e611a9b565b606091505b50509050808015611aa95750815b611ada5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610abc565b5050611ca7565b6000858152600560205260409081902060028101546003909101549151636eb1769f60e11b81523360048201523060248201526001600160a01b039091169190829063dd62ed3e90604401602060405180830381865afa158015611b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6d9190613f94565b1015611b8b5760405162461bcd60e51b8152600401610abc90613fad565b6040516323b872dd60e01b81523360048201527349a71890aea5a751e30e740c504f2e9683f347bc6024820152604481018590526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190613fc9565b50600086815260026020819052604091829020015490516323b872dd60e01b81523360048201526001600160a01b03918216602482015260448101859052908216906323b872dd906064016020604051808303816000875af1158015611c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca49190613fc9565b50505b60008581526005602052604090205415801590611cd4575060008581526005602052604090206001015415155b611d055760405162461bcd60e51b8152602060048201526002602482015261455360f01b6044820152606401610abc565b60008581526005602052604090208054600190910154611d2791879133612a82565b60008581526005602090815260409182902080546001820154600283015460039093015485518b815294850192909252938301939093523360608301526001600160a01b0316608082015260a08101919091527fd8d12448acb9a12d0ca44f527c717c0de64f03b49ca4032f87feae10af5eaabe9060c0016111fb565b6000611daf82611e7a565b80611dbc5750600b5460ff165b611dc857506000610c23565b6001601084604051611dda9190613e45565b90815260408051602092819003830190206001600160a01b0386166000908152925290205460ff166002811115611e1357611e13613e0b565b101580610d1257506001601184604051611e2d9190613e45565b9081526040519081900360200190205460ff166002811115611e5157611e51613e0b565b10159392505050565b83611e65813361161f565b611e6e57600080fd5b6112a285858585613140565b6001600160a01b038116600090815260036020526040812054610c239060008054918152600660205260409020541190565b6000868152600260208190526040909120015486906001600160a01b03163314611ee85760405162461bcd60e51b8152600401610abc90613e61565b86611f028160008054918152600660205260409020541190565b611f1e5760405162461bcd60e51b8152600401610abc90613e7d565b611f2c8888888888886132e2565b5050505050505050565b6000828152600260205260408120600301548210801590610d12575050600091825260066020526040909120541190565b6001600160a01b03831660009081526008602052604081208054849290611f8f908490613df8565b90915550506001600160a01b038316600090815260096020526040812080548492906109db908490613df8565b6001805460ff16151514611fe25760405162461bcd60e51b8152600401610abc90613e99565b80601183604051611ff39190613e45565b908152604051908190036020019020805460ff1916600183600281111561201c5761201c613e0b565b02179055506000805160206143b28339815191528282604051602001612043929190614008565b60408051601f198184030181529082905261205f91339061402a565b60405180910390a15050565b612073613506565b604080516060808252600290820152616c4560f01b608082015260a060208201819052600090820152338183015290516000805160206143b28339815191529181900360c00190a1565b806120d78160008054918152600660205260409020541190565b6120f35760405162461bcd60e51b8152600401610abc90613e7d565b506000908152600460205260409020805460ff19169055565b600081815260126020526040902054819060ff1661212957600080fd5b6001805460ff1615151461214f5760405162461bcd60e51b8152600401610abc90613e99565b6000828152601260209081526040808320805460ff19169055601482528083205481516336b0b4b760e11b8152600e6004820152825190819003602401902086855260138452828520546001600160a01b0316855290925282208054919290916121ba908490613df8565b909155505060408051602081018490526000805160206143b2833981519152910160408051601f198184030181529082905261205f913390614056565b6001805460ff1615151461221d5760405162461bcd60e51b8152600401610abc90613e99565b61222682611720565b156122585760405162461bcd60e51b8152602060048201526002602482015261414560f01b6044820152606401610abc565b6001600f8360405161226a9190613e45565b90815260408051602092819003830181206001600160a01b038616600090815293529120805460ff191692151592909217909155600190600c906122af908590613e45565b90815260405160209181900382018120805460ff1916931515939093179092556000805160206143b2833981519152916122ed918591859101614082565b60408051601f198184030181529082905261205f9133906140ac565b6001805460ff1615151461232f5760405162461bcd60e51b8152600401610abc90613e99565b612339828261161f565b61234257600080fd5b6000600f836040516123549190613e45565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff1916931515939093179092556000805160206143b2833981519152916123a9918591859101614082565b60408051601f198184030181529082905261205f9133906140d8565b6001600160a01b0383166000908152600860205260409020548211156123fd5760405162461bcd60e51b8152600401610abc90613fad565b6001600160a01b03831661241a576124158282613538565b6125dc565b60405163095ea7b360e01b81526001600160a01b0382811660048301526024820184905284919082169063095ea7b3906044016020604051808303816000875af115801561246c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124909190613fc9565b6124c15760405162461bcd60e51b81526020600482015260026024820152614e4160f01b6044820152606401610abc565b6001600160a01b0382163b1561253657604051634b91ad0f60e11b81526001600160a01b038581166004830152602482018590528316906397235a1e90604401600060405180830381600087803b15801561251b57600080fd5b505af192505050801561252c575060015b156125da576125da565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015612585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a99190613fc9565b6125da5760405162461bcd60e51b8152602060048201526002602482015261139560f21b6044820152606401610abc565b505b60015460ff1615610acf57610acf83836135c0565b6001805460ff161515146126175760405162461bcd60e51b8152600401610abc90613e99565b61262081611720565b6126525760405162461bcd60e51b815260206004820152600360248201526255422160e81b6044820152606401610abc565b60408051808201909152600481526336b0b4b760e11b6020918201528151908201207f471dfab0756edc981c75dd3188ccd700755407f7d3bedf452610f7a1e240d659016126c75760405162461bcd60e51b815260206004820152600260248201526126a160f11b6044820152606401610abc565b6126d081610bcb565b6127015760405162461bcd60e51b8152602060048201526002602482015261424560f01b6044820152606401610abc565b6000600c826040516127139190613e45565b90815260405160209181900382018120805460ff1916931515939093179092556000805160206143b28339815191529161274f91849101614104565b60408051601f198184030181529082905261276b913390614117565b60405180910390a150565b6001805460ff1615151461279c5760405162461bcd60e51b8152600401610abc90613e99565b600054604051600e906127b0908690613e45565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156127f45760405162461bcd60e51b8152600401610abc90614143565b81600e856040516128059190613e45565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546128459190613f12565b9091555050604051600e9061285b908690613e45565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561289557506001600160a01b03831615155b156128cf576001600d856040516128ac9190613e45565b908152602001604051809103902060008282546128c99190613f12565b90915550505b6040805180820182526001600160a01b0385811682526020808301868152600086815260138352858120945185546001600160a01b031916941693909317845551600193840155601481528382208690556012815290839020805460ff191690921790915590516000805160206143b283398151915291612956918791879187910161415f565b60408051601f198184030181529082905261297291339061418d565b60405180910390a150505050565b6001805460ff161515146129a65760405162461bcd60e51b8152600401610abc90613e99565b600b805460ff19168215159081179091556040805160208101929092526000805160206143b2833981519152910160408051601f198184030181529082905261276b9133906141b9565b6129f98161361e565b604080516001600160a01b03831660208201526000805160206143b2833981519152910160408051601f198184030181529082905261276b9133906141e6565b612a42816136af565b604080516001600160a01b03831660208201526000805160206143b2833981519152910160408051601f198184030181529082905261276b913390614212565b83612a9c8160008054918152600660205260409020541190565b612ab85760405162461bcd60e51b8152600401610abc90613e7d565b6001805460ff16151514612ade5760405162461bcd60e51b8152600401610abc90613e99565b600085815260026020526040902060018101549054612afd9190613efe565b612b078486613efe565b10612b245760405162461bcd60e51b8152600401610abc90614143565b600054612b3083611e7a565b15612ba9576001600160a01b03831660009081526003602090815260408083205483526002909152812080546001909101548291612b6f91898961370e565b91509150612b7f8282878661374a565b6001600160a01b038516600090815260036020526040902054612ba2908461384c565b5050612bb5565b612bb58585858461374a565b612bbf868261384c565b600086815260026020526040812080546001909101548291612be2918989613894565b9150915080600014612c185760008881526002602081905260409091200154612c1890839083906001600160a01b03168661374a565b60408051898152602081018990529081018790526001600160a01b038616606082015260006080820181905260a08201527fd8d12448acb9a12d0ca44f527c717c0de64f03b49ca4032f87feae10af5eaabe9060c00160405180910390a15050505050505050565b82612c8a81611720565b612cbc5760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610abc565b6001805460ff16151514612ce25760405162461bcd60e51b8152600401610abc90613e99565b600e85604051612cf29190613e45565b90815260408051602092819003830190206001600160a01b03861660009081529252902054821115612d365760405162461bcd60e51b8152600401610abc90614143565b81600e86604051612d479190613e45565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612d879190613f12565b90915550506001600160a01b03831615612e7b57600e85604051612dab9190613e45565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e0b576001600d86604051612de89190613e45565b90815260200160405180910390206000828254612e059190613f12565b90915550505b600e84604051612e1b9190613e45565b90815260408051602092819003830190206001600160a01b038616600090815292528120549003612e7b576001600d85604051612e589190613e45565b90815260200160405180910390206000828254612e759190613df8565b90915550505b81600e85604051612e8c9190613e45565b90815260200160405180910390206000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254612ecc9190613df8565b90915550506040516000805160206143b283398151915290612ef890879087908790879060200161423e565b60408051601f19818403018152908290526111fb913390614280565b6001805460ff16151514612f3a5760405162461bcd60e51b8152600401610abc90613e99565b612f5e6040518060400160405280600281526020016136a160f11b81525082611da4565b612f8f5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610abc565b6001600f83604051612fa19190613e45565b90815260408051602092819003830181206001600160a01b038616600090815290845291909120805460ff1916931515939093179092556000805160206143b283398151915291612ff6918591859101614082565b60408051601f198184030181529082905261205f9133906142ac565b6001805460ff161515146130385760405162461bcd60e51b8152600401610abc90613e99565b806010846040516130499190613e45565b90815260408051602092819003830190206001600160a01b038616600090815292529020805460ff1916600183600281111561308757613087613e0b565b02179055506000805160206143b28339815191528383836040516020016130b0939291906142d8565b60408051601f1981840301815290829052610a27913390614309565b60008060008484116130dd57600080fd5b6000846130ea8789613ed1565b6130f49190613efe565b90506000856131038882613f12565b61310d908a613ed1565b6131179190613efe565b905081816131258183613df8565b61312f908b613f12565b945094509450505093509350939050565b6001805460ff161515146131665760405162461bcd60e51b8152600401610abc90613e99565b600e846040516131769190613e45565b90815260408051602092819003830190206001600160a01b038616600090815292529020548211156131ba5760405162461bcd60e51b8152600401610abc90614143565b6131c58383836123c5565b81600e856040516131d69190613e45565b90815260200160405180910390206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546132169190613f12565b9091555050604051600e9061322c908690613e45565b90815260408051602092819003830190206001600160a01b0386166000908152925290205415801561326657506001600160a01b03831615155b156132a0576001600d8560405161327d9190613e45565b9081526020016040518091039020600082825461329a9190613f12565b90915550505b6000805160206143b2833981519152848484846040516020016132c69493929190614335565b60408051601f1981840301815290829052612972913390614371565b856132fc8160008054918152600660205260409020541190565b6133185760405162461bcd60e51b8152600401610abc90613e7d565b6001805460ff1615151461333e5760405162461bcd60e51b8152600401610abc90613e99565b60008781526002602052604090206001810154905461335d9190613efe565b6133678688613efe565b11156133855760405162461bcd60e51b8152600401610abc90614143565b61338f86866138c3565b80965081975050506040518060a00160405280878152602001868152602001856001600160a01b03168152602001848152602001836001600160a01b031681525060056000898152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060016004600089815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4c4dcd7b4186fe1c900d89bc3c911766f63cf9c3570750481f0d89bfbcb752858787878787876040516134f596959493929190958652602086019490945260408501929092526001600160a01b03908116606085015260808401919091521660a082015260c00190565b60405180910390a150505050505050565b6001805460ff1615151461352c5760405162461bcd60e51b8152600401610abc90613e99565b6001805460ff19169055565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114613585576040519150601f19603f3d011682016040523d82523d6000602084013e61358a565b606091505b5050905080610acf5760405162461bcd60e51b81526020600482015260026024820152612a2360f11b6044820152606401610abc565b6001600160a01b038216600090815260086020526040812080548392906135e8908490613f12565b90915550506001600160a01b03821660009081526009602052604081208054839290613615908490613f12565b90915550505050565b6136278161137e565b6136435760405162461bcd60e51b8152600401610abc90613eb5565b6001600160a01b0381166000908152600860205260409020541561368e5760405162461bcd60e51b8152602060048201526002602482015261272d60f11b6044820152606401610abc565b6001600160a01b03166000908152600760205260409020805460ff19169055565b6136b88161137e565b156136ea5760405162461bcd60e51b815260206004820152600260248201526120a960f11b6044820152606401610abc565b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b60008061371b8387613ed1565b95506137278585613ed1565b93506137338487613df8565b61373d8487613ed1565b9150915094509492505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160408051808303601f1901815282825280516020918201206001600160a01b03878116600081815260038086528682208590558482526006865286822060001990556080880187528c88528588018c81528888018481526060808b018d81528886526002808b52958b90209b518c55925160018c01559051938a0180546001600160a01b0319169490961693909317909455925196909201959095558351828152928301949094529181018590529092507f90e88e994885f1cdd31d3393f0b012e817804fc9d2adef69d0d7e5053d1e29ad91016111fb565b60008281526006602090815260409182902083905581518481529081018390527fa3deafde27c3ffde83f038b337d8b0405d225455ae09fbed6a211ef4ee465f4f910161205f565b6000806138a18387613ed1565b95506138ad8486613ed1565b94506138b98587613f12565b61373d8486613ed1565b60008060006138d2858561394f565b90506138de8185613efe565b6138e88287613efe565b6138f29190613efe565b6138fc8587613efe565b1461392f5760405162461bcd60e51b815260206004820152600360248201526215935560ea1b6044820152606401610abc565b6139398186613efe565b6139438286613efe565b92509250509250929050565b60005b811561396d5781613963818561439d565b9093509150613952565b5090919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261399b57600080fd5b813567ffffffffffffffff808211156139b6576139b6613974565b604051601f8301601f19908116603f011681019082821181831017156139de576139de613974565b816040528381528660208588010111156139f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560038110613a2657600080fd5b919050565b60008060408385031215613a3e57600080fd5b823567ffffffffffffffff811115613a5557600080fd5b613a618582860161398a565b925050613a7060208401613a17565b90509250929050565b600060208284031215613a8b57600080fd5b5035919050565b600060208284031215613aa457600080fd5b813567ffffffffffffffff811115613abb57600080fd5b613ac78482850161398a565b949350505050565b80356001600160a01b0381168114613a2657600080fd5b60008060408385031215613af957600080fd5b823567ffffffffffffffff811115613b1057600080fd5b613b1c8582860161398a565b925050613a7060208401613acf565b600060208284031215613b3d57600080fd5b610d1282613acf565b60008060408385031215613b5957600080fd5b50508035926020909101359150565b600080600060608486031215613b7d57600080fd5b833567ffffffffffffffff811115613b9457600080fd5b613ba08682870161398a565b935050613baf60208501613acf565b9150604084013590509250925092565b8015158114610b0a57600080fd5b600060208284031215613bdf57600080fd5b8135610d1281613bbf565b60008060008060808587031215613c0057600080fd5b843593506020850135925060408501359150613c1e60608601613acf565b905092959194509250565b60008060408385031215613c3c57600080fd5b613c4583613acf565b946020939093013593505050565b60008060008060808587031215613c6957600080fd5b843567ffffffffffffffff80821115613c8157600080fd5b613c8d8883890161398a565b95506020870135915080821115613ca357600080fd5b50613cb08782880161398a565b935050613cbf60408601613acf565b9396929550929360600135925050565b600080600060608486031215613ce457600080fd5b833567ffffffffffffffff811115613cfb57600080fd5b613d078682870161398a565b935050613d1660208501613acf565b9150613d2460408501613a17565b90509250925092565b60008060008060808587031215613d4357600080fd5b843567ffffffffffffffff811115613d5a57600080fd5b613d668782880161398a565b945050613d7560208601613acf565b925060408501359150613c1e60608601613acf565b60008060008060008060c08789031215613da357600080fd5b863595506020870135945060408701359350613dc160608801613acf565b925060808701359150613dd660a08801613acf565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c2357610c23613de2565b634e487b7160e01b600052602160045260246000fd5b60005b83811015613e3c578181015183820152602001613e24565b50506000910152565b60008251613e57818460208701613e21565b9190910192915050565b60208082526002908201526109e960f31b604082015260600190565b602080825260029082015261555360f01b604082015260600190565b602080825260029082015261115360f21b604082015260600190565b602080825260029082015261155560f21b604082015260600190565b8082028115828204841417610c2357610c23613de2565b634e487b7160e01b600052601260045260246000fd5b600082613f0d57613f0d613ee8565b500490565b81810381811115610c2357610c23613de2565b60008151808452613f3d816020860160208601613e21565b601f01601f19169290920160200192915050565b60608152600260608201526118d160f21b608082015260a060208201526000613f7d60a0830185613f25565b905060018060a01b03831660408301529392505050565b600060208284031215613fa657600080fd5b5051919050565b602080825260029082015261125560f21b604082015260600190565b600060208284031215613fdb57600080fd5b8151610d1281613bbf565b6003811061400457634e487b7160e01b600052602160045260246000fd5b9052565b60408152600061401b6040830185613f25565b9050610d126020830184613fe6565b60608152600260608201526139a160f11b608082015260a060208201526000613f7d60a0830185613f25565b606081526002606082015261191160f21b608082015260a060208201526000613f7d60a0830185613f25565b6040815260006140956040830185613f25565b905060018060a01b03831660208301529392505050565b60608152600260608201526131a160f11b608082015260a060208201526000613f7d60a0830185613f25565b606081526002606082015261724160f01b608082015260a060208201526000613f7d60a0830185613f25565b602081526000610d126020830184613f25565b606081526002606082015261322160f11b608082015260a060208201526000613f7d60a0830185613f25565b60208082526002908201526124a360f11b604082015260600190565b6060815260006141726060830186613f25565b6001600160a01b039490941660208301525060400152919050565b6060815260026060820152611a5160f21b608082015260a060208201526000613f7d60a0830185613f25565b606081526003606082015262734e5360e81b608082015260a060208201526000613f7d60a0830185613f25565b6060815260026060820152611d5560f21b608082015260a060208201526000613f7d60a0830185613f25565b6060815260026060820152611c9560f21b608082015260a060208201526000613f7d60a0830185613f25565b6080815260006142516080830187613f25565b82810360208401526142638187613f25565b6001600160a01b0395909516604084015250506060015292915050565b6060815260026060820152611b5560f21b608082015260a060208201526000613f7d60a0830185613f25565b606081526002606082015261614160f01b608082015260a060208201526000613f7d60a0830185613f25565b6060815260006142eb6060830186613f25565b6001600160a01b03851660208401529050613ac76040830184613fe6565b606081526002606082015261073560f41b608082015260a060208201526000613f7d60a0830185613f25565b6080815260006143486080830187613f25565b6001600160a01b0395861660208401526040830194909452509216606090920191909152919050565b6060815260026060820152611d1560f21b608082015260a060208201526000613f7d60a0830185613f25565b6000826143ac576143ac613ee8565b50069056fe43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055a2646970667358221220602682327f935254d1b2b2f6d0d1cbba272fbbbe27418e020ee3abb5f9ed847464736f6c63430008130033",
  "deployedSourceMap": "307:23654:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:53:1;2065:1;2068:9;2078:10;2036:20;:53::i;:::-;307:23654:0;;;;;4946:18:2;;;;;;;;;;-1:-1:-1;4946:18:2;;;;;;;;;;;179:14:8;;172:22;154:41;;142:2;127:18;4946::2;;;;;;;;11319:220:0;;;;;;;;;;-1:-1:-1;11319:220:0;;;;;:::i;:::-;;:::i;11926:80::-;;;;;;;;;;;;;:::i;12007:162:2:-;;;;;;;;;;-1:-1:-1;12007:162:2;;;;;:::i;:::-;;:::i;13481:180:0:-;;;;;;;;;;-1:-1:-1;13481:180:0;;;;;:::i;:::-;;:::i;7742:118::-;;;;;;;;;;-1:-1:-1;7742:118:0;;;;;:::i;:::-;;:::i;15047:308::-;;;;;;;;;;-1:-1:-1;15047:308:0;;;;;:::i;:::-;;:::i;12180:160::-;;;;;;;;;;-1:-1:-1;12180:160:0;;;;;:::i;:::-;;:::i;:::-;;;3064:25:8;;;3052:2;3037:18;12180:160:0;2918:177:8;8032:153:0;;;;;;;;;;-1:-1:-1;8032:153:0;;;;;:::i;:::-;;:::i;8925:176::-;;;;;;;;;;-1:-1:-1;8925:176:0;;;;;:::i;:::-;;:::i;2968:627:1:-;;;;;;;;;;-1:-1:-1;2968:627:1;;;;;:::i;:::-;;:::i;5651:702:0:-;;;;;;;;;;-1:-1:-1;5651:702:0;;;;;:::i;:::-;;:::i;9205:137::-;;;;;;;;;;-1:-1:-1;9205:137:0;;;;;:::i;:::-;;:::i;3757:130:1:-;;;;;;;;;;-1:-1:-1;3757:130:1;;;;;:::i;:::-;-1:-1:-1;;;;;3852:28:1;3826:7;3852:28;;;:14;:28;;;;;;;3757:130;12710:127:0;;;;;;;;;;-1:-1:-1;12710:127:0;;;;;:::i;:::-;12774:7;12800:24;;;:14;:24;;;;;:30;;;;12710:127;750:41:1;;;;;;;;;;-1:-1:-1;750:41:1;;;;;:::i;:::-;;;;;;;;;;;;;;12455:134:0;;;;;;;;;;-1:-1:-1;12455:134:0;;;;;:::i;:::-;12519:7;12545:24;;;:14;:24;;;;;:37;-1:-1:-1;;;;;12545:37:0;;12455:134;;;;-1:-1:-1;;;;;3708:32:8;;;3690:51;;3678:2;3663:18;12455:134:0;3544:203:8;7397:200:0;;;;;;;;;;-1:-1:-1;7397:200:0;;;;;:::i;:::-;;:::i;13293:119:2:-;;;;;;;;;;-1:-1:-1;13293:119:2;;;;;:::i;:::-;13355:7;13381:18;;;:11;:18;;;;;:24;;;;13293:119;11659:185:0;;;;;;;;;;-1:-1:-1;11659:185:0;;;;;:::i;:::-;;:::i;6893:152::-;;;;;;;;;;-1:-1:-1;6893:152:0;;;;;:::i;:::-;;:::i;4081:163:1:-;;;;;;;;;;-1:-1:-1;4081:163:1;;;;;:::i;:::-;;:::i;6547:148:0:-;;;;;;;;;;-1:-1:-1;6547:148:0;;;;;:::i;:::-;;:::i;12681:208:2:-;;;;;;;;;;-1:-1:-1;12681:208:2;;;;;:::i;:::-;;:::i;13797:114:0:-;;;;;;;;;;-1:-1:-1;13797:114:0;;;;;:::i;:::-;13859:4;13880:24;;;:14;:24;;;;;;;;;13797:114;2360:379:1;;;;;;;;;;-1:-1:-1;2360:379:1;;;;;:::i;:::-;;:::i;13573:125:2:-;;;;;;;;;;-1:-1:-1;13573:125:2;;;;;:::i;:::-;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;10288:218:0;;;;;;;;;;-1:-1:-1;10288:218:0;;;;;:::i;:::-;;:::i;14125:181::-;;;;;;;;;;-1:-1:-1;14125:181:0;;;;;:::i;:::-;;:::i;12930:85:2:-;;;;;;;;;;-1:-1:-1;12977:7:2;13003:5;12930:85;;8427:245:0;;;;;;;;;;-1:-1:-1;8427:245:0;;;;;:::i;:::-;;:::i;13221:122::-;;;;;;;;;;-1:-1:-1;13221:122:0;;;;;:::i;:::-;;:::i;5074:48:2:-;;;;;;;;;;-1:-1:-1;5074:48:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:48:2;;;;;;;;;;;;;6167:25:8;;;6223:2;6208:18;;6201:34;;;;-1:-1:-1;;;;;6271:32:8;6266:2;6251:18;;6244:60;6335:2;6320:18;;6313:34;6154:3;6139:19;;5936:417;5220:47:2;;;;;;;;;;-1:-1:-1;5220:47:2;;;;;:::i;:::-;;;;;;;;;;;;;;10790:318:0;;;;;;;;;;-1:-1:-1;10790:318:0;;;;;:::i;:::-;;:::i;9220:1830:2:-;;;;;;:::i;:::-;;:::i;14522:298:0:-;;;;;;;;;;-1:-1:-1;14522:298:0;;;;;:::i;:::-;;:::i;9709:208::-;;;;;;;;;;-1:-1:-1;9709:208:0;;;;;:::i;:::-;;:::i;13854:125:2:-;;;;;;;;;;-1:-1:-1;13854:125:2;;;;;:::i;:::-;;:::i;12957:128:0:-;;;;;;;;;;-1:-1:-1;12957:128:0;;;;;:::i;:::-;13024:7;13050:28;;;:18;:28;;;;;;;12957:128;13094::2;;;;;;;;;;-1:-1:-1;13094:128:2;;;;;:::i;:::-;13162:7;13188:27;;;:20;:27;;;;;;;13094:128;11651:250;;;;;;;;;;-1:-1:-1;11651:250:2;;;;;:::i;:::-;;:::i;14199:191::-;;;;;;;;;;-1:-1:-1;14199:191:2;;;;;:::i;:::-;;:::i;23302:453:0:-;23411:53;23438:12;23452:5;23459:4;23411:26;:53::i;:::-;23506:21;;-1:-1:-1;;;8323:19:8;;23506:13:0;;8367:1:8;8358:11;23506:21:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;23506:35:0;;;;;;;;;;;:40;:70;;;;-1:-1:-1;;;;;;23550:26:0;;;;23506:70;23502:140;;;23630:1;23592:26;:34;;;;-1:-1:-1;;;8323:19:8;;8367:1;8358:11;;8121:254;23592:34:0;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;23502:140:0;23690:5;23651:13;:21;;;;-1:-1:-1;;;8323:19:8;;8367:1;8358:11;;8121:254;23651:21:0;;;;;;;;;;;;;:35;23673:12;-1:-1:-1;;;;;23651:35:0;-1:-1:-1;;;;;23651:35:0;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;23710:38:0;;;-1:-1:-1;;;;;8900:15:8;;;8882:34;;8947:2;8932:18;;8925:34;;;8995:15;;8975:18;;;8968:43;;;;23710:38:0;;8832:2:8;8817:18;23710:38:0;;;;;;;;23302:453;;;:::o;11319:220::-;11415:10;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;11472:8:::1;11445:35;;;;;;;;:::i;:::-;:11;11457:10;11445:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:35;::::0;::::1;;;;;;:::i;:::-;::::0;11437:50:::1;;;::::0;-1:-1:-1;;;11437:50:0;;9905:2:8;11437:50:0::1;::::0;::::1;9887:21:8::0;9944:1;9924:18;;;9917:29;-1:-1:-1;;;9962:18:8;;;9955:32;10004:18;;11437:50:0::1;;;;;;;;;11497:35;11512:10;11523:8;11497:14;:35::i;:::-;11319:220:::0;;;:::o;11926:80::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;11987:12:::1;:10;:12::i;:::-;11926:80:::0;:::o;12007:162:2:-;8644:18;;;;:11;:18;;;;;;;;:24;;12060:5;;-1:-1:-1;;;;;8644:24:2;8672:10;8644:38;8636:53;;;;-1:-1:-1;;;8636:53:2;;;;;;;:::i;:::-;12082:5:::1;8212:19;8225:5;13630:4:::0;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19:::1;8204:34;;;;-1:-1:-1::0;;;8204:34:2::1;;;;;;;:::i;:::-;12107:20:::2;::::0;;;:13:::2;:20;::::0;;;;;::::2;;12099:35;;;::::0;-1:-1:-1;;;12099:35:2;;10895:2:8;12099:35:2::2;::::0;::::2;10877:21:8::0;10934:1;10914:18;;;10907:29;-1:-1:-1;;;10952:18:8;;;10945:32;10994:18;;12099:35:2::2;10693:325:8::0;12099:35:2::2;12144:18;12156:5;12144:11;:18::i;13481:180:0:-:0;13546:4;13569:26;13596:8;13569:36;;;;;;:::i;:::-;;;;;;;;;;;;;;13609:1;13569:41;:85;;;;;13614:13;13628:8;13614:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:35;;;;;;;;;:40;13569:85;13562:92;13481:180;-1:-1:-1;;13481:180:0:o;7742:118::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;7826:27:::1;7844:8;7826:17;:27::i;:::-;7742:118:::0;;:::o;15047:308::-;15133:4;15155:22;15169:7;15155:13;:22::i;:::-;:46;;;-1:-1:-1;15181:20:0;;;;15155:46;15149:70;;-1:-1:-1;15212:5:0;15205:12;;15149:70;15267:25;15235:7;15243:10;15235:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15235:28:0;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;:113;;;-1:-1:-1;15323:25:0;15296:11;15308:10;15296:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:52;;;;;;;;:::i;:::-;;15235:113;15228:120;15047:308;-1:-1:-1;;;15047:308:0:o;12180:160::-;12270:7;12296:13;12310:8;12296:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12296:37:0;;;;;;;;;;;;-1:-1:-1;12180:160:0;;;;:::o;8032:153::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8396:6:2::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;8147:31:0::2;8159:8;8168:9;8147:11;:31::i;8925:176::-:0;3934:126;;;;;;;;;;;;;-1:-1:-1;;;3934:126:0;;;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;9038:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;9058:36:::2;9075:8;9084:9;9058:16;:36::i;:::-;4051:1:::1;8925:176:::0;;;:::o;2968:627:1:-;8023:25:2;8037:10;8023:13;:25::i;:::-;8015:40;;;;-1:-1:-1;;;8015:40:2;;11555:2:8;8015:40:2;;;11537:21:8;11594:1;11574:18;;;11567:29;-1:-1:-1;;;11612:18:8;;;11605:32;11654:18;;8015:40:2;11353:325:8;8015:40:2;3054:26:1::1;3067:12;3054;:26::i;:::-;3046:41;;;;-1:-1:-1::0;;;3046:41:1::1;;;;;;;:::i;:::-;3126:10;3097:13;3113:24:::0;;;:12:::1;:24;::::0;;;;;;;;-1:-1:-1;;;;;3156:30:1;::::1;::::0;;:16:::1;:30:::0;;;;;:37;;;;;;;;;;::::1;;3155:38;3147:53;;;::::0;-1:-1:-1;;;3147:53:1;;12215:2:8;3147:53:1::1;::::0;::::1;12197:21:8::0;12254:1;12234:18;;;12227:29;-1:-1:-1;;;12272:18:8;;;12265:32;12314:18;;3147:53:1::1;12013:325:8::0;3147:53:1::1;-1:-1:-1::0;;;;;3210:30:1;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;3210:44:1::1;3250:4;3210:44:::0;;::::1;::::0;;;3340:11:::1;:18:::0;;;;;:30;;::::1;::::0;3309:28;;3286:20;;;:6:::1;:20:::0;;;;;;3210:30;;3340;;3286:51:::1;::::0;3309:28;3286:51:::1;:::i;:::-;:84;;;;:::i;:::-;3264:106;;3388:11;3403:1;3388:16:::0;3380:29:::1;;;::::0;-1:-1:-1;;;3380:29:1;;12975:2:8;3380:29:1::1;::::0;::::1;12957:21:8::0;-1:-1:-1;12994:18:8;;;12987:29;13033:18;;3380:29:1::1;12773:284:8::0;3380:29:1::1;-1:-1:-1::0;;;;;3419:28:1;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;3451:11;;3419:28;:43:::1;::::0;3451:11;;3419:43:::1;:::i;:::-;::::0;;;-1:-1:-1;3472:51:1::1;::::0;-1:-1:-1;3487:12:1;3500:11;3512:10:::1;3472:14;:51::i;:::-;3538:50;::::0;;-1:-1:-1;;;;;8900:15:8;;8882:34;;8947:2;8932:18;;8925:34;;;3577:10:1::1;8975:18:8::0;;;8968:43;;;;3538:50:1::1;::::0;8832:2:8;8817:18;3538:50:1::1;8642:375:8::0;5651:702:0;8644:18:2;;;;:11;:18;;;;;;;;:24;;5727:5:0;;-1:-1:-1;;;;;8644:24:2;8672:10;8644:38;8636:53;;;;-1:-1:-1;;;8636:53:2;;;;;;;:::i;:::-;13859:4:0;13880:24;;;:14;:24;;;;;;5755:8;;13880:24;;4772:33:::1;;;::::0;::::1;;8396:6:2::2;::::0;;::::2;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::2;;;;;;;:::i;:::-;5796:28:0::3;5809:5;5815:8;5796:12;:28::i;:::-;5788:44;;;::::0;-1:-1:-1;;;5788:44:0;;13397:2:8;5788:44:0::3;::::0;::::3;13379:21:8::0;13436:1;13416:18;;;13409:29;-1:-1:-1;;;13454:18:8;;;13447:33;13497:18;;5788:44:0::3;13195:326:8::0;5788:44:0::3;5850:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;;::::3;;:44;5842:59;;;::::0;-1:-1:-1;;;5842:59:0;;12215:2:8;5842:59:0::3;::::0;::::3;12197:21:8::0;12254:1;12234:18;;;12227:29;-1:-1:-1;;;12272:18:8;;;12265:32;12314:18;;5842:59:0::3;12013:325:8::0;5842:59:0::3;5911:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;:42;;-1:-1:-1;;5911:42:0::3;5949:4;5911:42:::0;;::::3;::::0;;;6051:11:::3;:18:::0;;;;;:30;;::::3;::::0;6020:28;;5987:24;;;:14:::3;:24:::0;;;;;;:30:::3;::::0;6051;;5987:61:::3;::::0;::::3;:::i;:::-;:94;;;;:::i;:::-;5963:118;;6099:13;6116:1;6099:18:::0;6091:34:::3;;;::::0;-1:-1:-1;;;6091:34:0;;13728:2:8;6091:34:0::3;::::0;::::3;13710:21:8::0;13767:1;13747:18;;;13740:29;-1:-1:-1;;;13785:18:8;;;13778:33;13828:18;;6091:34:0::3;13526:326:8::0;6091:34:0::3;6135:28;::::0;;;:18:::3;:28;::::0;;;;:45;;6167:13;;6135:28;:45:::3;::::0;6167:13;;6135:45:::3;:::i;:::-;::::0;;;-1:-1:-1;;6205:24:0::3;::::0;;;:14:::3;:24;::::0;;;;:37;6190:78:::3;::::0;-1:-1:-1;;;;;6205:37:0::3;6243:13:::0;6257:10:::3;6190:14;:78::i;:::-;6300:34;::::0;;::::3;::::0;::::3;14031:25:8::0;;;14072:18;;;14065:34;;;-1:-1:-1;;;;;;;;;;;6283:63:0;14004:18:8;;6300:34:0::3;::::0;;-1:-1:-1;;6300:34:0;;::::3;::::0;;;;;;;6283:63:::3;::::0;6335:10:::3;::::0;6283:63:::3;:::i;:::-;;;;;;;;5778:575;8699:1:2::1;5651:702:0::0;;;:::o;9205:137::-;3934:126;;;;;;;;;;;;;-1:-1:-1;;;3934:126:0;;;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;9294:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;9314:21:::2;9326:8;9314:11;:21::i;7397:200::-:0;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;7525:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;7545:43:::2;7560:8;7569:12;7582:5;7545:14;:43::i;:::-;3765:1:::1;7397:200:::0;;;;:::o;11659:185::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;11755:20:::1;::::0;:32;::::1;;:20;::::0;;::::1;:32;;::::0;11747:47:::1;;;::::0;-1:-1:-1;;;11747:47:0;;9905:2:8;11747:47:0::1;::::0;::::1;9887:21:8::0;9944:1;9924:18;;;9917:29;-1:-1:-1;;;9962:18:8;;;9955:32;10004:18;;11747:47:0::1;9703:325:8::0;11747:47:0::1;11804:33;11828:8;11804:23;:33::i;6893:152::-:0;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8396:6:2::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;7001:37:0::2;7025:12;7001:23;:37::i;4081:163:1:-:0;-1:-1:-1;;;;;4166:33:1;;4145:4;4166:33;;;:19;:33;;;;;;;;:41;;:33;:41;;:71;;-1:-1:-1;;;;;;;4211:26:1;;;4081:163::o;6547:148:0:-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8396:6:2::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;6653:35:0::2;6675:12;6653:21;:35::i;12681:208:2:-:0;8644:18;;;;:11;:18;;;;;;;;:24;;12787:11;;-1:-1:-1;;;;;8644:24:2;8672:10;8644:38;8636:53;;;;-1:-1:-1;;;8636:53:2;;;;;;;:::i;:::-;12815:11:::1;8212:19;8225:5;13630:4:::0;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19:::1;8204:34;;;;-1:-1:-1::0;;;8204:34:2::1;;;;;;;:::i;:::-;12838:44:::2;12845:11;12857:9;12867:11;12879:2;12838:6;:44::i;:::-;8699:1:::1;12681:208:::0;;;;;:::o;2360:379:1:-;2446:26;2459:12;2446;:26::i;:::-;2438:40;;;;-1:-1:-1;;;2438:40:1;;;;;;;:::i;:::-;2539:41;;-1:-1:-1;;;2539:41:1;;2555:10;2539:41;;;15140:34:8;2574:4:1;15190:18:8;;;15183:43;2508:12:1;;2584:5;;-1:-1:-1;;;;;2539:15:1;;;;;15075:18:8;;2539:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;2531:64;;;;-1:-1:-1;;;2531:64:1;;;;;;;:::i;:::-;2613:51;;-1:-1:-1;;;2613:51:1;;2632:10;2613:51;;;15996:34:8;2651:4:1;16046:18:8;;;16039:43;16098:18;;;16091:34;;;-1:-1:-1;;;;;2613:18:1;;;;;15931::8;;2613:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2605:66;;;;-1:-1:-1;;;2605:66:1;;16588:2:8;2605:66:1;;;16570:21:8;16627:1;16607:18;;;16600:29;-1:-1:-1;;;16645:18:8;;;16638:32;16687:18;;2605:66:1;16386:325:8;2605:66:1;2681:51;2702:12;2715:5;2721:10;2681:20;:51::i;10288:218:0:-;10421:12;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;;;;10445:54:::1;10456:12;10469:10;10480:12;10493:5;10445:10;:54::i;14125:181::-:0;14207:4;14230:11;14242:8;14230:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14230:30:0;;;;;;;;;;;;;:38;;:30;:38;;:69;;;14272:27;;;;;;;;;;;;;;-1:-1:-1;;;14272:27:0;;;14291:7;14272:13;:27::i;8427:245::-;3653:120;;;;;;;;;;;;;-1:-1:-1;;;3653:120:0;;;3721:33;3731:10;3743;3721:9;:33::i;:::-;3713:42;;;;;;8536:8:::1;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;::::0;::::1;;8564:24:::2;8578:9;8564:13;:24::i;:::-;:48;;;-1:-1:-1::0;8592:20:0::2;::::0;::::2;;8564:48;8556:66;;;::::0;-1:-1:-1;;;8556:66:0;;16918:2:8;8556:66:0::2;::::0;::::2;16900:21:8::0;16957:1;16937:18;;;16930:29;-1:-1:-1;;;16975:18:8;;;16968:35;17020:18;;8556:66:0::2;16716:328:8::0;8556:66:0::2;8632:33;8646:8;8655:9;8632:13;:33::i;13221:122::-:0;13285:4;13308:10;13319:8;13308:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13221:122;-1:-1:-1;;13221:122:0:o;10790:318::-;10899:10;4003:37;4017:10;4029;4003:13;:37::i;:::-;3995:46;;;;;;10929:22:::1;10943:7;10929:13;:22::i;:::-;:46;;;-1:-1:-1::0;10955:20:0::1;::::0;::::1;;10929:46;10921:64;;;::::0;-1:-1:-1;;;10921:64:0;;16918:2:8;10921:64:0::1;::::0;::::1;16900:21:8::0;16957:1;16937:18;;;16930:29;-1:-1:-1;;;16975:18:8;;;16968:35;17020:18;;10921:64:0::1;16716:328:8::0;10921:64:0::1;11035:8;11003:40;;;;;;;;:::i;:::-;:7;11011:10;11003:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;11003:28:0;::::1;;::::0;;;;;;;;::::1;;:40;::::0;::::1;;;;;;:::i;:::-;::::0;10995:56:::1;;;::::0;-1:-1:-1;;;10995:56:0;;17251:2:8;10995:56:0::1;::::0;::::1;17233:21:8::0;17290:1;17270:18;;;17263:29;-1:-1:-1;;;17308:18:8;;;17301:33;17351:18;;10995:56:0::1;17049:326:8::0;10995:56:0::1;11061:39;11072:10;11083:7;11091:8;11061:10;:39::i;9220:1830:2:-:0;9285:5;8212:19;8225:5;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19;8204:34;;;;-1:-1:-1;;;8204:34:2;;;;;;;:::i;:::-;9310:20:::1;::::0;;;:13:::1;:20;::::0;;;;;::::1;;9302:35;;;::::0;-1:-1:-1;;;9302:35:2;;10895:2:8;9302:35:2::1;::::0;::::1;10877:21:8::0;10934:1;10914:18;;;10907:29;-1:-1:-1;;;10952:18:8;;;10945:32;10994:18;;9302:35:2::1;10693:325:8::0;9302:35:2::1;9356:18;::::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;9356:21:2::1;9381:10;9356:35;::::0;9355:80:::1;;-1:-1:-1::0;9430:3:2::1;9397:18:::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;9397:21:2::1;:37:::0;9355:80:::1;9347:95;;;::::0;-1:-1:-1;;;9347:95:2;;17582:2:8;9347:95:2::1;::::0;::::1;17564:21:8::0;17621:1;17601:18;;;17594:29;-1:-1:-1;;;17639:18:8;;;17632:32;17681:18;;9347:95:2::1;17380:325:8::0;9347:95:2::1;9452:18;9464:5;9452:11;:18::i;:::-;9481:23;9587:18:::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;9481:23;;;;9551:69:::1;::::0;9612:2:::1;9615:4;9551:35;:69::i;:::-;9480:140:::0;;-1:-1:-1;9480:140:2;-1:-1:-1;9480:140:2;-1:-1:-1;9630:27:2::1;9480:140:::0;;9630:27:::1;:::i;:::-;9762:3;9719:18:::0;;;:11:::1;:18;::::0;;;;:31:::1;;::::0;9630:27;;-1:-1:-1;;;;;;9719:31:2::1;9715:978;;9803:18;::::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;9790:9:::1;:37;;9782:52;;;::::0;-1:-1:-1;;;9782:52:2;;17912:2:8;9782:52:2::1;::::0;::::1;17894:21:8::0;17951:1;17931:18;;;17924:29;-1:-1:-1;;;17969:18:8;;;17962:32;18011:18;;9782:52:2::1;17710:325:8::0;9782:52:2::1;9925:83;::::0;9899:21:::1;::::0;9933:42:::1;::::0;9988:15;;9899:21;9925:83;9899:21;9925:83;9988:15;9933:42;9925:83:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;10062:20:2::1;10095:18:::0;;;:11:::1;:18;::::0;;;;;;;:24;;::::1;::::0;10087:64;;9898:110;;-1:-1:-1;10062:20:2;;-1:-1:-1;;;;;10095:24:2;;::::1;::::0;10132:14;;10062:20;10087:64;10062:20;10087:64;10132:14;10095:24;10087:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10061:90;;;10173:15;:35;;;;;10192:16;10173:35;10165:50;;;::::0;-1:-1:-1;;;10165:50:2;;18452:2:8;10165:50:2::1;::::0;::::1;18434:21:8::0;18491:1;18471:18;;;18464:29;-1:-1:-1;;;18509:18:8;;;18502:32;18551:18;;10165:50:2::1;18250:325:8::0;10165:50:2::1;9768:458;;9715:978;;;10255:11;10275:18:::0;;;:11:::1;:18;::::0;;;;;;:31:::1;::::0;::::1;::::0;10374:24:::1;::::0;;::::1;::::0;10329:41;;-1:-1:-1;;;10329:41:2;;10345:10:::1;10329:41;::::0;::::1;15140:34:8::0;10364:4:2::1;15190:18:8::0;;;15183:43;-1:-1:-1;;;;;10275:31:2;;::::1;::::0;10374:24;10275:31;;10329:15:::1;::::0;15075:18:8;;10329:41:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;10321:83;;;;-1:-1:-1::0;;;10321:83:2::1;;;;;;;:::i;:::-;10468:91;::::0;-1:-1:-1;;;10468:91:2;;10487:10:::1;10468:91;::::0;::::1;15996:34:8::0;10499:42:2::1;16046:18:8::0;;;16039:43;16098:18;;;16091:34;;;-1:-1:-1;;;;;10468:18:2;::::1;::::0;::::1;::::0;15931::8;;10468:91:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10642:18:2::1;::::0;;;:11:::1;:18;::::0;;;;;;;;:24:::1;::::0;10612:70;;-1:-1:-1;;;10612:70:2;;10631:10:::1;10612:70;::::0;::::1;15996:34:8::0;-1:-1:-1;;;;;10642:24:2;;::::1;16046:18:8::0;;;16039:43;16098:18;;;16091:34;;;10612:18:2;;::::1;::::0;::::1;::::0;15931::8;;10612:70:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10241:452;9715:978;10711:18;::::0;;;:11:::1;:18;::::0;;;;:28;:33;;::::1;::::0;:72:::1;;-1:-1:-1::0;10748:18:2::1;::::0;;;:11:::1;:18;::::0;;;;:30:::1;;::::0;:35;::::1;10711:72;10703:87;;;::::0;-1:-1:-1;;;10703:87:2;;18782:2:8;10703:87:2::1;::::0;::::1;18764:21:8::0;18821:1;18801:18;;;18794:29;-1:-1:-1;;;18839:18:8;;;18832:32;18881:18;;10703:87:2::1;18580:325:8::0;10703:87:2::1;10814:18;::::0;;;:11:::1;:18;::::0;;;;:28;;10843:30:::1;::::0;;::::1;::::0;10800:85:::1;::::0;10807:5;;10874:10:::1;10800:6;:85::i;:::-;10915:18;::::0;;;:11:::1;:18;::::0;;;;;;;;:28;;10944:30:::1;::::0;::::1;::::0;10986:31:::1;::::0;::::1;::::0;11018:24:::1;::::0;;::::1;::::0;10900:143;;19197:25:8;;;19238:18;;;19231:34;;;;19281:18;;;19274:34;;;;10975:10:2::1;19377:2:8::0;19362:18;;19355:43;-1:-1:-1;;;;;10986:31:2::1;19429:3:8::0;19414:19;;19407:44;19335:3;19467:19;;19460:35;;;;10900:143:2::1;::::0;19184:3:8;19169:19;10900:143:2::1;18910:591:8::0;14522:298:0;14604:4;14626:22;14640:7;14626:13;:22::i;:::-;:46;;;-1:-1:-1;14652:20:0;;;;14626:46;14620:70;;-1:-1:-1;14683:5:0;14676:12;;14620:70;14738:22;14706:7;14714:10;14706:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14706:28:0;;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;;:107;;;-1:-1:-1;14791:22:0;14764:11;14776:10;14764:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:49;;;;;;;;:::i;:::-;;;;14522:298;-1:-1:-1;;;14522:298:0:o;9709:208::-;9836:8;4273:33;4285:8;4295:10;4273:11;:33::i;:::-;4265:42;;;;;;9856:54:::1;9879:8;9888:12;9901:5;9907:2;9856:22;:54::i;13854:125:2:-:0;-1:-1:-1;;;;;13950:21:2;;13914:4;13950:21;;;:12;:21;;;;;;13937:35;;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;11651:250;8644:18;;;;:11;:18;;;;;;;;:24;;11793:5;;-1:-1:-1;;;;;8644:24:2;8672:10;8644:38;8636:53;;;;-1:-1:-1;;;8636:53:2;;;;;;;:::i;:::-;11815:5:::1;8212:19;8225:5;13630:4:::0;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19:::1;8204:34;;;;-1:-1:-1::0;;;8204:34:2::1;;;;;;;:::i;:::-;11832:62:::2;11844:5;11850:9;11860:11;11872:12;11885:5;11891:2;11832:11;:62::i;:::-;8699:1:::1;11651:250:::0;;;;;;;:::o;14199:191::-;14273:4;14296:18;;;:11;:18;;;;;:32;;;:43;-1:-1:-1;14296:43:2;;;:87;;-1:-1:-1;;13162:7:2;13188:27;;;:20;:27;;;;;;;-1:-1:-1;14343:40:2;14199:191::o;6172:244:1:-;-1:-1:-1;;;;;6280:20:1;;;;;;:6;:20;;;;;:29;;6304:5;;6280:20;:29;;6304:5;;6280:29;:::i;:::-;;;;-1:-1:-1;;;;;;;6319:28:1;;;;;;:14;:28;;;;;:37;;6351:5;;6319:28;:37;;6351:5;;6319:37;:::i;21729:220:0:-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;21859:8:0::1;21833:11;21845:10;21833:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:34;;-1:-1:-1;;21833:34:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21910:10:0::1;21921:8;21899:31;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21899:31:0;;::::1;::::0;;;;;;;21882:60:::1;::::0;21931:10:::1;::::0;21882:60:::1;:::i;:::-;;;;;;;;21729:220:::0;;:::o;23837:121::-;23887:18;:16;:18::i;:::-;23920:31;;;20950:2:8;20932:21;;;20989:1;20969:18;;;20962:29;-1:-1:-1;;;21022:3:8;21007:19;;21000:33;21071:3;21064:4;21049:20;;21042:33;;;-1:-1:-1;21091:19:8;;;21084:30;23940:10:0;21166:18:8;;;21159:60;23920:31:0;;-1:-1:-1;;;;;;;;;;;23920:31:0;;;;21146:3:8;23920:31:0;;;23837:121::o;14496:112:2:-;14556:5;8212:19;8225:5;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19;8204:34;;;;-1:-1:-1;;;8204:34:2;;;;;;;:::i;:::-;-1:-1:-1;14596:5:2::1;14573:20:::0;;;:13:::1;:20;::::0;;;;:28;;-1:-1:-1;;14573:28:2::1;::::0;;14496:112::o;16594:357:0:-;13859:4;13880:24;;;:14;:24;;;;;;16669:8;;13880:24;;4772:33;;;;;;8396:6:2::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;16729:5:0::2;16702:24:::0;;;:14:::2;:24;::::0;;;;;;;:32;;-1:-1:-1;;16702:32:0::2;::::0;;16851:18:::2;:28:::0;;;;;;16787:21;;-1:-1:-1;;;8323:19:8;;16787:13:0::2;8367:1:8::0;8358:11;;16787:21:0;;;;;;;;;;;16809:24;;;:14:::2;:24:::0;;;;;:37;-1:-1:-1;;;;;16809:37:0::2;16787:60:::0;;;;;;;:92;;16851:28;;16787:60;;:92:::2;::::0;16851:28;;16787:92:::2;:::i;:::-;::::0;;;-1:-1:-1;;16911:20:0::2;::::0;;::::2;::::0;::::2;3064:25:8::0;;;-1:-1:-1;;;;;;;;;;;16894:49:0;3037:18:8;16911:20:0::2;::::0;;-1:-1:-1;;16911:20:0;;::::2;::::0;;;;;;;16894:49:::2;::::0;16932:10:::2;::::0;16894:49:::2;:::i;17123:300::-:0;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;17228:20:0::1;17239:8;17228:10;:20::i;:::-;17227:21;17219:36;;;::::0;-1:-1:-1;;;17219:36:0;;21975:2:8;17219:36:0::1;::::0;::::1;21957:21:8::0;22014:1;21994:18;;;21987:29;-1:-1:-1;;;22032:18:8;;;22025:32;22074:18;;17219:36:0::1;21773:325:8::0;17219:36:0::1;17300:4;17265:11;17277:8;17265:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17265:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17265:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17314:10:0::1;::::0;:20:::1;::::0;17325:8;;17314:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17314:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17356:59:0;17373:30:::1;::::0;17384:8;;17393:9;;17373:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17373:30:0;;::::1;::::0;;;;;;;17356:59:::1;::::0;17404:10:::1;::::0;17356:59:::1;:::i;18186:273::-:0;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;18295:31:0::1;18307:8;18316:9;18295:11;:31::i;:::-;18287:40;;;::::0;::::1;;18372:5;18337:11;18349:8;18337:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;18337:32:0;::::1;;::::0;;;;;;;;;;:40;;-1:-1:-1;;18337:40:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18392:59:0;18409:30:::1;::::0;18420:8;;18337:32;;18409:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18409:30:0;;::::1;::::0;;;;;;;18392:59:::1;::::0;18440:10:::1;::::0;18392:59:::1;:::i;4612:749:1:-:0;-1:-1:-1;;;;;4712:20:1;;;;;;:6;:20;;;;;;:29;-1:-1:-1;4712:29:1;4704:44;;;;-1:-1:-1;;;4704:44:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4762:26:1;;4758:523;;4792:25;4807:5;4814:2;4792:14;:25::i;:::-;4758:523;;;4902:24;;-1:-1:-1;;;4902:24:1;;-1:-1:-1;;;;;23702:32:8;;;4902:24:1;;;23684:51:8;23751:18;;;23744:34;;;4867:12:1;;4902:13;;;;;;23657:18:8;;4902:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4894:39;;;;-1:-1:-1;;;4894:39:1;;23991:2:8;4894:39:1;;;23973:21:8;24030:1;24010:18;;;24003:29;-1:-1:-1;;;24048:18:8;;;24041:32;24090:18;;4894:39:1;23789:325:8;4894:39:1;-1:-1:-1;;;;;4951:14:1;;;:18;4947:324;;4993:43;;-1:-1:-1;;;4993:43:1;;-1:-1:-1;;;;;23702:32:8;;;4993:43:1;;;23684:51:8;23751:18;;;23744:34;;;4993:22:1;;;;;23657:18:8;;4993:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4989:180;4947:324;4989:180;4947:324;;;5225:24;;-1:-1:-1;;;5225:24:1;;-1:-1:-1;;;;;23702:32:8;;;5225:24:1;;;23684:51:8;23751:18;;;23744:34;;;5225:14:1;;;;;23657:18:8;;5225:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5217:39;;;;-1:-1:-1;;;5217:39:1;;16588:2:8;5217:39:1;;;16570:21:8;16627:1;16607:18;;;16600:29;-1:-1:-1;;;16645:18:8;;;16638:32;16687:18;;5217:39:1;16386:325:8;5217:39:1;4833:448;4758:523;5294:6;;;;5290:56;;;5303:41;5325:12;5338:5;5303:21;:41::i;18563:348:0:-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;18648:20:0::1;18659:8;18648:10;:20::i;:::-;18640:36;;;::::0;-1:-1:-1;;;18640:36:0;;24321:2:8;18640:36:0::1;::::0;::::1;24303:21:8::0;24360:1;24340:18;;;24333:29;-1:-1:-1;;;24378:18:8;;;24371:33;24421:18;;18640:36:0::1;24119:326:8::0;18640:36:0::1;18734:13;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;18734:13:0::1;::::0;;::::1;::::0;18694:26;;;;::::1;::::0;:54;;18686:69:::1;;;::::0;-1:-1:-1;;;18686:69:0;;24652:2:8;18686:69:0::1;::::0;::::1;24634:21:8::0;24691:1;24671:18;;;24664:29;-1:-1:-1;;;24709:18:8;;;24702:32;24751:18;;18686:69:0::1;24450:325:8::0;18686:69:0::1;18773:21;18785:8;18773:11;:21::i;:::-;18765:36;;;::::0;-1:-1:-1;;;18765:36:0;;24982:2:8;18765:36:0::1;::::0;::::1;24964:21:8::0;25021:1;25001:18;;;24994:29;-1:-1:-1;;;25039:18:8;;;25032:32;25081:18;;18765:36:0::1;24780:325:8::0;18765:36:0::1;18834:5;18811:10;18822:8;18811:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:28;;-1:-1:-1;;18811:28:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18854:49:0;18871:20:::1;::::0;18882:8;;18871:20:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18871:20:0;;::::1;::::0;;;;;;;18854:49:::1;::::0;18892:10:::1;::::0;18854:49:::1;:::i;:::-;;;;;;;;18563:348:::0;:::o;15706:743::-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;15823:21:0::1;15847:5:::0;15879:23:::1;::::0;:13:::1;::::0;:23:::1;::::0;15893:8;;15879:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;15879:37:0;::::1;;::::0;;;;;;;;15870:46;::::1;;15862:61;;;;-1:-1:-1::0;;;15862:61:0::1;;;;;;;:::i;:::-;15974:5;15933:13;15947:8;15933:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;15957:12;-1:-1:-1::0;;;;;15933:37:0::1;-1:-1:-1::0;;;;;15933:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15993:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;16007:8;;15993:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;15993:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;16039:26:0;::::1;::::0;::::1;15993:72;15989:144;;;16121:1;16081:26;16108:8;16081:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15989:144:0::1;16174:88;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;16174:88:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;16142:29:0;;;:14:::1;:29:::0;;;;;:120;;;;-1:-1:-1;;;;;;16142:120:0::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;16142:120:0;;::::1;::::0;16272:18:::1;:33:::0;;;;;:41;;;16323:14:::1;:29:::0;;;;;;:36;;-1:-1:-1;;16323:36:0::1;::::0;;::::1;::::0;;;16391:39;;-1:-1:-1;;;;;;;;;;;16374:68:0;16391:39:::1;::::0;16402:8;;16174:88;;;;16391:39:::1;;:::i;:::-;;::::0;;-1:-1:-1;;16391:39:0;;::::1;::::0;;;;;;;16374:68:::1;::::0;16431:10:::1;::::0;16374:68:::1;:::i;:::-;;;;;;;;15813:636;15706:743:::0;;;:::o;22069:183::-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;22149:20:0::1;:31:::0;;-1:-1:-1;;22149:31:0::1;::::0;::::1;;::::0;;::::1;::::0;;;22213:20:::1;::::0;;::::1;::::0;::::1;154:41:8::0;;;;-1:-1:-1;;;;;;;;;;;22195:50:0;127:18:8;22213:20:0::1;::::0;;-1:-1:-1;;22213:20:0;;::::1;::::0;;;;;;;22195:50:::1;::::0;22234:10:::1;::::0;22195:50:::1;:::i;22450:201::-:0;22533:43;22563:12;22533:29;:43::i;:::-;22608:24;;;-1:-1:-1;;;;;3708:32:8;;22608:24:0;;;3690:51:8;-1:-1:-1;;;;;;;;;;;22591:53:0;3663:18:8;22608:24:0;;;-1:-1:-1;;22608:24:0;;;;;;;;;;22591:53;;22633:10;;22591:53;:::i;22845:197::-;22926:41;22954:12;22926:27;:41::i;:::-;22999:24;;;-1:-1:-1;;;;;3708:32:8;;22999:24:0;;;3690:51:8;-1:-1:-1;;;;;;;;;;;22982:53:0;3663:18:8;22999:24:0;;;-1:-1:-1;;22999:24:0;;;;;;;;;;22982:53;;23024:10;;22982:53;:::i;15120:1550:2:-;15233:11;8212:19;8225:5;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19;8204:34;;;;-1:-1:-1;;;8204:34:2;;;;;;;:::i;:::-;8396:6:::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;15336:24:::2;::::0;;;:11:::2;:24;::::0;;;;:36:::2;::::0;::::2;::::0;15301:34;;:71:::2;::::0;15336:36;15301:71:::2;:::i;:::-;15277:21;15287:11:::0;15277:9;:21:::2;:::i;:::-;:95;15269:110;;;;-1:-1:-1::0;;;15269:110:2::2;;;;;;;:::i;:::-;15389:21;15413:5:::0;15432:17:::2;15446:2:::0;15432:13:::2;:17::i;:::-;15428:666;;;-1:-1:-1::0;;;;;15627:16:2;::::2;15554:20;15627:16:::0;;;:12:::2;:16;::::0;;;;;;;;15615:29;;:11:::2;:29:::0;;;;;:39;;15655:41:::2;::::0;;::::2;::::0;15554:20;;15602:117:::2;::::0;15697:9;15707:11;15602:12:::2;:117::i;:::-;15553:166;;;;15733:56;15744:12;15757:14;15772:2;15775:13;15733:10;:56::i;:::-;-1:-1:-1::0;;;;;15861:16:2;::::2;;::::0;;;:12:::2;:16;::::0;;;;;15848:45:::2;::::0;15879:13;15848:12:::2;:45::i;:::-;15451:453;;15428:666;;;16033:50;16044:9;16054:11;16066:2;16069:13;16033:10;:50::i;:::-;16143:40;16156:11;16169:13;16143:12;:40::i;:::-;16285:21;16353:24:::0;;;:11:::2;:24;::::0;;;;:34;;16388:36:::2;::::0;;::::2;::::0;16285:21;;16335:112:::2;::::0;16425:9;16435:11;16335:17:::2;:112::i;:::-;16284:163;;;;16461:15;16480:1;16461:20;16457:133;;16534:24;::::0;;;:11:::2;:24;::::0;;;;;;;:30:::2;::::0;16493:86:::2;::::0;16504:13;;16518:15;;-1:-1:-1;;;;;16534:30:2::2;16565:13:::0;16493:10:::2;:86::i;:::-;16604:59;::::0;;19197:25:8;;;19253:2;19238:18;;19231:34;;;19281:18;;;19274:34;;;-1:-1:-1;;;;;19382:15:8;;19377:2;19362:18;;19355:43;16658:1:2::2;19429:3:8::0;19414:19;;19407:44;;;19335:3;19467:19;;19460:35;16604:59:2::2;::::0;19184:3:8;19169:19;16604:59:2::2;;;;;;;15259:1411;;;15120:1550:::0;;;;;:::o;20191:796:0:-;20328:10;4524:20;4535:8;4524:10;:20::i;:::-;4516:36;;;;-1:-1:-1;;;4516:36:0;;29578:2:8;4516:36:0;;;29560:21:8;29617:1;29597:18;;;29590:29;-1:-1:-1;;;29635:18:8;;;29628:33;29678:18;;4516:36:0;29376:326:8;4516:36:0;8396:6:2::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;20380:13:0::2;20394:12;20380:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20380:41:0;::::2;;::::0;;;;;;;;20371:50;::::2;;20363:65;;;;-1:-1:-1::0;;;20363:65:0::2;;;;;;;:::i;:::-;20483:5;20438:13;20452:12;20438:27;;;;;;:::i;:::-;;;;;;;;;;;;;:41;20466:12;-1:-1:-1::0;;;;;20438:41:0::2;-1:-1:-1::0;;;;;20438:41:0::2;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;20502:26:0;::::2;::::0;20498:326:::2;;20548:13;20562:12;20548:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20548:41:0;::::2;;::::0;;;;;;;;:46;;20544:131:::2;;20658:1;20614:26;20641:12;20614:40;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20544:131:0::2;20692:13;20706:10;20692:25;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20692:39:0;::::2;;::::0;;;;;;;;:44;;20688:126:::2;;20798:1;20756:26;20783:10;20756:38;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20688:126:0::2;20876:5;20833:13;20847:10;20833:25;;;;;;:::i;:::-;;;;;;;;;;;;;:39;20859:12;-1:-1:-1::0;;;;;20833:39:0::2;-1:-1:-1::0;;;;;20833:39:0::2;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20913:54:0::2;::::0;-1:-1:-1;;;;;;;;;;;20896:83:0;20913:54:::2;::::0;20924:12;;20937:10;;20948:12;;20961:5;;20913:54:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;20913:54:0;;::::2;::::0;;;;;;;20896:83:::2;::::0;20968:10:::2;::::0;20896:83:::2;:::i;17665:268::-:0;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;17771:25:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;17771:25:0::1;;::::0;17786:9:::1;17771;:25::i;:::-;17763:39;;;::::0;-1:-1:-1;;;17763:39:0;;31008:2:8;17763:39:0::1;::::0;::::1;30990:21:8::0;31047:1;31027:18;;;31020:29;-1:-1:-1;;;31065:18:8;;;31058:32;31107:18;;17763:39:0::1;30806:325:8::0;17763:39:0::1;17847:4;17812:11;17824:8;17812:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17812:32:0;::::1;;::::0;;;;;;;;;;:39;;-1:-1:-1;;17812:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17866:59:0;17883:30:::1;::::0;17894:8;;17812:32;;17883:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17883:30:0;;::::1;::::0;;;;;;;17866:59:::1;::::0;17914:10:::1;::::0;17866:59:::1;:::i;21271:247::-:0;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;21419:8:0::1;21388:7;21396:10;21388:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21388:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21388:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21470:10:0::1;21481:7;21489:8;21459:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21459:39:0;;::::1;::::0;;;;;;;21442:68:::1;::::0;21499:10:::1;::::0;21442:68:::1;:::i;524:381:2:-:0;640:7;649;658;695:9;681:11;:23;673:32;;;;;;711:17;750:11;731:18;740:9;731:8;:18;:::i;:::-;:30;;;;:::i;:::-;711:50;-1:-1:-1;767:17:2;820:11;797:21;809:9;820:11;797:21;:::i;:::-;787:32;;:8;:32;:::i;:::-;:44;;;;:::i;:::-;767:64;-1:-1:-1;845:9:2;767:64;879:21;767:64;845:9;879:21;:::i;:::-;867:34;;:8;:34;:::i;:::-;837:65;;;;;;;;524:381;;;;;;;:::o;19273:547:0:-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;19427:13:0::1;19441:8;19427:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;19427:37:0;::::1;;::::0;;;;;;;;19418:46;::::1;;19410:61;;;;-1:-1:-1::0;;;19410:61:0::1;;;;;;;:::i;:::-;19481:37;19496:12;19509:5;19515:2;19481:14;:37::i;:::-;19569:5;19528:13;19542:8;19528:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;19552:12;-1:-1:-1::0;;;;;19528:37:0::1;-1:-1:-1::0;;;;;19528:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19588:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;19602:8;;19588:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;19588:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;19634:26:0;::::1;::::0;::::1;19588:72;19584:144;;;19716:1;19676:26;19703:8;19676:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19584:144:0::1;-1:-1:-1::0;;;;;;;;;;;19770:8:0::1;19779:12;19792:5;19798:2;19759:42;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;19759:42:0;;::::1;::::0;;;;;;;19742:71:::1;::::0;19802:10:::1;::::0;19742:71:::1;:::i;17273:684:2:-:0;17422:5;8212:19;8225:5;13630:4;13686:5;;13188:27;;;:20;:27;;;;;;13653:38;;13573:125;8212:19;8204:34;;;;-1:-1:-1;;;8204:34:2;;;;;;;:::i;:::-;8396:6:::1;::::0;;::::1;;:14;;;8388:29;;;;-1:-1:-1::0;;;8388:29:2::1;;;;;;;:::i;:::-;17514:18:::2;::::0;;;:11:::2;:18;::::0;;;;:30:::2;::::0;::::2;::::0;17485:28;;:59:::2;::::0;17514:30;17485:59:::2;:::i;:::-;17460:21;17470:11:::0;17460:9;:21:::2;:::i;:::-;:84;;17452:99;;;;-1:-1:-1::0;;;17452:99:2::2;;;;;;;:::i;:::-;17588:39;17605:9;17615:11;17588:16;:39::i;:::-;17561:66;;;;;;;;17658:179;;;;;;;;17693:9;17658:179;;;;17729:11;17658:179;;;;17768:12;-1:-1:-1::0;;;;;17658:179:2::2;;;;;17801:5;17658:179;;;;17824:2;-1:-1:-1::0;;;;;17658:179:2::2;;;::::0;17637:11:::2;:18;17649:5;17637:18;;;;;;;;;;;:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;17637:200:2::2;;;;;-1:-1:-1::0;;;;;17637:200:2::2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;17637:200:2::2;;;;;-1:-1:-1::0;;;;;17637:200:2::2;;;;;;;;;17870:4;17847:13;:20;17861:5;17847:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;17889:61;17900:5;17906:9;17916:11;17928:12;17941:5;17947:2;17889:61;;;;;;;;;;33971:25:8::0;;;34027:2;34012:18;;34005:34;;;;34070:2;34055:18;;34048:34;;;;-1:-1:-1;;;;;34156:15:8;;;34151:2;34136:18;;34129:43;34203:3;34188:19;;34181:35;;;;34253:15;34109:3;34232:19;;34225:44;33958:3;33943:19;;33684:591;17889:61:2::2;;;;;;;;17273:684:::0;;;;;;;:::o;5801:110:1:-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;;;;;;:::i;:::-;5863:6:1::1;:14:::0;;-1:-1:-1;;5863:14:1::1;::::0;;5801:110::o;5558:161::-;5629:12;5655:2;-1:-1:-1;;;;;5647:16:1;5670:5;5647:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5628:52;;;5698:7;5690:22;;;;-1:-1:-1;;;5690:22:1;;18452:2:8;5690:22:1;;;18434:21:8;18491:1;18471:18;;;18464:29;-1:-1:-1;;;18509:18:8;;;18502:32;18551:18;;5690:22:1;18250:325:8;6637:178:1;-1:-1:-1;;;;;6732:20:1;;;;;;:6;:20;;;;;:29;;6756:5;;6732:20;:29;;6756:5;;6732:29;:::i;:::-;;;;-1:-1:-1;;;;;;;6771:28:1;;;;;;:14;:28;;;;;:37;;6803:5;;6771:28;:37;;6803:5;;6771:37;:::i;:::-;;;;-1:-1:-1;;;;6637:178:1:o;7386:231::-;7476:26;7489:12;7476;:26::i;:::-;7468:41;;;;-1:-1:-1;;;7468:41:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7527:20:1;;;;;;:6;:20;;;;;;:25;7519:40;;;;-1:-1:-1;;;7519:40:1;;34482:2:8;7519:40:1;;;34464:21:8;34521:1;34501:18;;;34494:29;-1:-1:-1;;;34539:18:8;;;34532:32;34581:18;;7519:40:1;34280:325:8;7519:40:1;-1:-1:-1;;;;;7569:33:1;7605:5;7569:33;;;:19;:33;;;;;:41;;-1:-1:-1;;7569:41:1;;;7386:231::o;7009:179::-;7098:26;7111:12;7098;:26::i;:::-;7097:27;7089:42;;;;-1:-1:-1;;;7089:42:1;;34812:2:8;7089:42:1;;;34794:21:8;34851:1;34831:18;;;34824:29;-1:-1:-1;;;34869:18:8;;;34862:32;34911:18;;7089:42:1;34610:325:8;7089:42:1;-1:-1:-1;;;;;7141:33:1;;;;;:19;:33;;;;;:40;;-1:-1:-1;;7141:40:1;7177:4;7141:40;;;7009:179::o;1986:292:2:-;2107:7;;2144:25;2157:12;2144:10;:25;:::i;:::-;2131:38;-1:-1:-1;2188:25:2;2201:12;2188:10;:25;:::i;:::-;2175:38;-1:-1:-1;2227:21:2;2175:38;2227:10;:21;:::i;:::-;2249:25;2262:12;2249;:25;:::i;:::-;2219:56;;;;1986:292;;;;;;;:::o;18317:750::-;18506:37;;-1:-1:-1;;35117:2:8;35113:15;;;35109:53;18506:37:2;;;35097:66:8;35179:12;;;35172:28;;;18480:13:2;;35216:12:8;;18506:37:2;;;;;;-1:-1:-1;;18506:37:2;;;;;;18496:48;;18506:37;18496:48;;;;-1:-1:-1;;;;;18554:19:2;;;;;;;:12;:19;;;;;;:27;;;18591;;;:20;:27;;;;;-1:-1:-1;;18591:47:2;;18746:263;;;;;;;;;;;;;;;;;;;;;;;;;;;18725:18;;;:11;:18;;;;;;;:284;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18725:284:2;;;;;;;;;;;;;;;;;;;;;;19024:35;;35441:25:8;;;35482:18;;;35475:60;;;;35551:18;;;35544:34;;;18496:48:2;;-1:-1:-1;19024:35:2;;35414:18:8;19024:35:2;35239:345:8;19269:184:2;19351:27;;;;:20;:27;;;;;;;;;:45;;;19411:35;;14031:25:8;;;14072:18;;;14065:34;;;19411:35:2;;14004:18:8;19411:35:2;13857:248:8;2580:296:2;2706:7;;2742:25;2755:12;2742:10;:25;:::i;:::-;2729:38;-1:-1:-1;2786:25:2;2799:12;2786:10;:25;:::i;:::-;2773:38;-1:-1:-1;2825:21:2;2773:38;2825:10;:21;:::i;:::-;2847:25;2860:12;2847;:25;:::i;1371:358::-;1450:7;1459;1474:25;1502:43;1523:9;1533:11;1502:20;:43::i;:::-;1474:71;-1:-1:-1;1616:29:2;1474:71;1616:11;:29;:::i;:::-;1586:27;1596:17;1586:9;:27;:::i;:::-;1585:61;;;;:::i;:::-;1559:21;1569:11;1559:9;:21;:::i;:::-;:88;1551:103;;;;-1:-1:-1;;;1551:103:2;;36044:2:8;1551:103:2;;;36026:21:8;36083:1;36063:18;;;36056:29;-1:-1:-1;;;36101:18:8;;;36094:33;36144:18;;1551:103:2;35842:326:8;1551:103:2;1668:27;1678:17;1668:9;:27;:::i;:::-;1696:29;1708:17;1696:11;:29;:::i;:::-;1660:66;;;;;1371:358;;;;;:::o;1029:158::-;1094:7;1113:54;1120:5;;1113:54;;1147:1;1150:5;1147:1;1150;:5;:::i;:::-;1137:19;;-1:-1:-1;1137:19:2;-1:-1:-1;1113:54:2;;;-1:-1:-1;1183:1:2;;1029:158;-1:-1:-1;1029:158:2:o;206:127:8:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:719;381:5;434:3;427:4;419:6;415:17;411:27;401:55;;452:1;449;442:12;401:55;488:6;475:20;514:18;551:2;547;544:10;541:36;;;557:18;;:::i;:::-;632:2;626:9;600:2;686:13;;-1:-1:-1;;682:22:8;;;706:2;678:31;674:40;662:53;;;730:18;;;750:22;;;727:46;724:72;;;776:18;;:::i;:::-;816:10;812:2;805:22;851:2;843:6;836:18;897:3;890:4;885:2;877:6;873:15;869:26;866:35;863:55;;;914:1;911;904:12;863:55;978:2;971:4;963:6;959:17;952:4;944:6;940:17;927:54;1025:1;1018:4;1013:2;1005:6;1001:15;997:26;990:37;1045:6;1036:15;;;;;;338:719;;;;:::o;1062:152::-;1139:20;;1188:1;1178:12;;1168:40;;1204:1;1201;1194:12;1168:40;1062:152;;;:::o;1219:418::-;1310:6;1318;1371:2;1359:9;1350:7;1346:23;1342:32;1339:52;;;1387:1;1384;1377:12;1339:52;1427:9;1414:23;1460:18;1452:6;1449:30;1446:50;;;1492:1;1489;1482:12;1446:50;1515;1557:7;1548:6;1537:9;1533:22;1515:50;:::i;:::-;1505:60;;;1584:47;1627:2;1616:9;1612:18;1584:47;:::i;:::-;1574:57;;1219:418;;;;;:::o;1642:180::-;1701:6;1754:2;1742:9;1733:7;1729:23;1725:32;1722:52;;;1770:1;1767;1760:12;1722:52;-1:-1:-1;1793:23:8;;1642:180;-1:-1:-1;1642:180:8:o;1827:322::-;1896:6;1949:2;1937:9;1928:7;1924:23;1920:32;1917:52;;;1965:1;1962;1955:12;1917:52;2005:9;1992:23;2038:18;2030:6;2027:30;2024:50;;;2070:1;2067;2060:12;2024:50;2093;2135:7;2126:6;2115:9;2111:22;2093:50;:::i;:::-;2083:60;1827:322;-1:-1:-1;;;;1827:322:8:o;2339:173::-;2407:20;;-1:-1:-1;;;;;2456:31:8;;2446:42;;2436:70;;2502:1;2499;2492:12;2517:396;2595:6;2603;2656:2;2644:9;2635:7;2631:23;2627:32;2624:52;;;2672:1;2669;2662:12;2624:52;2712:9;2699:23;2745:18;2737:6;2734:30;2731:50;;;2777:1;2774;2767:12;2731:50;2800;2842:7;2833:6;2822:9;2818:22;2800:50;:::i;:::-;2790:60;;;2869:38;2903:2;2892:9;2888:18;2869:38;:::i;3100:186::-;3159:6;3212:2;3200:9;3191:7;3187:23;3183:32;3180:52;;;3228:1;3225;3218:12;3180:52;3251:29;3270:9;3251:29;:::i;3291:248::-;3359:6;3367;3420:2;3408:9;3399:7;3395:23;3391:32;3388:52;;;3436:1;3433;3426:12;3388:52;-1:-1:-1;;3459:23:8;;;3529:2;3514:18;;;3501:32;;-1:-1:-1;3291:248:8:o;3752:464::-;3839:6;3847;3855;3908:2;3896:9;3887:7;3883:23;3879:32;3876:52;;;3924:1;3921;3914:12;3876:52;3964:9;3951:23;3997:18;3989:6;3986:30;3983:50;;;4029:1;4026;4019:12;3983:50;4052;4094:7;4085:6;4074:9;4070:22;4052:50;:::i;:::-;4042:60;;;4121:38;4155:2;4144:9;4140:18;4121:38;:::i;:::-;4111:48;;4206:2;4195:9;4191:18;4178:32;4168:42;;3752:464;;;;;:::o;4221:118::-;4307:5;4300:13;4293:21;4286:5;4283:32;4273:60;;4329:1;4326;4319:12;4344:241;4400:6;4453:2;4441:9;4432:7;4428:23;4424:32;4421:52;;;4469:1;4466;4459:12;4421:52;4508:9;4495:23;4527:28;4549:5;4527:28;:::i;4590:391::-;4676:6;4684;4692;4700;4753:3;4741:9;4732:7;4728:23;4724:33;4721:53;;;4770:1;4767;4760:12;4721:53;4806:9;4793:23;4783:33;;4863:2;4852:9;4848:18;4835:32;4825:42;;4914:2;4903:9;4899:18;4886:32;4876:42;;4937:38;4971:2;4960:9;4956:18;4937:38;:::i;:::-;4927:48;;4590:391;;;;;;;:::o;4986:254::-;5054:6;5062;5115:2;5103:9;5094:7;5090:23;5086:32;5083:52;;;5131:1;5128;5121:12;5083:52;5154:29;5173:9;5154:29;:::i;:::-;5144:39;5230:2;5215:18;;;;5202:32;;-1:-1:-1;;;4986:254:8:o;5245:686::-;5351:6;5359;5367;5375;5428:3;5416:9;5407:7;5403:23;5399:33;5396:53;;;5445:1;5442;5435:12;5396:53;5485:9;5472:23;5514:18;5555:2;5547:6;5544:14;5541:34;;;5571:1;5568;5561:12;5541:34;5594:50;5636:7;5627:6;5616:9;5612:22;5594:50;:::i;:::-;5584:60;;5697:2;5686:9;5682:18;5669:32;5653:48;;5726:2;5716:8;5713:16;5710:36;;;5742:1;5739;5732:12;5710:36;;5765:52;5809:7;5798:8;5787:9;5783:24;5765:52;:::i;:::-;5755:62;;;5836:38;5870:2;5859:9;5855:18;5836:38;:::i;:::-;5245:686;;;;-1:-1:-1;5826:48:8;;5921:2;5906:18;5893:32;;-1:-1:-1;;5245:686:8:o;6540:492::-;6640:6;6648;6656;6709:2;6697:9;6688:7;6684:23;6680:32;6677:52;;;6725:1;6722;6715:12;6677:52;6765:9;6752:23;6798:18;6790:6;6787:30;6784:50;;;6830:1;6827;6820:12;6784:50;6853;6895:7;6886:6;6875:9;6871:22;6853:50;:::i;:::-;6843:60;;;6922:38;6956:2;6945:9;6941:18;6922:38;:::i;:::-;6912:48;;6979:47;7022:2;7011:9;7007:18;6979:47;:::i;:::-;6969:57;;6540:492;;;;;:::o;7037:539::-;7133:6;7141;7149;7157;7210:3;7198:9;7189:7;7185:23;7181:33;7178:53;;;7227:1;7224;7217:12;7178:53;7267:9;7254:23;7300:18;7292:6;7289:30;7286:50;;;7332:1;7329;7322:12;7286:50;7355;7397:7;7388:6;7377:9;7373:22;7355:50;:::i;:::-;7345:60;;;7424:38;7458:2;7447:9;7443:18;7424:38;:::i;:::-;7414:48;;7509:2;7498:9;7494:18;7481:32;7471:42;;7532:38;7566:2;7555:9;7551:18;7532:38;:::i;7581:535::-;7685:6;7693;7701;7709;7717;7725;7778:3;7766:9;7757:7;7753:23;7749:33;7746:53;;;7795:1;7792;7785:12;7746:53;7831:9;7818:23;7808:33;;7888:2;7877:9;7873:18;7860:32;7850:42;;7939:2;7928:9;7924:18;7911:32;7901:42;;7962:38;7996:2;7985:9;7981:18;7962:38;:::i;:::-;7952:48;;8047:3;8036:9;8032:19;8019:33;8009:43;;8071:39;8105:3;8094:9;8090:19;8071:39;:::i;:::-;8061:49;;7581:535;;;;;;;;:::o;8380:127::-;8441:10;8436:3;8432:20;8429:1;8422:31;8472:4;8469:1;8462:15;8496:4;8493:1;8486:15;8512:125;8577:9;;;8598:10;;;8595:36;;;8611:18;;:::i;9022:127::-;9083:10;9078:3;9074:20;9071:1;9064:31;9114:4;9111:1;9104:15;9138:4;9135:1;9128:15;9154:250;9239:1;9249:113;9263:6;9260:1;9257:13;9249:113;;;9339:11;;;9333:18;9320:11;;;9313:39;9285:2;9278:10;9249:113;;;-1:-1:-1;;9396:1:8;9378:16;;9371:27;9154:250::o;9409:289::-;9540:3;9578:6;9572:13;9594:66;9653:6;9648:3;9641:4;9633:6;9629:17;9594:66;:::i;:::-;9676:16;;;;;9409:289;-1:-1:-1;;9409:289:8:o;10033:325::-;10235:2;10217:21;;;10274:1;10254:18;;;10247:29;-1:-1:-1;;;10307:2:8;10292:18;;10285:32;10349:2;10334:18;;10033:325::o;10363:::-;10565:2;10547:21;;;10604:1;10584:18;;;10577:29;-1:-1:-1;;;10637:2:8;10622:18;;10615:32;10679:2;10664:18;;10363:325::o;11023:::-;11225:2;11207:21;;;11264:1;11244:18;;;11237:29;-1:-1:-1;;;11297:2:8;11282:18;;11275:32;11339:2;11324:18;;11023:325::o;11683:::-;11885:2;11867:21;;;11924:1;11904:18;;;11897:29;-1:-1:-1;;;11957:2:8;11942:18;;11935:32;11999:2;11984:18;;11683:325::o;12343:168::-;12416:9;;;12447;;12464:15;;;12458:22;;12444:37;12434:71;;12485:18;;:::i;12516:127::-;12577:10;12572:3;12568:20;12565:1;12558:31;12608:4;12605:1;12598:15;12632:4;12629:1;12622:15;12648:120;12688:1;12714;12704:35;;12719:18;;:::i;:::-;-1:-1:-1;12753:9:8;;12648:120::o;13062:128::-;13129:9;;;13150:11;;;13147:37;;;13164:18;;:::i;14110:270::-;14151:3;14189:5;14183:12;14216:6;14211:3;14204:19;14232:76;14301:6;14294:4;14289:3;14285:14;14278:4;14271:5;14267:16;14232:76;:::i;:::-;14362:2;14341:15;-1:-1:-1;;14337:29:8;14328:39;;;;14369:4;14324:50;;14110:270;-1:-1:-1;;14110:270:8:o;14385:538::-;14661:2;14650:9;14643:21;14700:1;14695:2;14684:9;14680:18;14673:29;-1:-1:-1;;;14733:3:8;14722:9;14718:19;14711:33;14782:3;14775:4;14764:9;14760:20;14753:33;14624:4;14803:45;14843:3;14832:9;14828:19;14820:6;14803:45;:::i;:::-;14795:53;;14913:1;14909;14904:3;14900:11;14896:19;14888:6;14884:32;14879:2;14868:9;14864:18;14857:60;14385:538;;;;;:::o;15237:184::-;15307:6;15360:2;15348:9;15339:7;15335:23;15331:32;15328:52;;;15376:1;15373;15366:12;15328:52;-1:-1:-1;15399:16:8;;15237:184;-1:-1:-1;15237:184:8:o;15426:325::-;15628:2;15610:21;;;15667:1;15647:18;;;15640:29;-1:-1:-1;;;15700:2:8;15685:18;;15678:32;15742:2;15727:18;;15426:325::o;16136:245::-;16203:6;16256:2;16244:9;16235:7;16231:23;16227:32;16224:52;;;16272:1;16269;16262:12;16224:52;16304:9;16298:16;16323:28;16345:5;16323:28;:::i;19506:239::-;19589:1;19582:5;19579:12;19569:143;;19634:10;19629:3;19625:20;19622:1;19615:31;19669:4;19666:1;19659:15;19697:4;19694:1;19687:15;19569:143;19721:18;;19506:239::o;19750:322::-;19938:2;19927:9;19920:21;19901:4;19958:44;19998:2;19987:9;19983:18;19975:6;19958:44;:::i;:::-;19950:52;;20011:55;20062:2;20051:9;20047:18;20039:6;20011:55;:::i;20077:538::-;20353:2;20342:9;20335:21;20392:1;20387:2;20376:9;20372:18;20365:29;-1:-1:-1;;;20425:3:8;20414:9;20410:19;20403:33;20474:3;20467:4;20456:9;20452:20;20445:33;20316:4;20495:45;20535:3;20524:9;20520:19;20512:6;20495:45;:::i;21230:538::-;21506:2;21495:9;21488:21;21545:1;21540:2;21529:9;21525:18;21518:29;-1:-1:-1;;;21578:3:8;21567:9;21563:19;21556:33;21627:3;21620:4;21609:9;21605:20;21598:33;21469:4;21648:45;21688:3;21677:9;21673:19;21665:6;21648:45;:::i;22103:316::-;22280:2;22269:9;22262:21;22243:4;22300:44;22340:2;22329:9;22325:18;22317:6;22300:44;:::i;:::-;22292:52;;22409:1;22405;22400:3;22396:11;22392:19;22384:6;22380:32;22375:2;22364:9;22360:18;22353:60;22103:316;;;;;:::o;22424:538::-;22700:2;22689:9;22682:21;22739:1;22734:2;22723:9;22719:18;22712:29;-1:-1:-1;;;22772:3:8;22761:9;22757:19;22750:33;22821:3;22814:4;22803:9;22799:20;22792:33;22663:4;22842:45;22882:3;22871:9;22867:19;22859:6;22842:45;:::i;22967:538::-;23243:2;23232:9;23225:21;23282:1;23277:2;23266:9;23262:18;23255:29;-1:-1:-1;;;23315:3:8;23304:9;23300:19;23293:33;23364:3;23357:4;23346:9;23342:20;23335:33;23206:4;23385:45;23425:3;23414:9;23410:19;23402:6;23385:45;:::i;25110:219::-;25259:2;25248:9;25241:21;25222:4;25279:44;25319:2;25308:9;25304:18;25296:6;25279:44;:::i;25334:538::-;25610:2;25599:9;25592:21;25649:1;25644:2;25633:9;25629:18;25622:29;-1:-1:-1;;;25682:3:8;25671:9;25667:19;25660:33;25731:3;25724:4;25713:9;25709:20;25702:33;25573:4;25752:45;25792:3;25781:9;25777:19;25769:6;25752:45;:::i;25877:325::-;26079:2;26061:21;;;26118:1;26098:18;;;26091:29;-1:-1:-1;;;26151:2:8;26136:18;;26129:32;26193:2;26178:18;;25877:325::o;26207:387::-;26412:2;26401:9;26394:21;26375:4;26432:44;26472:2;26461:9;26457:18;26449:6;26432:44;:::i;:::-;-1:-1:-1;;;;;26512:32:8;;;;26507:2;26492:18;;26485:60;-1:-1:-1;26576:2:8;26561:18;26554:34;26424:52;26207:387;-1:-1:-1;26207:387:8:o;26599:538::-;26875:2;26864:9;26857:21;26914:1;26909:2;26898:9;26894:18;26887:29;-1:-1:-1;;;26947:3:8;26936:9;26932:19;26925:33;26996:3;26989:4;26978:9;26974:20;26967:33;26838:4;27017:45;27057:3;27046:9;27042:19;27034:6;27017:45;:::i;27142:539::-;27418:2;27407:9;27400:21;27457:1;27452:2;27441:9;27437:18;27430:29;-1:-1:-1;;;27490:3:8;27479:9;27475:19;27468:34;27540:3;27533:4;27522:9;27518:20;27511:33;27381:4;27561:45;27601:3;27590:9;27586:19;27578:6;27561:45;:::i;27686:538::-;27962:2;27951:9;27944:21;28001:1;27996:2;27985:9;27981:18;27974:29;-1:-1:-1;;;28034:3:8;28023:9;28019:19;28012:33;28083:3;28076:4;28065:9;28061:20;28054:33;27925:4;28104:45;28144:3;28133:9;28129:19;28121:6;28104:45;:::i;28229:538::-;28505:2;28494:9;28487:21;28544:1;28539:2;28528:9;28524:18;28517:29;-1:-1:-1;;;28577:3:8;28566:9;28562:19;28555:33;28626:3;28619:4;28608:9;28604:20;28597:33;28468:4;28647:45;28687:3;28676:9;28672:19;28664:6;28647:45;:::i;29707:551::-;29960:3;29949:9;29942:22;29923:4;29987:45;30027:3;30016:9;30012:19;30004:6;29987:45;:::i;:::-;30080:9;30072:6;30068:22;30063:2;30052:9;30048:18;30041:50;30108:32;30133:6;30125;30108:32;:::i;:::-;-1:-1:-1;;;;;30176:32:8;;;;30171:2;30156:18;;30149:60;-1:-1:-1;;30240:2:8;30225:18;30218:34;30100:40;29707:551;-1:-1:-1;;29707:551:8:o;30263:538::-;30539:2;30528:9;30521:21;30578:1;30573:2;30562:9;30558:18;30551:29;-1:-1:-1;;;30611:3:8;30600:9;30596:19;30589:33;30660:3;30653:4;30642:9;30638:20;30631:33;30502:4;30681:45;30721:3;30710:9;30706:19;30698:6;30681:45;:::i;31136:538::-;31412:2;31401:9;31394:21;31451:1;31446:2;31435:9;31431:18;31424:29;-1:-1:-1;;;31484:3:8;31473:9;31469:19;31462:33;31533:3;31526:4;31515:9;31511:20;31504:33;31375:4;31554:45;31594:3;31583:9;31579:19;31571:6;31554:45;:::i;31679:419::-;31895:2;31884:9;31877:21;31858:4;31915:44;31955:2;31944:9;31940:18;31932:6;31915:44;:::i;:::-;-1:-1:-1;;;;;31995:32:8;;31990:2;31975:18;;31968:60;31907:52;-1:-1:-1;32037:55:8;32088:2;32073:18;;32065:6;32037:55;:::i;32103:538::-;32379:2;32368:9;32361:21;32418:1;32413:2;32402:9;32398:18;32391:29;-1:-1:-1;;;32451:3:8;32440:9;32436:19;32429:33;32500:3;32493:4;32482:9;32478:20;32471:33;32342:4;32521:45;32561:3;32550:9;32546:19;32538:6;32521:45;:::i;32646:490::-;32879:3;32868:9;32861:22;32842:4;32900:45;32940:3;32929:9;32925:19;32917:6;32900:45;:::i;:::-;-1:-1:-1;;;;;33019:15:8;;;33014:2;32999:18;;32992:43;33066:2;33051:18;;33044:34;;;;-1:-1:-1;33114:15:8;;33109:2;33094:18;;;33087:43;;;;32892:53;32646:490;-1:-1:-1;32646:490:8:o;33141:538::-;33417:2;33406:9;33399:21;33456:1;33451:2;33440:9;33436:18;33429:29;-1:-1:-1;;;33489:3:8;33478:9;33474:19;33467:33;33538:3;33531:4;33520:9;33516:20;33509:33;33380:4;33559:45;33599:3;33588:9;33584:19;33576:6;33559:45;:::i;36173:112::-;36205:1;36231;36221:35;;36236:18;;:::i;:::-;-1:-1:-1;36270:9:8;;36173:112::o",
  "language": "Solidity",
  "natspec": {
    "author": "Frederik W. L. Christoffersen",
    "events": {
      "ActionTaken(string,bytes,address)": {
        "params": {
          "args": "The arguments passed to the function call.",
          "by": "The initiator of the action.",
          "func": "The name of the function that was called."
        }
      },
      "ExpiredShard(bytes32,uint256)": {
        "params": {
          "expirationClock": "The clock at which the shard expired.",
          "shard": "The Shard byte identifier, which expired."
        }
      },
      "LiquidClaimed(address,uint256,address)": {
        "params": {
          "tokenAddress": "The address of the claimed token.",
          "value": "The value/amount of the claimed token."
        }
      },
      "NewShard(bytes32,address,uint256)": {
        "params": {
          "creationClock": "The clock at which the shard was created.",
          "owner": "The owner of the created Shard.",
          "shard": "The Shard byte identifier, which was created."
        }
      },
      "PutForSale(bytes32,uint256,uint256,address,uint256,address)": {
        "params": {
          "denominator": "Denominator of the absolute fraction of the Shard put for sale.",
          "numerator": "Numerator of the absolute fraction of the Shard put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard that was put for sale.",
          "to": "The specifically set buyer of the sale, if any.",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "SaleSold(bytes32,uint256,uint256,address,address,uint256)": {
        "params": {
          "denominator": "Denominator of the absolute fraction of the Shard that was sold.",
          "numerator": "Numerator of the absolute fraction of the Shard that was sold.",
          "price": "The amount which the Shard was for sale for. The token address being the valuta.",
          "shard": "The shard that was sold from.",
          "to": "The buyer of the sale.",
          "tokenAddress": "The address of the token that was accepted in the purchase. A value of 0x0 represents ether."
        }
      },
      "TokenReceived(address,uint256,address)": {
        "params": {
          "from": "The sender of the received token.",
          "tokenAddress": "The address of the received token.",
          "value": "The value/amount of the received token."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "acceptsToken(address)": {
        "notice": "Returns a boolean value, stating if the given token address is registered as acceptable or not.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "active()": {
        "notice": "Boolean stating if the Shardable is active and tradeable or not."
      },
      "addBankAdmin(string,address)": {
        "notice": "Adds a new given administrator to a given Bank.",
        "params": {
          "bankAdmin": "The address of the new Bank administrator to be added.",
          "bankName": "The name of the Bank to which the new administrator is to be added."
        }
      },
      "bankExists(string)": {
        "notice": "Returns a boolean stating if a given Bank exists.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "bankIsEmpty(string)": {
        "notice": "Returns a boolean stating if a given Bank is empty.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "cancelSale(bytes32)": {
        "notice": "Cancels a sell of a given Shard.",
        "params": {
          "shard": "The shard to be put off sale."
        }
      },
      "claimDividend(bytes32,uint256)": {
        "notice": "Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.",
        "params": {
          "dividend": "The dividend to be claimed.",
          "shard": "The shard that was valid at the clock of the Dividend creation"
        }
      },
      "claimLiquid(address)": {
        "notice": "Claims the owed liquid value corresponding to the shard holder's respective shard fraction after the entity has been liquidized/dissolved.",
        "params": {
          "tokenAddress": "The address of the token to be claimed."
        }
      },
      "constructor": {
        "notice": "Constructor function connecting the Idea entity and creating a Bank with an administrator."
      },
      "createBank(string,address)": {
        "notice": "Creates a new Bank.",
        "params": {
          "bankAdmin": "The address of the first Bank administrator.",
          "bankName": "The name of the Bank to be created."
        }
      },
      "deleteBank(string)": {
        "notice": "Deletes a given Bank.",
        "params": {
          "bankName": "The name of the Bank to be deleted."
        }
      },
      "dissolveDividend(uint256)": {
        "notice": "Dissolves a Dividend and moves its last contents to the 'main' Bank.",
        "params": {
          "dividend": "The Dividend to be dissolved."
        }
      },
      "dividendExists(uint256)": {
        "notice": "Returns a boolean stating if a given Dividend exists.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getBankBalance(string,address)": {
        "notice": "Returns the balance of a bank.",
        "params": {
          "bankName": "The name of the Bank.",
          "tokenAddress": "The address of the token balance to check for."
        }
      },
      "getCurrentClock()": {
        "notice": "Returns the clock."
      },
      "getDividendResidual(uint256)": {
        "notice": "Returns the residual value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendToken(uint256)": {
        "notice": "Returns the token of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendValue(uint256)": {
        "notice": "Returns the total value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getLiquidResidual(address)": {
        "notice": "Returns the residual of a liquid, after liquidization/inactivation.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "getShardExpirationClock(bytes32)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "getShardSalePrice(bytes32)": {
        "notice": "Returns the price, at which a shard is for sale."
      },
      "hasPermit(string,address)": {
        "notice": "Returns a boolean stating if a given address has a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "infoByShard(bytes32)": {
        "notice": "Mapping pointing to related info of a Shard given the bytes of a unique Shard instance."
      },
      "isBankAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given bank.",
        "params": {
          "account": "The address to be checked for.",
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "isPermitAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "isShardHolder(address)": {
        "notice": "Checks if address is a shard holder - at least a partial owner of the contract.",
        "params": {
          "account": "The address to be checked for."
        }
      },
      "isValidShard(bytes32)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "issueDividend(string,address,uint256)": {
        "notice": "Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.",
        "params": {
          "bankName": "The name of the Bank to issue the Dividend from.",
          "tokenAddress": "The address of the token to make up the Dividend.",
          "value": "The value/amount of the token to be issued in the Dividend."
        }
      },
      "liquid(address)": {
        "notice": "Mapping pointing to a value/amount given the address of an ERC20 token."
      },
      "liquidize()": {
        "notice": "Liquidizes and dissolves the entity. This cannot be undone."
      },
      "moveToken(string,string,address,uint256)": {
        "notice": "Internally moves a token from one Bank to another.",
        "params": {
          "fromBankName": "The name of the Bank from which the token is to be moved.",
          "toBankName": "The name of the Bank to which the token is to be moved.",
          "tokenAddress": "The address of the token to be moved.",
          "value": "The value/amount of the token to be moved."
        }
      },
      "purchase(bytes32)": {
        "details": "If the purchase is with tokens (ie. tokenAddress != 0x0), first call 'token.approve(Shardable.address, salePrice);'",
        "notice": "Purchases a listed Shard for sale.",
        "params": {
          "shard": "The shard of which a fraction will be purchased."
        }
      },
      "putForSale(bytes32,uint256,uint256,address,uint256,address)": {
        "notice": "Puts a given shard for sale.",
        "params": {
          "denominator": "Denominator of the absolute fraction of the Shard to be put for sale.",
          "numerator": "Numerator of the absolute fraction of the Shard to be put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard to be put for sale.",
          "to": "The specifically set buyer of the sale. Open to anyone, if address(0).",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "receiveToken(address,uint256)": {
        "notice": "Receives a specified token and adds it to the registry. Make sure 'token.approve()' is called beforehand.",
        "params": {
          "tokenAddress": "The address of the token to be received.",
          "value": "The value/amount of the token to be received."
        }
      },
      "registerTokenAddress(address)": {
        "notice": "Adds a token address to the registry. Also approves any future receipts of said token unless removed again.",
        "params": {
          "tokenAddress": "The token address to be registered."
        }
      },
      "removeBankAdmin(string,address)": {
        "notice": "Removes a given administrator of a given Bank.",
        "params": {
          "bankAdmin": "The address of the current Bank administrator to be removed.",
          "bankName": "The name of the Bank from which the given administrator is to be removed."
        }
      },
      "setBasePermit(string,uint8)": {
        "notice": "Sets the state of a specified base permit.",
        "params": {
          "newState": "The new base Permit State to be applied.",
          "permitName": "The name of the base permit, whose state is to be set."
        }
      },
      "setNonShardHolderState(bool)": {
        "notice": "Sets the state of the Non Shard Holders.",
        "params": {
          "newState": "The Boolean state to be applied."
        }
      },
      "setPermit(string,address,uint8)": {
        "notice": "Sets the state of a specified permit of a given address.",
        "params": {
          "account": "The address, whose permit state is to be set.",
          "newState": "The new Permit State to be applied.",
          "permitName": "The name of the permit, whose state is to be set."
        }
      },
      "shardByOwner(address)": {
        "notice": "Mapping pointing to a currently valid shard given the address of its owner."
      },
      "shardExisted(bytes32,uint256)": {
        "notice": "Returns a boolean stating if the given shard was valid at a given clock.",
        "params": {
          "atClock": "The clock to be checked for.",
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "split(bytes32,uint256,uint256,address)": {
        "notice": "Splits a currently valid shard into two new ones. One is assigned to the receiver. The rest to the previous owner.",
        "params": {
          "denominator": "Denominator of the absolute fraction, which will be subtracted from the previous shard and sent to the receiver.",
          "numerator": "Numerator of the absolute fraction, which will be subtracted from the previous shard and sent to the receiver.",
          "senderShard": "The shard to be split.",
          "to": "The receiver of the new Shard."
        }
      },
      "transferTokenFromBank(string,address,uint256,address)": {
        "notice": "Transfers a token bankAdmin a Bank to a recipient.",
        "params": {
          "bankName": "The name of the Bank from which the token is to be transferred.",
          "to": "The recipient of the token to be transferred.",
          "tokenAddress": "The address of the token to be transferred.",
          "value": "The value/amount of the token to be transferred."
        }
      },
      "unregisterTokenAddress(address)": {
        "notice": "Removes a token address from the registry. Also cancels any future receipts of said token unless added again.",
        "params": {
          "tokenAddress": "The token address to be unregistered."
        }
      }
    },
    "notice": "This contract adds administrability via permits and internally closed money supplies.",
    "stateVariables": {
      "permits": {
        "custom:illustration": "permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
      }
    },
    "title": "An extension of the Idea providing an administrable interface.",
    "version": 1
  },
  "offset": [
    307,
    23961
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x260 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x868399A5 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xBCEDB2E0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDE9D6805 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDE9D6805 EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0xE1C34C1F EQ PUSH2 0x82C JUMPI DUP1 PUSH4 0xE6778FCE EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0xEFAE89F8 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xF9983896 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xFD06636B EQ PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBCEDB2E0 EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0xC4802EB2 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xC5438A55 EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0xCC445611 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDB5DC9B7 EQ PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9995B9A9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x9995B9A9 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xA1916AEF EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xA80AED76 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xA902780F EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xA907B6C5 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0xB4AF7D59 EQ PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x868399A5 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x8786DF6A EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x8D7844A6 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x9211B7B3 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x97235A1E EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x350546D8 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x5BEEFF33 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x5BEEFF33 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x62748DCC EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x63879C0B EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x7B785493 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x81005219 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x859D9FD5 EQ PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x350546D8 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x354CD135 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x384FE2B5 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x3DBEAA54 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x4C46360B EQ PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23656642 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x23656642 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x258E4D9F EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x2DEC7CD2 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x2EF37926 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x2F2E9A2A EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x36F3AEC EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x5C558F5 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xBEA8985 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x169936B4 EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x273 JUMPI PUSH2 0x271 PUSH1 0x0 CALLVALUE CALLER PUSH2 0x8E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x292 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2B JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0xAD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A92 JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B46 JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A92 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B68 JUMP JUMPDEST PUSH2 0x1255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BCD JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x137E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x13B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x5F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BEA JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x616 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x646 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C29 JUMP JUMPDEST PUSH2 0x1497 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x666 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C53 JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x6B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x37C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x70B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A92 JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75D PUSH2 0x72B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x7A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x7D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CCF JUMP JUMPDEST PUSH2 0x1750 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x807 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x1DA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x827 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D2D JUMP JUMPDEST PUSH2 0x1E5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x847 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x1E7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x894 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x8C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x1EAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x8E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B46 JUMP JUMPDEST PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x8F1 DUP4 DUP4 DUP4 PUSH2 0x1F67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xE SWAP1 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x93E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x981 JUMPI PUSH1 0x1 PUSH1 0xD PUSH1 0x40 MLOAD PUSH2 0x95E SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xE PUSH1 0x40 MLOAD PUSH2 0x99B SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xA3F DUP2 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xA48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA5A JUMPI PUSH2 0xA5A PUSH2 0x3E0B JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA8E JUMPI PUSH2 0xA8E PUSH2 0x3E0B JUMP JUMPDEST SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACF DUP4 DUP4 PUSH2 0x1FBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C45 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xAF9 DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0xB02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0A PUSH2 0x206B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E61 JUMP JUMPDEST DUP2 PUSH2 0xB63 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xACF DUP4 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0xC23 JUMPI POP PUSH1 0xE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC06 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1911 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0xC4E DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0xC57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC60 DUP3 PUSH2 0x210C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6F DUP3 PUSH2 0x1E7A JUMP JUMPDEST DUP1 PUSH2 0xC7C JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xC88 JUMPI POP PUSH1 0x0 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0x3E0B JUMP JUMPDEST EQ DUP1 PUSH2 0xD12 JUMPI POP PUSH1 0x2 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD10 PUSH2 0x3E0B JUMP JUMPDEST EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP4 PUSH1 0x40 MLOAD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xD7F DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0xACF DUP4 DUP4 PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xDDD DUP2 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0xDF1 DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE04 DUP5 DUP5 PUSH2 0x2309 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE13 CALLER PUSH2 0x1E7A JUMP JUMPDEST PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xAA9 PUSH1 0xF3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0x137E JUMP JUMPDEST PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3EB5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP5 DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xF25 SWAP2 SWAP1 PUSH2 0x3ED1 JUMP JUMPDEST PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF83 SWAP1 DUP5 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF94 SWAP1 POP DUP4 DUP3 CALLER PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1397D005A56670CBE383372BD4743EAA779AF18164D00DC6D12A6659418E1BBF SWAP1 PUSH1 0x60 ADD PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E61 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0x1066 DUP5 DUP5 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x2720A3 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 DUP3 ADD SLOAD SWAP1 SLOAD DUP9 DUP7 MSTORE PUSH1 0x13 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1133 SWAP2 PUSH2 0x3ED1 JUMP JUMPDEST PUSH2 0x113D SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x445453 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1193 SWAP1 DUP5 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALLER PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x11FB SWAP2 CALLER SWAP1 PUSH2 0x3F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x122F DUP2 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x1238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x1243 DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0x124C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACF DUP4 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A51 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0x127A DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x128E DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A2 DUP6 DUP6 DUP6 PUSH2 0x2776 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x734E53 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x12CF DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xC60 DUP3 PUSH2 0x2980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x1346 DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x134F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0xC60 DUP3 PUSH2 0x29F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xC23 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x13D9 DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x13E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0xC60 DUP3 PUSH2 0x2A39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E61 JUMP JUMPDEST DUP5 PUSH2 0x1467 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH2 0x148F DUP7 DUP7 DUP7 DUP7 PUSH2 0x2A82 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14A0 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152E SWAP2 SWAP1 PUSH2 0x3F94 JUMP JUMPDEST LT ISZERO PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x15F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1395 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xACF DUP4 DUP4 CALLER PUSH2 0x8E6 JUMP JUMPDEST DUP4 PUSH2 0x160A DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0x1613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xD12 JUMPI POP PUSH2 0xD12 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP4 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x16AF DUP2 CALLER PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0x16C3 DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP4 PUSH2 0x1E7A JUMP JUMPDEST DUP1 PUSH2 0x16E2 JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4E53484E41 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xE04 DUP5 DUP5 PUSH2 0x2F14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1732 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH2 0x175B DUP2 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176D DUP4 PUSH2 0x1E7A JUMP JUMPDEST DUP1 PUSH2 0x177A JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x17AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4E53484E41 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17C0 JUMPI PUSH2 0x17C0 PUSH2 0x3E0B JUMP JUMPDEST PUSH1 0x10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH2 0x1809 PUSH2 0x3E0B JUMP JUMPDEST SUB PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x41485 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0xE04 DUP5 DUP5 DUP5 PUSH2 0x3012 JUMP JUMPDEST DUP1 PUSH2 0x1861 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x187D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1900 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x29A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0x193A DUP3 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x195E SWAP1 PUSH1 0x19 PUSH2 0x3E8 PUSH2 0x30CC JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x196F DUP2 DUP4 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE1 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4945 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A2D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1AA9 JUMPI POP DUP2 JUMPDEST PUSH2 0x1ADA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST POP POP PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x3F94 JUMP JUMPDEST LT ISZERO PUSH2 0x1B8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C16 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CA4 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1CD4 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1D05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4553 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1D27 SWAP2 DUP8 SWAP2 CALLER PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD DUP6 MLOAD DUP12 DUP2 MSTORE SWAP5 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xD8D12448ACB9A12D0CA44F527C717C0DE64F03B49CA4032F87FEAE10AF5EAABE SWAP1 PUSH1 0xC0 ADD PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAF DUP3 PUSH2 0x1E7A JUMP JUMPDEST DUP1 PUSH2 0x1DBC JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1DC8 JUMPI POP PUSH1 0x0 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DDA SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E13 JUMPI PUSH2 0x1E13 PUSH2 0x3E0B JUMP JUMPDEST LT ISZERO DUP1 PUSH2 0xD12 JUMPI POP PUSH1 0x1 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E2D SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E51 PUSH2 0x3E0B JUMP JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x1E65 DUP2 CALLER PUSH2 0x161F JUMP JUMPDEST PUSH2 0x1E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3140 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC23 SWAP1 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E61 JUMP JUMPDEST DUP7 PUSH2 0x1F02 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH2 0x1F2C DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x32E2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD12 JUMPI POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1F8F SWAP1 DUP5 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9DB SWAP1 DUP5 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1FE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FF3 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x3E0B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2043 SWAP3 SWAP2 SWAP1 PUSH2 0x4008 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x205F SWAP2 CALLER SWAP1 PUSH2 0x402A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2073 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x6C45 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE CALLER DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 JUMP JUMPDEST DUP1 PUSH2 0x20D7 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x2129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x214F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x14 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xE PUSH1 0x4 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 KECCAK256 DUP7 DUP6 MSTORE PUSH1 0x13 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x21BA SWAP1 DUP5 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x205F SWAP2 CALLER SWAP1 PUSH2 0x4056 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x221D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0x2226 DUP3 PUSH2 0x1720 JUMP JUMPDEST ISZERO PUSH2 0x2258 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4145 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0x226A SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 PUSH1 0xC SWAP1 PUSH2 0x22AF SWAP1 DUP6 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x22ED SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4082 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x205F SWAP2 CALLER SWAP1 PUSH2 0x40AC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x232F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0x2339 DUP3 DUP3 PUSH2 0x161F JUMP JUMPDEST PUSH2 0x2342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2354 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x23A9 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4082 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x205F SWAP2 CALLER SWAP1 PUSH2 0x40D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x23FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x241A JUMPI PUSH2 0x2415 DUP3 DUP3 PUSH2 0x3538 JUMP JUMPDEST PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x246C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2490 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x24C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO PUSH2 0x2536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B91AD0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x97235A1E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x251B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x252C JUMPI POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x25DA JUMPI PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A9 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x25DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1395 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xACF JUMPI PUSH2 0xACF DUP4 DUP4 PUSH2 0x35C0 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0x2620 DUP2 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x2652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x554221 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659 ADD PUSH2 0x26C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x26A1 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0x26D0 DUP2 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x2701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4245 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x2713 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x274F SWAP2 DUP5 SWAP2 ADD PUSH2 0x4104 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x276B SWAP2 CALLER SWAP1 PUSH2 0x4117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x279C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0xE SWAP1 PUSH2 0x27B0 SWAP1 DUP7 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x27F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x4143 JUMP JUMPDEST DUP2 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2805 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2845 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xE SWAP1 PUSH2 0x285B SWAP1 DUP7 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x2895 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x28CF JUMPI PUSH1 0x1 PUSH1 0xD DUP6 PUSH1 0x40 MLOAD PUSH2 0x28AC SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28C9 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x13 DUP4 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE MLOAD PUSH1 0x1 SWAP4 DUP5 ADD SSTORE PUSH1 0x14 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x12 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2956 SWAP2 DUP8 SWAP2 DUP8 SWAP2 DUP8 SWAP2 ADD PUSH2 0x415F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2972 SWAP2 CALLER SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x29A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x276B SWAP2 CALLER SWAP1 PUSH2 0x41B9 JUMP JUMPDEST PUSH2 0x29F9 DUP2 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x276B SWAP2 CALLER SWAP1 PUSH2 0x41E6 JUMP JUMPDEST PUSH2 0x2A42 DUP2 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x276B SWAP2 CALLER SWAP1 PUSH2 0x4212 JUMP JUMPDEST DUP4 PUSH2 0x2A9C DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x2AB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2ADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x2AFD SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x2B07 DUP5 DUP7 PUSH2 0x3EFE JUMP JUMPDEST LT PUSH2 0x2B24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x4143 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2B30 DUP4 PUSH2 0x1E7A JUMP JUMPDEST ISZERO PUSH2 0x2BA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 SWAP2 PUSH2 0x2B6F SWAP2 DUP10 DUP10 PUSH2 0x370E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2B7F DUP3 DUP3 DUP8 DUP7 PUSH2 0x374A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2BA2 SWAP1 DUP5 PUSH2 0x384C JUMP JUMPDEST POP POP PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2BB5 DUP6 DUP6 DUP6 DUP5 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x2BBF DUP7 DUP3 PUSH2 0x384C JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 SWAP2 PUSH2 0x2BE2 SWAP2 DUP10 DUP10 PUSH2 0x3894 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x0 EQ PUSH2 0x2C18 JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x2C18 SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x374A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0xD8D12448ACB9A12D0CA44F527C717C0DE64F03B49CA4032F87FEAE10AF5EAABE SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x2C8A DUP2 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x2CBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x444E45 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2CE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2CF2 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2D36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x4143 JUMP JUMPDEST DUP2 PUSH1 0xE DUP7 PUSH1 0x40 MLOAD PUSH2 0x2D47 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D87 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2E7B JUMPI PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DAB SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2E0B JUMPI PUSH1 0x1 PUSH1 0xD DUP7 PUSH1 0x40 MLOAD PUSH2 0x2DE8 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E05 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0xE DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E1B SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2E7B JUMPI PUSH1 0x1 PUSH1 0xD DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E58 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E75 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E8C SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ECC SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x2EF8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x20 ADD PUSH2 0x423E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x11FB SWAP2 CALLER SWAP1 PUSH2 0x4280 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2F3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH2 0x2F5E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP3 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x2F8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E5 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FA1 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2FF6 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4082 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x205F SWAP2 CALLER SWAP1 PUSH2 0x42AC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST DUP1 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3049 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3087 JUMPI PUSH2 0x3087 PUSH2 0x3E0B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xA27 SWAP2 CALLER SWAP1 PUSH2 0x4309 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP5 GT PUSH2 0x30DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x30EA DUP8 DUP10 PUSH2 0x3ED1 JUMP JUMPDEST PUSH2 0x30F4 SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x3103 DUP9 DUP3 PUSH2 0x3F12 JUMP JUMPDEST PUSH2 0x310D SWAP1 DUP11 PUSH2 0x3ED1 JUMP JUMPDEST PUSH2 0x3117 SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x3125 DUP2 DUP4 PUSH2 0x3DF8 JUMP JUMPDEST PUSH2 0x312F SWAP1 DUP12 PUSH2 0x3F12 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3166 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0xE DUP5 PUSH1 0x40 MLOAD PUSH2 0x3176 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x31BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x4143 JUMP JUMPDEST PUSH2 0x31C5 DUP4 DUP4 DUP4 PUSH2 0x23C5 JUMP JUMPDEST DUP2 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x31D6 SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3216 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xE SWAP1 PUSH2 0x322C SWAP1 DUP7 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x3266 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x32A0 JUMPI PUSH1 0x1 PUSH1 0xD DUP6 PUSH1 0x40 MLOAD PUSH2 0x327D SWAP2 SWAP1 PUSH2 0x3E45 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x329A SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32C6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4335 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2972 SWAP2 CALLER SWAP1 PUSH2 0x4371 JUMP JUMPDEST DUP6 PUSH2 0x32FC DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x3318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x333E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x335D SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3367 DUP7 DUP9 PUSH2 0x3EFE JUMP JUMPDEST GT ISZERO PUSH2 0x3385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x4143 JUMP JUMPDEST PUSH2 0x338F DUP7 DUP7 PUSH2 0x38C3 JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4C4DCD7B4186FE1C900D89BC3C911766F63CF9C3570750481F0D89BFBCB75285 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x34F5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x352C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3E99 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3585 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x358A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x35E8 SWAP1 DUP5 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3615 SWAP1 DUP5 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x3627 DUP2 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x3643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x3EB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x368E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x272D PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x36B8 DUP2 PUSH2 0x137E JUMP JUMPDEST ISZERO PUSH2 0x36EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x20A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x371B DUP4 DUP8 PUSH2 0x3ED1 JUMP JUMPDEST SWAP6 POP PUSH2 0x3727 DUP6 DUP6 PUSH2 0x3ED1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3733 DUP5 DUP8 PUSH2 0x3DF8 JUMP JUMPDEST PUSH2 0x373D DUP5 DUP8 PUSH2 0x3ED1 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP1 DUP7 MSTORE DUP7 DUP3 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP7 DUP3 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE PUSH1 0x80 DUP9 ADD DUP8 MSTORE DUP13 DUP9 MSTORE DUP6 DUP9 ADD DUP13 DUP2 MSTORE DUP9 DUP9 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP1 DUP12 ADD DUP14 DUP2 MSTORE DUP9 DUP7 MSTORE PUSH1 0x2 DUP1 DUP12 MSTORE SWAP6 DUP12 SWAP1 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP13 ADD SSTORE SWAP1 MLOAD SWAP4 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP7 SWAP1 SWAP3 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP4 MLOAD DUP3 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH32 0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD SWAP2 ADD PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F SWAP2 ADD PUSH2 0x205F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38A1 DUP4 DUP8 PUSH2 0x3ED1 JUMP JUMPDEST SWAP6 POP PUSH2 0x38AD DUP5 DUP7 PUSH2 0x3ED1 JUMP JUMPDEST SWAP5 POP PUSH2 0x38B9 DUP6 DUP8 PUSH2 0x3F12 JUMP JUMPDEST PUSH2 0x373D DUP5 DUP7 PUSH2 0x3ED1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x38D2 DUP6 DUP6 PUSH2 0x394F JUMP JUMPDEST SWAP1 POP PUSH2 0x38DE DUP2 DUP6 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x38E8 DUP3 DUP8 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x38F2 SWAP2 SWAP1 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x38FC DUP6 DUP8 PUSH2 0x3EFE JUMP JUMPDEST EQ PUSH2 0x392F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x159355 PUSH1 0xEA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xABC JUMP JUMPDEST PUSH2 0x3939 DUP2 DUP7 PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3943 DUP3 DUP7 PUSH2 0x3EFE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x396D JUMPI DUP2 PUSH2 0x3963 DUP2 DUP6 PUSH2 0x439D JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3952 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x399B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x39B6 JUMPI PUSH2 0x39B6 PUSH2 0x3974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x39DE JUMPI PUSH2 0x39DE PUSH2 0x3974 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x39F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A61 DUP6 DUP3 DUP7 ADD PUSH2 0x398A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3A70 PUSH1 0x20 DUP5 ADD PUSH2 0x3A17 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC7 DUP5 DUP3 DUP6 ADD PUSH2 0x398A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B1C DUP6 DUP3 DUP7 ADD PUSH2 0x398A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3A70 PUSH1 0x20 DUP5 ADD PUSH2 0x3ACF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD12 DUP3 PUSH2 0x3ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BA0 DUP7 DUP3 DUP8 ADD PUSH2 0x398A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3BAF PUSH1 0x20 DUP6 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD12 DUP2 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3C1E PUSH1 0x60 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C45 DUP4 PUSH2 0x3ACF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C8D DUP9 DUP4 DUP10 ADD PUSH2 0x398A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB0 DUP8 DUP3 DUP9 ADD PUSH2 0x398A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3CBF PUSH1 0x40 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D07 DUP7 DUP3 DUP8 ADD PUSH2 0x398A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3D16 PUSH1 0x20 DUP6 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP2 POP PUSH2 0x3D24 PUSH1 0x40 DUP6 ADD PUSH2 0x3A17 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D66 DUP8 DUP3 DUP9 ADD PUSH2 0x398A JUMP JUMPDEST SWAP5 POP POP PUSH2 0x3D75 PUSH1 0x20 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3C1E PUSH1 0x60 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3DA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3DC1 PUSH1 0x60 DUP9 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3DD6 PUSH1 0xA0 DUP9 ADD PUSH2 0x3ACF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC23 JUMPI PUSH2 0xC23 PUSH2 0x3DE2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E3C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E24 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3E57 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3E21 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x9E9 PUSH1 0xF3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x5553 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1153 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1555 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC23 JUMPI PUSH2 0xC23 PUSH2 0x3DE2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3F0D JUMPI PUSH2 0x3F0D PUSH2 0x3EE8 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC23 JUMPI PUSH2 0xC23 PUSH2 0x3DE2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3F3D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18D1 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD12 DUP2 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4004 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x401B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST SWAP1 POP PUSH2 0xD12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x39A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1911 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4095 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x31A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7241 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3221 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x24A3 PUSH1 0xF1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4172 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1A51 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x3 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x734E53 PUSH1 0xE8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C95 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4251 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3F25 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4263 DUP2 DUP8 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x6141 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x42EB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH2 0x3AC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x735 PUSH1 0xF4 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4348 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 AND PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D15 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3F7D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x43AC JUMPI PUSH2 0x43AC PUSH2 0x3EE8 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID NUMBER 0xCD PUSH23 0xB5EB40DA9EA5EB31A199F443F7CF7955EC280BC5981A2E CALLVALUE GASLIMIT 0xC7 SWAP13 SWAP1 SSTORE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x26 DUP3 ORIGIN PUSH32 0x935254D1B2B2F6D0D1CBBA272FBBBE27418E020EE3ABB5F9ED847464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "12": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x868399A5"
    },
    "25": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBCEDB2E0"
    },
    "36": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE9D6805"
    },
    "47": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE9D6805"
    },
    "58": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80C"
    },
    "62": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE1C34C1F"
    },
    "69": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "73": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6778FCE"
    },
    "80": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84C"
    },
    "84": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEFAE89F8"
    },
    "91": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x879"
    },
    "95": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9983896"
    },
    "102": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A6"
    },
    "106": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD06636B"
    },
    "113": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C6"
    },
    "117": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBCEDB2E0"
    },
    "129": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x710"
    },
    "133": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC4802EB2"
    },
    "140": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78C"
    },
    "144": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC5438A55"
    },
    "151": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B9"
    },
    "155": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCC445611"
    },
    "162": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "166": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDB5DC9B7"
    },
    "173": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EC"
    },
    "177": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9995B9A9"
    },
    "189": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9995B9A9"
    },
    "200": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64B"
    },
    "204": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1916AEF"
    },
    "211": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67B"
    },
    "215": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA80AED76"
    },
    "222": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "226": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA902780F"
    },
    "233": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "237": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA907B6C5"
    },
    "244": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D0"
    },
    "248": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4AF7D59"
    },
    "255": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F0"
    },
    "259": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x868399A5"
    },
    "271": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "272": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59B"
    },
    "275": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8786DF6A"
    },
    "282": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BB"
    },
    "286": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8D7844A6"
    },
    "293": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DB"
    },
    "297": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9211B7B3"
    },
    "304": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FB"
    },
    "308": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97235A1E"
    },
    "315": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62B"
    },
    "319": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "324": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "326": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x350546D8"
    },
    "331": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "332": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5BEEFF33"
    },
    "342": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "347": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5BEEFF33"
    },
    "353": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x490"
    },
    "357": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62748DCC"
    },
    "364": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "368": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63879C0B"
    },
    "375": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50B"
    },
    "379": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B785493"
    },
    "386": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52B"
    },
    "390": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "391": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "392": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81005219"
    },
    "397": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55B"
    },
    "401": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x859D9FD5"
    },
    "408": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57B"
    },
    "412": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "416": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "417": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "419": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x350546D8"
    },
    "424": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "425": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA"
    },
    "428": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "429": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x354CD135"
    },
    "435": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "436": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "439": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x384FE2B5"
    },
    "446": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "447": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40A"
    },
    "450": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3DBEAA54"
    },
    "457": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "458": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42A"
    },
    "461": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "462": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C46360B"
    },
    "468": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "472": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "476": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "477": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "478": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "479": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23656642"
    },
    "484": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "GT",
      "path": "0"
    },
    "485": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "488": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "489": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "490": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23656642"
    },
    "495": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "496": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "499": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "500": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x258E4D9F"
    },
    "506": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "507": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33C"
    },
    "510": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2DEC7CD2"
    },
    "517": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "518": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35C"
    },
    "521": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "522": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EF37926"
    },
    "528": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38A"
    },
    "532": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "533": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F2E9A2A"
    },
    "539": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AA"
    },
    "543": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "548": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "550": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2FB0C5E"
    },
    "555": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "556": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "559": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "560": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "561": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36F3AEC"
    },
    "566": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "567": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "570": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "571": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "572": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C558F5"
    },
    "577": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "578": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "581": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "582": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEA8985"
    },
    "588": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "589": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "592": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x169936B4"
    },
    "599": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "EQ",
      "path": "0"
    },
    "600": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FC"
    },
    "603": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "606": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "607": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "608": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "610": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "613": {
      "fn": null,
      "offset": [
        307,
        23961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "614": {
      "fn": "Idea.<receive>",
      "offset": [
        2036,
        2089
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 0,
      "value": "0x271"
    },
    "617": {
      "fn": "Idea.<receive>",
      "offset": [
        2065,
        2066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "619": {
      "fn": "Idea.<receive>",
      "offset": [
        2068,
        2077
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "620": {
      "fn": "Idea.<receive>",
      "offset": [
        2078,
        2088
      ],
      "op": "CALLER",
      "path": "1"
    },
    "621": {
      "fn": "Idea.<receive>",
      "offset": [
        2036,
        2056
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E6"
    },
    "624": {
      "fn": "Idea.<receive>",
      "jump": "i",
      "offset": [
        2036,
        2089
      ],
      "op": "JUMP",
      "path": "1"
    },
    "625": {
      "fn": "Idea.<receive>",
      "offset": [
        2036,
        2089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "626": {
      "offset": [
        307,
        23961
      ],
      "op": "STOP",
      "path": "0"
    },
    "627": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "630": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "631": {
      "first_revert": true,
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "632": {
      "offset": [
        4946,
        4964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "633": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "634": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "635": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "636": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "639": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "640": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "642": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "643": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "REVERT",
      "path": "2"
    },
    "644": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "648": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "649": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "652": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "653": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "655": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "AND",
      "path": "2"
    },
    "656": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "657": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "JUMP",
      "path": "2"
    },
    "658": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "659": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "661": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "662": {
      "op": "SWAP1"
    },
    "663": {
      "op": "ISZERO"
    },
    "664": {
      "op": "ISZERO"
    },
    "665": {
      "op": "DUP2"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "offset": [
        4946,
        4964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "671": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "673": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "674": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "675": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "676": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "SUB",
      "path": "2"
    },
    "677": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "678": {
      "fn": "Idea.<receive>",
      "offset": [
        4946,
        4964
      ],
      "op": "RETURN",
      "path": "2"
    },
    "679": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "680": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "681": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "683": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "686": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "687": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "689": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "DUP1",
      "path": "0"
    },
    "690": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "REVERT",
      "path": "0"
    },
    "691": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "696": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2"
    },
    "699": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "700": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "702": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A2B"
    },
    "705": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "706": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "707": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA34"
    },
    "710": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "713": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "715": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "718": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "719": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "721": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "722": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "REVERT",
      "path": "0"
    },
    "723": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "724": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "POP",
      "path": "0"
    },
    "725": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "728": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "731": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "733": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "734": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "736": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "739": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "740": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "742": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "743": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "REVERT",
      "path": "2"
    },
    "744": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "749": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F7"
    },
    "752": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "753": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "755": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "758": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "759": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "760": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0D"
    },
    "763": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "764": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "765": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "766": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "768": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "771": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "772": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "774": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "775": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "REVERT",
      "path": "0"
    },
    "776": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "781": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "784": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "785": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "787": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A92"
    },
    "790": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "791": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "792": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCB"
    },
    "795": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "796": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "798": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "799": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "800": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x328"
    },
    "803": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "804": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "806": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "807": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "REVERT",
      "path": "0"
    },
    "808": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "813": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x337"
    },
    "816": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "817": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "819": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A79"
    },
    "822": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "823": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "824": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC29"
    },
    "827": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "828": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "829": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "830": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "831": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "832": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x348"
    },
    "835": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "836": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "838": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "839": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "REVERT",
      "path": "0"
    },
    "840": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "845": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x357"
    },
    "848": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "849": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "851": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "854": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "855": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "856": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "859": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "860": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "861": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "862": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "863": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "864": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "867": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "868": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "870": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "871": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "REVERT",
      "path": "0"
    },
    "872": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "877": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "880": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "881": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "883": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "886": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "887": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD19"
    },
    "891": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "892": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "893": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "895": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "896": {
      "op": "SWAP1"
    },
    "897": {
      "op": "DUP2"
    },
    "898": {
      "op": "MSTORE"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "901": {
      "op": "ADD"
    },
    "902": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "905": {
      "op": "JUMP"
    },
    "906": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "908": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "909": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "910": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "913": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "914": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "916": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "917": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "REVERT",
      "path": "0"
    },
    "918": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "923": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A5"
    },
    "926": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "927": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "929": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "932": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "933": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "934": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5A"
    },
    "937": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "938": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "939": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "940": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "941": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "942": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B6"
    },
    "945": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "946": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "948": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "949": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "950": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "955": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C5"
    },
    "958": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "959": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "961": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "964": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "965": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "966": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB8"
    },
    "969": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "970": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "971": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "972": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "DUP1",
      "path": "1"
    },
    "973": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "974": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D6"
    },
    "977": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "978": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "980": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "DUP1",
      "path": "1"
    },
    "981": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "REVERT",
      "path": "1"
    },
    "982": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271"
    },
    "987": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E5"
    },
    "990": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "991": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "993": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B2B"
    },
    "996": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "997": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "998": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0A"
    },
    "1001": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1002": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1003": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1004": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1005": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1006": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "1009": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1010": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1012": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1013": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1014": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1019": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "1022": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1023": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1025": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B46"
    },
    "1028": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1029": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1030": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "1033": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1034": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1035": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1036": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1037": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1038": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x416"
    },
    "1041": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1044": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1045": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1046": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1051": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1054": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1055": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1057": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A92"
    },
    "1060": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1061": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120A"
    },
    "1065": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1066": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1067": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1068": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1069": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1070": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "1073": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1074": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1076": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1077": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1078": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C"
    },
    "1083": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x445"
    },
    "1086": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1087": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1089": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B2B"
    },
    "1092": {
      "fn": "Idea.getLiquidResidual",
      "jump": "i",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1093": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "AND",
      "path": "1",
      "statement": 1
    },
    "1103": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3826,
        3833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1105": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1106": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1107": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1108": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1110": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1112": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1113": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1115": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1116": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1117": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1118": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3852,
        3880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1119": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3757,
        3887
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1120": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1121": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1122": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1124": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46C"
    },
    "1127": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1128": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1130": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1131": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1132": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "1137": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1140": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1141": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1143": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A79"
    },
    "1146": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1147": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1148": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12774,
        12781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1150": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 2
    },
    "1151": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1155": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1157": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1158": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1160": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1161": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1162": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1164": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12830
      ],
      "op": "ADD",
      "path": "0"
    },
    "1165": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12830
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1166": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12800,
        12830
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1167": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12710,
        12837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1168": {
      "offset": [
        750,
        791
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1169": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1170": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1171": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1172": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49C"
    },
    "1175": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1176": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1178": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1179": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1180": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "offset": [
        750,
        791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C"
    },
    "1185": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AB"
    },
    "1188": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1189": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1191": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B2B"
    },
    "1194": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        750,
        791
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1195": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1196": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1198": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1200": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1201": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1203": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1204": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1205": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1206": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1208": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1209": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1210": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1211": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1212": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        750,
        791
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1213": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1215": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1216": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1217": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1220": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1221": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1223": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1224": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1225": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "op": "POP"
    },
    "1227": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "1230": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1233": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1234": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1236": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A79"
    },
    "1239": {
      "fn": "Administrable.getDividendToken",
      "jump": "i",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1240": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12519,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1243": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 3
    },
    "1244": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1245": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1246": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1248": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1250": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1251": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1253": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12569
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1255": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "op": "SUB"
    },
    "1264": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12582
      ],
      "op": "AND",
      "path": "0"
    },
    "1265": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12545,
        12582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1267": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1268": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1270": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "op": "SWAP1"
    },
    "1280": {
      "op": "SWAP2"
    },
    "1281": {
      "op": "AND"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1286": {
      "op": "ADD"
    },
    "1287": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12455,
        12589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "1290": {
      "op": "JUMP"
    },
    "1291": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1292": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1293": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1294": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1295": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x517"
    },
    "1298": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1299": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1301": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1302": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1303": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1308": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "1311": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1312": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1314": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B68"
    },
    "1317": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1318": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1319": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1255"
    },
    "1322": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1323": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1324": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1325": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1326": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1327": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x537"
    },
    "1330": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1331": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1333": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1334": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1335": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "1340": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x546"
    },
    "1343": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1344": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1346": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "1349": {
      "fn": "Shardable.getShardSalePrice",
      "jump": "i",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1350": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1351": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13355,
        13362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1353": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 4
    },
    "1354": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1355": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1356": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1358": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1360": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1361": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1363": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1364": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13399
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1365": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1367": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13405
      ],
      "op": "ADD",
      "path": "2"
    },
    "1368": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13405
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1369": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13381,
        13405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1370": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        13293,
        13412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1371": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1372": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1373": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1374": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1375": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x567"
    },
    "1378": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1379": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1381": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1382": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1383": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1388": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x576"
    },
    "1391": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1392": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1394": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BCD"
    },
    "1397": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1398": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1399": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A9"
    },
    "1402": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1403": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1404": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1405": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1406": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1407": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x587"
    },
    "1410": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1411": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1413": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1414": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1415": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1420": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1423": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1424": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1426": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B2B"
    },
    "1429": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1430": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1320"
    },
    "1434": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1435": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1436": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1437": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1438": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1439": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A7"
    },
    "1442": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1443": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1445": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1446": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1447": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "1452": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B6"
    },
    "1455": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1456": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1458": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B2B"
    },
    "1461": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1462": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1463": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137E"
    },
    "1466": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1467": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1468": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1469": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1470": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1471": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C7"
    },
    "1474": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1475": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1477": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1478": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1479": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1484": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1487": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1488": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1490": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B2B"
    },
    "1493": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B3"
    },
    "1498": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1499": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1500": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1501": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1502": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1503": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E7"
    },
    "1506": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1507": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1509": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1510": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1511": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "1516": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F6"
    },
    "1519": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1520": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1522": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BEA"
    },
    "1525": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1526": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1527": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1411"
    },
    "1530": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1531": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1532": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1533": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1534": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1535": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "1538": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1539": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1541": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1542": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1543": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1548": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x616"
    },
    "1551": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1552": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1554": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A79"
    },
    "1557": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1558": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1559": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13859,
        13863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1561": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1562": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1563": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1564": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1566": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1568": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1569": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1571": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1572": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1573": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1574": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1576": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "AND",
      "path": "0"
    },
    "1577": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13797,
        13911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1579": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1580": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1581": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1582": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1583": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x637"
    },
    "1586": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1587": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1589": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1590": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1591": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271"
    },
    "1596": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x646"
    },
    "1599": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1600": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1602": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C29"
    },
    "1605": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1606": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1607": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1497"
    },
    "1610": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1611": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1612": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1613": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1614": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1615": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x657"
    },
    "1618": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1619": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1621": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1622": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1623": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "1628": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "1631": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1632": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1634": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "1637": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1638": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1639": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1641": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 6
    },
    "1642": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1643": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 7
    },
    "1644": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1645": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1646": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1648": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1650": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1651": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1653": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1654": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1655": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1656": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "1657": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1658": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1659": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1660": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1661": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1662": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1663": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1666": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1667": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1669": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1670": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1671": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1676": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x696"
    },
    "1679": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1680": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1682": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C53"
    },
    "1685": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1686": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1687": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15FF"
    },
    "1690": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1691": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1693": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1694": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1695": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1698": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1699": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1701": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1702": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1703": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1708": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B6"
    },
    "1711": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1712": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1714": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "1717": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1718": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1719": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "1722": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1723": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1724": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1725": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1726": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1727": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C7"
    },
    "1730": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1731": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1733": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1734": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1735": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12977,
        12984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1739": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        13003,
        13008
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 8
    },
    "1740": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "1743": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        12930,
        13015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1744": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1745": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1746": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1748": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "1751": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1752": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1754": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1755": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1756": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1761": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EB"
    },
    "1764": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1765": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1767": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "1770": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1771": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1772": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168A"
    },
    "1775": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1776": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1777": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1778": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1779": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1780": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FC"
    },
    "1783": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1784": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1786": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1787": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1788": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1793": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70B"
    },
    "1796": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1797": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1799": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A92"
    },
    "1802": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1803": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1804": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1720"
    },
    "1807": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "offset": [
        5074,
        5122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1809": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1810": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1811": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1812": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71C"
    },
    "1815": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1816": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1818": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1819": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1820": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75D"
    },
    "1825": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72B"
    },
    "1828": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1829": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1831": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "1834": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1835": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1836": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1838": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1840": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1841": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1842": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1843": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1845": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1846": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1847": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1848": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1850": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1851": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1852": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1853": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1854": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1855": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1857": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1858": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "ADD",
      "path": "2"
    },
    "1859": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1860": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1861": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1862": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "ADD",
      "path": "2"
    },
    "1863": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1864": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1866": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1867": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1868": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "ADD",
      "path": "2"
    },
    "1869": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1870": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1871": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1872": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "offset": [
        5074,
        5122
      ],
      "op": "AND",
      "path": "2"
    },
    "1882": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1883": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1884": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1885": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1886": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1888": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1889": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E"
    },
    "1892": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1893": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1894": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1895": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1896": {
      "fn": "Administrable.bankExists",
      "offset": [
        5074,
        5122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1897": {
      "op": "SWAP4"
    },
    "1898": {
      "op": "DUP5"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1902": {
      "op": "DUP5"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "op": "SWAP3"
    },
    "1905": {
      "op": "SWAP1"
    },
    "1906": {
      "op": "SWAP3"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "op": "AND"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1919": {
      "op": "DUP4"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "MSTORE"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1929": {
      "op": "ADD"
    },
    "1930": {
      "op": "SWAP1"
    },
    "1931": {
      "op": "JUMP"
    },
    "1932": {
      "offset": [
        5220,
        5267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1933": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1934": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1935": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1936": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x798"
    },
    "1939": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1940": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1942": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1943": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1944": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "1949": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A7"
    },
    "1952": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1953": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1955": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2B"
    },
    "1958": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        5220,
        5267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1959": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1960": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1962": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1964": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1965": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1967": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1968": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1969": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1970": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1972": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1973": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1974": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1975": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1976": {
      "fn": "Administrable.bankExists",
      "offset": [
        5220,
        5267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1977": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1978": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1979": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1980": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1981": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C5"
    },
    "1984": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1985": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1987": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1988": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1989": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1994": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D4"
    },
    "1997": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1998": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2000": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CCF"
    },
    "2003": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2004": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2005": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1750"
    },
    "2008": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2009": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2010": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "2013": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E7"
    },
    "2016": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2017": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2019": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "2022": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9220,
        11050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2023": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2024": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1847"
    },
    "2027": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9220,
        11050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2028": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2029": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2030": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2031": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2032": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F8"
    },
    "2035": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2036": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2038": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2039": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2040": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "2045": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "2048": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2049": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2051": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE6"
    },
    "2054": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2055": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2056": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "2059": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2060": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2061": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2062": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2064": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x818"
    },
    "2067": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2068": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2070": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2071": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2072": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "2077": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x827"
    },
    "2080": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2081": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2083": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D2D"
    },
    "2086": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2087": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2088": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E5A"
    },
    "2091": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2092": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2093": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2094": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2095": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2096": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x838"
    },
    "2099": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2100": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2102": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2103": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2104": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "2109": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x847"
    },
    "2112": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2113": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2115": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2B"
    },
    "2118": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2119": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2120": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7A"
    },
    "2123": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2124": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2125": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2126": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2127": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2128": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x858"
    },
    "2131": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2132": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2134": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2135": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2136": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "2141": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x867"
    },
    "2144": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2145": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2147": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A79"
    },
    "2150": {
      "fn": "Administrable.getDividendResidual",
      "jump": "i",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2151": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2152": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13024,
        13031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2154": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "2155": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2156": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2157": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "2159": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2161": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2162": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2164": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2165": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2166": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2167": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13050,
        13078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2168": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12957,
        13085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2169": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2170": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2171": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2172": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2173": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x885"
    },
    "2176": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2177": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2179": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2180": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2181": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2182": {
      "op": "POP"
    },
    "2183": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "2186": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x894"
    },
    "2189": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2190": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2192": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A79"
    },
    "2195": {
      "fn": "Shardable.getShardExpirationClock",
      "jump": "i",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2196": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2197": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13162,
        13169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2199": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2200": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2201": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2202": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2204": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2206": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2207": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2209": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2210": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2211": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2212": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13094,
        13222
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2214": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2215": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2216": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2217": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2218": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B2"
    },
    "2221": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2222": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2224": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2225": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2226": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "2231": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C1"
    },
    "2234": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2235": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2237": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D8A"
    },
    "2240": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2241": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2242": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EAC"
    },
    "2245": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2246": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2247": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2248": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2249": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2250": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D2"
    },
    "2253": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2254": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2256": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2257": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2258": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2259": {
      "op": "POP"
    },
    "2260": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "2263": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E1"
    },
    "2266": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2267": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2269": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B46"
    },
    "2272": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2273": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2274": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F36"
    },
    "2277": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2278": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23302,
        23755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2279": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23411,
        23464
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x8F1"
    },
    "2282": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23438,
        23450
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2283": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23452,
        23457
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2284": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23459,
        23463
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2285": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23411,
        23437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F67"
    },
    "2288": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23411,
        23464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2289": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23411,
        23464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2290": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2292": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2293": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2300": {
      "op": "SHL"
    },
    "2301": {
      "op": "DUP2"
    },
    "2302": {
      "op": "MSTORE"
    },
    "2303": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2305": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2310": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2311": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2312": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2314": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2315": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2316": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2318": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2319": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2320": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2321": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "SUB",
      "path": "0"
    },
    "2322": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2323": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "ADD",
      "path": "0"
    },
    "2324": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2325": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "op": "SUB"
    },
    "2334": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2335": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "AND",
      "path": "0"
    },
    "2336": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2338": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2339": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2341": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2342": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2343": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2345": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23541
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2346": {
      "branch": 173,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23546
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2347": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23576
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2348": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23576
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2349": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23576
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93E"
    },
    "2352": {
      "branch": 173,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23576
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23550,
        23576
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2363": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23550,
        23576
      ],
      "op": "AND",
      "path": "0"
    },
    "2364": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23550,
        23576
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2365": {
      "branch": 174,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23550,
        23576
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2366": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23506,
        23576
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2367": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23502,
        23642
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2368": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23502,
        23642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x981"
    },
    "2371": {
      "branch": 174,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23502,
        23642
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2372": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23630,
        23631
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "2374": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2376": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2378": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2379": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95E"
    },
    "2382": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2383": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "DUP2"
    },
    "2392": {
      "op": "MSTORE"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2395": {
      "op": "ADD"
    },
    "2396": {
      "op": "SWAP1"
    },
    "2397": {
      "op": "JUMP"
    },
    "2398": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2399": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2400": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2401": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2402": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2404": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "ADD",
      "path": "0"
    },
    "2405": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2407": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2408": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2409": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2410": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "SUB",
      "path": "0"
    },
    "2411": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2412": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2413": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2415": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2416": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2417": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2418": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97B"
    },
    "2421": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2422": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF8"
    },
    "2426": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23592,
        23631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2427": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2428": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2429": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2430": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23592,
        23631
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23502,
        23642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2434": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23690,
        23695
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "2435": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2437": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2439": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2440": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99B"
    },
    "2443": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2444": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2451": {
      "op": "SHL"
    },
    "2452": {
      "op": "DUP2"
    },
    "2453": {
      "op": "MSTORE"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "SWAP1"
    },
    "2458": {
      "op": "JUMP"
    },
    "2459": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2460": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2461": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2462": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2463": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2465": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "ADD",
      "path": "0"
    },
    "2466": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2468": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2469": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2470": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2471": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "SUB",
      "path": "0"
    },
    "2472": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2473": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23672
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2474": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2476": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23673,
        23685
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "AND",
      "path": "0"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "op": "SUB"
    },
    "2494": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "AND",
      "path": "0"
    },
    "2495": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2496": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2497": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2499": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "ADD",
      "path": "0"
    },
    "2500": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2501": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2502": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2503": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2505": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "ADD",
      "path": "0"
    },
    "2506": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2508": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2509": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2511": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2512": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2513": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2514": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DB"
    },
    "2517": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2518": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2519": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF8"
    },
    "2522": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23651,
        23695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2523": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2524": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2525": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2526": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23651,
        23695
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "2531": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2532": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "op": "SUB"
    },
    "2541": {
      "op": "DUP1"
    },
    "2542": {
      "op": "DUP7"
    },
    "2543": {
      "op": "AND"
    },
    "2544": {
      "op": "DUP3"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "DUP6"
    },
    "2551": {
      "op": "SWAP1"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "DUP4"
    },
    "2554": {
      "op": "AND"
    },
    "2555": {
      "op": "SWAP2"
    },
    "2556": {
      "op": "DUP2"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "SWAP2"
    },
    "2559": {
      "op": "SWAP1"
    },
    "2560": {
      "op": "SWAP2"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF"
    },
    "2595": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2600": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2602": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2603": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2604": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2605": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "SUB",
      "path": "0"
    },
    "2606": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2607": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23710,
        23748
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2608": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23302,
        23755
      ],
      "op": "POP",
      "path": "0"
    },
    "2609": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23302,
        23755
      ],
      "op": "POP",
      "path": "0"
    },
    "2610": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23302,
        23755
      ],
      "op": "POP",
      "path": "0"
    },
    "2611": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "o",
      "offset": [
        23302,
        23755
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2612": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2613": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11415,
        11425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2614": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3F"
    },
    "2617": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2618": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2619": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "2622": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2623": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2624": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA48"
    },
    "2627": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2628": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2630": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2631": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2632": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2633": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11472,
        11480
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2634": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2636": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2637": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "GT",
      "path": "0"
    },
    "2638": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2639": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "2642": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2643": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "2646": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "2649": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2650": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2651": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "2653": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11457,
        11467
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2654": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2656": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2657": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6A"
    },
    "2660": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2661": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2662": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "2665": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11445,
        11468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2666": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2667": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2668": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2669": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2670": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2672": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2673": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2674": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2675": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2676": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SUB",
      "path": "0"
    },
    "2677": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2679": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "ADD",
      "path": "0"
    },
    "2680": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2681": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2682": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2683": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2685": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11468
      ],
      "op": "AND",
      "path": "0"
    },
    "2686": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2688": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2689": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "GT",
      "path": "0"
    },
    "2690": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2691": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2694": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2695": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2698": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "2701": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2702": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2703": {
      "branch": 175,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11445,
        11480
      ],
      "op": "SUB",
      "path": "0"
    },
    "2704": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2707": {
      "branch": 175,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2708": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2710": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2719": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2722": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2724": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2725": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "ADD",
      "path": "0"
    },
    "2726": {
      "op": "MSTORE"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2731": {
      "op": "DUP3"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "MSTORE"
    },
    "2734": {
      "op": "PUSH2",
      "value": "0x4153"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2742": {
      "op": "DUP3"
    },
    "2743": {
      "op": "ADD"
    },
    "2744": {
      "op": "MSTORE"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2749": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2751": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2752": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2753": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2754": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "SUB",
      "path": "0"
    },
    "2755": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2756": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2757": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11437,
        11487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2758": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11497,
        11532
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xACF"
    },
    "2761": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11512,
        11522
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2762": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11523,
        11531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2763": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11497,
        11511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FBC"
    },
    "2766": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11497,
        11532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2767": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11497,
        11532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2768": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "POP",
      "path": "0"
    },
    "2769": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "POP",
      "path": "0"
    },
    "2770": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11319,
        11539
      ],
      "op": "POP",
      "path": "0"
    },
    "2771": {
      "fn": "Administrable.setBasePermit",
      "jump": "o",
      "offset": [
        11319,
        11539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2772": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2773": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2775": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2776": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2777": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2779": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "2780": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2782": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2783": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2784": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2786": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2787": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2788": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2790": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "2791": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2798": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2799": {
      "fn": "Administrable.liquidize",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "2800": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF9"
    },
    "2803": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2804": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2805": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "2808": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2809": {
      "fn": "Administrable.liquidize",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2810": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB02"
    },
    "2813": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2814": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2816": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2817": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2818": {
      "fn": "Administrable.liquidize",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2819": {
      "fn": "Administrable.liquidize",
      "offset": [
        11987,
        11999
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xB0A"
    },
    "2822": {
      "fn": "Administrable.liquidize",
      "offset": [
        11987,
        11997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206B"
    },
    "2825": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        11987,
        11999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2826": {
      "fn": "Administrable.liquidize",
      "offset": [
        11987,
        11999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2827": {
      "fn": "Administrable.liquidize",
      "offset": [
        11926,
        12006
      ],
      "op": "POP",
      "path": "0"
    },
    "2828": {
      "fn": "Administrable.liquidize",
      "jump": "o",
      "offset": [
        11926,
        12006
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2829": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12007,
        12169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2830": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2832": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2833": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2834": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2835": {
      "offset": [
        8644,
        8655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2837": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2839": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2840": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2841": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2842": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2844": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2845": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2846": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8662
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2847": {
      "offset": [
        8644,
        8668
      ],
      "op": "ADD",
      "path": "2"
    },
    "2848": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8644,
        8668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2849": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12060,
        12065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2850": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12060,
        12065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "offset": [
        8644,
        8668
      ],
      "op": "AND",
      "path": "2"
    },
    "2860": {
      "offset": [
        8672,
        8682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2861": {
      "offset": [
        8644,
        8682
      ],
      "op": "EQ",
      "path": "2"
    },
    "2862": {
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB49"
    },
    "2865": {
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2866": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2868": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "offset": [
        8636,
        8689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2877": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2878": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2880": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "ADD",
      "path": "2"
    },
    "2881": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "2884": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2885": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E61"
    },
    "2888": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2889": {
      "fn": "Shardable.cancelSale",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2890": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12082,
        12087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2891": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB63"
    },
    "2894": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2895": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2897": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2898": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2899": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2900": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2901": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2902": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2904": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2906": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2907": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2909": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2910": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2911": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2912": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "2913": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2914": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2915": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2916": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7F"
    },
    "2919": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2920": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2922": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2931": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2932": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2934": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "2935": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "2938": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2939": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "2942": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2943": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2944": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x0"
    },
    "2946": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2947": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2948": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2949": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2951": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2953": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2954": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2956": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2957": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2958": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2959": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2961": {
      "branch": 225,
      "fn": "Shardable.cancelSale",
      "offset": [
        12107,
        12127
      ],
      "op": "AND",
      "path": "2"
    },
    "2962": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC2"
    },
    "2965": {
      "branch": 225,
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2966": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2968": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2977": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2980": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2982": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2983": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "ADD",
      "path": "2"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2989": {
      "op": "DUP3"
    },
    "2990": {
      "op": "ADD"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "op": "MSTORE"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "3009": {
      "op": "JUMP"
    },
    "3010": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12099,
        12134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3011": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12144,
        12162
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xACF"
    },
    "3014": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12156,
        12161
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3015": {
      "fn": "Shardable.cancelSale",
      "offset": [
        12144,
        12155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20BD"
    },
    "3018": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        12144,
        12162
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3019": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3020": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13546,
        13550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3022": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13595
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0xD"
    },
    "3024": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13596,
        13604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3025": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3027": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3028": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDD"
    },
    "3031": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3032": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3033": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "3036": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13569,
        13605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3037": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3038": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3039": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3040": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3041": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3043": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "ADD",
      "path": "0"
    },
    "3044": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3046": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3047": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3048": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3049": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SUB",
      "path": "0"
    },
    "3050": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3051": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3052": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3053": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13609,
        13610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3055": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13610
      ],
      "op": "EQ",
      "path": "0"
    },
    "3056": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3057": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3058": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC23"
    },
    "3061": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3062": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "POP",
      "path": "0"
    },
    "3063": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "3065": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13628,
        13636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3066": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3068": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3069": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC06"
    },
    "3072": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3073": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3074": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "3077": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13614,
        13637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3078": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3079": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3080": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3081": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3082": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3084": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3085": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3086": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3088": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3089": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3090": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3091": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SUB",
      "path": "0"
    },
    "3092": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3093": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "ADD",
      "path": "0"
    },
    "3094": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13637
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3096": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3098": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3099": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3100": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3101": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3102": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3103": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3104": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3105": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3106": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13614,
        13654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3107": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13569,
        13654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3108": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13562,
        13654
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3109": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13481,
        13661
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3110": {
      "op": "POP"
    },
    "3111": {
      "op": "POP"
    },
    "3112": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "o",
      "offset": [
        13481,
        13661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3113": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3114": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3116": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3117": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3118": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3120": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3121": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3123": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3124": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3125": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3127": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3128": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3129": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3131": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3139": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3140": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "3141": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4E"
    },
    "3144": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3145": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3146": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "3149": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3150": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3151": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC57"
    },
    "3154": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3155": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3157": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3158": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3159": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3160": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7826,
        7853
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0xC60"
    },
    "3163": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7844,
        7852
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3164": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7826,
        7843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210C"
    },
    "3167": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        7826,
        7853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3168": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7826,
        7853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3169": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "POP",
      "path": "0"
    },
    "3170": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        7742,
        7860
      ],
      "op": "POP",
      "path": "0"
    },
    "3171": {
      "fn": "Administrable.dissolveDividend",
      "jump": "o",
      "offset": [
        7742,
        7860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3172": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3173": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15133,
        15137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3175": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6F"
    },
    "3178": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15169,
        15176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3179": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7A"
    },
    "3182": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15155,
        15177
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3183": {
      "branch": 176,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3184": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3185": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7C"
    },
    "3188": {
      "branch": 176,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15181,
        15201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3192": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15181,
        15201
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3193": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15181,
        15201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3195": {
      "branch": 177,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15181,
        15201
      ],
      "op": "AND",
      "path": "0"
    },
    "3196": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15155,
        15201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3197": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15149,
        15219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC88"
    },
    "3200": {
      "branch": 177,
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15149,
        15219
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3201": {
      "op": "POP"
    },
    "3202": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15212,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "3204": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15205,
        15217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC23"
    },
    "3207": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15205,
        15217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3208": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15149,
        15219
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3209": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15267,
        15292
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x2"
    },
    "3211": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3213": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15243,
        15253
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3214": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3216": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3217": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9A"
    },
    "3220": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3221": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3222": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "3225": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15235,
        15254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3226": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3227": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3228": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3229": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3230": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3232": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3233": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3234": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3236": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3237": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3238": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3239": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SUB",
      "path": "0"
    },
    "3240": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3241": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "ADD",
      "path": "0"
    },
    "3242": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3243": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15254
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "op": "SUB"
    },
    "3252": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3253": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "AND",
      "path": "0"
    },
    "3254": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3256": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3257": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3258": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3259": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3260": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3261": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3262": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3263": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3264": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3266": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15263
      ],
      "op": "AND",
      "path": "0"
    },
    "3267": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3269": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3270": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "GT",
      "path": "0"
    },
    "3271": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3272": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD3"
    },
    "3275": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3276": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD3"
    },
    "3279": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "3282": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15235,
        15292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3283": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3284": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15292
      ],
      "op": "EQ",
      "path": "0"
    },
    "3285": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3286": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "3289": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15323,
        15348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3293": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3295": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15308,
        15318
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3296": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3298": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3299": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCEC"
    },
    "3302": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3303": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3304": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "3307": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15296,
        15319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3308": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3309": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3310": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3311": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3312": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3314": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3315": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3316": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3317": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3318": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SUB",
      "path": "0"
    },
    "3319": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3321": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "ADD",
      "path": "0"
    },
    "3322": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3323": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3324": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3325": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3327": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15319
      ],
      "op": "AND",
      "path": "0"
    },
    "3328": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3330": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3331": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "GT",
      "path": "0"
    },
    "3332": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3333": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD10"
    },
    "3336": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3337": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD10"
    },
    "3340": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "3343": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15296,
        15348
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3344": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3345": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15296,
        15348
      ],
      "op": "EQ",
      "path": "0"
    },
    "3346": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15235,
        15348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3347": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15228,
        15348
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3348": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15047,
        15355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "o",
      "offset": [
        15047,
        15355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3353": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3354": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12270,
        12277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3356": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12309
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0xE"
    },
    "3358": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12310,
        12318
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3359": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3361": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3362": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2B"
    },
    "3365": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3366": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3367": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "3370": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12296,
        12319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3371": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3372": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3373": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3374": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3375": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3377": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3378": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3379": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3380": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3381": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SUB",
      "path": "0"
    },
    "3383": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3385": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3386": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3387": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "ADD",
      "path": "0"
    },
    "3388": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3389": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3390": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12319
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3397": {
      "op": "SHL"
    },
    "3398": {
      "op": "SUB"
    },
    "3399": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3400": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "AND",
      "path": "0"
    },
    "3401": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3403": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3404": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3405": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3406": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3407": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3408": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3409": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3410": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3411": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12296,
        12333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3414": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3415": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "POP",
      "path": "0"
    },
    "3416": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12180,
        12340
      ],
      "op": "POP",
      "path": "0"
    },
    "3417": {
      "fn": "Administrable.getBankBalance",
      "jump": "o",
      "offset": [
        12180,
        12340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3418": {
      "fn": "Administrable.createBank",
      "offset": [
        8032,
        8185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3419": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3421": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3422": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3423": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3425": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3426": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3428": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3429": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3430": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3432": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3433": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3434": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3436": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3444": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3445": {
      "fn": "Administrable.createBank",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "3446": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7F"
    },
    "3449": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3450": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3451": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "3454": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3455": {
      "fn": "Administrable.createBank",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3456": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD88"
    },
    "3459": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3460": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3462": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3463": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3464": {
      "fn": "Administrable.createBank",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3465": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3467": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3468": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3469": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3471": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "3472": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3473": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3474": {
      "fn": "Administrable.createBank",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "3475": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDAE"
    },
    "3478": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3479": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3481": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3490": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3491": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3493": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "3494": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "3497": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3498": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "3501": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3502": {
      "fn": "Administrable.createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3503": {
      "fn": "Administrable.createBank",
      "offset": [
        8147,
        8178
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0xACF"
    },
    "3506": {
      "fn": "Administrable.createBank",
      "offset": [
        8159,
        8167
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3507": {
      "fn": "Administrable.createBank",
      "offset": [
        8168,
        8177
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3508": {
      "fn": "Administrable.createBank",
      "offset": [
        8147,
        8158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F7"
    },
    "3511": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8147,
        8178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3512": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3513": {
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3515": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3516": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3517": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3519": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "3520": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3522": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3523": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3524": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3526": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3527": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3528": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3530": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "3531": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3536": {
      "op": "SHL"
    },
    "3537": {
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3538": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3539": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3934,
        4060
      ],
      "op": "POP",
      "path": "0"
    },
    "3540": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDD"
    },
    "3543": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3544": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3545": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "3548": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3549": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3550": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE6"
    },
    "3553": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3554": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3556": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3557": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3558": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3559": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9038,
        9046
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3560": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF1"
    },
    "3563": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3564": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3565": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "3568": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3569": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3570": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFA"
    },
    "3573": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3574": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3576": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3577": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3578": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3579": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9058,
        9094
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0xE04"
    },
    "3582": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9075,
        9083
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3583": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9084,
        9093
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3584": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9058,
        9074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2309"
    },
    "3587": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9058,
        9094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3588": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9058,
        9094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3589": {
      "offset": [
        4051,
        4052
      ],
      "op": "POP",
      "path": "0"
    },
    "3590": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "POP",
      "path": "0"
    },
    "3591": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "POP",
      "path": "0"
    },
    "3592": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        8925,
        9101
      ],
      "op": "POP",
      "path": "0"
    },
    "3593": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "o",
      "offset": [
        8925,
        9101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3594": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2968,
        3595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3595": {
      "offset": [
        8023,
        8048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE13"
    },
    "3598": {
      "offset": [
        8037,
        8047
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3599": {
      "offset": [
        8023,
        8036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7A"
    },
    "3602": {
      "jump": "i",
      "offset": [
        8023,
        8048
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3603": {
      "branch": 226,
      "fn": "Idea.claimLiquid",
      "offset": [
        8023,
        8048
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3604": {
      "offset": [
        8015,
        8055
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE44"
    },
    "3607": {
      "branch": 226,
      "offset": [
        8015,
        8055
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3608": {
      "fn": "Idea.claimLiquid",
      "offset": [
        8015,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3610": {
      "fn": "Idea.claimLiquid",
      "offset": [
        8015,
        8055
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3617": {
      "op": "SHL"
    },
    "3618": {
      "offset": [
        8015,
        8055
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3619": {
      "fn": "Idea.claimLiquid",
      "offset": [
        8015,
        8055
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3622": {
      "offset": [
        8015,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3624": {
      "fn": "Idea.claimLiquid",
      "offset": [
        8015,
        8055
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3625": {
      "fn": "Idea.claimLiquid",
      "offset": [
        8015,
        8055
      ],
      "op": "ADD",
      "path": "2"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3631": {
      "op": "DUP3"
    },
    "3632": {
      "op": "ADD"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "3639": {
      "op": "SHL"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3642": {
      "op": "DUP3"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3647": {
      "op": "ADD"
    },
    "3648": {
      "offset": [
        8015,
        8055
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "3651": {
      "op": "JUMP"
    },
    "3652": {
      "offset": [
        8015,
        8055
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3653": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3054,
        3080
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0xE4D"
    },
    "3656": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3067,
        3079
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3657": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3054,
        3066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137E"
    },
    "3660": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3054,
        3080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3661": {
      "branch": 209,
      "fn": "Idea.claimLiquid",
      "offset": [
        3054,
        3080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3662": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE69"
    },
    "3665": {
      "branch": 209,
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3666": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3668": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3677": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3678": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3680": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "ADD",
      "path": "1"
    },
    "3681": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "3684": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3685": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EB5"
    },
    "3688": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3046,
        3087
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3689": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3046,
        3087
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3690": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3126,
        3136
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3691": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3097,
        3110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3693": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3694": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3695": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3696": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3698": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3700": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3701": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3702": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3703": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3705": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3706": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3707": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3708": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3113,
        3137
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "SUB"
    },
    "3717": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 27
    },
    "3718": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "AND",
      "path": "1"
    },
    "3719": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3720": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3721": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3723": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3724": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3725": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3726": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3727": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3186
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3728": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3729": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3730": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3731": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3732": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3733": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3734": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3735": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3736": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3737": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3738": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3740": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3156,
        3193
      ],
      "op": "AND",
      "path": "1"
    },
    "3741": {
      "branch": 210,
      "fn": "Idea.claimLiquid",
      "offset": [
        3155,
        3193
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3742": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xECE"
    },
    "3745": {
      "branch": 210,
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3746": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3748": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3757": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3760": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3762": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3763": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "ADD",
      "path": "1"
    },
    "3764": {
      "op": "MSTORE"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3777": {
      "op": "SHL"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3780": {
      "op": "DUP3"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3785": {
      "op": "ADD"
    },
    "3786": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "3789": {
      "op": "JUMP"
    },
    "3790": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3147,
        3200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3797": {
      "op": "SHL"
    },
    "3798": {
      "op": "SUB"
    },
    "3799": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "3800": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "AND",
      "path": "1"
    },
    "3801": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3803": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3804": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3805": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3806": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3226
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3808": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3810": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3811": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3812": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3813": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3815": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3816": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3817": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3818": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3819": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3820": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3821": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3822": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3823": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3824": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3825": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3247
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3826": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3827": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3830": {
      "op": "NOT"
    },
    "3831": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "AND",
      "path": "1"
    },
    "3832": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3250,
        3254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3834": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3835": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3836": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "OR",
      "path": "1"
    },
    "3837": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3838": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3839": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3254
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3840": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3842": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3358
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3843": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3358
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3844": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3358
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3845": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3358
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3846": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3358
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3847": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3848": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3849": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "ADD",
      "path": "1"
    },
    "3850": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3851": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3309,
        3337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3852": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3309,
        3337
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3853": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3854": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3855": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3856": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "3858": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3859": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3860": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3861": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3862": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3863": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3306
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3864": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3865": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3210,
        3240
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3866": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3867": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3340,
        3370
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3868": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF25"
    },
    "3871": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3872": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3309,
        3337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3873": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED1"
    },
    "3876": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3286,
        3337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3877": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3878": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2F"
    },
    "3881": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3370
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3882": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3883": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EFE"
    },
    "3886": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3286,
        3370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3887": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3286,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3888": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3264,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3889": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3264,
        3370
      ],
      "op": "POP",
      "path": "1"
    },
    "3890": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3388,
        3399
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "3891": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3403,
        3404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3893": {
      "branch": 211,
      "fn": "Idea.claimLiquid",
      "offset": [
        3388,
        3404
      ],
      "op": "SUB",
      "path": "1"
    },
    "3894": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5B"
    },
    "3897": {
      "branch": 211,
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3898": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3900": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3909": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3914": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3915": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "ADD",
      "path": "1"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "3930": {
      "op": "JUMP"
    },
    "3931": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3380,
        3409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3938": {
      "op": "SHL"
    },
    "3939": {
      "op": "SUB"
    },
    "3940": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 30
    },
    "3941": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "AND",
      "path": "1"
    },
    "3942": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3944": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3945": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3946": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3947": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "3949": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3951": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3952": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3954": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3955": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3956": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3957": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3958": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3451,
        3462
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3959": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3451,
        3462
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3960": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3961": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF83"
    },
    "3964": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3965": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3451,
        3462
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3966": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3451,
        3462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3967": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F12"
    },
    "3970": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3419,
        3462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3971": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3972": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3973": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3974": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3419,
        3462
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3472,
        3523
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0xF94"
    },
    "3979": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3472,
        3523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3980": {
      "op": "POP"
    },
    "3981": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3487,
        3499
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3982": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3500,
        3511
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3983": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3512,
        3522
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3984": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3472,
        3486
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23C5"
    },
    "3987": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3472,
        3523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3988": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3472,
        3523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3989": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x40"
    },
    "3991": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3992": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "op": "DUP6"
    },
    "4002": {
      "op": "AND"
    },
    "4003": {
      "op": "DUP2"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4007": {
      "op": "DUP2"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "DUP4"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3577,
        3587
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4013": {
      "op": "SWAP2"
    },
    "4014": {
      "op": "DUP2"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "SWAP2"
    },
    "4017": {
      "op": "SWAP1"
    },
    "4018": {
      "op": "SWAP2"
    },
    "4019": {
      "op": "MSTORE"
    },
    "4020": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x1397D005A56670CBE383372BD4743EAA779AF18164D00DC6D12A6659418E1BBF"
    },
    "4053": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3538,
        3588
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA27"
    },
    "4060": {
      "op": "JUMP"
    },
    "4061": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4062": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4064": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4065": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4066": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4067": {
      "offset": [
        8644,
        8655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4069": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4071": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4072": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4073": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4074": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4076": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4077": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4078": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8662
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4079": {
      "offset": [
        8644,
        8668
      ],
      "op": "ADD",
      "path": "2"
    },
    "4080": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8644,
        8668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4081": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5727,
        5732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4082": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5727,
        5732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4089": {
      "op": "SHL"
    },
    "4090": {
      "op": "SUB"
    },
    "4091": {
      "offset": [
        8644,
        8668
      ],
      "op": "AND",
      "path": "2"
    },
    "4092": {
      "offset": [
        8672,
        8682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4093": {
      "offset": [
        8644,
        8682
      ],
      "op": "EQ",
      "path": "2"
    },
    "4094": {
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1019"
    },
    "4097": {
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4098": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4100": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4101": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4107": {
      "op": "SHL"
    },
    "4108": {
      "offset": [
        8636,
        8689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4109": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4110": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4112": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "ADD",
      "path": "2"
    },
    "4113": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "4116": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4117": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E61"
    },
    "4120": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4121": {
      "fn": "Administrable.claimDividend",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4122": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13859,
        13863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4124": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4125": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4126": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4127": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "4129": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4131": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4132": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4134": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4135": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4136": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4137": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5755,
        5763
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4138": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5755,
        5763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4139": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4141": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "AND",
      "path": "0"
    },
    "4142": {
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1036"
    },
    "4145": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4146": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4148": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4149": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4150": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4151": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4153": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4154": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4155": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4157": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "4158": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4159": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4160": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "4161": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105C"
    },
    "4164": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4165": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4167": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4174": {
      "op": "SHL"
    },
    "4175": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4176": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4177": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4179": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "4180": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "4183": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4184": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "4187": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4188": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4189": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5796,
        5824
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x1066"
    },
    "4192": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5809,
        5814
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4193": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5815,
        5823
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4194": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5796,
        5808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F36"
    },
    "4197": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5796,
        5824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4198": {
      "branch": 178,
      "fn": "Administrable.claimDividend",
      "offset": [
        5796,
        5824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4199": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1098"
    },
    "4202": {
      "branch": 178,
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4203": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4205": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4214": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4217": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4219": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4220": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "ADD",
      "path": "0"
    },
    "4221": {
      "op": "MSTORE"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH3",
      "value": "0x2720A3"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4235": {
      "op": "SHL"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4238": {
      "op": "DUP3"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "MSTORE"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4243": {
      "op": "ADD"
    },
    "4244": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "4247": {
      "op": "JUMP"
    },
    "4248": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5788,
        5832
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4249": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x0"
    },
    "4251": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4252": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4253": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4254": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "4256": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4258": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4259": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4260": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4261": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4263": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4264": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4265": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5878
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4266": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4267": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4268": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4269": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4270": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4271": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4272": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4273": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4274": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4275": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4277": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5885
      ],
      "op": "AND",
      "path": "0"
    },
    "4278": {
      "branch": 179,
      "fn": "Administrable.claimDividend",
      "offset": [
        5850,
        5894
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4279": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "4282": {
      "branch": 179,
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4283": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4285": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4292": {
      "op": "SHL"
    },
    "4293": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4294": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4297": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4299": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4300": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "ADD",
      "path": "0"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "op": "MSTORE"
    },
    "4309": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4314": {
      "op": "SHL"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4317": {
      "op": "DUP3"
    },
    "4318": {
      "op": "ADD"
    },
    "4319": {
      "op": "MSTORE"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4322": {
      "op": "ADD"
    },
    "4323": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "4326": {
      "op": "JUMP"
    },
    "4327": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5842,
        5901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4328": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "4330": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4331": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4332": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4333": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "4335": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4337": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4338": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4339": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4340": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4342": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4343": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4344": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5939
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4345": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4346": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4347": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4348": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4349": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4350": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4351": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4352": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5946
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4353": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4354": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4357": {
      "op": "NOT"
    },
    "4358": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "AND",
      "path": "0"
    },
    "4359": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5949,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4361": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4362": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4363": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "OR",
      "path": "0"
    },
    "4364": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4365": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4366": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5911,
        5953
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4367": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4369": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6069
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4370": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6069
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4371": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4372": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6069
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4373": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6069
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4374": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4375": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4376": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "ADD",
      "path": "0"
    },
    "4377": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4378": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6020,
        6048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4379": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6020,
        6048
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4380": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4381": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4382": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4383": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "4385": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4386": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4387": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4388": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4389": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4390": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4391": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6017
      ],
      "op": "ADD",
      "path": "0"
    },
    "4392": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6017
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4393": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4394": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6051,
        6081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4395": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1133"
    },
    "4398": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6048
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4399": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED1"
    },
    "4402": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5987,
        6048
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4403": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4404": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113D"
    },
    "4407": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4408": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4409": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EFE"
    },
    "4412": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5987,
        6081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4413": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5987,
        6081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4414": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5963,
        6081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4415": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5963,
        6081
      ],
      "op": "POP",
      "path": "0"
    },
    "4416": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6099,
        6112
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "4417": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6116,
        6117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4419": {
      "branch": 180,
      "fn": "Administrable.claimDividend",
      "offset": [
        6099,
        6117
      ],
      "op": "SUB",
      "path": "0"
    },
    "4420": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1175"
    },
    "4423": {
      "branch": 180,
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4424": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4426": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4435": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4438": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4440": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4441": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "ADD",
      "path": "0"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH3",
      "value": "0x445453"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4456": {
      "op": "SHL"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "MSTORE"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "4468": {
      "op": "JUMP"
    },
    "4469": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6091,
        6125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4470": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x0"
    },
    "4472": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4473": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4474": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4475": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4477": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4479": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4480": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4482": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4483": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4484": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4485": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4486": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6167,
        6180
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4487": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6167,
        6180
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4488": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4489": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1193"
    },
    "4492": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4493": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6167,
        6180
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4494": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6167,
        6180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4495": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "4498": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6135,
        6180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4499": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4500": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4501": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4502": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6135,
        6180
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x0"
    },
    "4507": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4508": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4509": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4510": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "4512": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4514": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4515": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4517": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4518": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6229
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4519": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6242
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4520": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6190,
        6268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BB"
    },
    "4523": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6190,
        6268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "op": "SUB"
    },
    "4532": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6205,
        6242
      ],
      "op": "AND",
      "path": "0"
    },
    "4533": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6243,
        6256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4534": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6257,
        6267
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4535": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6190,
        6204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C5"
    },
    "4538": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6190,
        6268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4539": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6190,
        6268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4540": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "4542": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4543": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4544": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4546": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4547": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "ADD",
      "path": "0"
    },
    "4548": {
      "op": "DUP7"
    },
    "4549": {
      "op": "SWAP1"
    },
    "4550": {
      "op": "MSTORE"
    },
    "4551": {
      "op": "SWAP1"
    },
    "4552": {
      "op": "DUP2"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "DUP3"
    },
    "4555": {
      "op": "SWAP1"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "DUP1"
    },
    "4560": {
      "op": "MLOAD"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "4566": {
      "op": "DUP4"
    },
    "4567": {
      "op": "CODECOPY"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "MLOAD"
    },
    "4570": {
      "op": "SWAP2"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4575": {
      "op": "ADD"
    },
    "4576": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4578": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4579": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4582": {
      "op": "NOT"
    },
    "4583": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4584": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4585": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "SUB",
      "path": "0"
    },
    "4586": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "ADD",
      "path": "0"
    },
    "4587": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4588": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4589": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4590": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4591": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4592": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6300,
        6334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4593": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FB"
    },
    "4596": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4597": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6335,
        6345
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4598": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6335,
        6345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4599": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F51"
    },
    "4602": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6283,
        6346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4603": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4604": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4606": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4607": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4608": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4609": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "SUB",
      "path": "0"
    },
    "4610": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4611": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6283,
        6346
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4612": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5778,
        6353
      ],
      "op": "POP",
      "path": "0"
    },
    "4613": {
      "offset": [
        8699,
        8700
      ],
      "op": "POP",
      "path": "2"
    },
    "4614": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "POP",
      "path": "0"
    },
    "4615": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "POP",
      "path": "0"
    },
    "4616": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5651,
        6353
      ],
      "op": "POP",
      "path": "0"
    },
    "4617": {
      "fn": "Administrable.claimDividend",
      "jump": "o",
      "offset": [
        5651,
        6353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4618": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9205,
        9342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4619": {
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4621": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4622": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4623": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4625": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4626": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4628": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4629": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4630": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4632": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4633": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4634": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4636": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4637": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4642": {
      "op": "SHL"
    },
    "4643": {
      "offset": [
        3934,
        4060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4644": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4645": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3934,
        4060
      ],
      "op": "POP",
      "path": "0"
    },
    "4646": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122F"
    },
    "4649": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4650": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4651": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "4654": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4655": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4656": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1238"
    },
    "4659": {
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4660": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4662": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4663": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4664": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4665": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9294,
        9302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4666": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1243"
    },
    "4669": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4670": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4671": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "4674": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4675": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4676": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "4679": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4680": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4682": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4683": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4684": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4685": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9314,
        9335
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0xACF"
    },
    "4688": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9326,
        9334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4689": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9314,
        9325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F1"
    },
    "4692": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9314,
        9335
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4693": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4694": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4696": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4697": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4698": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4700": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4701": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4703": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4704": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4705": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4707": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4708": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4709": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4711": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4712": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "4717": {
      "op": "SHL"
    },
    "4718": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4719": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4720": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4721": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127A"
    },
    "4724": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4725": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4726": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "4729": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4730": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4731": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1283"
    },
    "4734": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4735": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4737": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4738": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4739": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4740": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7525,
        7533
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4741": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128E"
    },
    "4744": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4745": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4746": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "4749": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4750": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4751": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1297"
    },
    "4754": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4755": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4757": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4758": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4759": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4760": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7545,
        7588
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 41,
      "value": "0x12A2"
    },
    "4763": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7560,
        7568
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4764": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7569,
        7581
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4765": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7582,
        7587
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4766": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7545,
        7559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2776"
    },
    "4769": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7545,
        7588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4770": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7545,
        7588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4771": {
      "offset": [
        3765,
        3766
      ],
      "op": "POP",
      "path": "0"
    },
    "4772": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "POP",
      "path": "0"
    },
    "4773": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "POP",
      "path": "0"
    },
    "4774": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "POP",
      "path": "0"
    },
    "4775": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7397,
        7597
      ],
      "op": "POP",
      "path": "0"
    },
    "4776": {
      "fn": "Administrable.issueDividend",
      "jump": "o",
      "offset": [
        7397,
        7597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4777": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11659,
        11844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4778": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4780": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4781": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4782": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4784": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4785": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4787": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4788": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4789": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4791": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4792": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4793": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4795": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4796": {
      "op": "PUSH3",
      "value": "0x734E53"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4802": {
      "op": "SHL"
    },
    "4803": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4804": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4805": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4806": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CF"
    },
    "4809": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4810": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4811": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "4814": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4815": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4816": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D8"
    },
    "4819": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4820": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4822": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4823": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4824": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4825": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0xB"
    },
    "4827": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4828": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4829": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4830": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4831": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4833": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4834": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4835": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11775
      ],
      "op": "AND",
      "path": "0"
    },
    "4836": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4837": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4838": {
      "branch": 181,
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11755,
        11787
      ],
      "op": "SUB",
      "path": "0"
    },
    "4839": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1317"
    },
    "4842": {
      "branch": 181,
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4843": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4845": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4852": {
      "op": "SHL"
    },
    "4853": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4854": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4857": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4859": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4860": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "ADD",
      "path": "0"
    },
    "4861": {
      "op": "MSTORE"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4866": {
      "op": "DUP3"
    },
    "4867": {
      "op": "ADD"
    },
    "4868": {
      "op": "MSTORE"
    },
    "4869": {
      "op": "PUSH2",
      "value": "0x4153"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4874": {
      "op": "SHL"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "MSTORE"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4882": {
      "op": "ADD"
    },
    "4883": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "4886": {
      "op": "JUMP"
    },
    "4887": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11747,
        11794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4888": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11804,
        11837
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 43,
      "value": "0xC60"
    },
    "4891": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11828,
        11836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4892": {
      "fn": "Administrable.setNonShardHolderState",
      "offset": [
        11804,
        11827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2980"
    },
    "4895": {
      "fn": "Administrable.setNonShardHolderState",
      "jump": "i",
      "offset": [
        11804,
        11837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4896": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6893,
        7045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4897": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4899": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4900": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4901": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4903": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4904": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4906": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4907": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4908": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4910": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4911": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4912": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4914": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "4915": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "4921": {
      "op": "SHL"
    },
    "4922": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4923": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4924": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "4925": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1346"
    },
    "4928": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4929": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4930": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "4933": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4934": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4935": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134F"
    },
    "4938": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4939": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4941": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4942": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4943": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4944": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4946": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4947": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4948": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4950": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "4951": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4952": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4953": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "4954": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1375"
    },
    "4957": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4958": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4960": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4967": {
      "op": "SHL"
    },
    "4968": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4969": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4970": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4972": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "4973": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "4976": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4977": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "4980": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4981": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4982": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7001,
        7038
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0xC60"
    },
    "4985": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7025,
        7037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4986": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        7001,
        7024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F0"
    },
    "4989": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        7001,
        7038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4990": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4997": {
      "op": "SHL"
    },
    "4998": {
      "op": "SUB"
    },
    "4999": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 45
    },
    "5000": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "AND",
      "path": "1"
    },
    "5001": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5003": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5004": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5005": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5006": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4185
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5008": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5010": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5011": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5013": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5014": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5015": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5016": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5018": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "AND",
      "path": "1"
    },
    "5019": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4207
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5020": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4207
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5021": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5023": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4207
      ],
      "op": "EQ",
      "path": "1"
    },
    "5024": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4207
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5025": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC23"
    },
    "5028": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4166,
        4237
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "POP"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5037": {
      "op": "SHL"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4211,
        4237
      ],
      "op": "AND",
      "path": "1"
    },
    "5040": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4211,
        4237
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5041": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4211,
        4237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5042": {
      "fn": "Idea.acceptsToken",
      "jump": "o",
      "offset": [
        4081,
        4244
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5043": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6547,
        6695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5044": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5046": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5047": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5048": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5050": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5051": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5053": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5054": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5055": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5057": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5058": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5059": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5061": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5062": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5068": {
      "op": "SHL"
    },
    "5069": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5070": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5071": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "5072": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D9"
    },
    "5075": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5076": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5077": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "5080": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5081": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5082": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E2"
    },
    "5085": {
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5086": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5088": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5089": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5090": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5091": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5093": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5094": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5095": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5097": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "5098": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5099": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5100": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "5101": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1408"
    },
    "5104": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5105": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5107": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5116": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5117": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5119": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "5120": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "5123": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5124": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "5127": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5128": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5129": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6653,
        6688
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0xC60"
    },
    "5132": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6675,
        6687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5133": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6653,
        6674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A39"
    },
    "5136": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6653,
        6688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5137": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5138": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5140": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5141": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5142": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5143": {
      "offset": [
        8644,
        8655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5145": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5147": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5148": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5149": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5150": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5152": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5153": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5154": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8662
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5155": {
      "offset": [
        8644,
        8668
      ],
      "op": "ADD",
      "path": "2"
    },
    "5156": {
      "fn": "Shardable.split",
      "offset": [
        8644,
        8668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5157": {
      "fn": "Shardable.split",
      "offset": [
        12787,
        12798
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5158": {
      "fn": "Shardable.split",
      "offset": [
        12787,
        12798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "op": "SUB"
    },
    "5167": {
      "offset": [
        8644,
        8668
      ],
      "op": "AND",
      "path": "2"
    },
    "5168": {
      "offset": [
        8672,
        8682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5169": {
      "offset": [
        8644,
        8682
      ],
      "op": "EQ",
      "path": "2"
    },
    "5170": {
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144D"
    },
    "5173": {
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5174": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5176": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "offset": [
        8636,
        8689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5185": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5186": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5188": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "ADD",
      "path": "2"
    },
    "5189": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "5192": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5193": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E61"
    },
    "5196": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5197": {
      "fn": "Shardable.split",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5198": {
      "fn": "Shardable.split",
      "offset": [
        12815,
        12826
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5199": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1467"
    },
    "5202": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5203": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5205": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5206": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5207": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5208": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5209": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5210": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5212": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5214": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5215": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5217": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5218": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5219": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5220": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "5221": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5222": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5223": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5224": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1483"
    },
    "5227": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5228": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5230": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5237": {
      "op": "SHL"
    },
    "5238": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5239": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5240": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5242": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "5243": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "5246": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5247": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "5250": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5251": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5252": {
      "fn": "Shardable.split",
      "offset": [
        12838,
        12882
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 47,
      "value": "0x148F"
    },
    "5255": {
      "fn": "Shardable.split",
      "offset": [
        12845,
        12856
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5256": {
      "fn": "Shardable.split",
      "offset": [
        12857,
        12866
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5257": {
      "fn": "Shardable.split",
      "offset": [
        12867,
        12878
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5258": {
      "fn": "Shardable.split",
      "offset": [
        12879,
        12881
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5259": {
      "fn": "Shardable.split",
      "offset": [
        12838,
        12844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A82"
    },
    "5262": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        12838,
        12882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5263": {
      "fn": "Shardable.split",
      "offset": [
        12838,
        12882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5264": {
      "offset": [
        8699,
        8700
      ],
      "op": "POP",
      "path": "2"
    },
    "5265": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "POP",
      "path": "2"
    },
    "5266": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "POP",
      "path": "2"
    },
    "5267": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "POP",
      "path": "2"
    },
    "5268": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "POP",
      "path": "2"
    },
    "5269": {
      "fn": "Shardable.split",
      "offset": [
        12681,
        12889
      ],
      "op": "POP",
      "path": "2"
    },
    "5270": {
      "fn": "Shardable.split",
      "jump": "o",
      "offset": [
        12681,
        12889
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5271": {
      "fn": "Idea.receiveToken",
      "offset": [
        2360,
        2739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5272": {
      "fn": "Idea.receiveToken",
      "offset": [
        2446,
        2472
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 48,
      "value": "0x14A0"
    },
    "5275": {
      "fn": "Idea.receiveToken",
      "offset": [
        2459,
        2471
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5276": {
      "fn": "Idea.receiveToken",
      "offset": [
        2446,
        2458
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137E"
    },
    "5279": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2446,
        2472
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5280": {
      "branch": 212,
      "fn": "Idea.receiveToken",
      "offset": [
        2446,
        2472
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5281": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14BC"
    },
    "5284": {
      "branch": 212,
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5285": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5287": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5296": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5297": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5299": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "ADD",
      "path": "1"
    },
    "5300": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "5303": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5304": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EB5"
    },
    "5307": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2438,
        2478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5308": {
      "fn": "Idea.receiveToken",
      "offset": [
        2438,
        2478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5309": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x40"
    },
    "5311": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5312": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5319": {
      "op": "SHL"
    },
    "5320": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5321": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5322": {
      "fn": "Idea.receiveToken",
      "offset": [
        2555,
        2565
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5323": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5325": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5326": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "5327": {
      "op": "MSTORE"
    },
    "5328": {
      "fn": "Idea.receiveToken",
      "offset": [
        2574,
        2578
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5331": {
      "op": "DUP3"
    },
    "5332": {
      "op": "ADD"
    },
    "5333": {
      "op": "MSTORE"
    },
    "5334": {
      "fn": "Idea.receiveToken",
      "offset": [
        2508,
        2520
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5335": {
      "fn": "Idea.receiveToken",
      "offset": [
        2508,
        2520
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5336": {
      "fn": "Idea.receiveToken",
      "offset": [
        2584,
        2589
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5337": {
      "fn": "Idea.receiveToken",
      "offset": [
        2584,
        2589
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "op": "SUB"
    },
    "5346": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2554
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5347": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2554
      ],
      "op": "AND",
      "path": "1"
    },
    "5348": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2554
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5349": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "5354": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2554
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5357": {
      "op": "ADD"
    },
    "5358": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5360": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5362": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5363": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5364": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5365": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "SUB",
      "path": "1"
    },
    "5366": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5367": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5368": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "GAS",
      "path": "1"
    },
    "5369": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "5370": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5371": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5372": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5373": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150A"
    },
    "5376": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5377": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5378": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5380": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5381": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5382": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5383": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5385": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5386": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5387": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "5388": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "5389": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "5390": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "5391": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5393": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5394": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5395": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5397": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "NOT",
      "path": "1"
    },
    "5398": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5400": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5401": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "5402": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "AND",
      "path": "1"
    },
    "5403": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5404": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "5405": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5406": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5408": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5409": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "5410": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5411": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "5412": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5413": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x152E"
    },
    "5416": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5417": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5418": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F94"
    },
    "5421": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2539,
        2580
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5422": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5423": {
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2589
      ],
      "op": "LT",
      "path": "1"
    },
    "5424": {
      "branch": 213,
      "fn": "Idea.receiveToken",
      "offset": [
        2539,
        2589
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5425": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154C"
    },
    "5428": {
      "branch": 213,
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5429": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5431": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5438": {
      "op": "SHL"
    },
    "5439": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5440": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5441": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5443": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "ADD",
      "path": "1"
    },
    "5444": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "5447": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5448": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FAD"
    },
    "5451": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2531,
        2595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5452": {
      "fn": "Idea.receiveToken",
      "offset": [
        2531,
        2595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5453": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 50,
      "value": "0x40"
    },
    "5455": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5456": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5463": {
      "op": "SHL"
    },
    "5464": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5465": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5466": {
      "fn": "Idea.receiveToken",
      "offset": [
        2632,
        2642
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5467": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5469": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5470": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ADD",
      "path": "1"
    },
    "5471": {
      "op": "MSTORE"
    },
    "5472": {
      "fn": "Idea.receiveToken",
      "offset": [
        2651,
        2655
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5475": {
      "op": "DUP3"
    },
    "5476": {
      "op": "ADD"
    },
    "5477": {
      "op": "MSTORE"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5480": {
      "op": "DUP2"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "DUP4"
    },
    "5483": {
      "op": "SWAP1"
    },
    "5484": {
      "op": "MSTORE"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "op": "SUB"
    },
    "5493": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2631
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5494": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2631
      ],
      "op": "AND",
      "path": "1"
    },
    "5495": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5496": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2631
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "5501": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5507": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5509": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5510": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5511": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5512": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "SUB",
      "path": "1"
    },
    "5513": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5514": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5516": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5517": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "GAS",
      "path": "1"
    },
    "5518": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "CALL",
      "path": "1"
    },
    "5519": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5520": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5521": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5522": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x159F"
    },
    "5525": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5526": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5527": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5529": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5530": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5531": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5532": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5534": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5535": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5536": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "POP",
      "path": "1"
    },
    "5537": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "POP",
      "path": "1"
    },
    "5538": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "POP",
      "path": "1"
    },
    "5539": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "POP",
      "path": "1"
    },
    "5540": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5542": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5543": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5544": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5546": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "NOT",
      "path": "1"
    },
    "5547": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5549": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5550": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ADD",
      "path": "1"
    },
    "5551": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "AND",
      "path": "1"
    },
    "5552": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5553": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ADD",
      "path": "1"
    },
    "5554": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5555": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5557": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5558": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "POP",
      "path": "1"
    },
    "5559": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5560": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "ADD",
      "path": "1"
    },
    "5561": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5562": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C3"
    },
    "5565": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5566": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5567": {
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC9"
    },
    "5570": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2613,
        2664
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5571": {
      "branch": 214,
      "fn": "Idea.receiveToken",
      "offset": [
        2613,
        2664
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5572": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F4"
    },
    "5575": {
      "branch": 214,
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5576": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5578": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5585": {
      "op": "SHL"
    },
    "5586": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5587": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5590": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5592": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5593": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "ADD",
      "path": "1"
    },
    "5594": {
      "op": "MSTORE"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5599": {
      "op": "DUP3"
    },
    "5600": {
      "op": "ADD"
    },
    "5601": {
      "op": "MSTORE"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "5607": {
      "op": "SHL"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5610": {
      "op": "DUP3"
    },
    "5611": {
      "op": "ADD"
    },
    "5612": {
      "op": "MSTORE"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5615": {
      "op": "ADD"
    },
    "5616": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "5619": {
      "op": "JUMP"
    },
    "5620": {
      "fn": "Idea.receiveToken",
      "offset": [
        2605,
        2671
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5621": {
      "fn": "Idea.receiveToken",
      "offset": [
        2681,
        2732
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 51,
      "value": "0xACF"
    },
    "5624": {
      "fn": "Idea.receiveToken",
      "offset": [
        2702,
        2714
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5625": {
      "fn": "Idea.receiveToken",
      "offset": [
        2715,
        2720
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5626": {
      "fn": "Idea.receiveToken",
      "offset": [
        2721,
        2731
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5627": {
      "fn": "Idea.receiveToken",
      "offset": [
        2681,
        2701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E6"
    },
    "5630": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2681,
        2732
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5631": {
      "fn": "Administrable.moveToken",
      "offset": [
        10288,
        10506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5632": {
      "fn": "Administrable.moveToken",
      "offset": [
        10421,
        10433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5633": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160A"
    },
    "5636": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5637": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5638": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "5641": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5642": {
      "fn": "Administrable.moveToken",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5643": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1613"
    },
    "5646": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5647": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5649": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5650": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5651": {
      "fn": "Administrable.moveToken",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5652": {
      "fn": "Administrable.moveToken",
      "offset": [
        10445,
        10499
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x12A2"
    },
    "5655": {
      "fn": "Administrable.moveToken",
      "offset": [
        10456,
        10468
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5656": {
      "fn": "Administrable.moveToken",
      "offset": [
        10469,
        10479
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5657": {
      "fn": "Administrable.moveToken",
      "offset": [
        10480,
        10492
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5658": {
      "fn": "Administrable.moveToken",
      "offset": [
        10493,
        10498
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5659": {
      "fn": "Administrable.moveToken",
      "offset": [
        10445,
        10455
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C80"
    },
    "5662": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10445,
        10499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5663": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14125,
        14306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5664": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14207,
        14211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5666": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14241
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0xF"
    },
    "5668": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14242,
        14250
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5669": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5671": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5672": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1631"
    },
    "5675": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5676": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5677": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "5680": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14230,
        14251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5681": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5682": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5683": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5684": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5685": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5687": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5688": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5689": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5690": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5691": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5692": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SUB",
      "path": "0"
    },
    "5693": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5695": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5696": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5697": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "ADD",
      "path": "0"
    },
    "5698": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5699": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5700": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "op": "SUB"
    },
    "5709": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5710": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "AND",
      "path": "0"
    },
    "5711": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5713": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5714": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5715": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5716": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5717": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5718": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5719": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5720": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5721": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5723": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "AND",
      "path": "0"
    },
    "5724": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14268
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5725": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14268
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5726": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5728": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14268
      ],
      "op": "EQ",
      "path": "0"
    },
    "5729": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5730": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "5733": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5734": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14230,
        14299
      ],
      "op": "POP",
      "path": "0"
    },
    "5735": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "5738": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5740": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5741": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5742": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5744": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "ADD",
      "path": "0"
    },
    "5745": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5747": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5748": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5749": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5751": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5752": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5753": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5755": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "ADD",
      "path": "0"
    },
    "5756": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5761": {
      "op": "SHL"
    },
    "5762": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5763": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5764": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14299
      ],
      "op": "POP",
      "path": "0"
    },
    "5765": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14291,
        14298
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5766": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14272,
        14285
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "5769": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14272,
        14299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5770": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8427,
        8672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5771": {
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5773": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5774": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5775": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5777": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5778": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5780": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5781": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5782": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5784": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5785": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5786": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5788": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "ADD",
      "path": "0"
    },
    "5789": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5794": {
      "op": "SHL"
    },
    "5795": {
      "offset": [
        3653,
        3773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5796": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5797": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3653,
        3773
      ],
      "op": "POP",
      "path": "0"
    },
    "5798": {
      "offset": [
        3721,
        3754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "5801": {
      "offset": [
        3731,
        3741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5802": {
      "offset": [
        3743,
        3753
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5803": {
      "offset": [
        3721,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "5806": {
      "jump": "i",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5807": {
      "branch": 182,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3721,
        3754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5808": {
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B8"
    },
    "5811": {
      "branch": 182,
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5812": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5814": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5815": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5816": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3713,
        3755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5817": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8536,
        8544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5818": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C3"
    },
    "5821": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5822": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5823": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "5826": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5827": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5828": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CC"
    },
    "5831": {
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5832": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5834": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5835": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5836": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5837": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8588
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x16D5"
    },
    "5840": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8578,
        8587
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5841": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7A"
    },
    "5844": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8564,
        8588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5845": {
      "branch": 183,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5846": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5847": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E2"
    },
    "5850": {
      "branch": 183,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8612
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8592,
        8612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5854": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8592,
        8612
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5855": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8592,
        8612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5857": {
      "branch": 184,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8592,
        8612
      ],
      "op": "AND",
      "path": "0"
    },
    "5858": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8564,
        8612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5859": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1716"
    },
    "5862": {
      "branch": 184,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5863": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5865": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5874": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5877": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5879": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5880": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "ADD",
      "path": "0"
    },
    "5881": {
      "op": "MSTORE"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5886": {
      "op": "DUP3"
    },
    "5887": {
      "op": "ADD"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH5",
      "value": "0x4E53484E41"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5900": {
      "op": "DUP3"
    },
    "5901": {
      "op": "ADD"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5905": {
      "op": "ADD"
    },
    "5906": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "5909": {
      "op": "JUMP"
    },
    "5910": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8556,
        8622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5911": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8632,
        8665
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0xE04"
    },
    "5914": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8646,
        8654
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5915": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8655,
        8664
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5916": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8632,
        8645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F14"
    },
    "5919": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8632,
        8665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5920": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5921": {
      "fn": "Administrable.bankExists",
      "offset": [
        13285,
        13289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5923": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0xC"
    },
    "5925": {
      "fn": "Administrable.bankExists",
      "offset": [
        13319,
        13327
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5926": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5928": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5929": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1732"
    },
    "5932": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5933": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5934": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "5937": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13308,
        13328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5938": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5939": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5940": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5941": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5942": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5944": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5945": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5946": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5947": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5948": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SUB",
      "path": "0"
    },
    "5949": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5951": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "ADD",
      "path": "0"
    },
    "5952": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5953": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5954": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5955": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5957": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "AND",
      "path": "0"
    },
    "5958": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13336
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5959": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13336
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5960": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5962": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13336
      ],
      "op": "EQ",
      "path": "0"
    },
    "5963": {
      "fn": "Administrable.bankExists",
      "offset": [
        13308,
        13336
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5964": {
      "fn": "Administrable.bankExists",
      "offset": [
        13221,
        13343
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5965": {
      "op": "POP"
    },
    "5966": {
      "op": "POP"
    },
    "5967": {
      "fn": "Administrable.bankExists",
      "jump": "o",
      "offset": [
        13221,
        13343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5968": {
      "fn": "Administrable.setPermit",
      "offset": [
        10790,
        11108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5969": {
      "fn": "Administrable.setPermit",
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5970": {
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175B"
    },
    "5973": {
      "offset": [
        4017,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5974": {
      "offset": [
        4029,
        4039
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5975": {
      "offset": [
        4003,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC64"
    },
    "5978": {
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5979": {
      "branch": 185,
      "fn": "Administrable.setPermit",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5980": {
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1764"
    },
    "5983": {
      "branch": 185,
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5984": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5986": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5987": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5988": {
      "fn": "Administrable.setPermit",
      "offset": [
        3995,
        4041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5989": {
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10951
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x176D"
    },
    "5992": {
      "fn": "Administrable.setPermit",
      "offset": [
        10943,
        10950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5993": {
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7A"
    },
    "5996": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        10929,
        10951
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5997": {
      "branch": 186,
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5998": {
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10975
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5999": {
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177A"
    },
    "6002": {
      "branch": 186,
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10975
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "fn": "Administrable.setPermit",
      "offset": [
        10955,
        10975
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6006": {
      "fn": "Administrable.setPermit",
      "offset": [
        10955,
        10975
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6007": {
      "fn": "Administrable.setPermit",
      "offset": [
        10955,
        10975
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6009": {
      "branch": 187,
      "fn": "Administrable.setPermit",
      "offset": [
        10955,
        10975
      ],
      "op": "AND",
      "path": "0"
    },
    "6010": {
      "fn": "Administrable.setPermit",
      "offset": [
        10929,
        10975
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6011": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17AE"
    },
    "6014": {
      "branch": 187,
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6015": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6017": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6024": {
      "op": "SHL"
    },
    "6025": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6026": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6029": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6031": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6032": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "ADD",
      "path": "0"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6038": {
      "op": "DUP3"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "MSTORE"
    },
    "6041": {
      "op": "PUSH5",
      "value": "0x4E53484E41"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6049": {
      "op": "SHL"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6052": {
      "op": "DUP3"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "MSTORE"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "6061": {
      "op": "JUMP"
    },
    "6062": {
      "fn": "Administrable.setPermit",
      "offset": [
        10921,
        10985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6063": {
      "fn": "Administrable.setPermit",
      "offset": [
        11035,
        11043
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 58
    },
    "6064": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6066": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6067": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "GT",
      "path": "0"
    },
    "6068": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6069": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C0"
    },
    "6072": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6073": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C0"
    },
    "6076": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "6079": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6080": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6081": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "6083": {
      "fn": "Administrable.setPermit",
      "offset": [
        11011,
        11021
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6084": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6086": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6087": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D0"
    },
    "6090": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6091": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6092": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "6095": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11003,
        11022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6096": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6097": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6098": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6099": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6100": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6102": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6103": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6104": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6106": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6107": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6108": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6109": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SUB",
      "path": "0"
    },
    "6110": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6111": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "ADD",
      "path": "0"
    },
    "6112": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6113": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11022
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "SUB"
    },
    "6122": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6123": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "AND",
      "path": "0"
    },
    "6124": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6126": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6127": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6128": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6129": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6130": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6131": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6132": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6133": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6134": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6136": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11031
      ],
      "op": "AND",
      "path": "0"
    },
    "6137": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6139": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6140": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "GT",
      "path": "0"
    },
    "6141": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6142": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1809"
    },
    "6145": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6146": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1809"
    },
    "6149": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "6152": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6153": {
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6154": {
      "branch": 188,
      "fn": "Administrable.setPermit",
      "offset": [
        11003,
        11043
      ],
      "op": "SUB",
      "path": "0"
    },
    "6155": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183C"
    },
    "6158": {
      "branch": 188,
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6159": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6161": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6168": {
      "op": "SHL"
    },
    "6169": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6170": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6173": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6175": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6176": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "ADD",
      "path": "0"
    },
    "6177": {
      "op": "MSTORE"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6182": {
      "op": "DUP3"
    },
    "6183": {
      "op": "ADD"
    },
    "6184": {
      "op": "MSTORE"
    },
    "6185": {
      "op": "PUSH3",
      "value": "0x41485"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "6191": {
      "op": "SHL"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6194": {
      "op": "DUP3"
    },
    "6195": {
      "op": "ADD"
    },
    "6196": {
      "op": "MSTORE"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6199": {
      "op": "ADD"
    },
    "6200": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "6203": {
      "op": "JUMP"
    },
    "6204": {
      "fn": "Administrable.setPermit",
      "offset": [
        10995,
        11051
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6205": {
      "fn": "Administrable.setPermit",
      "offset": [
        11061,
        11100
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 59,
      "value": "0xE04"
    },
    "6208": {
      "fn": "Administrable.setPermit",
      "offset": [
        11072,
        11082
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6209": {
      "fn": "Administrable.setPermit",
      "offset": [
        11083,
        11090
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6210": {
      "fn": "Administrable.setPermit",
      "offset": [
        11091,
        11099
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6211": {
      "fn": "Administrable.setPermit",
      "offset": [
        11061,
        11071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3012"
    },
    "6214": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11061,
        11100
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6215": {
      "fn": "Shardable.purchase",
      "offset": [
        9220,
        11050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6216": {
      "fn": "Shardable.purchase",
      "offset": [
        9285,
        9290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6217": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1861"
    },
    "6220": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6221": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6223": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6224": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6225": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6226": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6227": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6228": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6230": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6232": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6233": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6235": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6236": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6237": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6238": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "6239": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6240": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6241": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6242": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x187D"
    },
    "6245": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6246": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6248": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6255": {
      "op": "SHL"
    },
    "6256": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6257": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6258": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6260": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "6261": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "6264": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6265": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "6268": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6269": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6270": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x0"
    },
    "6272": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6273": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6274": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6275": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6277": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6279": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6280": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6282": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6283": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6284": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6285": {
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6287": {
      "branch": 227,
      "fn": "Shardable.purchase",
      "offset": [
        9310,
        9330
      ],
      "op": "AND",
      "path": "2"
    },
    "6288": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C0"
    },
    "6291": {
      "branch": 227,
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6292": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6294": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6303": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6306": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6308": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6309": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "ADD",
      "path": "2"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6315": {
      "op": "DUP3"
    },
    "6316": {
      "op": "ADD"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6323": {
      "op": "SHL"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6326": {
      "op": "DUP3"
    },
    "6327": {
      "op": "ADD"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6331": {
      "op": "ADD"
    },
    "6332": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "6335": {
      "op": "JUMP"
    },
    "6336": {
      "fn": "Shardable.purchase",
      "offset": [
        9302,
        9337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6337": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x0"
    },
    "6339": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6340": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6341": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6342": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6344": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6346": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6347": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6349": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6350": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9374
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6351": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6353": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9377
      ],
      "op": "ADD",
      "path": "2"
    },
    "6354": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9377
      ],
      "op": "AND",
      "path": "2"
    },
    "6364": {
      "fn": "Shardable.purchase",
      "offset": [
        9381,
        9391
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6365": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9391
      ],
      "op": "EQ",
      "path": "2"
    },
    "6366": {
      "fn": "Shardable.purchase",
      "offset": [
        9356,
        9391
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6367": {
      "fn": "Shardable.purchase",
      "offset": [
        9355,
        9435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1900"
    },
    "6370": {
      "fn": "Shardable.purchase",
      "offset": [
        9355,
        9435
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6371": {
      "op": "POP"
    },
    "6372": {
      "fn": "Shardable.purchase",
      "offset": [
        9430,
        9433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6374": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6375": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6376": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6377": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6379": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6381": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6382": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6384": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6385": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6386": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6388": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9418
      ],
      "op": "ADD",
      "path": "2"
    },
    "6389": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9418
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "SUB"
    },
    "6398": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9418
      ],
      "op": "AND",
      "path": "2"
    },
    "6399": {
      "fn": "Shardable.purchase",
      "offset": [
        9397,
        9434
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6400": {
      "fn": "Shardable.purchase",
      "offset": [
        9355,
        9435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6401": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1931"
    },
    "6404": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6405": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6407": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6416": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6419": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6421": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6422": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "ADD",
      "path": "2"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6428": {
      "op": "DUP3"
    },
    "6429": {
      "op": "ADD"
    },
    "6430": {
      "op": "MSTORE"
    },
    "6431": {
      "op": "PUSH2",
      "value": "0x29A9"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6436": {
      "op": "SHL"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6439": {
      "op": "DUP3"
    },
    "6440": {
      "op": "ADD"
    },
    "6441": {
      "op": "MSTORE"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6444": {
      "op": "ADD"
    },
    "6445": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "6448": {
      "op": "JUMP"
    },
    "6449": {
      "fn": "Shardable.purchase",
      "offset": [
        9347,
        9442
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6450": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x193A"
    },
    "6453": {
      "fn": "Shardable.purchase",
      "offset": [
        9464,
        9469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6454": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20BD"
    },
    "6457": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9452,
        9470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6458": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6459": {
      "fn": "Shardable.purchase",
      "offset": [
        9481,
        9504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6461": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6462": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6463": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6464": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6466": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6468": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6469": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6471": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6472": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9605
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6473": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6475": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9611
      ],
      "op": "ADD",
      "path": "2"
    },
    "6476": {
      "fn": "Shardable.purchase",
      "offset": [
        9587,
        9611
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6477": {
      "fn": "Shardable.purchase",
      "offset": [
        9481,
        9504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6478": {
      "fn": "Shardable.purchase",
      "offset": [
        9481,
        9504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6479": {
      "fn": "Shardable.purchase",
      "offset": [
        9481,
        9504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6480": {
      "fn": "Shardable.purchase",
      "offset": [
        9481,
        9504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6481": {
      "fn": "Shardable.purchase",
      "offset": [
        9551,
        9620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x195E"
    },
    "6484": {
      "fn": "Shardable.purchase",
      "offset": [
        9551,
        9620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6485": {
      "fn": "Shardable.purchase",
      "offset": [
        9612,
        9614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "6487": {
      "fn": "Shardable.purchase",
      "offset": [
        9615,
        9619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "6490": {
      "fn": "Shardable.purchase",
      "offset": [
        9551,
        9586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30CC"
    },
    "6493": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9551,
        9620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6494": {
      "fn": "Shardable.purchase",
      "offset": [
        9551,
        9620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6495": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6496": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6497": {
      "op": "POP"
    },
    "6498": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6499": {
      "op": "POP"
    },
    "6500": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6501": {
      "op": "POP"
    },
    "6502": {
      "fn": "Shardable.purchase",
      "offset": [
        9630,
        9657
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 63,
      "value": "0x196F"
    },
    "6505": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6506": {
      "fn": "Shardable.purchase",
      "offset": [
        9480,
        9620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6507": {
      "fn": "Shardable.purchase",
      "offset": [
        9630,
        9657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DF8"
    },
    "6510": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9630,
        9657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6511": {
      "fn": "Shardable.purchase",
      "offset": [
        9630,
        9657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6512": {
      "fn": "Shardable.purchase",
      "offset": [
        9762,
        9765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6514": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6515": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6516": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6517": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6519": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6521": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6522": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6524": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6525": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9737
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6526": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6528": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9750
      ],
      "op": "ADD",
      "path": "2"
    },
    "6529": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9750
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6530": {
      "fn": "Shardable.purchase",
      "offset": [
        9630,
        9657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6531": {
      "fn": "Shardable.purchase",
      "offset": [
        9630,
        9657
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6532": {
      "op": "POP"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6539": {
      "op": "SHL"
    },
    "6540": {
      "op": "SUB"
    },
    "6541": {
      "fn": "Shardable.purchase",
      "offset": [
        9719,
        9750
      ],
      "op": "AND",
      "path": "2"
    },
    "6542": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE1"
    },
    "6545": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6546": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0x0"
    },
    "6548": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6549": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6550": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6551": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6553": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6555": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6556": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6558": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6559": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6560": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6562": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9827
      ],
      "op": "ADD",
      "path": "2"
    },
    "6563": {
      "fn": "Shardable.purchase",
      "offset": [
        9803,
        9827
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6564": {
      "fn": "Shardable.purchase",
      "offset": [
        9790,
        9799
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6565": {
      "fn": "Shardable.purchase",
      "offset": [
        9790,
        9827
      ],
      "op": "LT",
      "path": "2"
    },
    "6566": {
      "branch": 228,
      "fn": "Shardable.purchase",
      "offset": [
        9790,
        9827
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6567": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D7"
    },
    "6570": {
      "branch": 228,
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6571": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6573": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6580": {
      "op": "SHL"
    },
    "6581": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6582": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6585": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6587": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6588": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "ADD",
      "path": "2"
    },
    "6589": {
      "op": "MSTORE"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6594": {
      "op": "DUP3"
    },
    "6595": {
      "op": "ADD"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "op": "PUSH2",
      "value": "0x4945"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6605": {
      "op": "DUP3"
    },
    "6606": {
      "op": "ADD"
    },
    "6607": {
      "op": "MSTORE"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6610": {
      "op": "ADD"
    },
    "6611": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "6614": {
      "op": "JUMP"
    },
    "6615": {
      "fn": "Shardable.purchase",
      "offset": [
        9782,
        9834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6616": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6618": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6619": {
      "fn": "Shardable.purchase",
      "offset": [
        9899,
        9920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6621": {
      "fn": "Shardable.purchase",
      "offset": [
        9899,
        9920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6622": {
      "fn": "Shardable.purchase",
      "offset": [
        9933,
        9975
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "6643": {
      "fn": "Shardable.purchase",
      "offset": [
        9933,
        9975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6644": {
      "fn": "Shardable.purchase",
      "offset": [
        9988,
        10003
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6645": {
      "fn": "Shardable.purchase",
      "offset": [
        9988,
        10003
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6646": {
      "fn": "Shardable.purchase",
      "offset": [
        9899,
        9920
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6647": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6648": {
      "fn": "Shardable.purchase",
      "offset": [
        9899,
        9920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6649": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6650": {
      "fn": "Shardable.purchase",
      "offset": [
        9988,
        10003
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6651": {
      "fn": "Shardable.purchase",
      "offset": [
        9933,
        9975
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6652": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "GAS",
      "path": "2"
    },
    "6653": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "CALL",
      "path": "2"
    },
    "6654": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6655": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "POP",
      "path": "2"
    },
    "6656": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "POP",
      "path": "2"
    },
    "6657": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "POP",
      "path": "2"
    },
    "6658": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6659": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6660": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6662": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6663": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "EQ",
      "path": "2"
    },
    "6664": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2D"
    },
    "6667": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6668": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6670": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6671": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6672": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "POP",
      "path": "2"
    },
    "6673": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6675": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "NOT",
      "path": "2"
    },
    "6676": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6678": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6679": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "ADD",
      "path": "2"
    },
    "6680": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "AND",
      "path": "2"
    },
    "6681": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6682": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "ADD",
      "path": "2"
    },
    "6683": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6685": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6686": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6687": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6688": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6689": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6690": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6692": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6694": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6695": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "ADD",
      "path": "2"
    },
    "6696": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6697": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A32"
    },
    "6700": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6701": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6702": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6704": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6705": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "POP",
      "path": "2"
    },
    "6706": {
      "fn": "Shardable.purchase",
      "offset": [
        9925,
        10008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6707": {
      "op": "POP"
    },
    "6708": {
      "op": "POP"
    },
    "6709": {
      "fn": "Shardable.purchase",
      "offset": [
        10062,
        10082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6711": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6712": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6713": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6714": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6716": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6718": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6719": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6720": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6721": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6723": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6724": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6725": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10113
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6726": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6727": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6728": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "ADD",
      "path": "2"
    },
    "6729": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6730": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6731": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6732": {
      "fn": "Shardable.purchase",
      "offset": [
        9898,
        10008
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6733": {
      "fn": "Shardable.purchase",
      "offset": [
        9898,
        10008
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6734": {
      "op": "POP"
    },
    "6735": {
      "fn": "Shardable.purchase",
      "offset": [
        10062,
        10082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6736": {
      "fn": "Shardable.purchase",
      "offset": [
        10062,
        10082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6743": {
      "op": "SHL"
    },
    "6744": {
      "op": "SUB"
    },
    "6745": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6746": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6747": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "AND",
      "path": "2"
    },
    "6748": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6749": {
      "fn": "Shardable.purchase",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6750": {
      "fn": "Shardable.purchase",
      "offset": [
        10132,
        10146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6751": {
      "fn": "Shardable.purchase",
      "offset": [
        10062,
        10082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6752": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6753": {
      "fn": "Shardable.purchase",
      "offset": [
        10062,
        10082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6754": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6755": {
      "fn": "Shardable.purchase",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6756": {
      "fn": "Shardable.purchase",
      "offset": [
        10095,
        10119
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6757": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "GAS",
      "path": "2"
    },
    "6758": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "CALL",
      "path": "2"
    },
    "6759": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6760": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6761": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6762": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6763": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6764": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6765": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6767": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6768": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "EQ",
      "path": "2"
    },
    "6769": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A96"
    },
    "6772": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6773": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6775": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6776": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6777": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6778": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6780": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "NOT",
      "path": "2"
    },
    "6781": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6783": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6784": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "ADD",
      "path": "2"
    },
    "6785": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "AND",
      "path": "2"
    },
    "6786": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6787": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "ADD",
      "path": "2"
    },
    "6788": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6790": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6791": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6792": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6793": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6794": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6795": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6797": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6799": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6800": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "ADD",
      "path": "2"
    },
    "6801": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6802": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A9B"
    },
    "6805": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6806": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6807": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6809": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6810": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6811": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6812": {
      "fn": "Shardable.purchase",
      "offset": [
        10087,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6813": {
      "fn": "Shardable.purchase",
      "offset": [
        10061,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6814": {
      "fn": "Shardable.purchase",
      "offset": [
        10061,
        10151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6815": {
      "fn": "Shardable.purchase",
      "offset": [
        10061,
        10151
      ],
      "op": "POP",
      "path": "2"
    },
    "6816": {
      "branch": 229,
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10188
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 65
    },
    "6817": {
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6818": {
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6819": {
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA9"
    },
    "6822": {
      "branch": 229,
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6823": {
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "POP",
      "path": "2"
    },
    "6824": {
      "branch": 230,
      "fn": "Shardable.purchase",
      "offset": [
        10192,
        10208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6825": {
      "fn": "Shardable.purchase",
      "offset": [
        10173,
        10208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6826": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ADA"
    },
    "6829": {
      "branch": 230,
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6830": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6832": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6839": {
      "op": "SHL"
    },
    "6840": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6841": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6844": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6846": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6847": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "ADD",
      "path": "2"
    },
    "6848": {
      "op": "MSTORE"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6853": {
      "op": "DUP3"
    },
    "6854": {
      "op": "ADD"
    },
    "6855": {
      "op": "MSTORE"
    },
    "6856": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6861": {
      "op": "SHL"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "MSTORE"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6869": {
      "op": "ADD"
    },
    "6870": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "6873": {
      "op": "JUMP"
    },
    "6874": {
      "fn": "Shardable.purchase",
      "offset": [
        10165,
        10215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6875": {
      "fn": "Shardable.purchase",
      "offset": [
        9768,
        10226
      ],
      "op": "POP",
      "path": "2"
    },
    "6876": {
      "fn": "Shardable.purchase",
      "offset": [
        9768,
        10226
      ],
      "op": "POP",
      "path": "2"
    },
    "6877": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA7"
    },
    "6880": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6881": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6882": {
      "fn": "Shardable.purchase",
      "offset": [
        10255,
        10266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6884": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6885": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6887": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6889": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6891": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6892": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6894": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6895": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6896": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6897": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10293
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6898": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6900": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6901": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "ADD",
      "path": "2"
    },
    "6902": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6903": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x3"
    },
    "6905": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6906": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6907": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "ADD",
      "path": "2"
    },
    "6908": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6909": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6910": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6911": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6918": {
      "op": "SHL"
    },
    "6919": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6920": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6921": {
      "fn": "Shardable.purchase",
      "offset": [
        10345,
        10355
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6922": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6924": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6925": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ADD",
      "path": "2"
    },
    "6926": {
      "op": "MSTORE"
    },
    "6927": {
      "fn": "Shardable.purchase",
      "offset": [
        10364,
        10368
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6930": {
      "op": "DUP3"
    },
    "6931": {
      "op": "ADD"
    },
    "6932": {
      "op": "MSTORE"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6939": {
      "op": "SHL"
    },
    "6940": {
      "op": "SUB"
    },
    "6941": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6942": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6943": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "AND",
      "path": "2"
    },
    "6944": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6945": {
      "fn": "Shardable.purchase",
      "offset": [
        10374,
        10398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6946": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6947": {
      "fn": "Shardable.purchase",
      "offset": [
        10275,
        10306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6948": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10344
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "6953": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6956": {
      "op": "ADD"
    },
    "6957": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6959": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6961": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6962": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6963": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6964": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "SUB",
      "path": "2"
    },
    "6965": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6966": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6967": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "GAS",
      "path": "2"
    },
    "6968": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6969": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6970": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6971": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6972": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B49"
    },
    "6975": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6976": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6977": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6979": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6980": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6981": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6982": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6984": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6985": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6986": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "POP",
      "path": "2"
    },
    "6987": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "POP",
      "path": "2"
    },
    "6988": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "POP",
      "path": "2"
    },
    "6989": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "POP",
      "path": "2"
    },
    "6990": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6992": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6993": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6994": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6996": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "NOT",
      "path": "2"
    },
    "6997": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6999": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7000": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7001": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "AND",
      "path": "2"
    },
    "7002": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7003": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7004": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7005": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7007": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7008": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "POP",
      "path": "2"
    },
    "7009": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7010": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7011": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7012": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6D"
    },
    "7015": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7016": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7017": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F94"
    },
    "7020": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        10329,
        10370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7021": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7022": {
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10398
      ],
      "op": "LT",
      "path": "2"
    },
    "7023": {
      "branch": 231,
      "fn": "Shardable.purchase",
      "offset": [
        10329,
        10398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7024": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8B"
    },
    "7027": {
      "branch": 231,
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7028": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7030": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7037": {
      "op": "SHL"
    },
    "7038": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7039": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7040": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7042": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "ADD",
      "path": "2"
    },
    "7043": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "7046": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7047": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FAD"
    },
    "7050": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        10321,
        10404
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7051": {
      "fn": "Shardable.purchase",
      "offset": [
        10321,
        10404
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7052": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x40"
    },
    "7054": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7055": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7064": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7065": {
      "fn": "Shardable.purchase",
      "offset": [
        10487,
        10497
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7066": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7068": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7069": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7070": {
      "op": "MSTORE"
    },
    "7071": {
      "fn": "Shardable.purchase",
      "offset": [
        10499,
        10541
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7094": {
      "op": "DUP3"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "op": "MSTORE"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7099": {
      "op": "DUP2"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "DUP6"
    },
    "7102": {
      "op": "SWAP1"
    },
    "7103": {
      "op": "MSTORE"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7110": {
      "op": "SHL"
    },
    "7111": {
      "op": "SUB"
    },
    "7112": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10486
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7113": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10486
      ],
      "op": "AND",
      "path": "2"
    },
    "7114": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7115": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10486
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "7120": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7123": {
      "op": "ADD"
    },
    "7124": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7126": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7128": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7129": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7130": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7131": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "SUB",
      "path": "2"
    },
    "7132": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7133": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7135": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7136": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "GAS",
      "path": "2"
    },
    "7137": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "CALL",
      "path": "2"
    },
    "7138": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7139": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7140": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7141": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF2"
    },
    "7144": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7145": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7146": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7148": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7149": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7150": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7151": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7153": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7154": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7155": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "POP",
      "path": "2"
    },
    "7156": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "POP",
      "path": "2"
    },
    "7157": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "POP",
      "path": "2"
    },
    "7158": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "POP",
      "path": "2"
    },
    "7159": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7161": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7162": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7163": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7165": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "NOT",
      "path": "2"
    },
    "7166": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7168": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7169": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7170": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "AND",
      "path": "2"
    },
    "7171": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7172": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7173": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7174": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7176": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7177": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "POP",
      "path": "2"
    },
    "7178": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7179": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7180": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7181": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C16"
    },
    "7184": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7185": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7186": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC9"
    },
    "7189": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        10468,
        10559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7190": {
      "fn": "Shardable.purchase",
      "offset": [
        10468,
        10559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7191": {
      "op": "POP"
    },
    "7192": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x0"
    },
    "7194": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7195": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7196": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7197": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7199": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7201": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7202": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7203": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7204": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7206": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7207": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7208": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7209": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10660
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7210": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10666
      ],
      "op": "ADD",
      "path": "2"
    },
    "7211": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10666
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7212": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7213": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7214": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7223": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7224": {
      "fn": "Shardable.purchase",
      "offset": [
        10631,
        10641
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7225": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7227": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7228": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ADD",
      "path": "2"
    },
    "7229": {
      "op": "MSTORE"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7236": {
      "op": "SHL"
    },
    "7237": {
      "op": "SUB"
    },
    "7238": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7239": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10666
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7240": {
      "fn": "Shardable.purchase",
      "offset": [
        10642,
        10666
      ],
      "op": "AND",
      "path": "2"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7243": {
      "op": "DUP3"
    },
    "7244": {
      "op": "ADD"
    },
    "7245": {
      "op": "MSTORE"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7248": {
      "op": "DUP2"
    },
    "7249": {
      "op": "ADD"
    },
    "7250": {
      "op": "DUP6"
    },
    "7251": {
      "op": "SWAP1"
    },
    "7252": {
      "op": "MSTORE"
    },
    "7253": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7254": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7255": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "AND",
      "path": "2"
    },
    "7256": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7257": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "7262": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10630
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7265": {
      "op": "ADD"
    },
    "7266": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7268": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7270": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7271": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7272": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7273": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "SUB",
      "path": "2"
    },
    "7274": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7275": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7277": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7278": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "GAS",
      "path": "2"
    },
    "7279": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "CALL",
      "path": "2"
    },
    "7280": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7281": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7282": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7283": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C80"
    },
    "7286": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7287": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7288": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7290": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7291": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7292": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7293": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7295": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7296": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7297": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7298": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7299": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7300": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7301": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7303": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7304": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7305": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7307": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "NOT",
      "path": "2"
    },
    "7308": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7310": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7311": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ADD",
      "path": "2"
    },
    "7312": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "AND",
      "path": "2"
    },
    "7313": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7314": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ADD",
      "path": "2"
    },
    "7315": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7316": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7318": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7319": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7320": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7321": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "ADD",
      "path": "2"
    },
    "7322": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7323": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA4"
    },
    "7326": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7327": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7328": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC9"
    },
    "7331": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        10612,
        10682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7332": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7333": {
      "fn": "Shardable.purchase",
      "offset": [
        10612,
        10682
      ],
      "op": "POP",
      "path": "2"
    },
    "7334": {
      "fn": "Shardable.purchase",
      "offset": [
        10241,
        10693
      ],
      "op": "POP",
      "path": "2"
    },
    "7335": {
      "fn": "Shardable.purchase",
      "offset": [
        9715,
        10693
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7336": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x0"
    },
    "7338": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7339": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7340": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7341": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7343": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7345": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7346": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7348": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7349": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10729
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7350": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10739
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7351": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10744
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7352": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7353": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10744
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7354": {
      "branch": 232,
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7355": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10783
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD4"
    },
    "7358": {
      "branch": 232,
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10783
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7359": {
      "op": "POP"
    },
    "7360": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7362": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7363": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7364": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7365": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7367": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7369": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7370": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7372": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7373": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10766
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7374": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7376": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10778
      ],
      "op": "ADD",
      "path": "2"
    },
    "7377": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10778
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7378": {
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10783
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7379": {
      "branch": 233,
      "fn": "Shardable.purchase",
      "offset": [
        10748,
        10783
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7380": {
      "fn": "Shardable.purchase",
      "offset": [
        10711,
        10783
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7381": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D05"
    },
    "7384": {
      "branch": 233,
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7385": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7387": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7396": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7399": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7401": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7402": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "ADD",
      "path": "2"
    },
    "7403": {
      "op": "MSTORE"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7408": {
      "op": "DUP3"
    },
    "7409": {
      "op": "ADD"
    },
    "7410": {
      "op": "MSTORE"
    },
    "7411": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7416": {
      "op": "SHL"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7419": {
      "op": "DUP3"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "MSTORE"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7424": {
      "op": "ADD"
    },
    "7425": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "7428": {
      "op": "JUMP"
    },
    "7429": {
      "fn": "Shardable.purchase",
      "offset": [
        10703,
        10790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7430": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x0"
    },
    "7432": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7433": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7434": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7435": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7437": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7439": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7440": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7442": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7443": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10832
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7444": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7445": {
      "fn": "Shardable.purchase",
      "offset": [
        10814,
        10842
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7446": {
      "fn": "Shardable.purchase",
      "offset": [
        10843,
        10873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7448": {
      "fn": "Shardable.purchase",
      "offset": [
        10843,
        10873
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7449": {
      "fn": "Shardable.purchase",
      "offset": [
        10843,
        10873
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7450": {
      "fn": "Shardable.purchase",
      "offset": [
        10843,
        10873
      ],
      "op": "ADD",
      "path": "2"
    },
    "7451": {
      "fn": "Shardable.purchase",
      "offset": [
        10843,
        10873
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7452": {
      "fn": "Shardable.purchase",
      "offset": [
        10800,
        10885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D27"
    },
    "7455": {
      "fn": "Shardable.purchase",
      "offset": [
        10800,
        10885
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7456": {
      "fn": "Shardable.purchase",
      "offset": [
        10807,
        10812
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7457": {
      "fn": "Shardable.purchase",
      "offset": [
        10807,
        10812
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7458": {
      "fn": "Shardable.purchase",
      "offset": [
        10874,
        10884
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7459": {
      "fn": "Shardable.purchase",
      "offset": [
        10800,
        10806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A82"
    },
    "7462": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        10800,
        10885
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7463": {
      "fn": "Shardable.purchase",
      "offset": [
        10800,
        10885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7464": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "7466": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7467": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7468": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7469": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10926
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7471": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7473": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7474": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7475": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7476": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7478": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7479": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7480": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7481": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10933
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7482": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10943
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7483": {
      "fn": "Shardable.purchase",
      "offset": [
        10915,
        10943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7484": {
      "fn": "Shardable.purchase",
      "offset": [
        10944,
        10974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7486": {
      "fn": "Shardable.purchase",
      "offset": [
        10944,
        10974
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7487": {
      "fn": "Shardable.purchase",
      "offset": [
        10944,
        10974
      ],
      "op": "ADD",
      "path": "2"
    },
    "7488": {
      "fn": "Shardable.purchase",
      "offset": [
        10944,
        10974
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7489": {
      "fn": "Shardable.purchase",
      "offset": [
        10986,
        11017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7491": {
      "fn": "Shardable.purchase",
      "offset": [
        10986,
        11017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7492": {
      "fn": "Shardable.purchase",
      "offset": [
        10986,
        11017
      ],
      "op": "ADD",
      "path": "2"
    },
    "7493": {
      "fn": "Shardable.purchase",
      "offset": [
        10986,
        11017
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7494": {
      "fn": "Shardable.purchase",
      "offset": [
        11018,
        11042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7496": {
      "fn": "Shardable.purchase",
      "offset": [
        11018,
        11042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7497": {
      "fn": "Shardable.purchase",
      "offset": [
        11018,
        11042
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7498": {
      "fn": "Shardable.purchase",
      "offset": [
        11018,
        11042
      ],
      "op": "ADD",
      "path": "2"
    },
    "7499": {
      "fn": "Shardable.purchase",
      "offset": [
        11018,
        11042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7500": {
      "fn": "Shardable.purchase",
      "offset": [
        10900,
        11043
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7501": {
      "fn": "Shardable.purchase",
      "offset": [
        10900,
        11043
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7502": {
      "op": "DUP12"
    },
    "7503": {
      "op": "DUP2"
    },
    "7504": {
      "op": "MSTORE"
    },
    "7505": {
      "op": "SWAP5"
    },
    "7506": {
      "op": "DUP6"
    },
    "7507": {
      "op": "ADD"
    },
    "7508": {
      "op": "SWAP3"
    },
    "7509": {
      "op": "SWAP1"
    },
    "7510": {
      "op": "SWAP3"
    },
    "7511": {
      "op": "MSTORE"
    },
    "7512": {
      "op": "SWAP4"
    },
    "7513": {
      "op": "DUP4"
    },
    "7514": {
      "op": "ADD"
    },
    "7515": {
      "op": "SWAP4"
    },
    "7516": {
      "op": "SWAP1"
    },
    "7517": {
      "op": "SWAP4"
    },
    "7518": {
      "op": "MSTORE"
    },
    "7519": {
      "fn": "Shardable.purchase",
      "offset": [
        10975,
        10985
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7522": {
      "op": "DUP4"
    },
    "7523": {
      "op": "ADD"
    },
    "7524": {
      "op": "MSTORE"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7531": {
      "op": "SHL"
    },
    "7532": {
      "op": "SUB"
    },
    "7533": {
      "fn": "Shardable.purchase",
      "offset": [
        10986,
        11017
      ],
      "op": "AND",
      "path": "2"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7536": {
      "op": "DUP3"
    },
    "7537": {
      "op": "ADD"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7541": {
      "op": "DUP2"
    },
    "7542": {
      "op": "ADD"
    },
    "7543": {
      "op": "SWAP2"
    },
    "7544": {
      "op": "SWAP1"
    },
    "7545": {
      "op": "SWAP2"
    },
    "7546": {
      "op": "MSTORE"
    },
    "7547": {
      "fn": "Shardable.purchase",
      "offset": [
        10900,
        11043
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xD8D12448ACB9A12D0CA44F527C717C0DE64F03B49CA4032F87FEAE10AF5EAABE"
    },
    "7580": {
      "fn": "Shardable.purchase",
      "offset": [
        10900,
        11043
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7583": {
      "op": "ADD"
    },
    "7584": {
      "fn": "Shardable.purchase",
      "offset": [
        10900,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11FB"
    },
    "7587": {
      "op": "JUMP"
    },
    "7588": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7589": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14604,
        14608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7591": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DAF"
    },
    "7594": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14640,
        14647
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7595": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7A"
    },
    "7598": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14626,
        14648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7599": {
      "branch": 189,
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7600": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7601": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DBC"
    },
    "7604": {
      "branch": 189,
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7605": {
      "op": "POP"
    },
    "7606": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14652,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7608": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14652,
        14672
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7609": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14652,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7611": {
      "branch": 190,
      "fn": "Administrable.hasPermit",
      "offset": [
        14652,
        14672
      ],
      "op": "AND",
      "path": "0"
    },
    "7612": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14626,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7613": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14620,
        14690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC8"
    },
    "7616": {
      "branch": 190,
      "fn": "Administrable.hasPermit",
      "offset": [
        14620,
        14690
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7617": {
      "op": "POP"
    },
    "7618": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14683,
        14688
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x0"
    },
    "7620": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14676,
        14688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC23"
    },
    "7623": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14676,
        14688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7624": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14620,
        14690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7625": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 73,
      "value": "0x1"
    },
    "7627": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "7629": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14714,
        14724
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7630": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7632": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7633": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DDA"
    },
    "7636": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7637": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7638": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "7641": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14706,
        14725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7642": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7643": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7644": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7645": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7646": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7648": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7649": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7650": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7652": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7653": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7654": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7655": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SUB",
      "path": "0"
    },
    "7656": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7657": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "ADD",
      "path": "0"
    },
    "7658": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7659": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14725
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7666": {
      "op": "SHL"
    },
    "7667": {
      "op": "SUB"
    },
    "7668": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7669": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "AND",
      "path": "0"
    },
    "7670": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7672": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7673": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7674": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7675": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7676": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7677": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7678": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7679": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7680": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7682": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14734
      ],
      "op": "AND",
      "path": "0"
    },
    "7683": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7685": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7686": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "GT",
      "path": "0"
    },
    "7687": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7688": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E13"
    },
    "7691": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7692": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E13"
    },
    "7695": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "7698": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14706,
        14760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7699": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7700": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "LT",
      "path": "0"
    },
    "7701": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14760
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7702": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7703": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD12"
    },
    "7706": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14706,
        14813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7707": {
      "op": "POP"
    },
    "7708": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14791,
        14813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7710": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "7712": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14776,
        14786
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7713": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7715": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7716": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2D"
    },
    "7719": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7720": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7721": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "7724": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14764,
        14787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7725": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7726": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7727": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7728": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7729": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7731": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7732": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7733": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7734": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7735": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SUB",
      "path": "0"
    },
    "7736": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7738": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "ADD",
      "path": "0"
    },
    "7739": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7740": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7741": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7742": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7744": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14787
      ],
      "op": "AND",
      "path": "0"
    },
    "7745": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7747": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7748": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "GT",
      "path": "0"
    },
    "7749": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7750": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E51"
    },
    "7753": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7754": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E51"
    },
    "7757": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "7760": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14764,
        14813
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7761": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7762": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "LT",
      "path": "0"
    },
    "7763": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7764": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14764,
        14813
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7765": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14522,
        14820
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7766": {
      "op": "POP"
    },
    "7767": {
      "op": "POP"
    },
    "7768": {
      "op": "POP"
    },
    "7769": {
      "fn": "Administrable.hasPermit",
      "jump": "o",
      "offset": [
        14522,
        14820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7770": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9709,
        9917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7771": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9836,
        9844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7772": {
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E65"
    },
    "7775": {
      "offset": [
        4285,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7776": {
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7777": {
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "7780": {
      "jump": "i",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7781": {
      "branch": 191,
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7782": {
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6E"
    },
    "7785": {
      "branch": 191,
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7786": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7788": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7789": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7790": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4265,
        4307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7791": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9856,
        9910
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 74,
      "value": "0x12A2"
    },
    "7794": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9879,
        9887
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7795": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9888,
        9900
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7796": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9901,
        9906
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7797": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9907,
        9909
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7798": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        9856,
        9878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3140"
    },
    "7801": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        9856,
        9910
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7802": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13854,
        13979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7809": {
      "op": "SHL"
    },
    "7810": {
      "op": "SUB"
    },
    "7811": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 75
    },
    "7812": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "AND",
      "path": "2"
    },
    "7813": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13914,
        13918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7815": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7816": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7817": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7818": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7820": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7822": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7823": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7825": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7826": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7827": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13950,
        13971
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7828": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13937,
        13972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC23"
    },
    "7831": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        13937,
        13972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7832": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7834": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7835": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7836": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7837": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7838": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7839": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7841": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7843": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7844": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7846": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7847": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7848": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7849": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "7850": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7851": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7852": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7853": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7855": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7856": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7857": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7858": {
      "offset": [
        8644,
        8655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7860": {
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7862": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7863": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7864": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7865": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7867": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7868": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7869": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8662
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7870": {
      "offset": [
        8644,
        8668
      ],
      "op": "ADD",
      "path": "2"
    },
    "7871": {
      "fn": "Shardable.putForSale",
      "offset": [
        8644,
        8668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7872": {
      "fn": "Shardable.putForSale",
      "offset": [
        11793,
        11798
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7873": {
      "fn": "Shardable.putForSale",
      "offset": [
        11793,
        11798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7880": {
      "op": "SHL"
    },
    "7881": {
      "op": "SUB"
    },
    "7882": {
      "offset": [
        8644,
        8668
      ],
      "op": "AND",
      "path": "2"
    },
    "7883": {
      "offset": [
        8672,
        8682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7884": {
      "offset": [
        8644,
        8682
      ],
      "op": "EQ",
      "path": "2"
    },
    "7885": {
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE8"
    },
    "7888": {
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7889": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7891": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7898": {
      "op": "SHL"
    },
    "7899": {
      "offset": [
        8636,
        8689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7900": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7901": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7903": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "ADD",
      "path": "2"
    },
    "7904": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "7907": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7908": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E61"
    },
    "7911": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7912": {
      "fn": "Shardable.putForSale",
      "offset": [
        8636,
        8689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7913": {
      "fn": "Shardable.putForSale",
      "offset": [
        11815,
        11820
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7914": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F02"
    },
    "7917": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7918": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7920": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7921": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7922": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7923": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7924": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7925": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7927": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7929": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7930": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7932": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7933": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7934": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7935": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "7936": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7937": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7938": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7939": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F1E"
    },
    "7942": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7943": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7945": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7952": {
      "op": "SHL"
    },
    "7953": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7954": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7955": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7957": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "7958": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "7961": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7962": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "7965": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7966": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7967": {
      "fn": "Shardable.putForSale",
      "offset": [
        11832,
        11894
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0x1F2C"
    },
    "7970": {
      "fn": "Shardable.putForSale",
      "offset": [
        11844,
        11849
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7971": {
      "fn": "Shardable.putForSale",
      "offset": [
        11850,
        11859
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7972": {
      "fn": "Shardable.putForSale",
      "offset": [
        11860,
        11871
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7973": {
      "fn": "Shardable.putForSale",
      "offset": [
        11872,
        11884
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7974": {
      "fn": "Shardable.putForSale",
      "offset": [
        11885,
        11890
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7975": {
      "fn": "Shardable.putForSale",
      "offset": [
        11891,
        11893
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7976": {
      "fn": "Shardable.putForSale",
      "offset": [
        11832,
        11843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E2"
    },
    "7979": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        11832,
        11894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7980": {
      "fn": "Shardable.putForSale",
      "offset": [
        11832,
        11894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7981": {
      "offset": [
        8699,
        8700
      ],
      "op": "POP",
      "path": "2"
    },
    "7982": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7983": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7984": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7985": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7986": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7987": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7988": {
      "fn": "Shardable.putForSale",
      "offset": [
        11651,
        11901
      ],
      "op": "POP",
      "path": "2"
    },
    "7989": {
      "fn": "Shardable.putForSale",
      "jump": "o",
      "offset": [
        11651,
        11901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7990": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7991": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14273,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7993": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 77
    },
    "7994": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7995": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7996": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7998": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8000": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8001": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8003": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8004": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14314
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8005": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8007": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14328
      ],
      "op": "ADD",
      "path": "2"
    },
    "8008": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8009": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8010": {
      "op": "LT"
    },
    "8011": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8012": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14339
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8013": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8014": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD12"
    },
    "8017": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14296,
        14383
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8018": {
      "op": "POP"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13162,
        13169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8022": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8023": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8024": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8025": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8027": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8029": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8030": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8032": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8033": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8034": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8035": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8036": {
      "op": "GT"
    },
    "8037": {
      "fn": "Shardable.shardExisted",
      "offset": [
        14343,
        14383
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8038": {
      "fn": "Shardable.shardExisted",
      "jump": "o",
      "offset": [
        14199,
        14390
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8039": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6172,
        6416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8046": {
      "op": "SHL"
    },
    "8047": {
      "op": "SUB"
    },
    "8048": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 78
    },
    "8049": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "AND",
      "path": "1"
    },
    "8050": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8052": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8053": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8054": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8055": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "8057": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8059": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8060": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8062": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8063": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8064": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8065": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8066": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6304,
        6309
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8067": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6304,
        6309
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8068": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8069": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F8F"
    },
    "8072": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8073": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6304,
        6309
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8074": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6304,
        6309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8075": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF8"
    },
    "8078": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        6280,
        6309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8079": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8080": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8081": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8082": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6280,
        6309
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8083": {
      "op": "POP"
    },
    "8084": {
      "op": "POP"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 79
    },
    "8094": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "AND",
      "path": "1"
    },
    "8095": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8097": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8098": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8099": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8100": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "8102": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8104": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8105": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8107": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8108": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8109": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6356
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8110": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6356
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8111": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6351,
        6356
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8112": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6351,
        6356
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8113": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6347
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8114": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6356
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DB"
    },
    "8117": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6356
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8118": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6351,
        6356
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8119": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6351,
        6356
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8120": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        6319,
        6356
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF8"
    },
    "8123": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        6319,
        6356
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8124": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21729,
        21949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8125": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8127": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8128": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8129": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8131": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "8132": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8133": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8134": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "8135": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE2"
    },
    "8138": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8139": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8141": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8148": {
      "op": "SHL"
    },
    "8149": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8150": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8151": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8153": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "8154": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "8157": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8158": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "8161": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8162": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8163": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21859,
        21867
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 80
    },
    "8164": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "8166": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21845,
        21855
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8167": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8169": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8170": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF3"
    },
    "8173": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8174": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8175": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "8178": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21833,
        21856
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8179": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8180": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8181": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8182": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8183": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8185": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8186": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8187": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8188": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8189": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SUB",
      "path": "0"
    },
    "8190": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8192": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "ADD",
      "path": "0"
    },
    "8193": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8194": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8195": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8196": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8199": {
      "op": "NOT"
    },
    "8200": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "AND",
      "path": "0"
    },
    "8201": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8203": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8204": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8206": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8207": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "GT",
      "path": "0"
    },
    "8208": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8209": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201C"
    },
    "8212": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8213": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201C"
    },
    "8216": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "8219": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21833,
        21867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8220": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8221": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "MUL",
      "path": "0"
    },
    "8222": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "OR",
      "path": "0"
    },
    "8223": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8224": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8225": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21833,
        21867
      ],
      "op": "POP",
      "path": "0"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8228": {
      "op": "DUP1"
    },
    "8229": {
      "op": "MLOAD"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8232": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "8235": {
      "op": "DUP4"
    },
    "8236": {
      "op": "CODECOPY"
    },
    "8237": {
      "op": "DUP2"
    },
    "8238": {
      "op": "MLOAD"
    },
    "8239": {
      "op": "SWAP2"
    },
    "8240": {
      "op": "MSTORE"
    },
    "8241": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21910,
        21920
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 81
    },
    "8242": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21921,
        21929
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8243": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8245": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8246": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8248": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "ADD",
      "path": "0"
    },
    "8249": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2043"
    },
    "8252": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8253": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8254": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8255": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4008"
    },
    "8258": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21899,
        21930
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8259": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8260": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8262": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8263": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8266": {
      "op": "NOT"
    },
    "8267": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8268": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8269": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SUB",
      "path": "0"
    },
    "8270": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "ADD",
      "path": "0"
    },
    "8271": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8272": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8273": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8274": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8275": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8276": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21899,
        21930
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8277": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205F"
    },
    "8280": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8281": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21931,
        21941
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8282": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21931,
        21941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8283": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402A"
    },
    "8286": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21882,
        21942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8287": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8288": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8290": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8291": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8292": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8293": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "SUB",
      "path": "0"
    },
    "8294": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8295": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21882,
        21942
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8296": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21729,
        21949
      ],
      "op": "POP",
      "path": "0"
    },
    "8297": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21729,
        21949
      ],
      "op": "POP",
      "path": "0"
    },
    "8298": {
      "fn": "Administrable._setBasePermit",
      "jump": "o",
      "offset": [
        21729,
        21949
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8299": {
      "fn": "Administrable._liquidize",
      "offset": [
        23837,
        23958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8300": {
      "fn": "Administrable._liquidize",
      "offset": [
        23887,
        23905
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 82,
      "value": "0x2073"
    },
    "8303": {
      "fn": "Administrable._liquidize",
      "offset": [
        23887,
        23903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3506"
    },
    "8306": {
      "fn": "Administrable._liquidize",
      "jump": "i",
      "offset": [
        23887,
        23905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8307": {
      "fn": "Administrable._liquidize",
      "offset": [
        23887,
        23905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8308": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 83,
      "value": "0x40"
    },
    "8310": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8311": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8314": {
      "op": "DUP1"
    },
    "8315": {
      "op": "DUP3"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8319": {
      "op": "SWAP1"
    },
    "8320": {
      "op": "DUP3"
    },
    "8321": {
      "op": "ADD"
    },
    "8322": {
      "op": "MSTORE"
    },
    "8323": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8328": {
      "op": "SHL"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8331": {
      "op": "DUP3"
    },
    "8332": {
      "op": "ADD"
    },
    "8333": {
      "op": "MSTORE"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8338": {
      "op": "DUP3"
    },
    "8339": {
      "op": "ADD"
    },
    "8340": {
      "op": "DUP2"
    },
    "8341": {
      "op": "SWAP1"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8345": {
      "op": "SWAP1"
    },
    "8346": {
      "op": "DUP3"
    },
    "8347": {
      "op": "ADD"
    },
    "8348": {
      "op": "MSTORE"
    },
    "8349": {
      "fn": "Administrable._liquidize",
      "offset": [
        23940,
        23950
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8350": {
      "op": "DUP2"
    },
    "8351": {
      "op": "DUP4"
    },
    "8352": {
      "op": "ADD"
    },
    "8353": {
      "op": "MSTORE"
    },
    "8354": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8355": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8358": {
      "op": "DUP1"
    },
    "8359": {
      "op": "MLOAD"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8362": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "8365": {
      "op": "DUP4"
    },
    "8366": {
      "op": "CODECOPY"
    },
    "8367": {
      "op": "DUP2"
    },
    "8368": {
      "op": "MLOAD"
    },
    "8369": {
      "op": "SWAP2"
    },
    "8370": {
      "op": "MSTORE"
    },
    "8371": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8372": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8373": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8374": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "SUB",
      "path": "0"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8377": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "ADD",
      "path": "0"
    },
    "8378": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8379": {
      "fn": "Administrable._liquidize",
      "offset": [
        23920,
        23951
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8380": {
      "fn": "Administrable._liquidize",
      "jump": "o",
      "offset": [
        23837,
        23958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8381": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14496,
        14608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8382": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14556,
        14561
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8383": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D7"
    },
    "8386": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8387": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8389": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8390": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8391": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8392": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8393": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8394": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8396": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8398": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8399": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8401": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8402": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8403": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8404": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "8405": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8406": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8407": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8408": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20F3"
    },
    "8411": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8412": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8414": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8421": {
      "op": "SHL"
    },
    "8422": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8423": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8424": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8426": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "8427": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "8430": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8431": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "8434": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8435": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14596,
        14601
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x0"
    },
    "8439": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8440": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8441": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8442": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8444": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8446": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8447": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8449": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8450": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14593
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8451": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8452": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14601
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8453": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8455": {
      "op": "NOT"
    },
    "8456": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14601
      ],
      "op": "AND",
      "path": "2"
    },
    "8457": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8458": {
      "fn": "Shardable._cancelSale",
      "offset": [
        14573,
        14601
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8459": {
      "fn": "Shardable._cancelSale",
      "jump": "o",
      "offset": [
        14496,
        14608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8460": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16594,
        16951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8461": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13859,
        13863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8463": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8464": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8465": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8466": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "8468": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8470": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8471": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8473": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8474": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8475": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8476": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16669,
        16677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8477": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16669,
        16677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8478": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8480": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13880,
        13904
      ],
      "op": "AND",
      "path": "0"
    },
    "8481": {
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2129"
    },
    "8484": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8485": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8487": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8488": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8489": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4772,
        4805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8490": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8492": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8493": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8494": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8496": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "8497": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8498": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8499": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "8500": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x214F"
    },
    "8503": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8504": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8506": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8513": {
      "op": "SHL"
    },
    "8514": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8515": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8516": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8518": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "8519": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "8522": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8523": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "8526": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8527": {
      "fn": "Administrable.dividendExists",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8528": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16729,
        16734
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 85,
      "value": "0x0"
    },
    "8530": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8531": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8532": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8533": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "8535": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8537": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8538": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8539": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8540": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8542": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8543": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8544": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16726
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8545": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8546": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16734
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8549": {
      "op": "NOT"
    },
    "8550": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16734
      ],
      "op": "AND",
      "path": "0"
    },
    "8551": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8552": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16702,
        16734
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8553": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16869
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x14"
    },
    "8555": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8556": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8557": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8558": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8559": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8560": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8561": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8562": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8563": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8570": {
      "op": "SHL"
    },
    "8571": {
      "op": "DUP2"
    },
    "8572": {
      "op": "MSTORE"
    },
    "8573": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8577": {
      "op": "DUP3"
    },
    "8578": {
      "op": "ADD"
    },
    "8579": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8580": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8581": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8582": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8583": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8584": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8585": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "SUB",
      "path": "0"
    },
    "8586": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "8588": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "ADD",
      "path": "0"
    },
    "8589": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8590": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8591": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8592": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8593": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8594": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "8596": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8597": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8598": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8599": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8600": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16833
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8601": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8608": {
      "op": "SHL"
    },
    "8609": {
      "op": "SUB"
    },
    "8610": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16809,
        16846
      ],
      "op": "AND",
      "path": "0"
    },
    "8611": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8612": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8613": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8614": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8615": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8616": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8617": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8618": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8619": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8620": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8621": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8622": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8623": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8624": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BA"
    },
    "8627": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8628": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8629": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16851,
        16879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8630": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF8"
    },
    "8633": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        16787,
        16879
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8634": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8635": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8636": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8637": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16787,
        16879
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8638": {
      "op": "POP"
    },
    "8639": {
      "op": "POP"
    },
    "8640": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 87,
      "value": "0x40"
    },
    "8642": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8643": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8644": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8646": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8647": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8648": {
      "op": "DUP5"
    },
    "8649": {
      "op": "SWAP1"
    },
    "8650": {
      "op": "MSTORE"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8653": {
      "op": "DUP1"
    },
    "8654": {
      "op": "MLOAD"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8657": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "8660": {
      "op": "DUP4"
    },
    "8661": {
      "op": "CODECOPY"
    },
    "8662": {
      "op": "DUP2"
    },
    "8663": {
      "op": "MLOAD"
    },
    "8664": {
      "op": "SWAP2"
    },
    "8665": {
      "op": "MSTORE"
    },
    "8666": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16894,
        16943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8667": {
      "op": "ADD"
    },
    "8668": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8670": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8671": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8674": {
      "op": "NOT"
    },
    "8675": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8676": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8677": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "SUB",
      "path": "0"
    },
    "8678": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8679": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8680": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8681": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8682": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8683": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8684": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16911,
        16931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8685": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16894,
        16943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205F"
    },
    "8688": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16894,
        16943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8689": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16932,
        16942
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8690": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16932,
        16942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8691": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16894,
        16943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4056"
    },
    "8694": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        16894,
        16943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8695": {
      "fn": "Administrable._createBank",
      "offset": [
        17123,
        17423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8696": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8698": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8699": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8700": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8702": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "8703": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8704": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8705": {
      "fn": "Administrable._createBank",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "8706": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221D"
    },
    "8709": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8710": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8712": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8719": {
      "op": "SHL"
    },
    "8720": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8721": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8722": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8724": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "8725": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "8728": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8729": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "8732": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8733": {
      "fn": "Administrable._createBank",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8734": {
      "fn": "Administrable._createBank",
      "offset": [
        17228,
        17248
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 88,
      "value": "0x2226"
    },
    "8737": {
      "fn": "Administrable._createBank",
      "offset": [
        17239,
        17247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8738": {
      "fn": "Administrable._createBank",
      "offset": [
        17228,
        17238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1720"
    },
    "8741": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17228,
        17248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8742": {
      "fn": "Administrable._createBank",
      "offset": [
        17228,
        17248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8743": {
      "branch": 192,
      "fn": "Administrable._createBank",
      "offset": [
        17227,
        17248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8744": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "8747": {
      "branch": 192,
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8748": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8750": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8757": {
      "op": "SHL"
    },
    "8758": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8759": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8762": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8764": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8765": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "ADD",
      "path": "0"
    },
    "8766": {
      "op": "MSTORE"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8771": {
      "op": "DUP3"
    },
    "8772": {
      "op": "ADD"
    },
    "8773": {
      "op": "MSTORE"
    },
    "8774": {
      "op": "PUSH2",
      "value": "0x4145"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8779": {
      "op": "SHL"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8782": {
      "op": "DUP3"
    },
    "8783": {
      "op": "ADD"
    },
    "8784": {
      "op": "MSTORE"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "8791": {
      "op": "JUMP"
    },
    "8792": {
      "fn": "Administrable._createBank",
      "offset": [
        17219,
        17255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8793": {
      "fn": "Administrable._createBank",
      "offset": [
        17300,
        17304
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 89,
      "value": "0x1"
    },
    "8795": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "8797": {
      "fn": "Administrable._createBank",
      "offset": [
        17277,
        17285
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8798": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8800": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8801": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x226A"
    },
    "8804": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8805": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8806": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "8809": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17265,
        17286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8810": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8811": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8812": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8813": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8814": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8816": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8817": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8818": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8820": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8821": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8822": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8823": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "SUB",
      "path": "0"
    },
    "8824": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8825": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "ADD",
      "path": "0"
    },
    "8826": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8827": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17286
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8834": {
      "op": "SHL"
    },
    "8835": {
      "op": "SUB"
    },
    "8836": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8837": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "AND",
      "path": "0"
    },
    "8838": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8840": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8841": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8842": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8843": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8844": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8845": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8846": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8847": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8848": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8851": {
      "op": "NOT"
    },
    "8852": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "AND",
      "path": "0"
    },
    "8853": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8854": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8855": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8856": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8857": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8858": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8859": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "OR",
      "path": "0"
    },
    "8860": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8861": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8862": {
      "fn": "Administrable._createBank",
      "offset": [
        17265,
        17304
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8865": {
      "op": "SWAP1"
    },
    "8866": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17324
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0xC"
    },
    "8868": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8869": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22AF"
    },
    "8872": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8873": {
      "fn": "Administrable._createBank",
      "offset": [
        17325,
        17333
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8874": {
      "fn": "Administrable._createBank",
      "offset": [
        17325,
        17333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8875": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "8878": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17314,
        17334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8879": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8880": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8881": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8882": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8883": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8885": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8886": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8888": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8889": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8890": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8891": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "SUB",
      "path": "0"
    },
    "8892": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8893": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "ADD",
      "path": "0"
    },
    "8894": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8895": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17334
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8896": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8897": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8900": {
      "op": "NOT"
    },
    "8901": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "AND",
      "path": "0"
    },
    "8902": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8903": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8904": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8905": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8906": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8907": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8908": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "OR",
      "path": "0"
    },
    "8909": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8910": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8911": {
      "fn": "Administrable._createBank",
      "offset": [
        17314,
        17341
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8914": {
      "op": "DUP1"
    },
    "8915": {
      "op": "MLOAD"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "8921": {
      "op": "DUP4"
    },
    "8922": {
      "op": "CODECOPY"
    },
    "8923": {
      "op": "DUP2"
    },
    "8924": {
      "op": "MLOAD"
    },
    "8925": {
      "op": "SWAP2"
    },
    "8926": {
      "op": "MSTORE"
    },
    "8927": {
      "fn": "Administrable._createBank",
      "offset": [
        17356,
        17415
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 91
    },
    "8928": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22ED"
    },
    "8931": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8932": {
      "fn": "Administrable._createBank",
      "offset": [
        17384,
        17392
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8933": {
      "fn": "Administrable._createBank",
      "offset": [
        17384,
        17392
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8934": {
      "fn": "Administrable._createBank",
      "offset": [
        17393,
        17402
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8935": {
      "fn": "Administrable._createBank",
      "offset": [
        17393,
        17402
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8936": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "ADD",
      "path": "0"
    },
    "8937": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4082"
    },
    "8940": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17373,
        17403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8941": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8942": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8944": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8945": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8948": {
      "op": "NOT"
    },
    "8949": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8950": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8951": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "SUB",
      "path": "0"
    },
    "8952": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "ADD",
      "path": "0"
    },
    "8953": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8954": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8955": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8956": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8957": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8958": {
      "fn": "Administrable._createBank",
      "offset": [
        17373,
        17403
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8959": {
      "fn": "Administrable._createBank",
      "offset": [
        17356,
        17415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205F"
    },
    "8962": {
      "fn": "Administrable._createBank",
      "offset": [
        17356,
        17415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8963": {
      "fn": "Administrable._createBank",
      "offset": [
        17404,
        17414
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8964": {
      "fn": "Administrable._createBank",
      "offset": [
        17404,
        17414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8965": {
      "fn": "Administrable._createBank",
      "offset": [
        17356,
        17415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40AC"
    },
    "8968": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17356,
        17415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8969": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18186,
        18459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8970": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8972": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8973": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8974": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8976": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "8977": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8978": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8979": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "8980": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x232F"
    },
    "8983": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8984": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8986": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8993": {
      "op": "SHL"
    },
    "8994": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8995": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8996": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8998": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "8999": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "9002": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9003": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "9006": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9007": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9008": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18295,
        18326
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 92,
      "value": "0x2339"
    },
    "9011": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18307,
        18315
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9012": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18316,
        18325
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9013": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18295,
        18306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161F"
    },
    "9016": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18295,
        18326
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9017": {
      "branch": 193,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18295,
        18326
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9018": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2342"
    },
    "9021": {
      "branch": 193,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9022": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9024": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9025": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9026": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18287,
        18327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9027": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18372,
        18377
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 93,
      "value": "0x0"
    },
    "9029": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "9031": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18349,
        18357
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9032": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9034": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9035": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2354"
    },
    "9038": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9039": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9040": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "9043": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18337,
        18358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9044": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9045": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9046": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9047": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9048": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9050": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9051": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9052": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9054": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9055": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9056": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9057": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "SUB",
      "path": "0"
    },
    "9058": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9059": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "ADD",
      "path": "0"
    },
    "9060": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9061": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18358
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9068": {
      "op": "SHL"
    },
    "9069": {
      "op": "SUB"
    },
    "9070": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9071": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "AND",
      "path": "0"
    },
    "9072": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9074": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9075": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9076": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9077": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9078": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9079": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9080": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9081": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9082": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9083": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9084": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9085": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9088": {
      "op": "NOT"
    },
    "9089": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "AND",
      "path": "0"
    },
    "9090": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9091": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9092": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9093": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9094": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9095": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9096": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "OR",
      "path": "0"
    },
    "9097": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9098": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9099": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18377
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9102": {
      "op": "DUP1"
    },
    "9103": {
      "op": "MLOAD"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9106": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "9109": {
      "op": "DUP4"
    },
    "9110": {
      "op": "CODECOPY"
    },
    "9111": {
      "op": "DUP2"
    },
    "9112": {
      "op": "MLOAD"
    },
    "9113": {
      "op": "SWAP2"
    },
    "9114": {
      "op": "MSTORE"
    },
    "9115": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18392,
        18451
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 94
    },
    "9116": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A9"
    },
    "9119": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9120": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18420,
        18428
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9121": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18420,
        18428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9122": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9123": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18337,
        18369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9124": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "ADD",
      "path": "0"
    },
    "9125": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4082"
    },
    "9128": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18409,
        18439
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9129": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9130": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9132": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9133": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9136": {
      "op": "NOT"
    },
    "9137": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9138": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9139": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "SUB",
      "path": "0"
    },
    "9140": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "ADD",
      "path": "0"
    },
    "9141": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9142": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9143": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9144": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9145": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9146": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18409,
        18439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9147": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18392,
        18451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205F"
    },
    "9150": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18392,
        18451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9151": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18440,
        18450
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9152": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18440,
        18450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9153": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18392,
        18451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D8"
    },
    "9156": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18392,
        18451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9157": {
      "fn": "Idea._transferToken",
      "offset": [
        4612,
        5361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9164": {
      "op": "SHL"
    },
    "9165": {
      "op": "SUB"
    },
    "9166": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 95
    },
    "9167": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "AND",
      "path": "1"
    },
    "9168": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9170": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9171": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9172": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9173": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4718
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9175": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9177": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9178": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9180": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9181": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9182": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4732
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9183": {
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4741
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9184": {
      "op": "GT"
    },
    "9185": {
      "branch": 215,
      "fn": "Idea._transferToken",
      "offset": [
        4712,
        4741
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9186": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23FD"
    },
    "9189": {
      "branch": 215,
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9190": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9192": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9201": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9202": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9204": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "ADD",
      "path": "1"
    },
    "9205": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "9208": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9209": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FAD"
    },
    "9212": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        4704,
        4748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9213": {
      "fn": "Idea._transferToken",
      "offset": [
        4704,
        4748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9220": {
      "op": "SHL"
    },
    "9221": {
      "op": "SUB"
    },
    "9222": {
      "fn": "Idea._transferToken",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9223": {
      "branch": 216,
      "fn": "Idea._transferToken",
      "offset": [
        4762,
        4788
      ],
      "op": "AND",
      "path": "1"
    },
    "9224": {
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x241A"
    },
    "9227": {
      "branch": 216,
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9228": {
      "fn": "Idea._transferToken",
      "offset": [
        4792,
        4817
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 96,
      "value": "0x2415"
    },
    "9231": {
      "fn": "Idea._transferToken",
      "offset": [
        4807,
        4812
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9232": {
      "fn": "Idea._transferToken",
      "offset": [
        4814,
        4816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9233": {
      "fn": "Idea._transferToken",
      "offset": [
        4792,
        4806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3538"
    },
    "9236": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        4792,
        4817
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9237": {
      "fn": "Idea._transferToken",
      "offset": [
        4792,
        4817
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9238": {
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25DC"
    },
    "9241": {
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9242": {
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9243": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 97,
      "value": "0x40"
    },
    "9245": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9246": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9253": {
      "op": "SHL"
    },
    "9254": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9255": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "op": "SUB"
    },
    "9264": {
      "op": "DUP3"
    },
    "9265": {
      "op": "DUP2"
    },
    "9266": {
      "op": "AND"
    },
    "9267": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9269": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9270": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ADD",
      "path": "1"
    },
    "9271": {
      "op": "MSTORE"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9274": {
      "op": "DUP3"
    },
    "9275": {
      "op": "ADD"
    },
    "9276": {
      "op": "DUP5"
    },
    "9277": {
      "op": "SWAP1"
    },
    "9278": {
      "op": "MSTORE"
    },
    "9279": {
      "fn": "Idea._transferToken",
      "offset": [
        4867,
        4879
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9280": {
      "fn": "Idea._transferToken",
      "offset": [
        4867,
        4879
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9281": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9282": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9283": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "AND",
      "path": "1"
    },
    "9284": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9285": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "9290": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9293": {
      "op": "ADD"
    },
    "9294": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9296": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9298": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9299": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9300": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9301": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "SUB",
      "path": "1"
    },
    "9302": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9303": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9305": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9306": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "GAS",
      "path": "1"
    },
    "9307": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "CALL",
      "path": "1"
    },
    "9308": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9309": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9310": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9311": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x246C"
    },
    "9314": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9315": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9316": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9318": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9319": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9320": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9321": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9323": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9324": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9325": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "POP",
      "path": "1"
    },
    "9326": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "POP",
      "path": "1"
    },
    "9327": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "POP",
      "path": "1"
    },
    "9328": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "POP",
      "path": "1"
    },
    "9329": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9331": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9332": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9333": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9335": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "NOT",
      "path": "1"
    },
    "9336": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9338": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9339": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ADD",
      "path": "1"
    },
    "9340": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "AND",
      "path": "1"
    },
    "9341": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9342": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ADD",
      "path": "1"
    },
    "9343": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9344": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9346": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9347": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "POP",
      "path": "1"
    },
    "9348": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9349": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "ADD",
      "path": "1"
    },
    "9350": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9351": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2490"
    },
    "9354": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9355": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9356": {
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC9"
    },
    "9359": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        4902,
        4926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9360": {
      "branch": 217,
      "fn": "Idea._transferToken",
      "offset": [
        4902,
        4926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9361": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C1"
    },
    "9364": {
      "branch": 217,
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9365": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9367": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9374": {
      "op": "SHL"
    },
    "9375": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9376": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9379": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9381": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9382": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "ADD",
      "path": "1"
    },
    "9383": {
      "op": "MSTORE"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9388": {
      "op": "DUP3"
    },
    "9389": {
      "op": "ADD"
    },
    "9390": {
      "op": "MSTORE"
    },
    "9391": {
      "op": "PUSH2",
      "value": "0x4E41"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9399": {
      "op": "DUP3"
    },
    "9400": {
      "op": "ADD"
    },
    "9401": {
      "op": "MSTORE"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9404": {
      "op": "ADD"
    },
    "9405": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "9408": {
      "op": "JUMP"
    },
    "9409": {
      "fn": "Idea._transferToken",
      "offset": [
        4894,
        4933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9416": {
      "op": "SHL"
    },
    "9417": {
      "op": "SUB"
    },
    "9418": {
      "fn": "Idea._transferToken",
      "offset": [
        4951,
        4965
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9419": {
      "fn": "Idea._transferToken",
      "offset": [
        4951,
        4965
      ],
      "op": "AND",
      "path": "1"
    },
    "9420": {
      "fn": "Idea._transferToken",
      "offset": [
        4951,
        4965
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "9421": {
      "branch": 218,
      "fn": "Idea._transferToken",
      "offset": [
        4951,
        4969
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9422": {
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2536"
    },
    "9425": {
      "branch": 218,
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9426": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9428": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9429": {
      "op": "PUSH4",
      "value": "0x4B91AD0F"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9436": {
      "op": "SHL"
    },
    "9437": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9438": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9445": {
      "op": "SHL"
    },
    "9446": {
      "op": "SUB"
    },
    "9447": {
      "op": "DUP6"
    },
    "9448": {
      "op": "DUP2"
    },
    "9449": {
      "op": "AND"
    },
    "9450": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9452": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9453": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "ADD",
      "path": "1"
    },
    "9454": {
      "op": "MSTORE"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9457": {
      "op": "DUP3"
    },
    "9458": {
      "op": "ADD"
    },
    "9459": {
      "op": "DUP6"
    },
    "9460": {
      "op": "SWAP1"
    },
    "9461": {
      "op": "MSTORE"
    },
    "9462": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9463": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5015
      ],
      "op": "AND",
      "path": "1"
    },
    "9464": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9465": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5015
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x97235A1E"
    },
    "9470": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9473": {
      "op": "ADD"
    },
    "9474": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9476": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9478": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9479": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9480": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9481": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "SUB",
      "path": "1"
    },
    "9482": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9483": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9485": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9486": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9487": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "9488": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9489": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9490": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9491": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251B"
    },
    "9494": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9495": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9497": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9498": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9499": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9500": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "POP",
      "path": "1"
    },
    "9501": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "GAS",
      "path": "1"
    },
    "9502": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "CALL",
      "path": "1"
    },
    "9503": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9504": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "POP",
      "path": "1"
    },
    "9505": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "POP",
      "path": "1"
    },
    "9506": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "POP",
      "path": "1"
    },
    "9507": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9508": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9509": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x252C"
    },
    "9512": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9513": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "POP",
      "path": "1"
    },
    "9514": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9516": {
      "fn": "Idea._transferToken",
      "offset": [
        4993,
        5036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9517": {
      "fn": "Idea._transferToken",
      "offset": [
        4989,
        5169
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9518": {
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25DA"
    },
    "9521": {
      "fn": "Idea._transferToken",
      "offset": [
        4989,
        5169
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9522": {
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25DA"
    },
    "9525": {
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9526": {
      "fn": "Idea._transferToken",
      "offset": [
        4947,
        5271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9527": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0x40"
    },
    "9529": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9530": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9537": {
      "op": "SHL"
    },
    "9538": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9539": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9546": {
      "op": "SHL"
    },
    "9547": {
      "op": "SUB"
    },
    "9548": {
      "op": "DUP4"
    },
    "9549": {
      "op": "DUP2"
    },
    "9550": {
      "op": "AND"
    },
    "9551": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9553": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9554": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ADD",
      "path": "1"
    },
    "9555": {
      "op": "MSTORE"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9558": {
      "op": "DUP3"
    },
    "9559": {
      "op": "ADD"
    },
    "9560": {
      "op": "DUP6"
    },
    "9561": {
      "op": "SWAP1"
    },
    "9562": {
      "op": "MSTORE"
    },
    "9563": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9564": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5239
      ],
      "op": "AND",
      "path": "1"
    },
    "9565": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9566": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5239
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "9571": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9574": {
      "op": "ADD"
    },
    "9575": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9577": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9579": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9580": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9581": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9582": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "SUB",
      "path": "1"
    },
    "9583": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9584": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9586": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9587": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "GAS",
      "path": "1"
    },
    "9588": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "CALL",
      "path": "1"
    },
    "9589": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9590": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9591": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9592": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2585"
    },
    "9595": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9596": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9597": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9599": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9600": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9601": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9602": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9604": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9605": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9606": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "POP",
      "path": "1"
    },
    "9607": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "POP",
      "path": "1"
    },
    "9608": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "POP",
      "path": "1"
    },
    "9609": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "POP",
      "path": "1"
    },
    "9610": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9612": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9613": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9614": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9616": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "NOT",
      "path": "1"
    },
    "9617": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9619": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9620": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ADD",
      "path": "1"
    },
    "9621": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "AND",
      "path": "1"
    },
    "9622": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9623": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ADD",
      "path": "1"
    },
    "9624": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9625": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9627": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9628": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "POP",
      "path": "1"
    },
    "9629": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9630": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "ADD",
      "path": "1"
    },
    "9631": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9632": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25A9"
    },
    "9635": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9636": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9637": {
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC9"
    },
    "9640": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5225,
        5249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9641": {
      "branch": 219,
      "fn": "Idea._transferToken",
      "offset": [
        5225,
        5249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9642": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25DA"
    },
    "9645": {
      "branch": 219,
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9646": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9648": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9655": {
      "op": "SHL"
    },
    "9656": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9657": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9660": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9662": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9663": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "ADD",
      "path": "1"
    },
    "9664": {
      "op": "MSTORE"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9669": {
      "op": "DUP3"
    },
    "9670": {
      "op": "ADD"
    },
    "9671": {
      "op": "MSTORE"
    },
    "9672": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "9677": {
      "op": "SHL"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9680": {
      "op": "DUP3"
    },
    "9681": {
      "op": "ADD"
    },
    "9682": {
      "op": "MSTORE"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9685": {
      "op": "ADD"
    },
    "9686": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "9689": {
      "op": "JUMP"
    },
    "9690": {
      "fn": "Idea._transferToken",
      "offset": [
        5217,
        5256
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9691": {
      "fn": "Idea._transferToken",
      "offset": [
        4833,
        5281
      ],
      "op": "POP",
      "path": "1"
    },
    "9692": {
      "fn": "Idea._transferToken",
      "offset": [
        4758,
        5281
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9693": {
      "fn": "Idea._transferToken",
      "offset": [
        5294,
        5300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9695": {
      "fn": "Idea._transferToken",
      "offset": [
        5294,
        5300
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9696": {
      "fn": "Idea._transferToken",
      "offset": [
        5294,
        5300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9698": {
      "branch": 220,
      "fn": "Idea._transferToken",
      "offset": [
        5294,
        5300
      ],
      "op": "AND",
      "path": "1"
    },
    "9699": {
      "fn": "Idea._transferToken",
      "offset": [
        5290,
        5346
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9700": {
      "fn": "Idea._transferToken",
      "offset": [
        5290,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xACF"
    },
    "9703": {
      "branch": 220,
      "fn": "Idea._transferToken",
      "offset": [
        5290,
        5346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9704": {
      "fn": "Idea._transferToken",
      "offset": [
        5303,
        5344
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 99,
      "value": "0xACF"
    },
    "9707": {
      "fn": "Idea._transferToken",
      "offset": [
        5325,
        5337
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9708": {
      "fn": "Idea._transferToken",
      "offset": [
        5338,
        5343
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9709": {
      "fn": "Idea._transferToken",
      "offset": [
        5303,
        5324
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35C0"
    },
    "9712": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5303,
        5344
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9713": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18563,
        18911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9714": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9716": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9717": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9718": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9720": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "9721": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9722": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9723": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "9724": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2617"
    },
    "9727": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9728": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9730": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9737": {
      "op": "SHL"
    },
    "9738": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9739": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9740": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9742": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "9743": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "9746": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9747": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "9750": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9751": {
      "fn": "Administrable._deleteBank",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9752": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18668
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 100,
      "value": "0x2620"
    },
    "9755": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18659,
        18667
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9756": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1720"
    },
    "9759": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18648,
        18668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9760": {
      "branch": 194,
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9761": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2652"
    },
    "9764": {
      "branch": 194,
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9765": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9767": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9774": {
      "op": "SHL"
    },
    "9775": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9776": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9779": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9781": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9782": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "ADD",
      "path": "0"
    },
    "9783": {
      "op": "MSTORE"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9788": {
      "op": "DUP3"
    },
    "9789": {
      "op": "ADD"
    },
    "9790": {
      "op": "MSTORE"
    },
    "9791": {
      "op": "PUSH3",
      "value": "0x554221"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9797": {
      "op": "SHL"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9800": {
      "op": "DUP3"
    },
    "9801": {
      "op": "ADD"
    },
    "9802": {
      "op": "MSTORE"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9805": {
      "op": "ADD"
    },
    "9806": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "9809": {
      "op": "JUMP"
    },
    "9810": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18640,
        18676
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9811": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 101,
      "value": "0x40"
    },
    "9813": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9814": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9815": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9816": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9817": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "ADD",
      "path": "0"
    },
    "9818": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9819": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9820": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9821": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9823": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9824": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9825": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9832": {
      "op": "SHL"
    },
    "9833": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9835": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9836": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9837": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "ADD",
      "path": "0"
    },
    "9838": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18734,
        18747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9839": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9840": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9841": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9842": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9843": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "ADD",
      "path": "0"
    },
    "9844": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18720
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9845": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18748
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659"
    },
    "9878": {
      "branch": 195,
      "fn": "Administrable._deleteBank",
      "offset": [
        18694,
        18748
      ],
      "op": "ADD",
      "path": "0"
    },
    "9879": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C7"
    },
    "9882": {
      "branch": 195,
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9883": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9885": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9892": {
      "op": "SHL"
    },
    "9893": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9894": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9897": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9899": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9900": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "ADD",
      "path": "0"
    },
    "9901": {
      "op": "MSTORE"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9906": {
      "op": "DUP3"
    },
    "9907": {
      "op": "ADD"
    },
    "9908": {
      "op": "MSTORE"
    },
    "9909": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "9914": {
      "op": "SHL"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9917": {
      "op": "DUP3"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "MSTORE"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9922": {
      "op": "ADD"
    },
    "9923": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "9926": {
      "op": "JUMP"
    },
    "9927": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9928": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18773,
        18794
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 102,
      "value": "0x26D0"
    },
    "9931": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18785,
        18793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9932": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18773,
        18784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCB"
    },
    "9935": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18773,
        18794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9936": {
      "branch": 196,
      "fn": "Administrable._deleteBank",
      "offset": [
        18773,
        18794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9937": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2701"
    },
    "9940": {
      "branch": 196,
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9941": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9943": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9950": {
      "op": "SHL"
    },
    "9951": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9952": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9955": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9957": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9958": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "ADD",
      "path": "0"
    },
    "9959": {
      "op": "MSTORE"
    },
    "9960": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9964": {
      "op": "DUP3"
    },
    "9965": {
      "op": "ADD"
    },
    "9966": {
      "op": "MSTORE"
    },
    "9967": {
      "op": "PUSH2",
      "value": "0x4245"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9972": {
      "op": "SHL"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9975": {
      "op": "DUP3"
    },
    "9976": {
      "op": "ADD"
    },
    "9977": {
      "op": "MSTORE"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9980": {
      "op": "ADD"
    },
    "9981": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "9984": {
      "op": "JUMP"
    },
    "9985": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18765,
        18801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9986": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18834,
        18839
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x0"
    },
    "9988": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9990": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18822,
        18830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9991": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9993": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9994": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2713"
    },
    "9997": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9998": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9999": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "10002": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18811,
        18831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10003": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10004": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10005": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10006": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10007": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10009": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10010": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10012": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10013": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10014": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10015": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "SUB",
      "path": "0"
    },
    "10016": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10017": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "ADD",
      "path": "0"
    },
    "10018": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10019": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18831
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10020": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10021": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10024": {
      "op": "NOT"
    },
    "10025": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "AND",
      "path": "0"
    },
    "10026": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10027": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10028": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10029": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10030": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10031": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10032": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "OR",
      "path": "0"
    },
    "10033": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10034": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10035": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18811,
        18839
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10038": {
      "op": "DUP1"
    },
    "10039": {
      "op": "MLOAD"
    },
    "10040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10042": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "10045": {
      "op": "DUP4"
    },
    "10046": {
      "op": "CODECOPY"
    },
    "10047": {
      "op": "DUP2"
    },
    "10048": {
      "op": "MLOAD"
    },
    "10049": {
      "op": "SWAP2"
    },
    "10050": {
      "op": "MSTORE"
    },
    "10051": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 104
    },
    "10052": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274F"
    },
    "10055": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10056": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18882,
        18890
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10057": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18882,
        18890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10058": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "ADD",
      "path": "0"
    },
    "10059": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4104"
    },
    "10062": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18871,
        18891
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10063": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10064": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10066": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10067": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10070": {
      "op": "NOT"
    },
    "10071": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10072": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10073": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "SUB",
      "path": "0"
    },
    "10074": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "ADD",
      "path": "0"
    },
    "10075": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10076": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10077": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10078": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10079": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10080": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18871,
        18891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10081": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276B"
    },
    "10084": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10085": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18892,
        18902
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10086": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18892,
        18902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10087": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4117"
    },
    "10090": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18854,
        18903
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10091": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10092": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10094": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10095": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10096": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10097": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "SUB",
      "path": "0"
    },
    "10098": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10099": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18854,
        18903
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10100": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18563,
        18911
      ],
      "op": "POP",
      "path": "0"
    },
    "10101": {
      "fn": "Administrable._deleteBank",
      "jump": "o",
      "offset": [
        18563,
        18911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10102": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15706,
        16449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10103": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10105": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10106": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10107": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10109": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "10110": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10111": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10112": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "10113": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279C"
    },
    "10116": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10117": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10119": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10126": {
      "op": "SHL"
    },
    "10127": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10128": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10129": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10131": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "10132": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "10135": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10136": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "10139": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10140": {
      "fn": "Administrable._issueDividend",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10141": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15823,
        15844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10143": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15847,
        15852
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10144": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x40"
    },
    "10146": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10147": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10149": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10150": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B0"
    },
    "10153": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10154": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15893,
        15901
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10155": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15893,
        15901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10156": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "10159": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15879,
        15902
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10160": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10161": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10162": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10163": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10164": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10166": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10167": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10168": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10170": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10171": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10172": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10173": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SUB",
      "path": "0"
    },
    "10174": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10175": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "ADD",
      "path": "0"
    },
    "10176": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10177": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15902
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10184": {
      "op": "SHL"
    },
    "10185": {
      "op": "SUB"
    },
    "10186": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10187": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "AND",
      "path": "0"
    },
    "10188": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10190": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10191": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10192": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10193": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10194": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10195": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10196": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10197": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15879,
        15916
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10198": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15870,
        15916
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10199": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15870,
        15916
      ],
      "op": "GT",
      "path": "0"
    },
    "10200": {
      "branch": 197,
      "fn": "Administrable._issueDividend",
      "offset": [
        15870,
        15916
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10201": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F4"
    },
    "10204": {
      "branch": 197,
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10205": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10207": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10214": {
      "op": "SHL"
    },
    "10215": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10216": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10217": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10219": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "ADD",
      "path": "0"
    },
    "10220": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "10223": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10224": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4143"
    },
    "10227": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15862,
        15923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10228": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15862,
        15923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10229": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15974,
        15979
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 106
    },
    "10230": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10232": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15947,
        15955
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10233": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10235": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10236": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2805"
    },
    "10239": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10240": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10241": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "10244": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15933,
        15956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10245": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10246": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10247": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10248": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10249": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10251": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "ADD",
      "path": "0"
    },
    "10252": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10254": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10255": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10256": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10257": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SUB",
      "path": "0"
    },
    "10258": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10259": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15956
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10260": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10262": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15957,
        15969
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10269": {
      "op": "SHL"
    },
    "10270": {
      "op": "SUB"
    },
    "10271": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "AND",
      "path": "0"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10278": {
      "op": "SHL"
    },
    "10279": {
      "op": "SUB"
    },
    "10280": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "AND",
      "path": "0"
    },
    "10281": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10282": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10283": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10285": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "ADD",
      "path": "0"
    },
    "10286": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10287": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10288": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10289": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10291": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "ADD",
      "path": "0"
    },
    "10292": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10294": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10295": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10297": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10298": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10299": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10300": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2845"
    },
    "10303": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10304": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10305": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "10308": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15933,
        15979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10309": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10310": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10311": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10312": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15933,
        15979
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10313": {
      "op": "POP"
    },
    "10314": {
      "op": "POP"
    },
    "10315": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10317": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10318": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10320": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10321": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285B"
    },
    "10324": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10325": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16007,
        16015
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10326": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16007,
        16015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10327": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "10330": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15993,
        16016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10331": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10332": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10333": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10334": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10335": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10337": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10338": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10339": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10341": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10342": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10343": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10344": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SUB",
      "path": "0"
    },
    "10345": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10346": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "ADD",
      "path": "0"
    },
    "10347": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10348": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16016
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10355": {
      "op": "SHL"
    },
    "10356": {
      "op": "SUB"
    },
    "10357": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10358": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "AND",
      "path": "0"
    },
    "10359": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10361": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10362": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10363": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10364": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10365": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10366": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10367": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10368": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10369": {
      "branch": 198,
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10370": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16065
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10371": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16065
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10372": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2895"
    },
    "10375": {
      "branch": 198,
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16065
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10376": {
      "op": "POP"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10383": {
      "op": "SHL"
    },
    "10384": {
      "op": "SUB"
    },
    "10385": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16039,
        16065
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10386": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16039,
        16065
      ],
      "op": "AND",
      "path": "0"
    },
    "10387": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16039,
        16065
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10388": {
      "branch": 199,
      "fn": "Administrable._issueDividend",
      "offset": [
        16039,
        16065
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10389": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15993,
        16065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10390": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15989,
        16133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10391": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15989,
        16133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28CF"
    },
    "10394": {
      "branch": 199,
      "fn": "Administrable._issueDividend",
      "offset": [
        15989,
        16133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10395": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16121,
        16122
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 107,
      "value": "0x1"
    },
    "10397": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "10399": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16108,
        16116
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10400": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10402": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10403": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28AC"
    },
    "10406": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10407": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10408": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "10411": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16081,
        16117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10412": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10413": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10414": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10415": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10416": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10418": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "ADD",
      "path": "0"
    },
    "10419": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10421": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10422": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10423": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10424": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SUB",
      "path": "0"
    },
    "10425": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10426": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10427": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10429": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10430": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10431": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10432": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C9"
    },
    "10435": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10436": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10437": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "10440": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16081,
        16122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10441": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10442": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10443": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10444": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16081,
        16122
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "POP"
    },
    "10447": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15989,
        16133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10448": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 108,
      "value": "0x40"
    },
    "10450": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10451": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10452": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10453": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10454": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "ADD",
      "path": "0"
    },
    "10455": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10456": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10463": {
      "op": "SHL"
    },
    "10464": {
      "op": "SUB"
    },
    "10465": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10466": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10467": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "AND",
      "path": "0"
    },
    "10468": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10469": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10470": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10472": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10473": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10474": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "ADD",
      "path": "0"
    },
    "10475": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10476": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10477": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10480": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10481": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10482": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10483": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "10485": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10486": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10487": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10488": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10489": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16171
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10490": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10491": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10492": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10493": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10500": {
      "op": "SHL"
    },
    "10501": {
      "op": "SUB"
    },
    "10502": {
      "op": "NOT"
    },
    "10503": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "AND",
      "path": "0"
    },
    "10504": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10505": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "AND",
      "path": "0"
    },
    "10506": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10507": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10508": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10509": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "OR",
      "path": "0"
    },
    "10510": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10511": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10512": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10515": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10516": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10517": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "ADD",
      "path": "0"
    },
    "10518": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16142,
        16262
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10519": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16290
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 109,
      "value": "0x14"
    },
    "10521": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10522": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10523": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16305
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10524": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16305
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10525": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16305
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10526": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16313
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10527": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10528": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16272,
        16313
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10529": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16337
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 110,
      "value": "0x12"
    },
    "10531": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10532": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10533": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10534": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10535": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10536": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16352
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10537": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10538": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10541": {
      "op": "NOT"
    },
    "10542": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "AND",
      "path": "0"
    },
    "10543": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10544": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10545": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "OR",
      "path": "0"
    },
    "10546": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10547": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10548": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16323,
        16359
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10549": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 111
    },
    "10550": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10553": {
      "op": "DUP1"
    },
    "10554": {
      "op": "MLOAD"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10557": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "10560": {
      "op": "DUP4"
    },
    "10561": {
      "op": "CODECOPY"
    },
    "10562": {
      "op": "DUP2"
    },
    "10563": {
      "op": "MLOAD"
    },
    "10564": {
      "op": "SWAP2"
    },
    "10565": {
      "op": "MSTORE"
    },
    "10566": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10567": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2956"
    },
    "10570": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10571": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16402,
        16410
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10572": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16402,
        16410
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10573": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10574": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10575": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10576": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16174,
        16262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10577": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "ADD",
      "path": "0"
    },
    "10578": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x415F"
    },
    "10581": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16391,
        16430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10582": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10583": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10585": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10586": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10589": {
      "op": "NOT"
    },
    "10590": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10591": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10592": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "SUB",
      "path": "0"
    },
    "10593": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "ADD",
      "path": "0"
    },
    "10594": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10595": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10596": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10597": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10598": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10599": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16391,
        16430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10600": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2972"
    },
    "10603": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10604": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16431,
        16441
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10605": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16431,
        16441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10606": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x418D"
    },
    "10609": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16374,
        16442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10610": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10611": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10613": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10614": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10615": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10616": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "SUB",
      "path": "0"
    },
    "10617": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10618": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16374,
        16442
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10619": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15813,
        16449
      ],
      "op": "POP",
      "path": "0"
    },
    "10620": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15706,
        16449
      ],
      "op": "POP",
      "path": "0"
    },
    "10621": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15706,
        16449
      ],
      "op": "POP",
      "path": "0"
    },
    "10622": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15706,
        16449
      ],
      "op": "POP",
      "path": "0"
    },
    "10623": {
      "fn": "Administrable._issueDividend",
      "jump": "o",
      "offset": [
        15706,
        16449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10624": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22069,
        22252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10625": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10627": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10628": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10629": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10631": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "10632": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10633": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10634": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "10635": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A6"
    },
    "10638": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10639": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10641": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10648": {
      "op": "SHL"
    },
    "10649": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10650": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10651": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10653": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "10654": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "10657": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10658": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "10661": {
      "fn": "Administrable._setNonShardHolderState",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10662": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10663": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22169
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 112,
      "value": "0xB"
    },
    "10665": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10666": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10669": {
      "op": "NOT"
    },
    "10670": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "AND",
      "path": "0"
    },
    "10671": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10672": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10673": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10674": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10675": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10676": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "OR",
      "path": "0"
    },
    "10677": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10678": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10679": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22149,
        22180
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10680": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 113,
      "value": "0x40"
    },
    "10682": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10683": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10684": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10686": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10687": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "ADD",
      "path": "0"
    },
    "10688": {
      "op": "SWAP3"
    },
    "10689": {
      "op": "SWAP1"
    },
    "10690": {
      "op": "SWAP3"
    },
    "10691": {
      "op": "MSTORE"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10694": {
      "op": "DUP1"
    },
    "10695": {
      "op": "MLOAD"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10698": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "10701": {
      "op": "DUP4"
    },
    "10702": {
      "op": "CODECOPY"
    },
    "10703": {
      "op": "DUP2"
    },
    "10704": {
      "op": "MLOAD"
    },
    "10705": {
      "op": "SWAP2"
    },
    "10706": {
      "op": "MSTORE"
    },
    "10707": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22195,
        22245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10708": {
      "op": "ADD"
    },
    "10709": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10711": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10712": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10715": {
      "op": "NOT"
    },
    "10716": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10717": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10718": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "SUB",
      "path": "0"
    },
    "10719": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "ADD",
      "path": "0"
    },
    "10720": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10721": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10722": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10723": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10724": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10725": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22213,
        22233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10726": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22195,
        22245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276B"
    },
    "10729": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22195,
        22245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10730": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22234,
        22244
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10731": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22234,
        22244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10732": {
      "fn": "Administrable._setNonShardHolderState",
      "offset": [
        22195,
        22245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B9"
    },
    "10735": {
      "fn": "Administrable._setNonShardHolderState",
      "jump": "i",
      "offset": [
        22195,
        22245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10736": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22450,
        22651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10737": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22533,
        22576
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 114,
      "value": "0x29F9"
    },
    "10740": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22563,
        22575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10741": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22533,
        22562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361E"
    },
    "10744": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        22533,
        22576
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10745": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22533,
        22576
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10746": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 115,
      "value": "0x40"
    },
    "10748": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10749": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10756": {
      "op": "SHL"
    },
    "10757": {
      "op": "SUB"
    },
    "10758": {
      "op": "DUP4"
    },
    "10759": {
      "op": "AND"
    },
    "10760": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10762": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10763": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "ADD",
      "path": "0"
    },
    "10764": {
      "op": "MSTORE"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10767": {
      "op": "DUP1"
    },
    "10768": {
      "op": "MLOAD"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10771": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "10774": {
      "op": "DUP4"
    },
    "10775": {
      "op": "CODECOPY"
    },
    "10776": {
      "op": "DUP2"
    },
    "10777": {
      "op": "MLOAD"
    },
    "10778": {
      "op": "SWAP2"
    },
    "10779": {
      "op": "MSTORE"
    },
    "10780": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22591,
        22644
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10781": {
      "op": "ADD"
    },
    "10782": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10784": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10785": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10788": {
      "op": "NOT"
    },
    "10789": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10790": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10791": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "SUB",
      "path": "0"
    },
    "10792": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "ADD",
      "path": "0"
    },
    "10793": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10794": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10795": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10796": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10797": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10798": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22608,
        22632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10799": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22591,
        22644
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276B"
    },
    "10802": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22591,
        22644
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10803": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22633,
        22643
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10804": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22633,
        22643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10805": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22591,
        22644
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E6"
    },
    "10808": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        22591,
        22644
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10809": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22845,
        23042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10810": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22926,
        22967
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 116,
      "value": "0x2A42"
    },
    "10813": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22954,
        22966
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10814": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22926,
        22953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36AF"
    },
    "10817": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        22926,
        22967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10818": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22926,
        22967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10819": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 117,
      "value": "0x40"
    },
    "10821": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10822": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10829": {
      "op": "SHL"
    },
    "10830": {
      "op": "SUB"
    },
    "10831": {
      "op": "DUP4"
    },
    "10832": {
      "op": "AND"
    },
    "10833": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10835": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10836": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "ADD",
      "path": "0"
    },
    "10837": {
      "op": "MSTORE"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10840": {
      "op": "DUP1"
    },
    "10841": {
      "op": "MLOAD"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10844": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "10847": {
      "op": "DUP4"
    },
    "10848": {
      "op": "CODECOPY"
    },
    "10849": {
      "op": "DUP2"
    },
    "10850": {
      "op": "MLOAD"
    },
    "10851": {
      "op": "SWAP2"
    },
    "10852": {
      "op": "MSTORE"
    },
    "10853": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22982,
        23035
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10854": {
      "op": "ADD"
    },
    "10855": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10857": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10858": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10861": {
      "op": "NOT"
    },
    "10862": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10863": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10864": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "SUB",
      "path": "0"
    },
    "10865": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "ADD",
      "path": "0"
    },
    "10866": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10867": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10868": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10869": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10870": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10871": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22999,
        23023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10872": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22982,
        23035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276B"
    },
    "10875": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22982,
        23035
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10876": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23024,
        23034
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10877": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        23024,
        23034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10878": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22982,
        23035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4212"
    },
    "10881": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        22982,
        23035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10882": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10883": {
      "fn": "Shardable._split",
      "offset": [
        15233,
        15244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10884": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A9C"
    },
    "10887": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10888": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10890": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10891": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10892": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10893": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10894": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10895": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "10897": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10899": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10900": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10902": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10903": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10904": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10905": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "10906": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10907": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10908": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10909": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB8"
    },
    "10912": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10913": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10915": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10922": {
      "op": "SHL"
    },
    "10923": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10924": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10925": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10927": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "10928": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "10931": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10932": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "10935": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10936": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10937": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10939": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10940": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10941": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10943": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "10944": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10945": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10946": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "10947": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ADE"
    },
    "10950": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10951": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10953": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10960": {
      "op": "SHL"
    },
    "10961": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10962": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10963": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10965": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "10966": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "10969": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10970": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "10973": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10974": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10975": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 118,
      "value": "0x0"
    },
    "10977": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10978": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10979": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10980": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10982": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10984": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10985": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10987": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10988": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15360
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10989": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10991": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15372
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10992": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15372
      ],
      "op": "ADD",
      "path": "2"
    },
    "10993": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15372
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10994": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10995": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15335
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10996": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AFD"
    },
    "10999": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11000": {
      "fn": "Shardable._split",
      "offset": [
        15336,
        15372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11001": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "11004": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15301,
        15372
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11005": {
      "fn": "Shardable._split",
      "offset": [
        15301,
        15372
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11006": {
      "fn": "Shardable._split",
      "offset": [
        15277,
        15298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B07"
    },
    "11009": {
      "fn": "Shardable._split",
      "offset": [
        15287,
        15298
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11010": {
      "fn": "Shardable._split",
      "offset": [
        15277,
        15286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11011": {
      "fn": "Shardable._split",
      "offset": [
        15277,
        15298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "11014": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15277,
        15298
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11015": {
      "fn": "Shardable._split",
      "offset": [
        15277,
        15298
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11016": {
      "branch": 234,
      "fn": "Shardable._split",
      "offset": [
        15277,
        15372
      ],
      "op": "LT",
      "path": "2"
    },
    "11017": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B24"
    },
    "11020": {
      "branch": 234,
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11021": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11023": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11030": {
      "op": "SHL"
    },
    "11031": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11032": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11033": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11035": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "ADD",
      "path": "2"
    },
    "11036": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "11039": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11040": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4143"
    },
    "11043": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15269,
        15379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11044": {
      "fn": "Shardable._split",
      "offset": [
        15269,
        15379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11045": {
      "fn": "Shardable._split",
      "offset": [
        15389,
        15410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11047": {
      "fn": "Shardable._split",
      "offset": [
        15413,
        15418
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11048": {
      "fn": "Shardable._split",
      "offset": [
        15432,
        15449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B30"
    },
    "11051": {
      "fn": "Shardable._split",
      "offset": [
        15446,
        15448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11052": {
      "fn": "Shardable._split",
      "offset": [
        15432,
        15445
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7A"
    },
    "11055": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15432,
        15449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11056": {
      "branch": 235,
      "fn": "Shardable._split",
      "offset": [
        15432,
        15449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11057": {
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11058": {
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA9"
    },
    "11061": {
      "branch": 235,
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11068": {
      "op": "SHL"
    },
    "11069": {
      "op": "SUB"
    },
    "11070": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11071": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "AND",
      "path": "2"
    },
    "11072": {
      "fn": "Shardable._split",
      "offset": [
        15554,
        15574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11074": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11075": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11076": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11077": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11079": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11081": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11082": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11083": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11084": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11086": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11087": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11088": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11089": {
      "fn": "Shardable._split",
      "offset": [
        15627,
        15643
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11090": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11091": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11092": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11094": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11095": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11096": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11097": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11098": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15644
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11099": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11100": {
      "fn": "Shardable._split",
      "offset": [
        15615,
        15654
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11101": {
      "fn": "Shardable._split",
      "offset": [
        15655,
        15696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11103": {
      "fn": "Shardable._split",
      "offset": [
        15655,
        15696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11104": {
      "fn": "Shardable._split",
      "offset": [
        15655,
        15696
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11105": {
      "fn": "Shardable._split",
      "offset": [
        15655,
        15696
      ],
      "op": "ADD",
      "path": "2"
    },
    "11106": {
      "fn": "Shardable._split",
      "offset": [
        15655,
        15696
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11107": {
      "fn": "Shardable._split",
      "offset": [
        15554,
        15574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11108": {
      "fn": "Shardable._split",
      "offset": [
        15554,
        15574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11109": {
      "fn": "Shardable._split",
      "offset": [
        15602,
        15719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6F"
    },
    "11112": {
      "fn": "Shardable._split",
      "offset": [
        15602,
        15719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11113": {
      "fn": "Shardable._split",
      "offset": [
        15697,
        15706
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11114": {
      "fn": "Shardable._split",
      "offset": [
        15707,
        15718
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11115": {
      "fn": "Shardable._split",
      "offset": [
        15602,
        15614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x370E"
    },
    "11118": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15602,
        15719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11119": {
      "fn": "Shardable._split",
      "offset": [
        15602,
        15719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11120": {
      "fn": "Shardable._split",
      "offset": [
        15553,
        15719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11121": {
      "fn": "Shardable._split",
      "offset": [
        15553,
        15719
      ],
      "op": "POP",
      "path": "2"
    },
    "11122": {
      "fn": "Shardable._split",
      "offset": [
        15553,
        15719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11123": {
      "fn": "Shardable._split",
      "offset": [
        15553,
        15719
      ],
      "op": "POP",
      "path": "2"
    },
    "11124": {
      "fn": "Shardable._split",
      "offset": [
        15733,
        15789
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 119,
      "value": "0x2B7F"
    },
    "11127": {
      "fn": "Shardable._split",
      "offset": [
        15744,
        15756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11128": {
      "fn": "Shardable._split",
      "offset": [
        15757,
        15771
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11129": {
      "fn": "Shardable._split",
      "offset": [
        15772,
        15774
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11130": {
      "fn": "Shardable._split",
      "offset": [
        15775,
        15788
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11131": {
      "fn": "Shardable._split",
      "offset": [
        15733,
        15743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374A"
    },
    "11134": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15733,
        15789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11135": {
      "fn": "Shardable._split",
      "offset": [
        15733,
        15789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "SUB"
    },
    "11144": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 120
    },
    "11145": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "AND",
      "path": "2"
    },
    "11146": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11148": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11149": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11150": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11151": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11153": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11155": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11156": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11158": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11159": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11160": {
      "fn": "Shardable._split",
      "offset": [
        15861,
        15877
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11161": {
      "fn": "Shardable._split",
      "offset": [
        15848,
        15893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA2"
    },
    "11164": {
      "fn": "Shardable._split",
      "offset": [
        15848,
        15893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11165": {
      "fn": "Shardable._split",
      "offset": [
        15879,
        15892
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11166": {
      "fn": "Shardable._split",
      "offset": [
        15848,
        15860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x384C"
    },
    "11169": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        15848,
        15893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11170": {
      "fn": "Shardable._split",
      "offset": [
        15848,
        15893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11171": {
      "fn": "Shardable._split",
      "offset": [
        15451,
        15904
      ],
      "op": "POP",
      "path": "2"
    },
    "11172": {
      "fn": "Shardable._split",
      "offset": [
        15451,
        15904
      ],
      "op": "POP",
      "path": "2"
    },
    "11173": {
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BB5"
    },
    "11176": {
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11177": {
      "fn": "Shardable._split",
      "offset": [
        15428,
        16094
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11178": {
      "fn": "Shardable._split",
      "offset": [
        16033,
        16083
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 121,
      "value": "0x2BB5"
    },
    "11181": {
      "fn": "Shardable._split",
      "offset": [
        16044,
        16053
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11182": {
      "fn": "Shardable._split",
      "offset": [
        16054,
        16065
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11183": {
      "fn": "Shardable._split",
      "offset": [
        16066,
        16068
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11184": {
      "fn": "Shardable._split",
      "offset": [
        16069,
        16082
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11185": {
      "fn": "Shardable._split",
      "offset": [
        16033,
        16043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374A"
    },
    "11188": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        16033,
        16083
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11189": {
      "fn": "Shardable._split",
      "offset": [
        16033,
        16083
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11190": {
      "fn": "Shardable._split",
      "offset": [
        16143,
        16183
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 122,
      "value": "0x2BBF"
    },
    "11193": {
      "fn": "Shardable._split",
      "offset": [
        16156,
        16167
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11194": {
      "fn": "Shardable._split",
      "offset": [
        16169,
        16182
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11195": {
      "fn": "Shardable._split",
      "offset": [
        16143,
        16155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x384C"
    },
    "11198": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        16143,
        16183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11199": {
      "fn": "Shardable._split",
      "offset": [
        16143,
        16183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11200": {
      "fn": "Shardable._split",
      "offset": [
        16285,
        16306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11202": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11203": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11204": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11205": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11207": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11209": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11210": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11212": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11213": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16377
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11214": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11215": {
      "fn": "Shardable._split",
      "offset": [
        16353,
        16387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11216": {
      "fn": "Shardable._split",
      "offset": [
        16388,
        16424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11218": {
      "fn": "Shardable._split",
      "offset": [
        16388,
        16424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11219": {
      "fn": "Shardable._split",
      "offset": [
        16388,
        16424
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11220": {
      "fn": "Shardable._split",
      "offset": [
        16388,
        16424
      ],
      "op": "ADD",
      "path": "2"
    },
    "11221": {
      "fn": "Shardable._split",
      "offset": [
        16388,
        16424
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11222": {
      "fn": "Shardable._split",
      "offset": [
        16285,
        16306
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11223": {
      "fn": "Shardable._split",
      "offset": [
        16285,
        16306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11224": {
      "fn": "Shardable._split",
      "offset": [
        16335,
        16447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BE2"
    },
    "11227": {
      "fn": "Shardable._split",
      "offset": [
        16335,
        16447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11228": {
      "fn": "Shardable._split",
      "offset": [
        16425,
        16434
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11229": {
      "fn": "Shardable._split",
      "offset": [
        16435,
        16446
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11230": {
      "fn": "Shardable._split",
      "offset": [
        16335,
        16352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3894"
    },
    "11233": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        16335,
        16447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11234": {
      "fn": "Shardable._split",
      "offset": [
        16335,
        16447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11235": {
      "fn": "Shardable._split",
      "offset": [
        16284,
        16447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11236": {
      "fn": "Shardable._split",
      "offset": [
        16284,
        16447
      ],
      "op": "POP",
      "path": "2"
    },
    "11237": {
      "fn": "Shardable._split",
      "offset": [
        16284,
        16447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11238": {
      "fn": "Shardable._split",
      "offset": [
        16284,
        16447
      ],
      "op": "POP",
      "path": "2"
    },
    "11239": {
      "fn": "Shardable._split",
      "offset": [
        16461,
        16476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11240": {
      "fn": "Shardable._split",
      "offset": [
        16480,
        16481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11242": {
      "branch": 236,
      "fn": "Shardable._split",
      "offset": [
        16461,
        16481
      ],
      "op": "EQ",
      "path": "2"
    },
    "11243": {
      "fn": "Shardable._split",
      "offset": [
        16457,
        16590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C18"
    },
    "11246": {
      "branch": 236,
      "fn": "Shardable._split",
      "offset": [
        16457,
        16590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11247": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 123,
      "value": "0x0"
    },
    "11249": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11250": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11251": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11252": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11254": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11256": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11257": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11258": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11259": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11261": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11262": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11263": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16558
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11264": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16564
      ],
      "op": "ADD",
      "path": "2"
    },
    "11265": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11266": {
      "fn": "Shardable._split",
      "offset": [
        16493,
        16579
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C18"
    },
    "11269": {
      "fn": "Shardable._split",
      "offset": [
        16493,
        16579
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11270": {
      "fn": "Shardable._split",
      "offset": [
        16504,
        16517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11271": {
      "fn": "Shardable._split",
      "offset": [
        16504,
        16517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11272": {
      "fn": "Shardable._split",
      "offset": [
        16518,
        16533
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11273": {
      "fn": "Shardable._split",
      "offset": [
        16518,
        16533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11280": {
      "op": "SHL"
    },
    "11281": {
      "op": "SUB"
    },
    "11282": {
      "fn": "Shardable._split",
      "offset": [
        16534,
        16564
      ],
      "op": "AND",
      "path": "2"
    },
    "11283": {
      "fn": "Shardable._split",
      "offset": [
        16565,
        16578
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11284": {
      "fn": "Shardable._split",
      "offset": [
        16493,
        16503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374A"
    },
    "11287": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        16493,
        16579
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11288": {
      "fn": "Shardable._split",
      "offset": [
        16493,
        16579
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11289": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 124,
      "value": "0x40"
    },
    "11291": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11292": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11293": {
      "op": "DUP10"
    },
    "11294": {
      "op": "DUP2"
    },
    "11295": {
      "op": "MSTORE"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11298": {
      "op": "DUP2"
    },
    "11299": {
      "op": "ADD"
    },
    "11300": {
      "op": "DUP10"
    },
    "11301": {
      "op": "SWAP1"
    },
    "11302": {
      "op": "MSTORE"
    },
    "11303": {
      "op": "SWAP1"
    },
    "11304": {
      "op": "DUP2"
    },
    "11305": {
      "op": "ADD"
    },
    "11306": {
      "op": "DUP8"
    },
    "11307": {
      "op": "SWAP1"
    },
    "11308": {
      "op": "MSTORE"
    },
    "11309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11315": {
      "op": "SHL"
    },
    "11316": {
      "op": "SUB"
    },
    "11317": {
      "op": "DUP7"
    },
    "11318": {
      "op": "AND"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11321": {
      "op": "DUP3"
    },
    "11322": {
      "op": "ADD"
    },
    "11323": {
      "op": "MSTORE"
    },
    "11324": {
      "fn": "Shardable._split",
      "offset": [
        16658,
        16659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11328": {
      "op": "DUP3"
    },
    "11329": {
      "op": "ADD"
    },
    "11330": {
      "op": "DUP2"
    },
    "11331": {
      "op": "SWAP1"
    },
    "11332": {
      "op": "MSTORE"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11335": {
      "op": "DUP3"
    },
    "11336": {
      "op": "ADD"
    },
    "11337": {
      "op": "MSTORE"
    },
    "11338": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xD8D12448ACB9A12D0CA44F527C717C0DE64F03B49CA4032F87FEAE10AF5EAABE"
    },
    "11371": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11372": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11374": {
      "op": "ADD"
    },
    "11375": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11377": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11378": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11379": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11380": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "SUB",
      "path": "2"
    },
    "11381": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11382": {
      "fn": "Shardable._split",
      "offset": [
        16604,
        16663
      ],
      "op": "LOG1",
      "path": "2"
    },
    "11383": {
      "fn": "Shardable._split",
      "offset": [
        15259,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11384": {
      "fn": "Shardable._split",
      "offset": [
        15259,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11385": {
      "fn": "Shardable._split",
      "offset": [
        15259,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11386": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11387": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11388": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11389": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11390": {
      "fn": "Shardable._split",
      "offset": [
        15120,
        16670
      ],
      "op": "POP",
      "path": "2"
    },
    "11391": {
      "fn": "Shardable._split",
      "jump": "o",
      "offset": [
        15120,
        16670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11392": {
      "fn": "Administrable._moveToken",
      "offset": [
        20191,
        20987
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11393": {
      "fn": "Administrable._moveToken",
      "offset": [
        20328,
        20338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11394": {
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8A"
    },
    "11397": {
      "offset": [
        4535,
        4543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11398": {
      "offset": [
        4524,
        4534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1720"
    },
    "11401": {
      "jump": "i",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11402": {
      "branch": 200,
      "fn": "Administrable._moveToken",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11403": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBC"
    },
    "11406": {
      "branch": 200,
      "offset": [
        4516,
        4552
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11407": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11409": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11416": {
      "op": "SHL"
    },
    "11417": {
      "offset": [
        4516,
        4552
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11418": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11421": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11423": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11424": {
      "fn": "Administrable._moveToken",
      "offset": [
        4516,
        4552
      ],
      "op": "ADD",
      "path": "0"
    },
    "11425": {
      "op": "MSTORE"
    },
    "11426": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11430": {
      "op": "DUP3"
    },
    "11431": {
      "op": "ADD"
    },
    "11432": {
      "op": "MSTORE"
    },
    "11433": {
      "op": "PUSH3",
      "value": "0x444E45"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11439": {
      "op": "SHL"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11442": {
      "op": "DUP3"
    },
    "11443": {
      "op": "ADD"
    },
    "11444": {
      "op": "MSTORE"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11447": {
      "op": "ADD"
    },
    "11448": {
      "offset": [
        4516,
        4552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "11451": {
      "op": "JUMP"
    },
    "11452": {
      "offset": [
        4516,
        4552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11453": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11455": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11456": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11457": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11459": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "11460": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11461": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11462": {
      "fn": "Administrable._moveToken",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "11463": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE2"
    },
    "11466": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11467": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11469": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11476": {
      "op": "SHL"
    },
    "11477": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11478": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11479": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11481": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "11482": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "11485": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11486": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "11489": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11490": {
      "fn": "Administrable._moveToken",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11491": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20393
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 125,
      "value": "0xE"
    },
    "11493": {
      "fn": "Administrable._moveToken",
      "offset": [
        20394,
        20406
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11494": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11496": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11497": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF2"
    },
    "11500": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11501": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11502": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11505": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20380,
        20407
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11506": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11507": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11508": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11509": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11510": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11512": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11513": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11514": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11516": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11517": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11518": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11519": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SUB",
      "path": "0"
    },
    "11520": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11521": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "ADD",
      "path": "0"
    },
    "11522": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11523": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20407
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11530": {
      "op": "SHL"
    },
    "11531": {
      "op": "SUB"
    },
    "11532": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11533": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "AND",
      "path": "0"
    },
    "11534": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11536": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11537": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11538": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11539": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11540": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11541": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11542": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11543": {
      "fn": "Administrable._moveToken",
      "offset": [
        20380,
        20421
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11544": {
      "fn": "Administrable._moveToken",
      "offset": [
        20371,
        20421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11545": {
      "fn": "Administrable._moveToken",
      "offset": [
        20371,
        20421
      ],
      "op": "GT",
      "path": "0"
    },
    "11546": {
      "branch": 201,
      "fn": "Administrable._moveToken",
      "offset": [
        20371,
        20421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11547": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D36"
    },
    "11550": {
      "branch": 201,
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11551": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11553": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11560": {
      "op": "SHL"
    },
    "11561": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11562": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11563": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11565": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "ADD",
      "path": "0"
    },
    "11566": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "11569": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11570": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4143"
    },
    "11573": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20363,
        20428
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11574": {
      "fn": "Administrable._moveToken",
      "offset": [
        20363,
        20428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11575": {
      "fn": "Administrable._moveToken",
      "offset": [
        20483,
        20488
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 126
    },
    "11576": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11578": {
      "fn": "Administrable._moveToken",
      "offset": [
        20452,
        20464
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11579": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11581": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11582": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D47"
    },
    "11585": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11586": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11587": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11590": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20438,
        20465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11591": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11592": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11593": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11594": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11595": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11597": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "ADD",
      "path": "0"
    },
    "11598": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11600": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11601": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11602": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11603": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SUB",
      "path": "0"
    },
    "11604": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11605": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20465
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11606": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11608": {
      "fn": "Administrable._moveToken",
      "offset": [
        20466,
        20478
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11615": {
      "op": "SHL"
    },
    "11616": {
      "op": "SUB"
    },
    "11617": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "AND",
      "path": "0"
    },
    "11618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11624": {
      "op": "SHL"
    },
    "11625": {
      "op": "SUB"
    },
    "11626": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "AND",
      "path": "0"
    },
    "11627": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11628": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11629": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11631": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "ADD",
      "path": "0"
    },
    "11632": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11633": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11634": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11635": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11637": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "ADD",
      "path": "0"
    },
    "11638": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11640": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11641": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11643": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11644": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11645": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11646": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D87"
    },
    "11649": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11650": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11651": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "11654": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20438,
        20488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11655": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11656": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11657": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11658": {
      "fn": "Administrable._moveToken",
      "offset": [
        20438,
        20488
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11659": {
      "op": "POP"
    },
    "11660": {
      "op": "POP"
    },
    "11661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11667": {
      "op": "SHL"
    },
    "11668": {
      "op": "SUB"
    },
    "11669": {
      "fn": "Administrable._moveToken",
      "offset": [
        20502,
        20528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11670": {
      "fn": "Administrable._moveToken",
      "offset": [
        20502,
        20528
      ],
      "op": "AND",
      "path": "0"
    },
    "11671": {
      "branch": 202,
      "fn": "Administrable._moveToken",
      "offset": [
        20502,
        20528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11672": {
      "fn": "Administrable._moveToken",
      "offset": [
        20498,
        20824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E7B"
    },
    "11675": {
      "branch": 202,
      "fn": "Administrable._moveToken",
      "offset": [
        20498,
        20824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11676": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11678": {
      "fn": "Administrable._moveToken",
      "offset": [
        20562,
        20574
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11679": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11681": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11682": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAB"
    },
    "11685": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11686": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11687": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11690": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20548,
        20575
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11691": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11692": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11693": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11694": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11695": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11697": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11698": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11699": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11701": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11702": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11703": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11704": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SUB",
      "path": "0"
    },
    "11705": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11706": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "ADD",
      "path": "0"
    },
    "11707": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11708": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20575
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11715": {
      "op": "SHL"
    },
    "11716": {
      "op": "SUB"
    },
    "11717": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11718": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "AND",
      "path": "0"
    },
    "11719": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11721": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11722": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11723": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11724": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11725": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11726": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11727": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11728": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20589
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11729": {
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20594
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11730": {
      "branch": 203,
      "fn": "Administrable._moveToken",
      "offset": [
        20548,
        20594
      ],
      "op": "SUB",
      "path": "0"
    },
    "11731": {
      "fn": "Administrable._moveToken",
      "offset": [
        20544,
        20675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0B"
    },
    "11734": {
      "branch": 203,
      "fn": "Administrable._moveToken",
      "offset": [
        20544,
        20675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11735": {
      "fn": "Administrable._moveToken",
      "offset": [
        20658,
        20659
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 127,
      "value": "0x1"
    },
    "11737": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "11739": {
      "fn": "Administrable._moveToken",
      "offset": [
        20641,
        20653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11740": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11742": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11743": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE8"
    },
    "11746": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11747": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11748": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11751": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20614,
        20654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11752": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11753": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11754": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11755": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11756": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11758": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "ADD",
      "path": "0"
    },
    "11759": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11761": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11762": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11763": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11764": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SUB",
      "path": "0"
    },
    "11765": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11766": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11767": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11769": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11770": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11771": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11772": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E05"
    },
    "11775": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11776": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11777": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "11780": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20614,
        20659
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11781": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11782": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11783": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11784": {
      "fn": "Administrable._moveToken",
      "offset": [
        20614,
        20659
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11785": {
      "op": "POP"
    },
    "11786": {
      "op": "POP"
    },
    "11787": {
      "fn": "Administrable._moveToken",
      "offset": [
        20544,
        20675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11788": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11790": {
      "fn": "Administrable._moveToken",
      "offset": [
        20706,
        20716
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11791": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11793": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11794": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1B"
    },
    "11797": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11798": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11799": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11802": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20692,
        20717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11803": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11804": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11805": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11806": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11807": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11809": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11810": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11811": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11813": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11814": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11815": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11816": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SUB",
      "path": "0"
    },
    "11817": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11818": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "ADD",
      "path": "0"
    },
    "11819": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11820": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20717
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11827": {
      "op": "SHL"
    },
    "11828": {
      "op": "SUB"
    },
    "11829": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11830": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "AND",
      "path": "0"
    },
    "11831": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11833": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11834": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11835": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11836": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11837": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11838": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11839": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11840": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20731
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11841": {
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11842": {
      "branch": 204,
      "fn": "Administrable._moveToken",
      "offset": [
        20692,
        20736
      ],
      "op": "SUB",
      "path": "0"
    },
    "11843": {
      "fn": "Administrable._moveToken",
      "offset": [
        20688,
        20814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E7B"
    },
    "11846": {
      "branch": 204,
      "fn": "Administrable._moveToken",
      "offset": [
        20688,
        20814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11847": {
      "fn": "Administrable._moveToken",
      "offset": [
        20798,
        20799
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0x1"
    },
    "11849": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "11851": {
      "fn": "Administrable._moveToken",
      "offset": [
        20783,
        20793
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11852": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11854": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11855": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E58"
    },
    "11858": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11859": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11860": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11863": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20756,
        20794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11864": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11865": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11866": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11867": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11868": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11870": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "ADD",
      "path": "0"
    },
    "11871": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11873": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11874": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11875": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11876": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SUB",
      "path": "0"
    },
    "11877": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11878": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11879": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11881": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11882": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11883": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11884": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E75"
    },
    "11887": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11888": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11889": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF8"
    },
    "11892": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20756,
        20799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11893": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11894": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11895": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11896": {
      "fn": "Administrable._moveToken",
      "offset": [
        20756,
        20799
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11897": {
      "op": "POP"
    },
    "11898": {
      "op": "POP"
    },
    "11899": {
      "fn": "Administrable._moveToken",
      "offset": [
        20688,
        20814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11900": {
      "fn": "Administrable._moveToken",
      "offset": [
        20876,
        20881
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 129
    },
    "11901": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11903": {
      "fn": "Administrable._moveToken",
      "offset": [
        20847,
        20857
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11904": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11906": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11907": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E8C"
    },
    "11910": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11911": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11912": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "11915": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20833,
        20858
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11916": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11917": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11918": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11919": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11920": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11922": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "ADD",
      "path": "0"
    },
    "11923": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11925": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11926": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11927": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11928": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SUB",
      "path": "0"
    },
    "11929": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11930": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20858
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11931": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11933": {
      "fn": "Administrable._moveToken",
      "offset": [
        20859,
        20871
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11940": {
      "op": "SHL"
    },
    "11941": {
      "op": "SUB"
    },
    "11942": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "AND",
      "path": "0"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11949": {
      "op": "SHL"
    },
    "11950": {
      "op": "SUB"
    },
    "11951": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "AND",
      "path": "0"
    },
    "11952": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11953": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11954": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11956": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "ADD",
      "path": "0"
    },
    "11957": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11958": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11959": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11960": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11962": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "ADD",
      "path": "0"
    },
    "11963": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11965": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11966": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11968": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11969": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11970": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11971": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ECC"
    },
    "11974": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11975": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11976": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF8"
    },
    "11979": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20833,
        20881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11980": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11981": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11982": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11983": {
      "fn": "Administrable._moveToken",
      "offset": [
        20833,
        20881
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11984": {
      "op": "POP"
    },
    "11985": {
      "op": "POP"
    },
    "11986": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 130,
      "value": "0x40"
    },
    "11988": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11991": {
      "op": "DUP1"
    },
    "11992": {
      "op": "MLOAD"
    },
    "11993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11995": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "11998": {
      "op": "DUP4"
    },
    "11999": {
      "op": "CODECOPY"
    },
    "12000": {
      "op": "DUP2"
    },
    "12001": {
      "op": "MLOAD"
    },
    "12002": {
      "op": "SWAP2"
    },
    "12003": {
      "op": "MSTORE"
    },
    "12004": {
      "fn": "Administrable._moveToken",
      "offset": [
        20896,
        20979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12005": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EF8"
    },
    "12008": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12009": {
      "fn": "Administrable._moveToken",
      "offset": [
        20924,
        20936
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12010": {
      "fn": "Administrable._moveToken",
      "offset": [
        20924,
        20936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12011": {
      "fn": "Administrable._moveToken",
      "offset": [
        20937,
        20947
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12012": {
      "fn": "Administrable._moveToken",
      "offset": [
        20937,
        20947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12013": {
      "fn": "Administrable._moveToken",
      "offset": [
        20948,
        20960
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12014": {
      "fn": "Administrable._moveToken",
      "offset": [
        20948,
        20960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12015": {
      "fn": "Administrable._moveToken",
      "offset": [
        20961,
        20966
      ],
      "op": "DUP8",
      "path": "0"
    },
    "12016": {
      "fn": "Administrable._moveToken",
      "offset": [
        20961,
        20966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12017": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12019": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "ADD",
      "path": "0"
    },
    "12020": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x423E"
    },
    "12023": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20913,
        20967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12024": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12025": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12027": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12028": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12031": {
      "op": "NOT"
    },
    "12032": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12033": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12034": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "SUB",
      "path": "0"
    },
    "12035": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "ADD",
      "path": "0"
    },
    "12036": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12037": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12038": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12039": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12040": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12041": {
      "fn": "Administrable._moveToken",
      "offset": [
        20913,
        20967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12042": {
      "fn": "Administrable._moveToken",
      "offset": [
        20896,
        20979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FB"
    },
    "12045": {
      "fn": "Administrable._moveToken",
      "offset": [
        20896,
        20979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12046": {
      "fn": "Administrable._moveToken",
      "offset": [
        20968,
        20978
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12047": {
      "fn": "Administrable._moveToken",
      "offset": [
        20968,
        20978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12048": {
      "fn": "Administrable._moveToken",
      "offset": [
        20896,
        20979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4280"
    },
    "12051": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20896,
        20979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12052": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17665,
        17933
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12053": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12055": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12056": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12057": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12059": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "12060": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12061": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12062": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "12063": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3A"
    },
    "12066": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12067": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12069": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12076": {
      "op": "SHL"
    },
    "12077": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12078": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12079": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12081": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "12082": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "12085": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12086": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "12089": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12090": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12091": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 131,
      "value": "0x2F5E"
    },
    "12094": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12096": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12097": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12098": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12100": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "ADD",
      "path": "0"
    },
    "12101": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12103": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12104": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12105": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12107": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12108": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12109": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12111": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "ADD",
      "path": "0"
    },
    "12112": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "12115": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "12117": {
      "op": "SHL"
    },
    "12118": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12119": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12120": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "POP",
      "path": "0"
    },
    "12121": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17786,
        17795
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12122": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA4"
    },
    "12125": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17771,
        17796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12126": {
      "branch": 205,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17771,
        17796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12127": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F8F"
    },
    "12130": {
      "branch": 205,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12131": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12133": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12140": {
      "op": "SHL"
    },
    "12141": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12142": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12145": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12147": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12148": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "ADD",
      "path": "0"
    },
    "12149": {
      "op": "MSTORE"
    },
    "12150": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12154": {
      "op": "DUP3"
    },
    "12155": {
      "op": "ADD"
    },
    "12156": {
      "op": "MSTORE"
    },
    "12157": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "12160": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "12162": {
      "op": "SHL"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12165": {
      "op": "DUP3"
    },
    "12166": {
      "op": "ADD"
    },
    "12167": {
      "op": "MSTORE"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12170": {
      "op": "ADD"
    },
    "12171": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "12174": {
      "op": "JUMP"
    },
    "12175": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17763,
        17802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12176": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17847,
        17851
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 132,
      "value": "0x1"
    },
    "12178": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "12180": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17824,
        17832
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12181": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12183": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12184": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA1"
    },
    "12187": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12188": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12189": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12192": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17812,
        17833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12193": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12194": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12195": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12196": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12197": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12199": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12200": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12201": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12203": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12204": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12205": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12206": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "SUB",
      "path": "0"
    },
    "12207": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12208": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "ADD",
      "path": "0"
    },
    "12209": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12210": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17833
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12217": {
      "op": "SHL"
    },
    "12218": {
      "op": "SUB"
    },
    "12219": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12220": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "AND",
      "path": "0"
    },
    "12221": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12223": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12224": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12225": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12226": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12227": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12228": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12229": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12230": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12231": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12232": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12233": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12234": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12237": {
      "op": "NOT"
    },
    "12238": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "AND",
      "path": "0"
    },
    "12239": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12240": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12241": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12242": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12243": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12244": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12245": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "OR",
      "path": "0"
    },
    "12246": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12247": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12248": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17851
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12251": {
      "op": "DUP1"
    },
    "12252": {
      "op": "MLOAD"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12255": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "12258": {
      "op": "DUP4"
    },
    "12259": {
      "op": "CODECOPY"
    },
    "12260": {
      "op": "DUP2"
    },
    "12261": {
      "op": "MLOAD"
    },
    "12262": {
      "op": "SWAP2"
    },
    "12263": {
      "op": "MSTORE"
    },
    "12264": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17866,
        17925
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 133
    },
    "12265": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF6"
    },
    "12268": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12269": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17894,
        17902
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12270": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17894,
        17902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12271": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12272": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17812,
        17844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12273": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "ADD",
      "path": "0"
    },
    "12274": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4082"
    },
    "12277": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17883,
        17913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12278": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12279": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12281": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12282": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12283": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12285": {
      "op": "NOT"
    },
    "12286": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12287": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12288": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "SUB",
      "path": "0"
    },
    "12289": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "ADD",
      "path": "0"
    },
    "12290": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12291": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12292": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12293": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12294": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12295": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17883,
        17913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12296": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17866,
        17925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205F"
    },
    "12299": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17866,
        17925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12300": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17914,
        17924
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12301": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17914,
        17924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12302": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17866,
        17925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42AC"
    },
    "12305": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17866,
        17925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12306": {
      "fn": "Administrable._setPermit",
      "offset": [
        21271,
        21518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12307": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12309": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12310": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12311": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12313": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "12314": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12315": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12316": {
      "fn": "Administrable._setPermit",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "12317": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3038"
    },
    "12320": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12321": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12323": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12330": {
      "op": "SHL"
    },
    "12331": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12332": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12333": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12335": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "12336": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "12339": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12340": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "12343": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12344": {
      "fn": "Administrable._setPermit",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12345": {
      "fn": "Administrable._setPermit",
      "offset": [
        21419,
        21427
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 134
    },
    "12346": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "12348": {
      "fn": "Administrable._setPermit",
      "offset": [
        21396,
        21406
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12349": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12351": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12352": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3049"
    },
    "12355": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12356": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12357": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12360": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21388,
        21407
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12361": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12362": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12363": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12364": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12365": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12367": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12368": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12369": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12371": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12372": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12373": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12374": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SUB",
      "path": "0"
    },
    "12375": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12376": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "ADD",
      "path": "0"
    },
    "12377": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12378": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21407
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12385": {
      "op": "SHL"
    },
    "12386": {
      "op": "SUB"
    },
    "12387": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12388": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "AND",
      "path": "0"
    },
    "12389": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12391": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12392": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12393": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12394": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12395": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12396": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12397": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21416
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12398": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12399": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12400": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12402": {
      "op": "NOT"
    },
    "12403": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "AND",
      "path": "0"
    },
    "12404": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "12406": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12407": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12409": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12410": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "GT",
      "path": "0"
    },
    "12411": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12412": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3087"
    },
    "12415": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12416": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3087"
    },
    "12419": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0B"
    },
    "12422": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21388,
        21427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12423": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12424": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "MUL",
      "path": "0"
    },
    "12425": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "OR",
      "path": "0"
    },
    "12426": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12427": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12428": {
      "fn": "Administrable._setPermit",
      "offset": [
        21388,
        21427
      ],
      "op": "POP",
      "path": "0"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12431": {
      "op": "DUP1"
    },
    "12432": {
      "op": "MLOAD"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12435": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "12438": {
      "op": "DUP4"
    },
    "12439": {
      "op": "CODECOPY"
    },
    "12440": {
      "op": "DUP2"
    },
    "12441": {
      "op": "MLOAD"
    },
    "12442": {
      "op": "SWAP2"
    },
    "12443": {
      "op": "MSTORE"
    },
    "12444": {
      "fn": "Administrable._setPermit",
      "offset": [
        21470,
        21480
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 135
    },
    "12445": {
      "fn": "Administrable._setPermit",
      "offset": [
        21481,
        21488
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12446": {
      "fn": "Administrable._setPermit",
      "offset": [
        21489,
        21497
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12447": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12449": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12450": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12452": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "ADD",
      "path": "0"
    },
    "12453": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B0"
    },
    "12456": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12457": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12458": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12459": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12460": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D8"
    },
    "12463": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21459,
        21498
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12464": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12465": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12467": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12468": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12471": {
      "op": "NOT"
    },
    "12472": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12473": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12474": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SUB",
      "path": "0"
    },
    "12475": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "ADD",
      "path": "0"
    },
    "12476": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12477": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12478": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12479": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12480": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12481": {
      "fn": "Administrable._setPermit",
      "offset": [
        21459,
        21498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12482": {
      "fn": "Administrable._setPermit",
      "offset": [
        21442,
        21510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA27"
    },
    "12485": {
      "fn": "Administrable._setPermit",
      "offset": [
        21442,
        21510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12486": {
      "fn": "Administrable._setPermit",
      "offset": [
        21499,
        21509
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12487": {
      "fn": "Administrable._setPermit",
      "offset": [
        21499,
        21509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12488": {
      "fn": "Administrable._setPermit",
      "offset": [
        21442,
        21510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4309"
    },
    "12491": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21442,
        21510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12492": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12493": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        640,
        647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12495": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        649,
        656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12496": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        658,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12498": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        695,
        704
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 136
    },
    "12499": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        681,
        692
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12500": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        681,
        704
      ],
      "op": "GT",
      "path": "2"
    },
    "12501": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30DD"
    },
    "12504": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12505": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12507": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12508": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12509": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        673,
        705
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12510": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        711,
        728
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12512": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        750,
        761
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12513": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30EA"
    },
    "12516": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        740,
        749
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12517": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        739
      ],
      "op": "DUP10",
      "path": "2"
    },
    "12518": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "12521": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        731,
        749
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12522": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12523": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        761
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F4"
    },
    "12526": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        761
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12527": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12528": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        761
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "12531": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        731,
        761
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12532": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        731,
        761
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12533": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        711,
        761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12534": {
      "op": "POP"
    },
    "12535": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        767,
        784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12537": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        820,
        831
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12538": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        797,
        818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3103"
    },
    "12541": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        809,
        818
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12542": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        820,
        831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12543": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        797,
        818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F12"
    },
    "12546": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        797,
        818
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12547": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        797,
        818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12548": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310D"
    },
    "12551": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12552": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        795
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12553": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "12556": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        787,
        819
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12557": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12558": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3117"
    },
    "12561": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        831
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12562": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12563": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "12566": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        787,
        831
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12567": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        787,
        831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12568": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        767,
        831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12569": {
      "op": "POP"
    },
    "12570": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        845,
        854
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 137
    },
    "12571": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        767,
        831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12572": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        879,
        900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3125"
    },
    "12575": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        767,
        831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12576": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        845,
        854
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12577": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        879,
        900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DF8"
    },
    "12580": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        879,
        900
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12581": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        879,
        900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12582": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        867,
        901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x312F"
    },
    "12585": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        867,
        901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12586": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        867,
        875
      ],
      "op": "DUP12",
      "path": "2"
    },
    "12587": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        867,
        901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F12"
    },
    "12590": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        867,
        901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12591": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        867,
        901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12592": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12593": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "POP",
      "path": "2"
    },
    "12594": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12595": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "POP",
      "path": "2"
    },
    "12596": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12597": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "POP",
      "path": "2"
    },
    "12598": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "POP",
      "path": "2"
    },
    "12599": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        837,
        902
      ],
      "op": "POP",
      "path": "2"
    },
    "12600": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12601": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "POP",
      "path": "2"
    },
    "12602": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12603": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "POP",
      "path": "2"
    },
    "12604": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12605": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12606": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        524,
        905
      ],
      "op": "POP",
      "path": "2"
    },
    "12607": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "o",
      "offset": [
        524,
        905
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12608": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19273,
        19820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12609": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12611": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12612": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12613": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12615": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "12616": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12617": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12618": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "12619": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3166"
    },
    "12622": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12623": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12625": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12632": {
      "op": "SHL"
    },
    "12633": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12634": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12635": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12637": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "12638": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "12641": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12642": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "12645": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12646": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12647": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19440
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 138,
      "value": "0xE"
    },
    "12649": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19441,
        19449
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12650": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12652": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12653": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3176"
    },
    "12656": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12657": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12658": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12661": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19427,
        19450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12662": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12663": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12664": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12665": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12666": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12668": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12669": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12670": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12672": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12673": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12674": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12675": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SUB",
      "path": "0"
    },
    "12676": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12677": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "ADD",
      "path": "0"
    },
    "12678": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12679": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19450
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12686": {
      "op": "SHL"
    },
    "12687": {
      "op": "SUB"
    },
    "12688": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12689": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "AND",
      "path": "0"
    },
    "12690": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12692": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12693": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12694": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12695": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12696": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12697": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12698": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12699": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19427,
        19464
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12700": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19418,
        19464
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12701": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19418,
        19464
      ],
      "op": "GT",
      "path": "0"
    },
    "12702": {
      "branch": 206,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19418,
        19464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12703": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31BA"
    },
    "12706": {
      "branch": 206,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12707": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12709": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12716": {
      "op": "SHL"
    },
    "12717": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12718": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12719": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12721": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "ADD",
      "path": "0"
    },
    "12722": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "12725": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12726": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4143"
    },
    "12729": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19410,
        19471
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12730": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19410,
        19471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12731": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19481,
        19518
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 139,
      "value": "0x31C5"
    },
    "12734": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19496,
        19508
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12735": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19509,
        19514
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12736": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19515,
        19517
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12737": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19481,
        19495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C5"
    },
    "12740": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19481,
        19518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12741": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19481,
        19518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12742": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19569,
        19574
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 140
    },
    "12743": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "12745": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19542,
        19550
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12746": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12748": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12749": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D6"
    },
    "12752": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12753": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12754": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12757": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19528,
        19551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12758": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12759": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12760": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12761": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12762": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12764": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "ADD",
      "path": "0"
    },
    "12765": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12767": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12768": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12769": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12770": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SUB",
      "path": "0"
    },
    "12771": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12772": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19551
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12773": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12775": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19552,
        19564
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12782": {
      "op": "SHL"
    },
    "12783": {
      "op": "SUB"
    },
    "12784": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "AND",
      "path": "0"
    },
    "12785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12791": {
      "op": "SHL"
    },
    "12792": {
      "op": "SUB"
    },
    "12793": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "AND",
      "path": "0"
    },
    "12794": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12795": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12796": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12798": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "ADD",
      "path": "0"
    },
    "12799": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12800": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12801": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12802": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12804": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "ADD",
      "path": "0"
    },
    "12805": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12807": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12808": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12810": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12811": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12812": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12813": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3216"
    },
    "12816": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12817": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12818": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "12821": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19528,
        19574
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12822": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12823": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12824": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12825": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19528,
        19574
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12826": {
      "op": "POP"
    },
    "12827": {
      "op": "POP"
    },
    "12828": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12830": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12831": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "12833": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12834": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322C"
    },
    "12837": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12838": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19602,
        19610
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12839": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19602,
        19610
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12840": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12843": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19588,
        19611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12844": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12845": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12846": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12847": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12848": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12850": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12851": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12852": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12854": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12855": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12856": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12857": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SUB",
      "path": "0"
    },
    "12858": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12859": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "ADD",
      "path": "0"
    },
    "12860": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12861": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19611
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12868": {
      "op": "SHL"
    },
    "12869": {
      "op": "SUB"
    },
    "12870": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12871": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "AND",
      "path": "0"
    },
    "12872": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12874": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12875": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12876": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12877": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12878": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12879": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12880": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12881": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19625
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12882": {
      "branch": 207,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19630
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12883": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12884": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12885": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3266"
    },
    "12888": {
      "branch": 207,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12896": {
      "op": "SHL"
    },
    "12897": {
      "op": "SUB"
    },
    "12898": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19634,
        19660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12899": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19634,
        19660
      ],
      "op": "AND",
      "path": "0"
    },
    "12900": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19634,
        19660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12901": {
      "branch": 208,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19634,
        19660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12902": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19588,
        19660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12903": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19584,
        19728
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12904": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19584,
        19728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A0"
    },
    "12907": {
      "branch": 208,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19584,
        19728
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12908": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19716,
        19717
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 141,
      "value": "0x1"
    },
    "12910": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "12912": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19703,
        19711
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12913": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12915": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12916": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x327D"
    },
    "12919": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12920": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12921": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E45"
    },
    "12924": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19676,
        19712
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12925": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12926": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12927": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12928": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12929": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12931": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "ADD",
      "path": "0"
    },
    "12932": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12934": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12935": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12936": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12937": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SUB",
      "path": "0"
    },
    "12938": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12939": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12940": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12942": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12943": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12944": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12945": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x329A"
    },
    "12948": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12949": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12950": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F12"
    },
    "12953": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19676,
        19717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12954": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12955": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12956": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12957": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19676,
        19717
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "op": "POP"
    },
    "12960": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19584,
        19728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12963": {
      "op": "DUP1"
    },
    "12964": {
      "op": "MLOAD"
    },
    "12965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12967": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "12970": {
      "op": "DUP4"
    },
    "12971": {
      "op": "CODECOPY"
    },
    "12972": {
      "op": "DUP2"
    },
    "12973": {
      "op": "MLOAD"
    },
    "12974": {
      "op": "SWAP2"
    },
    "12975": {
      "op": "MSTORE"
    },
    "12976": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19770,
        19778
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 142
    },
    "12977": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19779,
        19791
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12978": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19792,
        19797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12979": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19798,
        19800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12980": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12982": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12983": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12985": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "ADD",
      "path": "0"
    },
    "12986": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32C6"
    },
    "12989": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "12990": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12991": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12992": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12993": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12994": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4335"
    },
    "12997": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19759,
        19801
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12998": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12999": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13001": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13002": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13005": {
      "op": "NOT"
    },
    "13006": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13007": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13008": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SUB",
      "path": "0"
    },
    "13009": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "ADD",
      "path": "0"
    },
    "13010": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13011": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13012": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13013": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13014": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13015": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19759,
        19801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13016": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19742,
        19813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2972"
    },
    "13019": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19742,
        19813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13020": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19802,
        19812
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13021": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19802,
        19812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13022": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19742,
        19813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4371"
    },
    "13025": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19742,
        19813
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13026": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13027": {
      "fn": "Shardable._putForSale",
      "offset": [
        17422,
        17427
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13028": {
      "offset": [
        8212,
        8231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32FC"
    },
    "13031": {
      "offset": [
        8225,
        8230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13032": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13630,
        13634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13034": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13035": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13686,
        13691
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13036": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13037": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13038": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13039": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "13041": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13043": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13044": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13046": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13047": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13048": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        13188,
        13215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13049": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "GT",
      "path": "2"
    },
    "13050": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13653,
        13691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13051": {
      "fn": "Shardable.isValidShard",
      "offset": [
        13573,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13052": {
      "offset": [
        8212,
        8231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13053": {
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3318"
    },
    "13056": {
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13057": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13059": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13066": {
      "op": "SHL"
    },
    "13067": {
      "offset": [
        8204,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13068": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13069": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13071": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "ADD",
      "path": "2"
    },
    "13072": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "13075": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13076": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7D"
    },
    "13079": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13080": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8204,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13081": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13083": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13084": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13085": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13087": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "13088": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13089": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13090": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "13091": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x333E"
    },
    "13094": {
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13095": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13097": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13098": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13102": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13104": {
      "op": "SHL"
    },
    "13105": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13106": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13107": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13109": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "13110": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "13113": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13114": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "13117": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13118": {
      "fn": "Shardable.isValidShard",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13119": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 143,
      "value": "0x0"
    },
    "13121": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13122": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13123": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13124": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13126": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13128": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13129": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13131": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13132": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17532
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13133": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13135": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13136": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17544
      ],
      "op": "ADD",
      "path": "2"
    },
    "13137": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17544
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13138": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13139": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17513
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13140": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335D"
    },
    "13143": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17544
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13144": {
      "fn": "Shardable._putForSale",
      "offset": [
        17514,
        17544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13145": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "13148": {
      "fn": "Shardable._putForSale",
      "jump": "i",
      "offset": [
        17485,
        17544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13149": {
      "fn": "Shardable._putForSale",
      "offset": [
        17485,
        17544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13150": {
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3367"
    },
    "13153": {
      "fn": "Shardable._putForSale",
      "offset": [
        17470,
        17481
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13154": {
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17469
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13155": {
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "13158": {
      "fn": "Shardable._putForSale",
      "jump": "i",
      "offset": [
        17460,
        17481
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13159": {
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17481
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13160": {
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17544
      ],
      "op": "GT",
      "path": "2"
    },
    "13161": {
      "branch": 237,
      "fn": "Shardable._putForSale",
      "offset": [
        17460,
        17544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13162": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3385"
    },
    "13165": {
      "branch": 237,
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13166": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13168": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13175": {
      "op": "SHL"
    },
    "13176": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13177": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13178": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13180": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "ADD",
      "path": "2"
    },
    "13181": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "13184": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13185": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4143"
    },
    "13188": {
      "fn": "Shardable._putForSale",
      "jump": "i",
      "offset": [
        17452,
        17551
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13189": {
      "fn": "Shardable._putForSale",
      "offset": [
        17452,
        17551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13190": {
      "fn": "Shardable._putForSale",
      "offset": [
        17588,
        17627
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 144,
      "value": "0x338F"
    },
    "13193": {
      "fn": "Shardable._putForSale",
      "offset": [
        17605,
        17614
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13194": {
      "fn": "Shardable._putForSale",
      "offset": [
        17615,
        17626
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13195": {
      "fn": "Shardable._putForSale",
      "offset": [
        17588,
        17604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38C3"
    },
    "13198": {
      "fn": "Shardable._putForSale",
      "jump": "i",
      "offset": [
        17588,
        17627
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13199": {
      "fn": "Shardable._putForSale",
      "offset": [
        17588,
        17627
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13200": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13201": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13202": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "POP",
      "path": "2"
    },
    "13203": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13204": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "13205": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "POP",
      "path": "2"
    },
    "13206": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "POP",
      "path": "2"
    },
    "13207": {
      "fn": "Shardable._putForSale",
      "offset": [
        17561,
        17627
      ],
      "op": "POP",
      "path": "2"
    },
    "13208": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 145,
      "value": "0x40"
    },
    "13210": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13211": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13212": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "13214": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13215": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13217": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13218": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13219": {
      "fn": "Shardable._putForSale",
      "offset": [
        17693,
        17702
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13220": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13221": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13222": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13224": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13225": {
      "fn": "Shardable._putForSale",
      "offset": [
        17729,
        17740
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13226": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13227": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13228": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13230": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13231": {
      "fn": "Shardable._putForSale",
      "offset": [
        17768,
        17780
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13238": {
      "op": "SHL"
    },
    "13239": {
      "op": "SUB"
    },
    "13240": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13241": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13242": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13243": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13245": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13246": {
      "fn": "Shardable._putForSale",
      "offset": [
        17801,
        17806
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13247": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13248": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13249": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13251": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13252": {
      "fn": "Shardable._putForSale",
      "offset": [
        17824,
        17826
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13259": {
      "op": "SHL"
    },
    "13260": {
      "op": "SUB"
    },
    "13261": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13262": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13263": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13264": {
      "fn": "Shardable._putForSale",
      "offset": [
        17658,
        17837
      ],
      "op": "POP",
      "path": "2"
    },
    "13265": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "13267": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13269": {
      "fn": "Shardable._putForSale",
      "offset": [
        17649,
        17654
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13270": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13271": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13272": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13274": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "ADD",
      "path": "2"
    },
    "13275": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13276": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13277": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13278": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13280": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "ADD",
      "path": "2"
    },
    "13281": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13283": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17655
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13284": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13286": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13287": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13288": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13289": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13290": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13292": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13293": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13294": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13296": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13297": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13298": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13299": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13300": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13302": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13303": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13304": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13306": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13307": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13308": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13309": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13310": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13312": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13313": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13315": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "13318": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "EXP",
      "path": "2"
    },
    "13319": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13320": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13321": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13328": {
      "op": "SHL"
    },
    "13329": {
      "op": "SUB"
    },
    "13330": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MUL",
      "path": "2"
    },
    "13331": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "NOT",
      "path": "2"
    },
    "13332": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13333": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13334": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13341": {
      "op": "SHL"
    },
    "13342": {
      "op": "SUB"
    },
    "13343": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13344": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MUL",
      "path": "2"
    },
    "13345": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "OR",
      "path": "2"
    },
    "13346": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13347": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13348": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "POP",
      "path": "2"
    },
    "13349": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13351": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13352": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13353": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13354": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13355": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "13357": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13358": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13359": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "13361": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13362": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13363": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13364": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13365": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13367": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "ADD",
      "path": "2"
    },
    "13368": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13370": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "13373": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "EXP",
      "path": "2"
    },
    "13374": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13375": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13376": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13383": {
      "op": "SHL"
    },
    "13384": {
      "op": "SUB"
    },
    "13385": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MUL",
      "path": "2"
    },
    "13386": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "NOT",
      "path": "2"
    },
    "13387": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13388": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13389": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13396": {
      "op": "SHL"
    },
    "13397": {
      "op": "SUB"
    },
    "13398": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "AND",
      "path": "2"
    },
    "13399": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "MUL",
      "path": "2"
    },
    "13400": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "OR",
      "path": "2"
    },
    "13401": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13402": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13403": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "POP",
      "path": "2"
    },
    "13404": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13405": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "POP",
      "path": "2"
    },
    "13406": {
      "fn": "Shardable._putForSale",
      "offset": [
        17637,
        17837
      ],
      "op": "POP",
      "path": "2"
    },
    "13407": {
      "fn": "Shardable._putForSale",
      "offset": [
        17870,
        17874
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 146,
      "value": "0x1"
    },
    "13409": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17860
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13411": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13413": {
      "fn": "Shardable._putForSale",
      "offset": [
        17861,
        17866
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13414": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13415": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13416": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13418": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "ADD",
      "path": "2"
    },
    "13419": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13420": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13421": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13422": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13424": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "ADD",
      "path": "2"
    },
    "13425": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13427": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13428": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13430": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "13433": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "EXP",
      "path": "2"
    },
    "13434": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13435": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13436": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13437": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13439": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "MUL",
      "path": "2"
    },
    "13440": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "NOT",
      "path": "2"
    },
    "13441": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "AND",
      "path": "2"
    },
    "13442": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13443": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13444": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13445": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13446": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "MUL",
      "path": "2"
    },
    "13447": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "OR",
      "path": "2"
    },
    "13448": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13449": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13450": {
      "fn": "Shardable._putForSale",
      "offset": [
        17847,
        17874
      ],
      "op": "POP",
      "path": "2"
    },
    "13451": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 147,
      "value": "0x4C4DCD7B4186FE1C900D89BC3C911766F63CF9C3570750481F0D89BFBCB75285"
    },
    "13484": {
      "fn": "Shardable._putForSale",
      "offset": [
        17900,
        17905
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13485": {
      "fn": "Shardable._putForSale",
      "offset": [
        17906,
        17915
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13486": {
      "fn": "Shardable._putForSale",
      "offset": [
        17916,
        17927
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13487": {
      "fn": "Shardable._putForSale",
      "offset": [
        17928,
        17940
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13488": {
      "fn": "Shardable._putForSale",
      "offset": [
        17941,
        17946
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13489": {
      "fn": "Shardable._putForSale",
      "offset": [
        17947,
        17949
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13490": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13492": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13493": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F5"
    },
    "13496": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13497": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13498": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13499": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13500": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13501": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13502": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13503": {
      "op": "SWAP6"
    },
    "13504": {
      "op": "DUP7"
    },
    "13505": {
      "op": "MSTORE"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13508": {
      "op": "DUP7"
    },
    "13509": {
      "op": "ADD"
    },
    "13510": {
      "op": "SWAP5"
    },
    "13511": {
      "op": "SWAP1"
    },
    "13512": {
      "op": "SWAP5"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13516": {
      "op": "DUP6"
    },
    "13517": {
      "op": "ADD"
    },
    "13518": {
      "op": "SWAP3"
    },
    "13519": {
      "op": "SWAP1"
    },
    "13520": {
      "op": "SWAP3"
    },
    "13521": {
      "op": "MSTORE"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13528": {
      "op": "SHL"
    },
    "13529": {
      "op": "SUB"
    },
    "13530": {
      "op": "SWAP1"
    },
    "13531": {
      "op": "DUP2"
    },
    "13532": {
      "op": "AND"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13535": {
      "op": "DUP6"
    },
    "13536": {
      "op": "ADD"
    },
    "13537": {
      "op": "MSTORE"
    },
    "13538": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13540": {
      "op": "DUP5"
    },
    "13541": {
      "op": "ADD"
    },
    "13542": {
      "op": "SWAP2"
    },
    "13543": {
      "op": "SWAP1"
    },
    "13544": {
      "op": "SWAP2"
    },
    "13545": {
      "op": "MSTORE"
    },
    "13546": {
      "op": "AND"
    },
    "13547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13549": {
      "op": "DUP3"
    },
    "13550": {
      "op": "ADD"
    },
    "13551": {
      "op": "MSTORE"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13554": {
      "op": "ADD"
    },
    "13555": {
      "op": "SWAP1"
    },
    "13556": {
      "op": "JUMP"
    },
    "13557": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13558": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13560": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13561": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13562": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13563": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SUB",
      "path": "2"
    },
    "13564": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13565": {
      "fn": "Shardable._putForSale",
      "offset": [
        17889,
        17950
      ],
      "op": "LOG1",
      "path": "2"
    },
    "13566": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13567": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13568": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13569": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13570": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13571": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13572": {
      "fn": "Shardable._putForSale",
      "offset": [
        17273,
        17957
      ],
      "op": "POP",
      "path": "2"
    },
    "13573": {
      "fn": "Shardable._putForSale",
      "jump": "o",
      "offset": [
        17273,
        17957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13574": {
      "fn": "Idea._liquidize",
      "offset": [
        5801,
        5911
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13575": {
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13577": {
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13578": {
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13579": {
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13581": {
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8402
      ],
      "op": "AND",
      "path": "2"
    },
    "13582": {
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13583": {
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13584": {
      "branch": 238,
      "fn": "Idea._liquidize",
      "offset": [
        8396,
        8410
      ],
      "op": "EQ",
      "path": "2"
    },
    "13585": {
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x352C"
    },
    "13588": {
      "branch": 238,
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13589": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13591": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13598": {
      "op": "SHL"
    },
    "13599": {
      "offset": [
        8388,
        8417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13600": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13601": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13603": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "ADD",
      "path": "2"
    },
    "13604": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "13607": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13608": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E99"
    },
    "13611": {
      "fn": "Idea._liquidize",
      "jump": "i",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13612": {
      "fn": "Idea._liquidize",
      "offset": [
        8388,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13613": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5869
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 148,
      "value": "0x1"
    },
    "13615": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5877
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13616": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5877
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13619": {
      "op": "NOT"
    },
    "13620": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5877
      ],
      "op": "AND",
      "path": "1"
    },
    "13621": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13622": {
      "fn": "Idea._liquidize",
      "offset": [
        5863,
        5877
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13623": {
      "fn": "Idea._liquidize",
      "jump": "o",
      "offset": [
        5801,
        5911
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13624": {
      "fn": "Idea._transferEther",
      "offset": [
        5558,
        5719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13625": {
      "fn": "Idea._transferEther",
      "offset": [
        5629,
        5641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13627": {
      "fn": "Idea._transferEther",
      "offset": [
        5655,
        5657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13634": {
      "op": "SHL"
    },
    "13635": {
      "op": "SUB"
    },
    "13636": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5663
      ],
      "op": "AND",
      "path": "1"
    },
    "13637": {
      "fn": "Idea._transferEther",
      "offset": [
        5670,
        5675
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13638": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13640": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13641": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13643": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13645": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13646": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13647": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13648": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "SUB",
      "path": "1"
    },
    "13649": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13650": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP6",
      "path": "1"
    },
    "13651": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP8",
      "path": "1"
    },
    "13652": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "GAS",
      "path": "1"
    },
    "13653": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "CALL",
      "path": "1"
    },
    "13654": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13655": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13656": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13657": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13658": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13659": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13660": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13662": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13663": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "EQ",
      "path": "1"
    },
    "13664": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3585"
    },
    "13667": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13668": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13670": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13671": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13672": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13673": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "13675": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "NOT",
      "path": "1"
    },
    "13676": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "13678": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13679": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "ADD",
      "path": "1"
    },
    "13680": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "AND",
      "path": "1"
    },
    "13681": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13682": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "ADD",
      "path": "1"
    },
    "13683": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13685": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13686": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13687": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13688": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13689": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13690": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13692": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13694": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13695": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "ADD",
      "path": "1"
    },
    "13696": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "13697": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x358A"
    },
    "13700": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13701": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13702": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "13704": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13705": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13706": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13707": {
      "fn": "Idea._transferEther",
      "offset": [
        5647,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13708": {
      "fn": "Idea._transferEther",
      "offset": [
        5628,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13709": {
      "fn": "Idea._transferEther",
      "offset": [
        5628,
        5680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13710": {
      "fn": "Idea._transferEther",
      "offset": [
        5628,
        5680
      ],
      "op": "POP",
      "path": "1"
    },
    "13711": {
      "branch": 221,
      "fn": "Idea._transferEther",
      "offset": [
        5698,
        5705
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 149
    },
    "13712": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xACF"
    },
    "13715": {
      "branch": 221,
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13716": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13718": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13725": {
      "op": "SHL"
    },
    "13726": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13727": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13730": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13732": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13733": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "ADD",
      "path": "1"
    },
    "13734": {
      "op": "MSTORE"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13739": {
      "op": "DUP3"
    },
    "13740": {
      "op": "ADD"
    },
    "13741": {
      "op": "MSTORE"
    },
    "13742": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "13747": {
      "op": "SHL"
    },
    "13748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13750": {
      "op": "DUP3"
    },
    "13751": {
      "op": "ADD"
    },
    "13752": {
      "op": "MSTORE"
    },
    "13753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13755": {
      "op": "ADD"
    },
    "13756": {
      "fn": "Idea._transferEther",
      "offset": [
        5690,
        5712
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "13759": {
      "op": "JUMP"
    },
    "13760": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6637,
        6815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13767": {
      "op": "SHL"
    },
    "13768": {
      "op": "SUB"
    },
    "13769": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 150
    },
    "13770": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "AND",
      "path": "1"
    },
    "13771": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13773": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13774": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13775": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13776": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "13778": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13780": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13781": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13783": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13784": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13785": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13786": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13787": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6756,
        6761
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13788": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6756,
        6761
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13789": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13790": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35E8"
    },
    "13793": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13794": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6756,
        6761
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13795": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6756,
        6761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13796": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F12"
    },
    "13799": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        6732,
        6761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13800": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13801": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13802": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13803": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6732,
        6761
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13804": {
      "op": "POP"
    },
    "13805": {
      "op": "POP"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13812": {
      "op": "SHL"
    },
    "13813": {
      "op": "SUB"
    },
    "13814": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 151
    },
    "13815": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "AND",
      "path": "1"
    },
    "13816": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13818": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13819": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13820": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13821": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6785
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "13823": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13825": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13826": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13828": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13829": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13830": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13831": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13832": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6803,
        6808
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13833": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6803,
        6808
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13834": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13835": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3615"
    },
    "13838": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13839": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6803,
        6808
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13840": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6803,
        6808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13841": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F12"
    },
    "13844": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        6771,
        6808
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13845": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13846": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13847": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13848": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        6771,
        6808
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13849": {
      "op": "POP"
    },
    "13850": {
      "op": "POP"
    },
    "13851": {
      "op": "POP"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "fn": "Idea._processTokenTransfer",
      "jump": "o",
      "offset": [
        6637,
        6815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13854": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7386,
        7617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13855": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7476,
        7502
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 152,
      "value": "0x3627"
    },
    "13858": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7489,
        7501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13859": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7476,
        7488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137E"
    },
    "13862": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        7476,
        7502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13863": {
      "branch": 222,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7476,
        7502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13864": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3643"
    },
    "13867": {
      "branch": 222,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13868": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13870": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13877": {
      "op": "SHL"
    },
    "13878": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13879": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13880": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13882": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "ADD",
      "path": "1"
    },
    "13883": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "13886": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13887": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EB5"
    },
    "13890": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        7468,
        7509
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13891": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7468,
        7509
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13898": {
      "op": "SHL"
    },
    "13899": {
      "op": "SUB"
    },
    "13900": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 153
    },
    "13901": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "AND",
      "path": "1"
    },
    "13902": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13904": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13905": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13906": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13907": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "13909": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13911": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13912": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13914": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13915": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13916": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7547
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13917": {
      "branch": 223,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7527,
        7552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13918": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x368E"
    },
    "13921": {
      "branch": 223,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13922": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13924": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13931": {
      "op": "SHL"
    },
    "13932": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13933": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13936": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13938": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13939": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "ADD",
      "path": "1"
    },
    "13940": {
      "op": "MSTORE"
    },
    "13941": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13945": {
      "op": "DUP3"
    },
    "13946": {
      "op": "ADD"
    },
    "13947": {
      "op": "MSTORE"
    },
    "13948": {
      "op": "PUSH2",
      "value": "0x272D"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "13953": {
      "op": "SHL"
    },
    "13954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13956": {
      "op": "DUP3"
    },
    "13957": {
      "op": "ADD"
    },
    "13958": {
      "op": "MSTORE"
    },
    "13959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13961": {
      "op": "ADD"
    },
    "13962": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "13965": {
      "op": "JUMP"
    },
    "13966": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7519,
        7559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13973": {
      "op": "SHL"
    },
    "13974": {
      "op": "SUB"
    },
    "13975": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "AND",
      "path": "1",
      "statement": 154
    },
    "13976": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7605,
        7610
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13978": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13979": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13980": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13981": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7588
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "13983": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13985": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13986": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13988": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13989": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7602
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13990": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7610
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13991": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7610
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13992": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13994": {
      "op": "NOT"
    },
    "13995": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7610
      ],
      "op": "AND",
      "path": "1"
    },
    "13996": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7610
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13997": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        7569,
        7610
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13998": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "o",
      "offset": [
        7386,
        7617
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13999": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7009,
        7188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14000": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7098,
        7124
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 155,
      "value": "0x36B8"
    },
    "14003": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7111,
        7123
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14004": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137E"
    },
    "14007": {
      "fn": "Idea._registerTokenAddress",
      "jump": "i",
      "offset": [
        7098,
        7124
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14008": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7098,
        7124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14009": {
      "branch": 224,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7097,
        7124
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "14010": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36EA"
    },
    "14013": {
      "branch": 224,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14014": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14016": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14023": {
      "op": "SHL"
    },
    "14024": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14025": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14028": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14030": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14031": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "ADD",
      "path": "1"
    },
    "14032": {
      "op": "MSTORE"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14037": {
      "op": "DUP3"
    },
    "14038": {
      "op": "ADD"
    },
    "14039": {
      "op": "MSTORE"
    },
    "14040": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14045": {
      "op": "SHL"
    },
    "14046": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14048": {
      "op": "DUP3"
    },
    "14049": {
      "op": "ADD"
    },
    "14050": {
      "op": "MSTORE"
    },
    "14051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14053": {
      "op": "ADD"
    },
    "14054": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "14057": {
      "op": "JUMP"
    },
    "14058": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7089,
        7131
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14065": {
      "op": "SHL"
    },
    "14066": {
      "op": "SUB"
    },
    "14067": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "AND",
      "path": "1",
      "statement": 156
    },
    "14068": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14070": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14071": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14072": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14073": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "14075": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14077": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14078": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14080": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14081": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7174
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14082": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14083": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14084": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14086": {
      "op": "NOT"
    },
    "14087": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "AND",
      "path": "1"
    },
    "14088": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7177,
        7181
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "14090": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "OR",
      "path": "1"
    },
    "14091": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14092": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        7141,
        7181
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14093": {
      "fn": "Idea._registerTokenAddress",
      "jump": "o",
      "offset": [
        7009,
        7188
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14094": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14095": {
      "fn": "addFractions",
      "offset": [
        2107,
        2114
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14097": {
      "fn": "addFractions",
      "offset": [
        2107,
        2114
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14098": {
      "fn": "addFractions",
      "offset": [
        2144,
        2169
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 157,
      "value": "0x371B"
    },
    "14101": {
      "fn": "addFractions",
      "offset": [
        2157,
        2169
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14102": {
      "fn": "addFractions",
      "offset": [
        2144,
        2154
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14103": {
      "fn": "addFractions",
      "offset": [
        2144,
        2169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14106": {
      "fn": "addFractions",
      "jump": "i",
      "offset": [
        2144,
        2169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14107": {
      "fn": "addFractions",
      "offset": [
        2144,
        2169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14108": {
      "fn": "addFractions",
      "offset": [
        2131,
        2169
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14109": {
      "op": "POP"
    },
    "14110": {
      "fn": "addFractions",
      "offset": [
        2188,
        2213
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 158,
      "value": "0x3727"
    },
    "14113": {
      "fn": "addFractions",
      "offset": [
        2201,
        2213
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14114": {
      "fn": "addFractions",
      "offset": [
        2188,
        2198
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14115": {
      "fn": "addFractions",
      "offset": [
        2188,
        2213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14118": {
      "fn": "addFractions",
      "jump": "i",
      "offset": [
        2188,
        2213
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14119": {
      "fn": "addFractions",
      "offset": [
        2188,
        2213
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14120": {
      "fn": "addFractions",
      "offset": [
        2175,
        2213
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14121": {
      "op": "POP"
    },
    "14122": {
      "fn": "addFractions",
      "offset": [
        2227,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 159,
      "value": "0x3733"
    },
    "14125": {
      "fn": "addFractions",
      "offset": [
        2175,
        2213
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14126": {
      "fn": "addFractions",
      "offset": [
        2227,
        2237
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14127": {
      "fn": "addFractions",
      "offset": [
        2227,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DF8"
    },
    "14130": {
      "fn": "addFractions",
      "jump": "i",
      "offset": [
        2227,
        2248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14131": {
      "fn": "addFractions",
      "offset": [
        2227,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14132": {
      "fn": "addFractions",
      "offset": [
        2249,
        2274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x373D"
    },
    "14135": {
      "fn": "addFractions",
      "offset": [
        2262,
        2274
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14136": {
      "fn": "addFractions",
      "offset": [
        2249,
        2261
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14137": {
      "fn": "addFractions",
      "offset": [
        2249,
        2274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14140": {
      "fn": "addFractions",
      "jump": "i",
      "offset": [
        2249,
        2274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14141": {
      "fn": "addFractions",
      "offset": [
        2249,
        2274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14142": {
      "fn": "addFractions",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14143": {
      "fn": "addFractions",
      "offset": [
        2219,
        2275
      ],
      "op": "POP",
      "path": "2"
    },
    "14144": {
      "fn": "addFractions",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14145": {
      "fn": "addFractions",
      "offset": [
        2219,
        2275
      ],
      "op": "POP",
      "path": "2"
    },
    "14146": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14147": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "POP",
      "path": "2"
    },
    "14148": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14149": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14150": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "POP",
      "path": "2"
    },
    "14151": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "POP",
      "path": "2"
    },
    "14152": {
      "fn": "addFractions",
      "offset": [
        1986,
        2278
      ],
      "op": "POP",
      "path": "2"
    },
    "14153": {
      "fn": "addFractions",
      "jump": "o",
      "offset": [
        1986,
        2278
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14154": {
      "fn": "Shardable._pushShard",
      "offset": [
        18317,
        19067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14155": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14157": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14158": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "14171": {
      "op": "NOT"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14174": {
      "op": "DUP5"
    },
    "14175": {
      "op": "SWAP1"
    },
    "14176": {
      "op": "SHL"
    },
    "14177": {
      "op": "AND"
    },
    "14178": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14180": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14181": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "ADD",
      "path": "2"
    },
    "14182": {
      "op": "MSTORE"
    },
    "14183": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "14185": {
      "op": "DUP2"
    },
    "14186": {
      "op": "ADD"
    },
    "14187": {
      "op": "DUP3"
    },
    "14188": {
      "op": "SWAP1"
    },
    "14189": {
      "op": "MSTORE"
    },
    "14190": {
      "fn": "Shardable._pushShard",
      "offset": [
        18480,
        18493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14192": {
      "fn": "Shardable._pushShard",
      "offset": [
        18480,
        18493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14193": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "14195": {
      "op": "ADD"
    },
    "14196": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14198": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14199": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14200": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14201": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14202": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "SUB",
      "path": "2"
    },
    "14203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14205": {
      "op": "NOT"
    },
    "14206": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "ADD",
      "path": "2"
    },
    "14207": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14208": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14209": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14210": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14211": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14212": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14213": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14214": {
      "fn": "Shardable._pushShard",
      "offset": [
        18506,
        18543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14216": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14217": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14218": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "ADD",
      "path": "2"
    },
    "14219": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14226": {
      "op": "SHL"
    },
    "14227": {
      "op": "SUB"
    },
    "14228": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 160
    },
    "14229": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14230": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "AND",
      "path": "2"
    },
    "14231": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14233": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14234": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14235": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14236": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14238": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14239": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14240": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14241": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14242": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14243": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18573
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14244": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18581
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14245": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14246": {
      "fn": "Shardable._pushShard",
      "offset": [
        18554,
        18581
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14247": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 161
    },
    "14248": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14249": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14250": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "14252": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14253": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14254": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14255": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14256": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18618
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14259": {
      "op": "NOT"
    },
    "14260": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14261": {
      "fn": "Shardable._pushShard",
      "offset": [
        18591,
        18638
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14262": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 162,
      "value": "0x80"
    },
    "14264": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14265": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14266": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14267": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14268": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14269": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14270": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14271": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14272": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14273": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14274": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14275": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14276": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14277": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14278": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14279": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14280": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14281": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14282": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14283": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "14285": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14286": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14287": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14288": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP14",
      "path": "2"
    },
    "14289": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14290": {
      "fn": "Shardable._pushShard",
      "offset": [
        18746,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14291": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14292": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14293": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14294": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "14296": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14297": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14298": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14299": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14300": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14301": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14302": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        18743
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14303": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "14304": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14305": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14306": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14307": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14308": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14309": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14311": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14312": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14313": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14314": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14315": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14316": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14317": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "DUP11",
      "path": "2"
    },
    "14318": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14319": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14320": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14327": {
      "op": "SHL"
    },
    "14328": {
      "op": "SUB"
    },
    "14329": {
      "op": "NOT"
    },
    "14330": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "AND",
      "path": "2"
    },
    "14331": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14332": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14333": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14334": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "AND",
      "path": "2"
    },
    "14335": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14336": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14337": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14338": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "OR",
      "path": "2"
    },
    "14339": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14340": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14341": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14342": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14343": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14344": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14345": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14346": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14347": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "14348": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14349": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14350": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14351": {
      "fn": "Shardable._pushShard",
      "offset": [
        18725,
        19009
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14352": {
      "fn": "Shardable._pushShard",
      "offset": [
        19024,
        19059
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 163
    },
    "14353": {
      "fn": "Shardable._pushShard",
      "offset": [
        19024,
        19059
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14354": {
      "op": "DUP3"
    },
    "14355": {
      "op": "DUP2"
    },
    "14356": {
      "op": "MSTORE"
    },
    "14357": {
      "op": "SWAP3"
    },
    "14358": {
      "op": "DUP4"
    },
    "14359": {
      "op": "ADD"
    },
    "14360": {
      "op": "SWAP5"
    },
    "14361": {
      "op": "SWAP1"
    },
    "14362": {
      "op": "SWAP5"
    },
    "14363": {
      "op": "MSTORE"
    },
    "14364": {
      "op": "SWAP2"
    },
    "14365": {
      "op": "DUP2"
    },
    "14366": {
      "op": "ADD"
    },
    "14367": {
      "op": "DUP6"
    },
    "14368": {
      "op": "SWAP1"
    },
    "14369": {
      "op": "MSTORE"
    },
    "14370": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14371": {
      "fn": "Shardable._pushShard",
      "offset": [
        18496,
        18544
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14372": {
      "op": "POP"
    },
    "14373": {
      "fn": "Shardable._pushShard",
      "offset": [
        19024,
        19059
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD"
    },
    "14406": {
      "fn": "Shardable._pushShard",
      "offset": [
        19024,
        19059
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14407": {
      "op": "ADD"
    },
    "14408": {
      "fn": "Shardable._pushShard",
      "offset": [
        19024,
        19059
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11FB"
    },
    "14411": {
      "op": "JUMP"
    },
    "14412": {
      "fn": "Shardable._expireShard",
      "offset": [
        19269,
        19453
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14413": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 164,
      "value": "0x0"
    },
    "14415": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14416": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14417": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14418": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "14420": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14422": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14423": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14424": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14425": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14427": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14428": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14429": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14430": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19378
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14431": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19396
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14432": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14433": {
      "fn": "Shardable._expireShard",
      "offset": [
        19351,
        19396
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14434": {
      "fn": "Shardable._expireShard",
      "offset": [
        19411,
        19446
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 165
    },
    "14435": {
      "fn": "Shardable._expireShard",
      "offset": [
        19411,
        19446
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14436": {
      "op": "DUP5"
    },
    "14437": {
      "op": "DUP2"
    },
    "14438": {
      "op": "MSTORE"
    },
    "14439": {
      "op": "SWAP1"
    },
    "14440": {
      "op": "DUP2"
    },
    "14441": {
      "op": "ADD"
    },
    "14442": {
      "op": "DUP4"
    },
    "14443": {
      "op": "SWAP1"
    },
    "14444": {
      "op": "MSTORE"
    },
    "14445": {
      "fn": "Shardable._expireShard",
      "offset": [
        19411,
        19446
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F"
    },
    "14478": {
      "fn": "Shardable._expireShard",
      "offset": [
        19411,
        19446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14479": {
      "op": "ADD"
    },
    "14480": {
      "fn": "Shardable._expireShard",
      "offset": [
        19411,
        19446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x205F"
    },
    "14483": {
      "op": "JUMP"
    },
    "14484": {
      "fn": "subtractFractions",
      "offset": [
        2580,
        2876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14485": {
      "fn": "subtractFractions",
      "offset": [
        2706,
        2713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14487": {
      "fn": "subtractFractions",
      "offset": [
        2706,
        2713
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14488": {
      "fn": "subtractFractions",
      "offset": [
        2742,
        2767
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 166,
      "value": "0x38A1"
    },
    "14491": {
      "fn": "subtractFractions",
      "offset": [
        2755,
        2767
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14492": {
      "fn": "subtractFractions",
      "offset": [
        2742,
        2752
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14493": {
      "fn": "subtractFractions",
      "offset": [
        2742,
        2767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14496": {
      "fn": "subtractFractions",
      "jump": "i",
      "offset": [
        2742,
        2767
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14497": {
      "fn": "subtractFractions",
      "offset": [
        2742,
        2767
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14498": {
      "fn": "subtractFractions",
      "offset": [
        2729,
        2767
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14499": {
      "op": "POP"
    },
    "14500": {
      "fn": "subtractFractions",
      "offset": [
        2786,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 167,
      "value": "0x38AD"
    },
    "14503": {
      "fn": "subtractFractions",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14504": {
      "fn": "subtractFractions",
      "offset": [
        2786,
        2796
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14505": {
      "fn": "subtractFractions",
      "offset": [
        2786,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14508": {
      "fn": "subtractFractions",
      "jump": "i",
      "offset": [
        2786,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14509": {
      "fn": "subtractFractions",
      "offset": [
        2786,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14510": {
      "fn": "subtractFractions",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14511": {
      "op": "POP"
    },
    "14512": {
      "fn": "subtractFractions",
      "offset": [
        2825,
        2846
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 168,
      "value": "0x38B9"
    },
    "14515": {
      "fn": "subtractFractions",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14516": {
      "fn": "subtractFractions",
      "offset": [
        2825,
        2835
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14517": {
      "fn": "subtractFractions",
      "offset": [
        2825,
        2846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F12"
    },
    "14520": {
      "fn": "subtractFractions",
      "jump": "i",
      "offset": [
        2825,
        2846
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14521": {
      "fn": "subtractFractions",
      "offset": [
        2825,
        2846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14522": {
      "fn": "subtractFractions",
      "offset": [
        2847,
        2872
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x373D"
    },
    "14525": {
      "fn": "subtractFractions",
      "offset": [
        2860,
        2872
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14526": {
      "fn": "subtractFractions",
      "offset": [
        2847,
        2859
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14527": {
      "fn": "subtractFractions",
      "offset": [
        2847,
        2872
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED1"
    },
    "14530": {
      "fn": "subtractFractions",
      "jump": "i",
      "offset": [
        2847,
        2872
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14531": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14532": {
      "fn": "simplifyFraction",
      "offset": [
        1450,
        1457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14534": {
      "fn": "simplifyFraction",
      "offset": [
        1459,
        1466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14535": {
      "fn": "simplifyFraction",
      "offset": [
        1474,
        1499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14537": {
      "fn": "simplifyFraction",
      "offset": [
        1502,
        1545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38D2"
    },
    "14540": {
      "fn": "simplifyFraction",
      "offset": [
        1523,
        1532
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14541": {
      "fn": "simplifyFraction",
      "offset": [
        1533,
        1544
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14542": {
      "fn": "simplifyFraction",
      "offset": [
        1502,
        1522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x394F"
    },
    "14545": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1502,
        1545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14546": {
      "fn": "simplifyFraction",
      "offset": [
        1502,
        1545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14547": {
      "fn": "simplifyFraction",
      "offset": [
        1474,
        1545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14548": {
      "op": "POP"
    },
    "14549": {
      "fn": "simplifyFraction",
      "offset": [
        1616,
        1645
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 169,
      "value": "0x38DE"
    },
    "14552": {
      "fn": "simplifyFraction",
      "offset": [
        1474,
        1545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14553": {
      "fn": "simplifyFraction",
      "offset": [
        1616,
        1627
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14554": {
      "fn": "simplifyFraction",
      "offset": [
        1616,
        1645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14557": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1616,
        1645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14558": {
      "fn": "simplifyFraction",
      "offset": [
        1616,
        1645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14559": {
      "fn": "simplifyFraction",
      "offset": [
        1586,
        1613
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38E8"
    },
    "14562": {
      "fn": "simplifyFraction",
      "offset": [
        1596,
        1613
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14563": {
      "fn": "simplifyFraction",
      "offset": [
        1586,
        1595
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14564": {
      "fn": "simplifyFraction",
      "offset": [
        1586,
        1613
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14567": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1586,
        1613
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14568": {
      "fn": "simplifyFraction",
      "offset": [
        1586,
        1613
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14569": {
      "fn": "simplifyFraction",
      "offset": [
        1585,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F2"
    },
    "14572": {
      "fn": "simplifyFraction",
      "offset": [
        1585,
        1646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14573": {
      "fn": "simplifyFraction",
      "offset": [
        1585,
        1646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14574": {
      "fn": "simplifyFraction",
      "offset": [
        1585,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14577": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1585,
        1646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14578": {
      "fn": "simplifyFraction",
      "offset": [
        1585,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14579": {
      "fn": "simplifyFraction",
      "offset": [
        1559,
        1580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38FC"
    },
    "14582": {
      "fn": "simplifyFraction",
      "offset": [
        1569,
        1580
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14583": {
      "fn": "simplifyFraction",
      "offset": [
        1559,
        1568
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14584": {
      "fn": "simplifyFraction",
      "offset": [
        1559,
        1580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14587": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1559,
        1580
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14588": {
      "fn": "simplifyFraction",
      "offset": [
        1559,
        1580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14589": {
      "fn": "simplifyFraction",
      "offset": [
        1559,
        1647
      ],
      "op": "EQ",
      "path": "2"
    },
    "14590": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x392F"
    },
    "14593": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14594": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14596": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14603": {
      "op": "SHL"
    },
    "14604": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14605": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14608": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14610": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14611": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "ADD",
      "path": "2"
    },
    "14612": {
      "op": "MSTORE"
    },
    "14613": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14617": {
      "op": "DUP3"
    },
    "14618": {
      "op": "ADD"
    },
    "14619": {
      "op": "MSTORE"
    },
    "14620": {
      "op": "PUSH3",
      "value": "0x159355"
    },
    "14624": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "14626": {
      "op": "SHL"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14629": {
      "op": "DUP3"
    },
    "14630": {
      "op": "ADD"
    },
    "14631": {
      "op": "MSTORE"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14634": {
      "op": "ADD"
    },
    "14635": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "14638": {
      "op": "JUMP"
    },
    "14639": {
      "fn": "simplifyFraction",
      "offset": [
        1551,
        1654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14640": {
      "fn": "simplifyFraction",
      "offset": [
        1668,
        1695
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 170,
      "value": "0x3939"
    },
    "14643": {
      "fn": "simplifyFraction",
      "offset": [
        1678,
        1695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14644": {
      "fn": "simplifyFraction",
      "offset": [
        1668,
        1677
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14645": {
      "fn": "simplifyFraction",
      "offset": [
        1668,
        1695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14648": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1668,
        1695
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14649": {
      "fn": "simplifyFraction",
      "offset": [
        1668,
        1695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14650": {
      "fn": "simplifyFraction",
      "offset": [
        1696,
        1725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3943"
    },
    "14653": {
      "fn": "simplifyFraction",
      "offset": [
        1708,
        1725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14654": {
      "fn": "simplifyFraction",
      "offset": [
        1696,
        1707
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14655": {
      "fn": "simplifyFraction",
      "offset": [
        1696,
        1725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EFE"
    },
    "14658": {
      "fn": "simplifyFraction",
      "jump": "i",
      "offset": [
        1696,
        1725
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14659": {
      "fn": "simplifyFraction",
      "offset": [
        1696,
        1725
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14660": {
      "fn": "simplifyFraction",
      "offset": [
        1660,
        1726
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14661": {
      "fn": "simplifyFraction",
      "offset": [
        1660,
        1726
      ],
      "op": "POP",
      "path": "2"
    },
    "14662": {
      "fn": "simplifyFraction",
      "offset": [
        1660,
        1726
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14663": {
      "fn": "simplifyFraction",
      "offset": [
        1660,
        1726
      ],
      "op": "POP",
      "path": "2"
    },
    "14664": {
      "fn": "simplifyFraction",
      "offset": [
        1660,
        1726
      ],
      "op": "POP",
      "path": "2"
    },
    "14665": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14666": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "POP",
      "path": "2"
    },
    "14667": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14668": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14669": {
      "fn": "simplifyFraction",
      "offset": [
        1371,
        1729
      ],
      "op": "POP",
      "path": "2"
    },
    "14670": {
      "fn": "simplifyFraction",
      "jump": "o",
      "offset": [
        1371,
        1729
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14671": {
      "fn": "getCommonDenominator",
      "offset": [
        1029,
        1187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14672": {
      "fn": "getCommonDenominator",
      "offset": [
        1094,
        1101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14674": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14675": {
      "fn": "getCommonDenominator",
      "offset": [
        1120,
        1125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14676": {
      "fn": "getCommonDenominator",
      "offset": [
        1120,
        1125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14677": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396D"
    },
    "14680": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14681": {
      "fn": "getCommonDenominator",
      "offset": [
        1147,
        1148
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 171
    },
    "14682": {
      "fn": "getCommonDenominator",
      "offset": [
        1150,
        1155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3963"
    },
    "14685": {
      "fn": "getCommonDenominator",
      "offset": [
        1147,
        1148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14686": {
      "fn": "getCommonDenominator",
      "offset": [
        1150,
        1151
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14687": {
      "fn": "getCommonDenominator",
      "offset": [
        1150,
        1155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x439D"
    },
    "14690": {
      "fn": "getCommonDenominator",
      "jump": "i",
      "offset": [
        1150,
        1155
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14691": {
      "fn": "getCommonDenominator",
      "offset": [
        1150,
        1155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14692": {
      "fn": "getCommonDenominator",
      "offset": [
        1137,
        1156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14693": {
      "fn": "getCommonDenominator",
      "offset": [
        1137,
        1156
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14694": {
      "op": "POP"
    },
    "14695": {
      "fn": "getCommonDenominator",
      "offset": [
        1137,
        1156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14696": {
      "op": "POP"
    },
    "14697": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3952"
    },
    "14700": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14701": {
      "fn": "getCommonDenominator",
      "offset": [
        1113,
        1167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14702": {
      "op": "POP"
    },
    "14703": {
      "fn": "getCommonDenominator",
      "offset": [
        1183,
        1184
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 172
    },
    "14704": {
      "fn": "getCommonDenominator",
      "offset": [
        1183,
        1184
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14705": {
      "fn": "getCommonDenominator",
      "offset": [
        1029,
        1187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14706": {
      "op": "POP"
    },
    "14707": {
      "fn": "getCommonDenominator",
      "jump": "o",
      "offset": [
        1029,
        1187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14708": {
      "op": "JUMPDEST"
    },
    "14709": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14716": {
      "op": "SHL"
    },
    "14717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14719": {
      "op": "MSTORE"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "14722": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14724": {
      "op": "MSTORE"
    },
    "14725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14729": {
      "op": "REVERT"
    },
    "14730": {
      "op": "JUMPDEST"
    },
    "14731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14733": {
      "op": "DUP3"
    },
    "14734": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14736": {
      "op": "DUP4"
    },
    "14737": {
      "op": "ADD"
    },
    "14738": {
      "op": "SLT"
    },
    "14739": {
      "op": "PUSH2",
      "value": "0x399B"
    },
    "14742": {
      "op": "JUMPI"
    },
    "14743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14745": {
      "op": "DUP1"
    },
    "14746": {
      "op": "REVERT"
    },
    "14747": {
      "op": "JUMPDEST"
    },
    "14748": {
      "op": "DUP2"
    },
    "14749": {
      "op": "CALLDATALOAD"
    },
    "14750": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14759": {
      "op": "DUP1"
    },
    "14760": {
      "op": "DUP3"
    },
    "14761": {
      "op": "GT"
    },
    "14762": {
      "op": "ISZERO"
    },
    "14763": {
      "op": "PUSH2",
      "value": "0x39B6"
    },
    "14766": {
      "op": "JUMPI"
    },
    "14767": {
      "op": "PUSH2",
      "value": "0x39B6"
    },
    "14770": {
      "op": "PUSH2",
      "value": "0x3974"
    },
    "14773": {
      "jump": "i",
      "op": "JUMP"
    },
    "14774": {
      "op": "JUMPDEST"
    },
    "14775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14777": {
      "op": "MLOAD"
    },
    "14778": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14780": {
      "op": "DUP4"
    },
    "14781": {
      "op": "ADD"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14784": {
      "op": "NOT"
    },
    "14785": {
      "op": "SWAP1"
    },
    "14786": {
      "op": "DUP2"
    },
    "14787": {
      "op": "AND"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "14790": {
      "op": "ADD"
    },
    "14791": {
      "op": "AND"
    },
    "14792": {
      "op": "DUP2"
    },
    "14793": {
      "op": "ADD"
    },
    "14794": {
      "op": "SWAP1"
    },
    "14795": {
      "op": "DUP3"
    },
    "14796": {
      "op": "DUP3"
    },
    "14797": {
      "op": "GT"
    },
    "14798": {
      "op": "DUP2"
    },
    "14799": {
      "op": "DUP4"
    },
    "14800": {
      "op": "LT"
    },
    "14801": {
      "op": "OR"
    },
    "14802": {
      "op": "ISZERO"
    },
    "14803": {
      "op": "PUSH2",
      "value": "0x39DE"
    },
    "14806": {
      "op": "JUMPI"
    },
    "14807": {
      "op": "PUSH2",
      "value": "0x39DE"
    },
    "14810": {
      "op": "PUSH2",
      "value": "0x3974"
    },
    "14813": {
      "jump": "i",
      "op": "JUMP"
    },
    "14814": {
      "op": "JUMPDEST"
    },
    "14815": {
      "op": "DUP2"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14818": {
      "op": "MSTORE"
    },
    "14819": {
      "op": "DUP4"
    },
    "14820": {
      "op": "DUP2"
    },
    "14821": {
      "op": "MSTORE"
    },
    "14822": {
      "op": "DUP7"
    },
    "14823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14825": {
      "op": "DUP6"
    },
    "14826": {
      "op": "DUP9"
    },
    "14827": {
      "op": "ADD"
    },
    "14828": {
      "op": "ADD"
    },
    "14829": {
      "op": "GT"
    },
    "14830": {
      "op": "ISZERO"
    },
    "14831": {
      "op": "PUSH2",
      "value": "0x39F7"
    },
    "14834": {
      "op": "JUMPI"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14837": {
      "op": "DUP1"
    },
    "14838": {
      "op": "REVERT"
    },
    "14839": {
      "op": "JUMPDEST"
    },
    "14840": {
      "op": "DUP4"
    },
    "14841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14843": {
      "op": "DUP8"
    },
    "14844": {
      "op": "ADD"
    },
    "14845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14847": {
      "op": "DUP4"
    },
    "14848": {
      "op": "ADD"
    },
    "14849": {
      "op": "CALLDATACOPY"
    },
    "14850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14854": {
      "op": "DUP6"
    },
    "14855": {
      "op": "DUP4"
    },
    "14856": {
      "op": "ADD"
    },
    "14857": {
      "op": "ADD"
    },
    "14858": {
      "op": "MSTORE"
    },
    "14859": {
      "op": "DUP1"
    },
    "14860": {
      "op": "SWAP5"
    },
    "14861": {
      "op": "POP"
    },
    "14862": {
      "op": "POP"
    },
    "14863": {
      "op": "POP"
    },
    "14864": {
      "op": "POP"
    },
    "14865": {
      "op": "POP"
    },
    "14866": {
      "op": "SWAP3"
    },
    "14867": {
      "op": "SWAP2"
    },
    "14868": {
      "op": "POP"
    },
    "14869": {
      "op": "POP"
    },
    "14870": {
      "jump": "o",
      "op": "JUMP"
    },
    "14871": {
      "op": "JUMPDEST"
    },
    "14872": {
      "op": "DUP1"
    },
    "14873": {
      "op": "CALLDATALOAD"
    },
    "14874": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14876": {
      "op": "DUP2"
    },
    "14877": {
      "op": "LT"
    },
    "14878": {
      "op": "PUSH2",
      "value": "0x3A26"
    },
    "14881": {
      "op": "JUMPI"
    },
    "14882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14884": {
      "op": "DUP1"
    },
    "14885": {
      "op": "REVERT"
    },
    "14886": {
      "op": "JUMPDEST"
    },
    "14887": {
      "op": "SWAP2"
    },
    "14888": {
      "op": "SWAP1"
    },
    "14889": {
      "op": "POP"
    },
    "14890": {
      "jump": "o",
      "op": "JUMP"
    },
    "14891": {
      "op": "JUMPDEST"
    },
    "14892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14894": {
      "op": "DUP1"
    },
    "14895": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14897": {
      "op": "DUP4"
    },
    "14898": {
      "op": "DUP6"
    },
    "14899": {
      "op": "SUB"
    },
    "14900": {
      "op": "SLT"
    },
    "14901": {
      "op": "ISZERO"
    },
    "14902": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "14905": {
      "op": "JUMPI"
    },
    "14906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14908": {
      "op": "DUP1"
    },
    "14909": {
      "op": "REVERT"
    },
    "14910": {
      "op": "JUMPDEST"
    },
    "14911": {
      "op": "DUP3"
    },
    "14912": {
      "op": "CALLDATALOAD"
    },
    "14913": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14922": {
      "op": "DUP2"
    },
    "14923": {
      "op": "GT"
    },
    "14924": {
      "op": "ISZERO"
    },
    "14925": {
      "op": "PUSH2",
      "value": "0x3A55"
    },
    "14928": {
      "op": "JUMPI"
    },
    "14929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14931": {
      "op": "DUP1"
    },
    "14932": {
      "op": "REVERT"
    },
    "14933": {
      "op": "JUMPDEST"
    },
    "14934": {
      "op": "PUSH2",
      "value": "0x3A61"
    },
    "14937": {
      "op": "DUP6"
    },
    "14938": {
      "op": "DUP3"
    },
    "14939": {
      "op": "DUP7"
    },
    "14940": {
      "op": "ADD"
    },
    "14941": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "14944": {
      "jump": "i",
      "op": "JUMP"
    },
    "14945": {
      "op": "JUMPDEST"
    },
    "14946": {
      "op": "SWAP3"
    },
    "14947": {
      "op": "POP"
    },
    "14948": {
      "op": "POP"
    },
    "14949": {
      "op": "PUSH2",
      "value": "0x3A70"
    },
    "14952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14954": {
      "op": "DUP5"
    },
    "14955": {
      "op": "ADD"
    },
    "14956": {
      "op": "PUSH2",
      "value": "0x3A17"
    },
    "14959": {
      "jump": "i",
      "op": "JUMP"
    },
    "14960": {
      "op": "JUMPDEST"
    },
    "14961": {
      "op": "SWAP1"
    },
    "14962": {
      "op": "POP"
    },
    "14963": {
      "op": "SWAP3"
    },
    "14964": {
      "op": "POP"
    },
    "14965": {
      "op": "SWAP3"
    },
    "14966": {
      "op": "SWAP1"
    },
    "14967": {
      "op": "POP"
    },
    "14968": {
      "jump": "o",
      "op": "JUMP"
    },
    "14969": {
      "op": "JUMPDEST"
    },
    "14970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14974": {
      "op": "DUP3"
    },
    "14975": {
      "op": "DUP5"
    },
    "14976": {
      "op": "SUB"
    },
    "14977": {
      "op": "SLT"
    },
    "14978": {
      "op": "ISZERO"
    },
    "14979": {
      "op": "PUSH2",
      "value": "0x3A8B"
    },
    "14982": {
      "op": "JUMPI"
    },
    "14983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14985": {
      "op": "DUP1"
    },
    "14986": {
      "op": "REVERT"
    },
    "14987": {
      "op": "JUMPDEST"
    },
    "14988": {
      "op": "POP"
    },
    "14989": {
      "op": "CALLDATALOAD"
    },
    "14990": {
      "op": "SWAP2"
    },
    "14991": {
      "op": "SWAP1"
    },
    "14992": {
      "op": "POP"
    },
    "14993": {
      "jump": "o",
      "op": "JUMP"
    },
    "14994": {
      "op": "JUMPDEST"
    },
    "14995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14999": {
      "op": "DUP3"
    },
    "15000": {
      "op": "DUP5"
    },
    "15001": {
      "op": "SUB"
    },
    "15002": {
      "op": "SLT"
    },
    "15003": {
      "op": "ISZERO"
    },
    "15004": {
      "op": "PUSH2",
      "value": "0x3AA4"
    },
    "15007": {
      "op": "JUMPI"
    },
    "15008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15010": {
      "op": "DUP1"
    },
    "15011": {
      "op": "REVERT"
    },
    "15012": {
      "op": "JUMPDEST"
    },
    "15013": {
      "op": "DUP2"
    },
    "15014": {
      "op": "CALLDATALOAD"
    },
    "15015": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15024": {
      "op": "DUP2"
    },
    "15025": {
      "op": "GT"
    },
    "15026": {
      "op": "ISZERO"
    },
    "15027": {
      "op": "PUSH2",
      "value": "0x3ABB"
    },
    "15030": {
      "op": "JUMPI"
    },
    "15031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15033": {
      "op": "DUP1"
    },
    "15034": {
      "op": "REVERT"
    },
    "15035": {
      "op": "JUMPDEST"
    },
    "15036": {
      "op": "PUSH2",
      "value": "0x3AC7"
    },
    "15039": {
      "op": "DUP5"
    },
    "15040": {
      "op": "DUP3"
    },
    "15041": {
      "op": "DUP6"
    },
    "15042": {
      "op": "ADD"
    },
    "15043": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15046": {
      "jump": "i",
      "op": "JUMP"
    },
    "15047": {
      "op": "JUMPDEST"
    },
    "15048": {
      "op": "SWAP5"
    },
    "15049": {
      "op": "SWAP4"
    },
    "15050": {
      "op": "POP"
    },
    "15051": {
      "op": "POP"
    },
    "15052": {
      "op": "POP"
    },
    "15053": {
      "op": "POP"
    },
    "15054": {
      "jump": "o",
      "op": "JUMP"
    },
    "15055": {
      "op": "JUMPDEST"
    },
    "15056": {
      "op": "DUP1"
    },
    "15057": {
      "op": "CALLDATALOAD"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15064": {
      "op": "SHL"
    },
    "15065": {
      "op": "SUB"
    },
    "15066": {
      "op": "DUP2"
    },
    "15067": {
      "op": "AND"
    },
    "15068": {
      "op": "DUP2"
    },
    "15069": {
      "op": "EQ"
    },
    "15070": {
      "op": "PUSH2",
      "value": "0x3A26"
    },
    "15073": {
      "op": "JUMPI"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15076": {
      "op": "DUP1"
    },
    "15077": {
      "op": "REVERT"
    },
    "15078": {
      "op": "JUMPDEST"
    },
    "15079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15081": {
      "op": "DUP1"
    },
    "15082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15084": {
      "op": "DUP4"
    },
    "15085": {
      "op": "DUP6"
    },
    "15086": {
      "op": "SUB"
    },
    "15087": {
      "op": "SLT"
    },
    "15088": {
      "op": "ISZERO"
    },
    "15089": {
      "op": "PUSH2",
      "value": "0x3AF9"
    },
    "15092": {
      "op": "JUMPI"
    },
    "15093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15095": {
      "op": "DUP1"
    },
    "15096": {
      "op": "REVERT"
    },
    "15097": {
      "op": "JUMPDEST"
    },
    "15098": {
      "op": "DUP3"
    },
    "15099": {
      "op": "CALLDATALOAD"
    },
    "15100": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15109": {
      "op": "DUP2"
    },
    "15110": {
      "op": "GT"
    },
    "15111": {
      "op": "ISZERO"
    },
    "15112": {
      "op": "PUSH2",
      "value": "0x3B10"
    },
    "15115": {
      "op": "JUMPI"
    },
    "15116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15118": {
      "op": "DUP1"
    },
    "15119": {
      "op": "REVERT"
    },
    "15120": {
      "op": "JUMPDEST"
    },
    "15121": {
      "op": "PUSH2",
      "value": "0x3B1C"
    },
    "15124": {
      "op": "DUP6"
    },
    "15125": {
      "op": "DUP3"
    },
    "15126": {
      "op": "DUP7"
    },
    "15127": {
      "op": "ADD"
    },
    "15128": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15131": {
      "jump": "i",
      "op": "JUMP"
    },
    "15132": {
      "op": "JUMPDEST"
    },
    "15133": {
      "op": "SWAP3"
    },
    "15134": {
      "op": "POP"
    },
    "15135": {
      "op": "POP"
    },
    "15136": {
      "op": "PUSH2",
      "value": "0x3A70"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15141": {
      "op": "DUP5"
    },
    "15142": {
      "op": "ADD"
    },
    "15143": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15146": {
      "jump": "i",
      "op": "JUMP"
    },
    "15147": {
      "op": "JUMPDEST"
    },
    "15148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15152": {
      "op": "DUP3"
    },
    "15153": {
      "op": "DUP5"
    },
    "15154": {
      "op": "SUB"
    },
    "15155": {
      "op": "SLT"
    },
    "15156": {
      "op": "ISZERO"
    },
    "15157": {
      "op": "PUSH2",
      "value": "0x3B3D"
    },
    "15160": {
      "op": "JUMPI"
    },
    "15161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15163": {
      "op": "DUP1"
    },
    "15164": {
      "op": "REVERT"
    },
    "15165": {
      "op": "JUMPDEST"
    },
    "15166": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "15169": {
      "op": "DUP3"
    },
    "15170": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15173": {
      "jump": "i",
      "op": "JUMP"
    },
    "15174": {
      "op": "JUMPDEST"
    },
    "15175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15177": {
      "op": "DUP1"
    },
    "15178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15180": {
      "op": "DUP4"
    },
    "15181": {
      "op": "DUP6"
    },
    "15182": {
      "op": "SUB"
    },
    "15183": {
      "op": "SLT"
    },
    "15184": {
      "op": "ISZERO"
    },
    "15185": {
      "op": "PUSH2",
      "value": "0x3B59"
    },
    "15188": {
      "op": "JUMPI"
    },
    "15189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15191": {
      "op": "DUP1"
    },
    "15192": {
      "op": "REVERT"
    },
    "15193": {
      "op": "JUMPDEST"
    },
    "15194": {
      "op": "POP"
    },
    "15195": {
      "op": "POP"
    },
    "15196": {
      "op": "DUP1"
    },
    "15197": {
      "op": "CALLDATALOAD"
    },
    "15198": {
      "op": "SWAP3"
    },
    "15199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15201": {
      "op": "SWAP1"
    },
    "15202": {
      "op": "SWAP2"
    },
    "15203": {
      "op": "ADD"
    },
    "15204": {
      "op": "CALLDATALOAD"
    },
    "15205": {
      "op": "SWAP2"
    },
    "15206": {
      "op": "POP"
    },
    "15207": {
      "jump": "o",
      "op": "JUMP"
    },
    "15208": {
      "op": "JUMPDEST"
    },
    "15209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15211": {
      "op": "DUP1"
    },
    "15212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15214": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15216": {
      "op": "DUP5"
    },
    "15217": {
      "op": "DUP7"
    },
    "15218": {
      "op": "SUB"
    },
    "15219": {
      "op": "SLT"
    },
    "15220": {
      "op": "ISZERO"
    },
    "15221": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15224": {
      "op": "JUMPI"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15227": {
      "op": "DUP1"
    },
    "15228": {
      "op": "REVERT"
    },
    "15229": {
      "op": "JUMPDEST"
    },
    "15230": {
      "op": "DUP4"
    },
    "15231": {
      "op": "CALLDATALOAD"
    },
    "15232": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15241": {
      "op": "DUP2"
    },
    "15242": {
      "op": "GT"
    },
    "15243": {
      "op": "ISZERO"
    },
    "15244": {
      "op": "PUSH2",
      "value": "0x3B94"
    },
    "15247": {
      "op": "JUMPI"
    },
    "15248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15250": {
      "op": "DUP1"
    },
    "15251": {
      "op": "REVERT"
    },
    "15252": {
      "op": "JUMPDEST"
    },
    "15253": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15256": {
      "op": "DUP7"
    },
    "15257": {
      "op": "DUP3"
    },
    "15258": {
      "op": "DUP8"
    },
    "15259": {
      "op": "ADD"
    },
    "15260": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15263": {
      "jump": "i",
      "op": "JUMP"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "SWAP4"
    },
    "15266": {
      "op": "POP"
    },
    "15267": {
      "op": "POP"
    },
    "15268": {
      "op": "PUSH2",
      "value": "0x3BAF"
    },
    "15271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15273": {
      "op": "DUP6"
    },
    "15274": {
      "op": "ADD"
    },
    "15275": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15278": {
      "jump": "i",
      "op": "JUMP"
    },
    "15279": {
      "op": "JUMPDEST"
    },
    "15280": {
      "op": "SWAP2"
    },
    "15281": {
      "op": "POP"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15284": {
      "op": "DUP5"
    },
    "15285": {
      "op": "ADD"
    },
    "15286": {
      "op": "CALLDATALOAD"
    },
    "15287": {
      "op": "SWAP1"
    },
    "15288": {
      "op": "POP"
    },
    "15289": {
      "op": "SWAP3"
    },
    "15290": {
      "op": "POP"
    },
    "15291": {
      "op": "SWAP3"
    },
    "15292": {
      "op": "POP"
    },
    "15293": {
      "op": "SWAP3"
    },
    "15294": {
      "jump": "o",
      "op": "JUMP"
    },
    "15295": {
      "op": "JUMPDEST"
    },
    "15296": {
      "op": "DUP1"
    },
    "15297": {
      "op": "ISZERO"
    },
    "15298": {
      "op": "ISZERO"
    },
    "15299": {
      "op": "DUP2"
    },
    "15300": {
      "op": "EQ"
    },
    "15301": {
      "op": "PUSH2",
      "value": "0xB0A"
    },
    "15304": {
      "op": "JUMPI"
    },
    "15305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15307": {
      "op": "DUP1"
    },
    "15308": {
      "op": "REVERT"
    },
    "15309": {
      "op": "JUMPDEST"
    },
    "15310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15314": {
      "op": "DUP3"
    },
    "15315": {
      "op": "DUP5"
    },
    "15316": {
      "op": "SUB"
    },
    "15317": {
      "op": "SLT"
    },
    "15318": {
      "op": "ISZERO"
    },
    "15319": {
      "op": "PUSH2",
      "value": "0x3BDF"
    },
    "15322": {
      "op": "JUMPI"
    },
    "15323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15325": {
      "op": "DUP1"
    },
    "15326": {
      "op": "REVERT"
    },
    "15327": {
      "op": "JUMPDEST"
    },
    "15328": {
      "op": "DUP2"
    },
    "15329": {
      "op": "CALLDATALOAD"
    },
    "15330": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "15333": {
      "op": "DUP2"
    },
    "15334": {
      "op": "PUSH2",
      "value": "0x3BBF"
    },
    "15337": {
      "jump": "i",
      "op": "JUMP"
    },
    "15338": {
      "op": "JUMPDEST"
    },
    "15339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15341": {
      "op": "DUP1"
    },
    "15342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15344": {
      "op": "DUP1"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15347": {
      "op": "DUP6"
    },
    "15348": {
      "op": "DUP8"
    },
    "15349": {
      "op": "SUB"
    },
    "15350": {
      "op": "SLT"
    },
    "15351": {
      "op": "ISZERO"
    },
    "15352": {
      "op": "PUSH2",
      "value": "0x3C00"
    },
    "15355": {
      "op": "JUMPI"
    },
    "15356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15358": {
      "op": "DUP1"
    },
    "15359": {
      "op": "REVERT"
    },
    "15360": {
      "op": "JUMPDEST"
    },
    "15361": {
      "op": "DUP5"
    },
    "15362": {
      "op": "CALLDATALOAD"
    },
    "15363": {
      "op": "SWAP4"
    },
    "15364": {
      "op": "POP"
    },
    "15365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15367": {
      "op": "DUP6"
    },
    "15368": {
      "op": "ADD"
    },
    "15369": {
      "op": "CALLDATALOAD"
    },
    "15370": {
      "op": "SWAP3"
    },
    "15371": {
      "op": "POP"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15374": {
      "op": "DUP6"
    },
    "15375": {
      "op": "ADD"
    },
    "15376": {
      "op": "CALLDATALOAD"
    },
    "15377": {
      "op": "SWAP2"
    },
    "15378": {
      "op": "POP"
    },
    "15379": {
      "op": "PUSH2",
      "value": "0x3C1E"
    },
    "15382": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15384": {
      "op": "DUP7"
    },
    "15385": {
      "op": "ADD"
    },
    "15386": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15389": {
      "jump": "i",
      "op": "JUMP"
    },
    "15390": {
      "op": "JUMPDEST"
    },
    "15391": {
      "op": "SWAP1"
    },
    "15392": {
      "op": "POP"
    },
    "15393": {
      "op": "SWAP3"
    },
    "15394": {
      "op": "SWAP6"
    },
    "15395": {
      "op": "SWAP2"
    },
    "15396": {
      "op": "SWAP5"
    },
    "15397": {
      "op": "POP"
    },
    "15398": {
      "op": "SWAP3"
    },
    "15399": {
      "op": "POP"
    },
    "15400": {
      "jump": "o",
      "op": "JUMP"
    },
    "15401": {
      "op": "JUMPDEST"
    },
    "15402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15404": {
      "op": "DUP1"
    },
    "15405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15407": {
      "op": "DUP4"
    },
    "15408": {
      "op": "DUP6"
    },
    "15409": {
      "op": "SUB"
    },
    "15410": {
      "op": "SLT"
    },
    "15411": {
      "op": "ISZERO"
    },
    "15412": {
      "op": "PUSH2",
      "value": "0x3C3C"
    },
    "15415": {
      "op": "JUMPI"
    },
    "15416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15418": {
      "op": "DUP1"
    },
    "15419": {
      "op": "REVERT"
    },
    "15420": {
      "op": "JUMPDEST"
    },
    "15421": {
      "op": "PUSH2",
      "value": "0x3C45"
    },
    "15424": {
      "op": "DUP4"
    },
    "15425": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15428": {
      "jump": "i",
      "op": "JUMP"
    },
    "15429": {
      "op": "JUMPDEST"
    },
    "15430": {
      "op": "SWAP5"
    },
    "15431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15433": {
      "op": "SWAP4"
    },
    "15434": {
      "op": "SWAP1"
    },
    "15435": {
      "op": "SWAP4"
    },
    "15436": {
      "op": "ADD"
    },
    "15437": {
      "op": "CALLDATALOAD"
    },
    "15438": {
      "op": "SWAP4"
    },
    "15439": {
      "op": "POP"
    },
    "15440": {
      "op": "POP"
    },
    "15441": {
      "op": "POP"
    },
    "15442": {
      "jump": "o",
      "op": "JUMP"
    },
    "15443": {
      "op": "JUMPDEST"
    },
    "15444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15446": {
      "op": "DUP1"
    },
    "15447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15449": {
      "op": "DUP1"
    },
    "15450": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15452": {
      "op": "DUP6"
    },
    "15453": {
      "op": "DUP8"
    },
    "15454": {
      "op": "SUB"
    },
    "15455": {
      "op": "SLT"
    },
    "15456": {
      "op": "ISZERO"
    },
    "15457": {
      "op": "PUSH2",
      "value": "0x3C69"
    },
    "15460": {
      "op": "JUMPI"
    },
    "15461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15463": {
      "op": "DUP1"
    },
    "15464": {
      "op": "REVERT"
    },
    "15465": {
      "op": "JUMPDEST"
    },
    "15466": {
      "op": "DUP5"
    },
    "15467": {
      "op": "CALLDATALOAD"
    },
    "15468": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15477": {
      "op": "DUP1"
    },
    "15478": {
      "op": "DUP3"
    },
    "15479": {
      "op": "GT"
    },
    "15480": {
      "op": "ISZERO"
    },
    "15481": {
      "op": "PUSH2",
      "value": "0x3C81"
    },
    "15484": {
      "op": "JUMPI"
    },
    "15485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15487": {
      "op": "DUP1"
    },
    "15488": {
      "op": "REVERT"
    },
    "15489": {
      "op": "JUMPDEST"
    },
    "15490": {
      "op": "PUSH2",
      "value": "0x3C8D"
    },
    "15493": {
      "op": "DUP9"
    },
    "15494": {
      "op": "DUP4"
    },
    "15495": {
      "op": "DUP10"
    },
    "15496": {
      "op": "ADD"
    },
    "15497": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15500": {
      "jump": "i",
      "op": "JUMP"
    },
    "15501": {
      "op": "JUMPDEST"
    },
    "15502": {
      "op": "SWAP6"
    },
    "15503": {
      "op": "POP"
    },
    "15504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15506": {
      "op": "DUP8"
    },
    "15507": {
      "op": "ADD"
    },
    "15508": {
      "op": "CALLDATALOAD"
    },
    "15509": {
      "op": "SWAP2"
    },
    "15510": {
      "op": "POP"
    },
    "15511": {
      "op": "DUP1"
    },
    "15512": {
      "op": "DUP3"
    },
    "15513": {
      "op": "GT"
    },
    "15514": {
      "op": "ISZERO"
    },
    "15515": {
      "op": "PUSH2",
      "value": "0x3CA3"
    },
    "15518": {
      "op": "JUMPI"
    },
    "15519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15521": {
      "op": "DUP1"
    },
    "15522": {
      "op": "REVERT"
    },
    "15523": {
      "op": "JUMPDEST"
    },
    "15524": {
      "op": "POP"
    },
    "15525": {
      "op": "PUSH2",
      "value": "0x3CB0"
    },
    "15528": {
      "op": "DUP8"
    },
    "15529": {
      "op": "DUP3"
    },
    "15530": {
      "op": "DUP9"
    },
    "15531": {
      "op": "ADD"
    },
    "15532": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15535": {
      "jump": "i",
      "op": "JUMP"
    },
    "15536": {
      "op": "JUMPDEST"
    },
    "15537": {
      "op": "SWAP4"
    },
    "15538": {
      "op": "POP"
    },
    "15539": {
      "op": "POP"
    },
    "15540": {
      "op": "PUSH2",
      "value": "0x3CBF"
    },
    "15543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15545": {
      "op": "DUP7"
    },
    "15546": {
      "op": "ADD"
    },
    "15547": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15550": {
      "jump": "i",
      "op": "JUMP"
    },
    "15551": {
      "op": "JUMPDEST"
    },
    "15552": {
      "op": "SWAP4"
    },
    "15553": {
      "op": "SWAP7"
    },
    "15554": {
      "op": "SWAP3"
    },
    "15555": {
      "op": "SWAP6"
    },
    "15556": {
      "op": "POP"
    },
    "15557": {
      "op": "SWAP3"
    },
    "15558": {
      "op": "SWAP4"
    },
    "15559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15561": {
      "op": "ADD"
    },
    "15562": {
      "op": "CALLDATALOAD"
    },
    "15563": {
      "op": "SWAP3"
    },
    "15564": {
      "op": "POP"
    },
    "15565": {
      "op": "POP"
    },
    "15566": {
      "jump": "o",
      "op": "JUMP"
    },
    "15567": {
      "op": "JUMPDEST"
    },
    "15568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15570": {
      "op": "DUP1"
    },
    "15571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15575": {
      "op": "DUP5"
    },
    "15576": {
      "op": "DUP7"
    },
    "15577": {
      "op": "SUB"
    },
    "15578": {
      "op": "SLT"
    },
    "15579": {
      "op": "ISZERO"
    },
    "15580": {
      "op": "PUSH2",
      "value": "0x3CE4"
    },
    "15583": {
      "op": "JUMPI"
    },
    "15584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15586": {
      "op": "DUP1"
    },
    "15587": {
      "op": "REVERT"
    },
    "15588": {
      "op": "JUMPDEST"
    },
    "15589": {
      "op": "DUP4"
    },
    "15590": {
      "op": "CALLDATALOAD"
    },
    "15591": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15600": {
      "op": "DUP2"
    },
    "15601": {
      "op": "GT"
    },
    "15602": {
      "op": "ISZERO"
    },
    "15603": {
      "op": "PUSH2",
      "value": "0x3CFB"
    },
    "15606": {
      "op": "JUMPI"
    },
    "15607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15609": {
      "op": "DUP1"
    },
    "15610": {
      "op": "REVERT"
    },
    "15611": {
      "op": "JUMPDEST"
    },
    "15612": {
      "op": "PUSH2",
      "value": "0x3D07"
    },
    "15615": {
      "op": "DUP7"
    },
    "15616": {
      "op": "DUP3"
    },
    "15617": {
      "op": "DUP8"
    },
    "15618": {
      "op": "ADD"
    },
    "15619": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15622": {
      "jump": "i",
      "op": "JUMP"
    },
    "15623": {
      "op": "JUMPDEST"
    },
    "15624": {
      "op": "SWAP4"
    },
    "15625": {
      "op": "POP"
    },
    "15626": {
      "op": "POP"
    },
    "15627": {
      "op": "PUSH2",
      "value": "0x3D16"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15632": {
      "op": "DUP6"
    },
    "15633": {
      "op": "ADD"
    },
    "15634": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15637": {
      "jump": "i",
      "op": "JUMP"
    },
    "15638": {
      "op": "JUMPDEST"
    },
    "15639": {
      "op": "SWAP2"
    },
    "15640": {
      "op": "POP"
    },
    "15641": {
      "op": "PUSH2",
      "value": "0x3D24"
    },
    "15644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15646": {
      "op": "DUP6"
    },
    "15647": {
      "op": "ADD"
    },
    "15648": {
      "op": "PUSH2",
      "value": "0x3A17"
    },
    "15651": {
      "jump": "i",
      "op": "JUMP"
    },
    "15652": {
      "op": "JUMPDEST"
    },
    "15653": {
      "op": "SWAP1"
    },
    "15654": {
      "op": "POP"
    },
    "15655": {
      "op": "SWAP3"
    },
    "15656": {
      "op": "POP"
    },
    "15657": {
      "op": "SWAP3"
    },
    "15658": {
      "op": "POP"
    },
    "15659": {
      "op": "SWAP3"
    },
    "15660": {
      "jump": "o",
      "op": "JUMP"
    },
    "15661": {
      "op": "JUMPDEST"
    },
    "15662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15664": {
      "op": "DUP1"
    },
    "15665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15667": {
      "op": "DUP1"
    },
    "15668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15670": {
      "op": "DUP6"
    },
    "15671": {
      "op": "DUP8"
    },
    "15672": {
      "op": "SUB"
    },
    "15673": {
      "op": "SLT"
    },
    "15674": {
      "op": "ISZERO"
    },
    "15675": {
      "op": "PUSH2",
      "value": "0x3D43"
    },
    "15678": {
      "op": "JUMPI"
    },
    "15679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15681": {
      "op": "DUP1"
    },
    "15682": {
      "op": "REVERT"
    },
    "15683": {
      "op": "JUMPDEST"
    },
    "15684": {
      "op": "DUP5"
    },
    "15685": {
      "op": "CALLDATALOAD"
    },
    "15686": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15695": {
      "op": "DUP2"
    },
    "15696": {
      "op": "GT"
    },
    "15697": {
      "op": "ISZERO"
    },
    "15698": {
      "op": "PUSH2",
      "value": "0x3D5A"
    },
    "15701": {
      "op": "JUMPI"
    },
    "15702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15704": {
      "op": "DUP1"
    },
    "15705": {
      "op": "REVERT"
    },
    "15706": {
      "op": "JUMPDEST"
    },
    "15707": {
      "op": "PUSH2",
      "value": "0x3D66"
    },
    "15710": {
      "op": "DUP8"
    },
    "15711": {
      "op": "DUP3"
    },
    "15712": {
      "op": "DUP9"
    },
    "15713": {
      "op": "ADD"
    },
    "15714": {
      "op": "PUSH2",
      "value": "0x398A"
    },
    "15717": {
      "jump": "i",
      "op": "JUMP"
    },
    "15718": {
      "op": "JUMPDEST"
    },
    "15719": {
      "op": "SWAP5"
    },
    "15720": {
      "op": "POP"
    },
    "15721": {
      "op": "POP"
    },
    "15722": {
      "op": "PUSH2",
      "value": "0x3D75"
    },
    "15725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15727": {
      "op": "DUP7"
    },
    "15728": {
      "op": "ADD"
    },
    "15729": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15732": {
      "jump": "i",
      "op": "JUMP"
    },
    "15733": {
      "op": "JUMPDEST"
    },
    "15734": {
      "op": "SWAP3"
    },
    "15735": {
      "op": "POP"
    },
    "15736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15738": {
      "op": "DUP6"
    },
    "15739": {
      "op": "ADD"
    },
    "15740": {
      "op": "CALLDATALOAD"
    },
    "15741": {
      "op": "SWAP2"
    },
    "15742": {
      "op": "POP"
    },
    "15743": {
      "op": "PUSH2",
      "value": "0x3C1E"
    },
    "15746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15748": {
      "op": "DUP7"
    },
    "15749": {
      "op": "ADD"
    },
    "15750": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15753": {
      "jump": "i",
      "op": "JUMP"
    },
    "15754": {
      "op": "JUMPDEST"
    },
    "15755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15757": {
      "op": "DUP1"
    },
    "15758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15760": {
      "op": "DUP1"
    },
    "15761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15763": {
      "op": "DUP1"
    },
    "15764": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15766": {
      "op": "DUP8"
    },
    "15767": {
      "op": "DUP10"
    },
    "15768": {
      "op": "SUB"
    },
    "15769": {
      "op": "SLT"
    },
    "15770": {
      "op": "ISZERO"
    },
    "15771": {
      "op": "PUSH2",
      "value": "0x3DA3"
    },
    "15774": {
      "op": "JUMPI"
    },
    "15775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15777": {
      "op": "DUP1"
    },
    "15778": {
      "op": "REVERT"
    },
    "15779": {
      "op": "JUMPDEST"
    },
    "15780": {
      "op": "DUP7"
    },
    "15781": {
      "op": "CALLDATALOAD"
    },
    "15782": {
      "op": "SWAP6"
    },
    "15783": {
      "op": "POP"
    },
    "15784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15786": {
      "op": "DUP8"
    },
    "15787": {
      "op": "ADD"
    },
    "15788": {
      "op": "CALLDATALOAD"
    },
    "15789": {
      "op": "SWAP5"
    },
    "15790": {
      "op": "POP"
    },
    "15791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15793": {
      "op": "DUP8"
    },
    "15794": {
      "op": "ADD"
    },
    "15795": {
      "op": "CALLDATALOAD"
    },
    "15796": {
      "op": "SWAP4"
    },
    "15797": {
      "op": "POP"
    },
    "15798": {
      "op": "PUSH2",
      "value": "0x3DC1"
    },
    "15801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15803": {
      "op": "DUP9"
    },
    "15804": {
      "op": "ADD"
    },
    "15805": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15808": {
      "jump": "i",
      "op": "JUMP"
    },
    "15809": {
      "op": "JUMPDEST"
    },
    "15810": {
      "op": "SWAP3"
    },
    "15811": {
      "op": "POP"
    },
    "15812": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15814": {
      "op": "DUP8"
    },
    "15815": {
      "op": "ADD"
    },
    "15816": {
      "op": "CALLDATALOAD"
    },
    "15817": {
      "op": "SWAP2"
    },
    "15818": {
      "op": "POP"
    },
    "15819": {
      "op": "PUSH2",
      "value": "0x3DD6"
    },
    "15822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15824": {
      "op": "DUP9"
    },
    "15825": {
      "op": "ADD"
    },
    "15826": {
      "op": "PUSH2",
      "value": "0x3ACF"
    },
    "15829": {
      "jump": "i",
      "op": "JUMP"
    },
    "15830": {
      "op": "JUMPDEST"
    },
    "15831": {
      "op": "SWAP1"
    },
    "15832": {
      "op": "POP"
    },
    "15833": {
      "op": "SWAP3"
    },
    "15834": {
      "op": "SWAP6"
    },
    "15835": {
      "op": "POP"
    },
    "15836": {
      "op": "SWAP3"
    },
    "15837": {
      "op": "SWAP6"
    },
    "15838": {
      "op": "POP"
    },
    "15839": {
      "op": "SWAP3"
    },
    "15840": {
      "op": "SWAP6"
    },
    "15841": {
      "jump": "o",
      "op": "JUMP"
    },
    "15842": {
      "op": "JUMPDEST"
    },
    "15843": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15850": {
      "op": "SHL"
    },
    "15851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15853": {
      "op": "MSTORE"
    },
    "15854": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "15856": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15858": {
      "op": "MSTORE"
    },
    "15859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15863": {
      "op": "REVERT"
    },
    "15864": {
      "op": "JUMPDEST"
    },
    "15865": {
      "op": "DUP1"
    },
    "15866": {
      "op": "DUP3"
    },
    "15867": {
      "op": "ADD"
    },
    "15868": {
      "op": "DUP1"
    },
    "15869": {
      "op": "DUP3"
    },
    "15870": {
      "op": "GT"
    },
    "15871": {
      "op": "ISZERO"
    },
    "15872": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "15875": {
      "op": "JUMPI"
    },
    "15876": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "15879": {
      "op": "PUSH2",
      "value": "0x3DE2"
    },
    "15882": {
      "jump": "i",
      "op": "JUMP"
    },
    "15883": {
      "op": "JUMPDEST"
    },
    "15884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15891": {
      "op": "SHL"
    },
    "15892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15894": {
      "op": "MSTORE"
    },
    "15895": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "15897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15899": {
      "op": "MSTORE"
    },
    "15900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15904": {
      "op": "REVERT"
    },
    "15905": {
      "op": "JUMPDEST"
    },
    "15906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15908": {
      "op": "JUMPDEST"
    },
    "15909": {
      "op": "DUP4"
    },
    "15910": {
      "op": "DUP2"
    },
    "15911": {
      "op": "LT"
    },
    "15912": {
      "op": "ISZERO"
    },
    "15913": {
      "op": "PUSH2",
      "value": "0x3E3C"
    },
    "15916": {
      "op": "JUMPI"
    },
    "15917": {
      "op": "DUP2"
    },
    "15918": {
      "op": "DUP2"
    },
    "15919": {
      "op": "ADD"
    },
    "15920": {
      "op": "MLOAD"
    },
    "15921": {
      "op": "DUP4"
    },
    "15922": {
      "op": "DUP3"
    },
    "15923": {
      "op": "ADD"
    },
    "15924": {
      "op": "MSTORE"
    },
    "15925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15927": {
      "op": "ADD"
    },
    "15928": {
      "op": "PUSH2",
      "value": "0x3E24"
    },
    "15931": {
      "op": "JUMP"
    },
    "15932": {
      "op": "JUMPDEST"
    },
    "15933": {
      "op": "POP"
    },
    "15934": {
      "op": "POP"
    },
    "15935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15937": {
      "op": "SWAP2"
    },
    "15938": {
      "op": "ADD"
    },
    "15939": {
      "op": "MSTORE"
    },
    "15940": {
      "jump": "o",
      "op": "JUMP"
    },
    "15941": {
      "op": "JUMPDEST"
    },
    "15942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15944": {
      "op": "DUP3"
    },
    "15945": {
      "op": "MLOAD"
    },
    "15946": {
      "op": "PUSH2",
      "value": "0x3E57"
    },
    "15949": {
      "op": "DUP2"
    },
    "15950": {
      "op": "DUP5"
    },
    "15951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15953": {
      "op": "DUP8"
    },
    "15954": {
      "op": "ADD"
    },
    "15955": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "15958": {
      "jump": "i",
      "op": "JUMP"
    },
    "15959": {
      "op": "JUMPDEST"
    },
    "15960": {
      "op": "SWAP2"
    },
    "15961": {
      "op": "SWAP1"
    },
    "15962": {
      "op": "SWAP2"
    },
    "15963": {
      "op": "ADD"
    },
    "15964": {
      "op": "SWAP3"
    },
    "15965": {
      "op": "SWAP2"
    },
    "15966": {
      "op": "POP"
    },
    "15967": {
      "op": "POP"
    },
    "15968": {
      "jump": "o",
      "op": "JUMP"
    },
    "15969": {
      "op": "JUMPDEST"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15972": {
      "op": "DUP1"
    },
    "15973": {
      "op": "DUP3"
    },
    "15974": {
      "op": "MSTORE"
    },
    "15975": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15977": {
      "op": "SWAP1"
    },
    "15978": {
      "op": "DUP3"
    },
    "15979": {
      "op": "ADD"
    },
    "15980": {
      "op": "MSTORE"
    },
    "15981": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "15984": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "15986": {
      "op": "SHL"
    },
    "15987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15989": {
      "op": "DUP3"
    },
    "15990": {
      "op": "ADD"
    },
    "15991": {
      "op": "MSTORE"
    },
    "15992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15994": {
      "op": "ADD"
    },
    "15995": {
      "op": "SWAP1"
    },
    "15996": {
      "jump": "o",
      "op": "JUMP"
    },
    "15997": {
      "op": "JUMPDEST"
    },
    "15998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16000": {
      "op": "DUP1"
    },
    "16001": {
      "op": "DUP3"
    },
    "16002": {
      "op": "MSTORE"
    },
    "16003": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16005": {
      "op": "SWAP1"
    },
    "16006": {
      "op": "DUP3"
    },
    "16007": {
      "op": "ADD"
    },
    "16008": {
      "op": "MSTORE"
    },
    "16009": {
      "op": "PUSH2",
      "value": "0x5553"
    },
    "16012": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "16014": {
      "op": "SHL"
    },
    "16015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16017": {
      "op": "DUP3"
    },
    "16018": {
      "op": "ADD"
    },
    "16019": {
      "op": "MSTORE"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16022": {
      "op": "ADD"
    },
    "16023": {
      "op": "SWAP1"
    },
    "16024": {
      "jump": "o",
      "op": "JUMP"
    },
    "16025": {
      "op": "JUMPDEST"
    },
    "16026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16028": {
      "op": "DUP1"
    },
    "16029": {
      "op": "DUP3"
    },
    "16030": {
      "op": "MSTORE"
    },
    "16031": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16033": {
      "op": "SWAP1"
    },
    "16034": {
      "op": "DUP3"
    },
    "16035": {
      "op": "ADD"
    },
    "16036": {
      "op": "MSTORE"
    },
    "16037": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "16040": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16042": {
      "op": "SHL"
    },
    "16043": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16045": {
      "op": "DUP3"
    },
    "16046": {
      "op": "ADD"
    },
    "16047": {
      "op": "MSTORE"
    },
    "16048": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16050": {
      "op": "ADD"
    },
    "16051": {
      "op": "SWAP1"
    },
    "16052": {
      "jump": "o",
      "op": "JUMP"
    },
    "16053": {
      "op": "JUMPDEST"
    },
    "16054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16056": {
      "op": "DUP1"
    },
    "16057": {
      "op": "DUP3"
    },
    "16058": {
      "op": "MSTORE"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16061": {
      "op": "SWAP1"
    },
    "16062": {
      "op": "DUP3"
    },
    "16063": {
      "op": "ADD"
    },
    "16064": {
      "op": "MSTORE"
    },
    "16065": {
      "op": "PUSH2",
      "value": "0x1555"
    },
    "16068": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16070": {
      "op": "SHL"
    },
    "16071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16073": {
      "op": "DUP3"
    },
    "16074": {
      "op": "ADD"
    },
    "16075": {
      "op": "MSTORE"
    },
    "16076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16078": {
      "op": "ADD"
    },
    "16079": {
      "op": "SWAP1"
    },
    "16080": {
      "jump": "o",
      "op": "JUMP"
    },
    "16081": {
      "op": "JUMPDEST"
    },
    "16082": {
      "op": "DUP1"
    },
    "16083": {
      "op": "DUP3"
    },
    "16084": {
      "op": "MUL"
    },
    "16085": {
      "op": "DUP2"
    },
    "16086": {
      "op": "ISZERO"
    },
    "16087": {
      "op": "DUP3"
    },
    "16088": {
      "op": "DUP3"
    },
    "16089": {
      "op": "DIV"
    },
    "16090": {
      "op": "DUP5"
    },
    "16091": {
      "op": "EQ"
    },
    "16092": {
      "op": "OR"
    },
    "16093": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "16096": {
      "op": "JUMPI"
    },
    "16097": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "16100": {
      "op": "PUSH2",
      "value": "0x3DE2"
    },
    "16103": {
      "jump": "i",
      "op": "JUMP"
    },
    "16104": {
      "op": "JUMPDEST"
    },
    "16105": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16112": {
      "op": "SHL"
    },
    "16113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16115": {
      "op": "MSTORE"
    },
    "16116": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "16118": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16120": {
      "op": "MSTORE"
    },
    "16121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16125": {
      "op": "REVERT"
    },
    "16126": {
      "op": "JUMPDEST"
    },
    "16127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16129": {
      "op": "DUP3"
    },
    "16130": {
      "op": "PUSH2",
      "value": "0x3F0D"
    },
    "16133": {
      "op": "JUMPI"
    },
    "16134": {
      "op": "PUSH2",
      "value": "0x3F0D"
    },
    "16137": {
      "op": "PUSH2",
      "value": "0x3EE8"
    },
    "16140": {
      "jump": "i",
      "op": "JUMP"
    },
    "16141": {
      "op": "JUMPDEST"
    },
    "16142": {
      "op": "POP"
    },
    "16143": {
      "op": "DIV"
    },
    "16144": {
      "op": "SWAP1"
    },
    "16145": {
      "jump": "o",
      "op": "JUMP"
    },
    "16146": {
      "op": "JUMPDEST"
    },
    "16147": {
      "op": "DUP2"
    },
    "16148": {
      "op": "DUP2"
    },
    "16149": {
      "op": "SUB"
    },
    "16150": {
      "op": "DUP2"
    },
    "16151": {
      "op": "DUP2"
    },
    "16152": {
      "op": "GT"
    },
    "16153": {
      "op": "ISZERO"
    },
    "16154": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "16157": {
      "op": "JUMPI"
    },
    "16158": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "16161": {
      "op": "PUSH2",
      "value": "0x3DE2"
    },
    "16164": {
      "jump": "i",
      "op": "JUMP"
    },
    "16165": {
      "op": "JUMPDEST"
    },
    "16166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16168": {
      "op": "DUP2"
    },
    "16169": {
      "op": "MLOAD"
    },
    "16170": {
      "op": "DUP1"
    },
    "16171": {
      "op": "DUP5"
    },
    "16172": {
      "op": "MSTORE"
    },
    "16173": {
      "op": "PUSH2",
      "value": "0x3F3D"
    },
    "16176": {
      "op": "DUP2"
    },
    "16177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16179": {
      "op": "DUP7"
    },
    "16180": {
      "op": "ADD"
    },
    "16181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16183": {
      "op": "DUP7"
    },
    "16184": {
      "op": "ADD"
    },
    "16185": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "16188": {
      "jump": "i",
      "op": "JUMP"
    },
    "16189": {
      "op": "JUMPDEST"
    },
    "16190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16192": {
      "op": "ADD"
    },
    "16193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16195": {
      "op": "NOT"
    },
    "16196": {
      "op": "AND"
    },
    "16197": {
      "op": "SWAP3"
    },
    "16198": {
      "op": "SWAP1"
    },
    "16199": {
      "op": "SWAP3"
    },
    "16200": {
      "op": "ADD"
    },
    "16201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16203": {
      "op": "ADD"
    },
    "16204": {
      "op": "SWAP3"
    },
    "16205": {
      "op": "SWAP2"
    },
    "16206": {
      "op": "POP"
    },
    "16207": {
      "op": "POP"
    },
    "16208": {
      "jump": "o",
      "op": "JUMP"
    },
    "16209": {
      "op": "JUMPDEST"
    },
    "16210": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16212": {
      "op": "DUP2"
    },
    "16213": {
      "op": "MSTORE"
    },
    "16214": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16216": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16218": {
      "op": "DUP3"
    },
    "16219": {
      "op": "ADD"
    },
    "16220": {
      "op": "MSTORE"
    },
    "16221": {
      "op": "PUSH2",
      "value": "0x18D1"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16226": {
      "op": "SHL"
    },
    "16227": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16229": {
      "op": "DUP3"
    },
    "16230": {
      "op": "ADD"
    },
    "16231": {
      "op": "MSTORE"
    },
    "16232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16236": {
      "op": "DUP3"
    },
    "16237": {
      "op": "ADD"
    },
    "16238": {
      "op": "MSTORE"
    },
    "16239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16241": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16246": {
      "op": "DUP4"
    },
    "16247": {
      "op": "ADD"
    },
    "16248": {
      "op": "DUP6"
    },
    "16249": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16252": {
      "jump": "i",
      "op": "JUMP"
    },
    "16253": {
      "op": "JUMPDEST"
    },
    "16254": {
      "op": "SWAP1"
    },
    "16255": {
      "op": "POP"
    },
    "16256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16258": {
      "op": "DUP1"
    },
    "16259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16261": {
      "op": "SHL"
    },
    "16262": {
      "op": "SUB"
    },
    "16263": {
      "op": "DUP4"
    },
    "16264": {
      "op": "AND"
    },
    "16265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16267": {
      "op": "DUP4"
    },
    "16268": {
      "op": "ADD"
    },
    "16269": {
      "op": "MSTORE"
    },
    "16270": {
      "op": "SWAP4"
    },
    "16271": {
      "op": "SWAP3"
    },
    "16272": {
      "op": "POP"
    },
    "16273": {
      "op": "POP"
    },
    "16274": {
      "op": "POP"
    },
    "16275": {
      "jump": "o",
      "op": "JUMP"
    },
    "16276": {
      "op": "JUMPDEST"
    },
    "16277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16281": {
      "op": "DUP3"
    },
    "16282": {
      "op": "DUP5"
    },
    "16283": {
      "op": "SUB"
    },
    "16284": {
      "op": "SLT"
    },
    "16285": {
      "op": "ISZERO"
    },
    "16286": {
      "op": "PUSH2",
      "value": "0x3FA6"
    },
    "16289": {
      "op": "JUMPI"
    },
    "16290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16292": {
      "op": "DUP1"
    },
    "16293": {
      "op": "REVERT"
    },
    "16294": {
      "op": "JUMPDEST"
    },
    "16295": {
      "op": "POP"
    },
    "16296": {
      "op": "MLOAD"
    },
    "16297": {
      "op": "SWAP2"
    },
    "16298": {
      "op": "SWAP1"
    },
    "16299": {
      "op": "POP"
    },
    "16300": {
      "jump": "o",
      "op": "JUMP"
    },
    "16301": {
      "op": "JUMPDEST"
    },
    "16302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16304": {
      "op": "DUP1"
    },
    "16305": {
      "op": "DUP3"
    },
    "16306": {
      "op": "MSTORE"
    },
    "16307": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16309": {
      "op": "SWAP1"
    },
    "16310": {
      "op": "DUP3"
    },
    "16311": {
      "op": "ADD"
    },
    "16312": {
      "op": "MSTORE"
    },
    "16313": {
      "op": "PUSH2",
      "value": "0x1255"
    },
    "16316": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16318": {
      "op": "SHL"
    },
    "16319": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16321": {
      "op": "DUP3"
    },
    "16322": {
      "op": "ADD"
    },
    "16323": {
      "op": "MSTORE"
    },
    "16324": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16326": {
      "op": "ADD"
    },
    "16327": {
      "op": "SWAP1"
    },
    "16328": {
      "jump": "o",
      "op": "JUMP"
    },
    "16329": {
      "op": "JUMPDEST"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16334": {
      "op": "DUP3"
    },
    "16335": {
      "op": "DUP5"
    },
    "16336": {
      "op": "SUB"
    },
    "16337": {
      "op": "SLT"
    },
    "16338": {
      "op": "ISZERO"
    },
    "16339": {
      "op": "PUSH2",
      "value": "0x3FDB"
    },
    "16342": {
      "op": "JUMPI"
    },
    "16343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16345": {
      "op": "DUP1"
    },
    "16346": {
      "op": "REVERT"
    },
    "16347": {
      "op": "JUMPDEST"
    },
    "16348": {
      "op": "DUP2"
    },
    "16349": {
      "op": "MLOAD"
    },
    "16350": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "16353": {
      "op": "DUP2"
    },
    "16354": {
      "op": "PUSH2",
      "value": "0x3BBF"
    },
    "16357": {
      "jump": "i",
      "op": "JUMP"
    },
    "16358": {
      "op": "JUMPDEST"
    },
    "16359": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16361": {
      "op": "DUP2"
    },
    "16362": {
      "op": "LT"
    },
    "16363": {
      "op": "PUSH2",
      "value": "0x4004"
    },
    "16366": {
      "op": "JUMPI"
    },
    "16367": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16374": {
      "op": "SHL"
    },
    "16375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16377": {
      "op": "MSTORE"
    },
    "16378": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16380": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16382": {
      "op": "MSTORE"
    },
    "16383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16387": {
      "op": "REVERT"
    },
    "16388": {
      "op": "JUMPDEST"
    },
    "16389": {
      "op": "SWAP1"
    },
    "16390": {
      "op": "MSTORE"
    },
    "16391": {
      "jump": "o",
      "op": "JUMP"
    },
    "16392": {
      "op": "JUMPDEST"
    },
    "16393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16395": {
      "op": "DUP2"
    },
    "16396": {
      "op": "MSTORE"
    },
    "16397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16399": {
      "op": "PUSH2",
      "value": "0x401B"
    },
    "16402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16404": {
      "op": "DUP4"
    },
    "16405": {
      "op": "ADD"
    },
    "16406": {
      "op": "DUP6"
    },
    "16407": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16410": {
      "jump": "i",
      "op": "JUMP"
    },
    "16411": {
      "op": "JUMPDEST"
    },
    "16412": {
      "op": "SWAP1"
    },
    "16413": {
      "op": "POP"
    },
    "16414": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "16417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16419": {
      "op": "DUP4"
    },
    "16420": {
      "op": "ADD"
    },
    "16421": {
      "op": "DUP5"
    },
    "16422": {
      "op": "PUSH2",
      "value": "0x3FE6"
    },
    "16425": {
      "jump": "i",
      "op": "JUMP"
    },
    "16426": {
      "op": "JUMPDEST"
    },
    "16427": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16429": {
      "op": "DUP2"
    },
    "16430": {
      "op": "MSTORE"
    },
    "16431": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16433": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16435": {
      "op": "DUP3"
    },
    "16436": {
      "op": "ADD"
    },
    "16437": {
      "op": "MSTORE"
    },
    "16438": {
      "op": "PUSH2",
      "value": "0x39A1"
    },
    "16441": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16443": {
      "op": "SHL"
    },
    "16444": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16446": {
      "op": "DUP3"
    },
    "16447": {
      "op": "ADD"
    },
    "16448": {
      "op": "MSTORE"
    },
    "16449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16453": {
      "op": "DUP3"
    },
    "16454": {
      "op": "ADD"
    },
    "16455": {
      "op": "MSTORE"
    },
    "16456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16458": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16463": {
      "op": "DUP4"
    },
    "16464": {
      "op": "ADD"
    },
    "16465": {
      "op": "DUP6"
    },
    "16466": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16469": {
      "jump": "i",
      "op": "JUMP"
    },
    "16470": {
      "op": "JUMPDEST"
    },
    "16471": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16473": {
      "op": "DUP2"
    },
    "16474": {
      "op": "MSTORE"
    },
    "16475": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16479": {
      "op": "DUP3"
    },
    "16480": {
      "op": "ADD"
    },
    "16481": {
      "op": "MSTORE"
    },
    "16482": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "16485": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16487": {
      "op": "SHL"
    },
    "16488": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16490": {
      "op": "DUP3"
    },
    "16491": {
      "op": "ADD"
    },
    "16492": {
      "op": "MSTORE"
    },
    "16493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16497": {
      "op": "DUP3"
    },
    "16498": {
      "op": "ADD"
    },
    "16499": {
      "op": "MSTORE"
    },
    "16500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16502": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16507": {
      "op": "DUP4"
    },
    "16508": {
      "op": "ADD"
    },
    "16509": {
      "op": "DUP6"
    },
    "16510": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16513": {
      "jump": "i",
      "op": "JUMP"
    },
    "16514": {
      "op": "JUMPDEST"
    },
    "16515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16517": {
      "op": "DUP2"
    },
    "16518": {
      "op": "MSTORE"
    },
    "16519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16521": {
      "op": "PUSH2",
      "value": "0x4095"
    },
    "16524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16526": {
      "op": "DUP4"
    },
    "16527": {
      "op": "ADD"
    },
    "16528": {
      "op": "DUP6"
    },
    "16529": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16532": {
      "jump": "i",
      "op": "JUMP"
    },
    "16533": {
      "op": "JUMPDEST"
    },
    "16534": {
      "op": "SWAP1"
    },
    "16535": {
      "op": "POP"
    },
    "16536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16538": {
      "op": "DUP1"
    },
    "16539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16541": {
      "op": "SHL"
    },
    "16542": {
      "op": "SUB"
    },
    "16543": {
      "op": "DUP4"
    },
    "16544": {
      "op": "AND"
    },
    "16545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16547": {
      "op": "DUP4"
    },
    "16548": {
      "op": "ADD"
    },
    "16549": {
      "op": "MSTORE"
    },
    "16550": {
      "op": "SWAP4"
    },
    "16551": {
      "op": "SWAP3"
    },
    "16552": {
      "op": "POP"
    },
    "16553": {
      "op": "POP"
    },
    "16554": {
      "op": "POP"
    },
    "16555": {
      "jump": "o",
      "op": "JUMP"
    },
    "16556": {
      "op": "JUMPDEST"
    },
    "16557": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16559": {
      "op": "DUP2"
    },
    "16560": {
      "op": "MSTORE"
    },
    "16561": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16565": {
      "op": "DUP3"
    },
    "16566": {
      "op": "ADD"
    },
    "16567": {
      "op": "MSTORE"
    },
    "16568": {
      "op": "PUSH2",
      "value": "0x31A1"
    },
    "16571": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16573": {
      "op": "SHL"
    },
    "16574": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16576": {
      "op": "DUP3"
    },
    "16577": {
      "op": "ADD"
    },
    "16578": {
      "op": "MSTORE"
    },
    "16579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16583": {
      "op": "DUP3"
    },
    "16584": {
      "op": "ADD"
    },
    "16585": {
      "op": "MSTORE"
    },
    "16586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16588": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16593": {
      "op": "DUP4"
    },
    "16594": {
      "op": "ADD"
    },
    "16595": {
      "op": "DUP6"
    },
    "16596": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16599": {
      "jump": "i",
      "op": "JUMP"
    },
    "16600": {
      "op": "JUMPDEST"
    },
    "16601": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16603": {
      "op": "DUP2"
    },
    "16604": {
      "op": "MSTORE"
    },
    "16605": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16607": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16609": {
      "op": "DUP3"
    },
    "16610": {
      "op": "ADD"
    },
    "16611": {
      "op": "MSTORE"
    },
    "16612": {
      "op": "PUSH2",
      "value": "0x7241"
    },
    "16615": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "16617": {
      "op": "SHL"
    },
    "16618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16620": {
      "op": "DUP3"
    },
    "16621": {
      "op": "ADD"
    },
    "16622": {
      "op": "MSTORE"
    },
    "16623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16627": {
      "op": "DUP3"
    },
    "16628": {
      "op": "ADD"
    },
    "16629": {
      "op": "MSTORE"
    },
    "16630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16632": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16637": {
      "op": "DUP4"
    },
    "16638": {
      "op": "ADD"
    },
    "16639": {
      "op": "DUP6"
    },
    "16640": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16643": {
      "jump": "i",
      "op": "JUMP"
    },
    "16644": {
      "op": "JUMPDEST"
    },
    "16645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16647": {
      "op": "DUP2"
    },
    "16648": {
      "op": "MSTORE"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16651": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "16654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16656": {
      "op": "DUP4"
    },
    "16657": {
      "op": "ADD"
    },
    "16658": {
      "op": "DUP5"
    },
    "16659": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16662": {
      "jump": "i",
      "op": "JUMP"
    },
    "16663": {
      "op": "JUMPDEST"
    },
    "16664": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16666": {
      "op": "DUP2"
    },
    "16667": {
      "op": "MSTORE"
    },
    "16668": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16670": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16672": {
      "op": "DUP3"
    },
    "16673": {
      "op": "ADD"
    },
    "16674": {
      "op": "MSTORE"
    },
    "16675": {
      "op": "PUSH2",
      "value": "0x3221"
    },
    "16678": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16680": {
      "op": "SHL"
    },
    "16681": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16683": {
      "op": "DUP3"
    },
    "16684": {
      "op": "ADD"
    },
    "16685": {
      "op": "MSTORE"
    },
    "16686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16690": {
      "op": "DUP3"
    },
    "16691": {
      "op": "ADD"
    },
    "16692": {
      "op": "MSTORE"
    },
    "16693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16695": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16700": {
      "op": "DUP4"
    },
    "16701": {
      "op": "ADD"
    },
    "16702": {
      "op": "DUP6"
    },
    "16703": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16706": {
      "jump": "i",
      "op": "JUMP"
    },
    "16707": {
      "op": "JUMPDEST"
    },
    "16708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16710": {
      "op": "DUP1"
    },
    "16711": {
      "op": "DUP3"
    },
    "16712": {
      "op": "MSTORE"
    },
    "16713": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16715": {
      "op": "SWAP1"
    },
    "16716": {
      "op": "DUP3"
    },
    "16717": {
      "op": "ADD"
    },
    "16718": {
      "op": "MSTORE"
    },
    "16719": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "16722": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16724": {
      "op": "SHL"
    },
    "16725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16727": {
      "op": "DUP3"
    },
    "16728": {
      "op": "ADD"
    },
    "16729": {
      "op": "MSTORE"
    },
    "16730": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16732": {
      "op": "ADD"
    },
    "16733": {
      "op": "SWAP1"
    },
    "16734": {
      "jump": "o",
      "op": "JUMP"
    },
    "16735": {
      "op": "JUMPDEST"
    },
    "16736": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16738": {
      "op": "DUP2"
    },
    "16739": {
      "op": "MSTORE"
    },
    "16740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16742": {
      "op": "PUSH2",
      "value": "0x4172"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16747": {
      "op": "DUP4"
    },
    "16748": {
      "op": "ADD"
    },
    "16749": {
      "op": "DUP7"
    },
    "16750": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16753": {
      "jump": "i",
      "op": "JUMP"
    },
    "16754": {
      "op": "JUMPDEST"
    },
    "16755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16761": {
      "op": "SHL"
    },
    "16762": {
      "op": "SUB"
    },
    "16763": {
      "op": "SWAP5"
    },
    "16764": {
      "op": "SWAP1"
    },
    "16765": {
      "op": "SWAP5"
    },
    "16766": {
      "op": "AND"
    },
    "16767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16769": {
      "op": "DUP4"
    },
    "16770": {
      "op": "ADD"
    },
    "16771": {
      "op": "MSTORE"
    },
    "16772": {
      "op": "POP"
    },
    "16773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16775": {
      "op": "ADD"
    },
    "16776": {
      "op": "MSTORE"
    },
    "16777": {
      "op": "SWAP2"
    },
    "16778": {
      "op": "SWAP1"
    },
    "16779": {
      "op": "POP"
    },
    "16780": {
      "jump": "o",
      "op": "JUMP"
    },
    "16781": {
      "op": "JUMPDEST"
    },
    "16782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16784": {
      "op": "DUP2"
    },
    "16785": {
      "op": "MSTORE"
    },
    "16786": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16790": {
      "op": "DUP3"
    },
    "16791": {
      "op": "ADD"
    },
    "16792": {
      "op": "MSTORE"
    },
    "16793": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "16796": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16798": {
      "op": "SHL"
    },
    "16799": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16801": {
      "op": "DUP3"
    },
    "16802": {
      "op": "ADD"
    },
    "16803": {
      "op": "MSTORE"
    },
    "16804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16808": {
      "op": "DUP3"
    },
    "16809": {
      "op": "ADD"
    },
    "16810": {
      "op": "MSTORE"
    },
    "16811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16813": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16818": {
      "op": "DUP4"
    },
    "16819": {
      "op": "ADD"
    },
    "16820": {
      "op": "DUP6"
    },
    "16821": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16824": {
      "jump": "i",
      "op": "JUMP"
    },
    "16825": {
      "op": "JUMPDEST"
    },
    "16826": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16828": {
      "op": "DUP2"
    },
    "16829": {
      "op": "MSTORE"
    },
    "16830": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16834": {
      "op": "DUP3"
    },
    "16835": {
      "op": "ADD"
    },
    "16836": {
      "op": "MSTORE"
    },
    "16837": {
      "op": "PUSH3",
      "value": "0x734E53"
    },
    "16841": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "16843": {
      "op": "SHL"
    },
    "16844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16846": {
      "op": "DUP3"
    },
    "16847": {
      "op": "ADD"
    },
    "16848": {
      "op": "MSTORE"
    },
    "16849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16853": {
      "op": "DUP3"
    },
    "16854": {
      "op": "ADD"
    },
    "16855": {
      "op": "MSTORE"
    },
    "16856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16858": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16863": {
      "op": "DUP4"
    },
    "16864": {
      "op": "ADD"
    },
    "16865": {
      "op": "DUP6"
    },
    "16866": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16869": {
      "jump": "i",
      "op": "JUMP"
    },
    "16870": {
      "op": "JUMPDEST"
    },
    "16871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16873": {
      "op": "DUP2"
    },
    "16874": {
      "op": "MSTORE"
    },
    "16875": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16877": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16879": {
      "op": "DUP3"
    },
    "16880": {
      "op": "ADD"
    },
    "16881": {
      "op": "MSTORE"
    },
    "16882": {
      "op": "PUSH2",
      "value": "0x1D55"
    },
    "16885": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16887": {
      "op": "SHL"
    },
    "16888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16890": {
      "op": "DUP3"
    },
    "16891": {
      "op": "ADD"
    },
    "16892": {
      "op": "MSTORE"
    },
    "16893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16897": {
      "op": "DUP3"
    },
    "16898": {
      "op": "ADD"
    },
    "16899": {
      "op": "MSTORE"
    },
    "16900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16902": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16907": {
      "op": "DUP4"
    },
    "16908": {
      "op": "ADD"
    },
    "16909": {
      "op": "DUP6"
    },
    "16910": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16913": {
      "jump": "i",
      "op": "JUMP"
    },
    "16914": {
      "op": "JUMPDEST"
    },
    "16915": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16917": {
      "op": "DUP2"
    },
    "16918": {
      "op": "MSTORE"
    },
    "16919": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16923": {
      "op": "DUP3"
    },
    "16924": {
      "op": "ADD"
    },
    "16925": {
      "op": "MSTORE"
    },
    "16926": {
      "op": "PUSH2",
      "value": "0x1C95"
    },
    "16929": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16931": {
      "op": "SHL"
    },
    "16932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16934": {
      "op": "DUP3"
    },
    "16935": {
      "op": "ADD"
    },
    "16936": {
      "op": "MSTORE"
    },
    "16937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16941": {
      "op": "DUP3"
    },
    "16942": {
      "op": "ADD"
    },
    "16943": {
      "op": "MSTORE"
    },
    "16944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16946": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "16949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16951": {
      "op": "DUP4"
    },
    "16952": {
      "op": "ADD"
    },
    "16953": {
      "op": "DUP6"
    },
    "16954": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16957": {
      "jump": "i",
      "op": "JUMP"
    },
    "16958": {
      "op": "JUMPDEST"
    },
    "16959": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16961": {
      "op": "DUP2"
    },
    "16962": {
      "op": "MSTORE"
    },
    "16963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16965": {
      "op": "PUSH2",
      "value": "0x4251"
    },
    "16968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16970": {
      "op": "DUP4"
    },
    "16971": {
      "op": "ADD"
    },
    "16972": {
      "op": "DUP8"
    },
    "16973": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16976": {
      "jump": "i",
      "op": "JUMP"
    },
    "16977": {
      "op": "JUMPDEST"
    },
    "16978": {
      "op": "DUP3"
    },
    "16979": {
      "op": "DUP2"
    },
    "16980": {
      "op": "SUB"
    },
    "16981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16983": {
      "op": "DUP5"
    },
    "16984": {
      "op": "ADD"
    },
    "16985": {
      "op": "MSTORE"
    },
    "16986": {
      "op": "PUSH2",
      "value": "0x4263"
    },
    "16989": {
      "op": "DUP2"
    },
    "16990": {
      "op": "DUP8"
    },
    "16991": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "16994": {
      "jump": "i",
      "op": "JUMP"
    },
    "16995": {
      "op": "JUMPDEST"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17002": {
      "op": "SHL"
    },
    "17003": {
      "op": "SUB"
    },
    "17004": {
      "op": "SWAP6"
    },
    "17005": {
      "op": "SWAP1"
    },
    "17006": {
      "op": "SWAP6"
    },
    "17007": {
      "op": "AND"
    },
    "17008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17010": {
      "op": "DUP5"
    },
    "17011": {
      "op": "ADD"
    },
    "17012": {
      "op": "MSTORE"
    },
    "17013": {
      "op": "POP"
    },
    "17014": {
      "op": "POP"
    },
    "17015": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17017": {
      "op": "ADD"
    },
    "17018": {
      "op": "MSTORE"
    },
    "17019": {
      "op": "SWAP3"
    },
    "17020": {
      "op": "SWAP2"
    },
    "17021": {
      "op": "POP"
    },
    "17022": {
      "op": "POP"
    },
    "17023": {
      "jump": "o",
      "op": "JUMP"
    },
    "17024": {
      "op": "JUMPDEST"
    },
    "17025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17027": {
      "op": "DUP2"
    },
    "17028": {
      "op": "MSTORE"
    },
    "17029": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17031": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17033": {
      "op": "DUP3"
    },
    "17034": {
      "op": "ADD"
    },
    "17035": {
      "op": "MSTORE"
    },
    "17036": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "17039": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17041": {
      "op": "SHL"
    },
    "17042": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17044": {
      "op": "DUP3"
    },
    "17045": {
      "op": "ADD"
    },
    "17046": {
      "op": "MSTORE"
    },
    "17047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17051": {
      "op": "DUP3"
    },
    "17052": {
      "op": "ADD"
    },
    "17053": {
      "op": "MSTORE"
    },
    "17054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17056": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "17059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17061": {
      "op": "DUP4"
    },
    "17062": {
      "op": "ADD"
    },
    "17063": {
      "op": "DUP6"
    },
    "17064": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17067": {
      "jump": "i",
      "op": "JUMP"
    },
    "17068": {
      "op": "JUMPDEST"
    },
    "17069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17071": {
      "op": "DUP2"
    },
    "17072": {
      "op": "MSTORE"
    },
    "17073": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17075": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17077": {
      "op": "DUP3"
    },
    "17078": {
      "op": "ADD"
    },
    "17079": {
      "op": "MSTORE"
    },
    "17080": {
      "op": "PUSH2",
      "value": "0x6141"
    },
    "17083": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17085": {
      "op": "SHL"
    },
    "17086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17088": {
      "op": "DUP3"
    },
    "17089": {
      "op": "ADD"
    },
    "17090": {
      "op": "MSTORE"
    },
    "17091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17095": {
      "op": "DUP3"
    },
    "17096": {
      "op": "ADD"
    },
    "17097": {
      "op": "MSTORE"
    },
    "17098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17100": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "17103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17105": {
      "op": "DUP4"
    },
    "17106": {
      "op": "ADD"
    },
    "17107": {
      "op": "DUP6"
    },
    "17108": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17111": {
      "jump": "i",
      "op": "JUMP"
    },
    "17112": {
      "op": "JUMPDEST"
    },
    "17113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17115": {
      "op": "DUP2"
    },
    "17116": {
      "op": "MSTORE"
    },
    "17117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17119": {
      "op": "PUSH2",
      "value": "0x42EB"
    },
    "17122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17124": {
      "op": "DUP4"
    },
    "17125": {
      "op": "ADD"
    },
    "17126": {
      "op": "DUP7"
    },
    "17127": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17130": {
      "jump": "i",
      "op": "JUMP"
    },
    "17131": {
      "op": "JUMPDEST"
    },
    "17132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17138": {
      "op": "SHL"
    },
    "17139": {
      "op": "SUB"
    },
    "17140": {
      "op": "DUP6"
    },
    "17141": {
      "op": "AND"
    },
    "17142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17144": {
      "op": "DUP5"
    },
    "17145": {
      "op": "ADD"
    },
    "17146": {
      "op": "MSTORE"
    },
    "17147": {
      "op": "SWAP1"
    },
    "17148": {
      "op": "POP"
    },
    "17149": {
      "op": "PUSH2",
      "value": "0x3AC7"
    },
    "17152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17154": {
      "op": "DUP4"
    },
    "17155": {
      "op": "ADD"
    },
    "17156": {
      "op": "DUP5"
    },
    "17157": {
      "op": "PUSH2",
      "value": "0x3FE6"
    },
    "17160": {
      "jump": "i",
      "op": "JUMP"
    },
    "17161": {
      "op": "JUMPDEST"
    },
    "17162": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17164": {
      "op": "DUP2"
    },
    "17165": {
      "op": "MSTORE"
    },
    "17166": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17168": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17170": {
      "op": "DUP3"
    },
    "17171": {
      "op": "ADD"
    },
    "17172": {
      "op": "MSTORE"
    },
    "17173": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "17176": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "17178": {
      "op": "SHL"
    },
    "17179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17181": {
      "op": "DUP3"
    },
    "17182": {
      "op": "ADD"
    },
    "17183": {
      "op": "MSTORE"
    },
    "17184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17188": {
      "op": "DUP3"
    },
    "17189": {
      "op": "ADD"
    },
    "17190": {
      "op": "MSTORE"
    },
    "17191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17193": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "17196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17198": {
      "op": "DUP4"
    },
    "17199": {
      "op": "ADD"
    },
    "17200": {
      "op": "DUP6"
    },
    "17201": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17204": {
      "jump": "i",
      "op": "JUMP"
    },
    "17205": {
      "op": "JUMPDEST"
    },
    "17206": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17208": {
      "op": "DUP2"
    },
    "17209": {
      "op": "MSTORE"
    },
    "17210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17212": {
      "op": "PUSH2",
      "value": "0x4348"
    },
    "17215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17217": {
      "op": "DUP4"
    },
    "17218": {
      "op": "ADD"
    },
    "17219": {
      "op": "DUP8"
    },
    "17220": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17223": {
      "jump": "i",
      "op": "JUMP"
    },
    "17224": {
      "op": "JUMPDEST"
    },
    "17225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17231": {
      "op": "SHL"
    },
    "17232": {
      "op": "SUB"
    },
    "17233": {
      "op": "SWAP6"
    },
    "17234": {
      "op": "DUP7"
    },
    "17235": {
      "op": "AND"
    },
    "17236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17238": {
      "op": "DUP5"
    },
    "17239": {
      "op": "ADD"
    },
    "17240": {
      "op": "MSTORE"
    },
    "17241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17243": {
      "op": "DUP4"
    },
    "17244": {
      "op": "ADD"
    },
    "17245": {
      "op": "SWAP5"
    },
    "17246": {
      "op": "SWAP1"
    },
    "17247": {
      "op": "SWAP5"
    },
    "17248": {
      "op": "MSTORE"
    },
    "17249": {
      "op": "POP"
    },
    "17250": {
      "op": "SWAP3"
    },
    "17251": {
      "op": "AND"
    },
    "17252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17254": {
      "op": "SWAP1"
    },
    "17255": {
      "op": "SWAP3"
    },
    "17256": {
      "op": "ADD"
    },
    "17257": {
      "op": "SWAP2"
    },
    "17258": {
      "op": "SWAP1"
    },
    "17259": {
      "op": "SWAP2"
    },
    "17260": {
      "op": "MSTORE"
    },
    "17261": {
      "op": "SWAP2"
    },
    "17262": {
      "op": "SWAP1"
    },
    "17263": {
      "op": "POP"
    },
    "17264": {
      "jump": "o",
      "op": "JUMP"
    },
    "17265": {
      "op": "JUMPDEST"
    },
    "17266": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17268": {
      "op": "DUP2"
    },
    "17269": {
      "op": "MSTORE"
    },
    "17270": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17272": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17274": {
      "op": "DUP3"
    },
    "17275": {
      "op": "ADD"
    },
    "17276": {
      "op": "MSTORE"
    },
    "17277": {
      "op": "PUSH2",
      "value": "0x1D15"
    },
    "17280": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17282": {
      "op": "SHL"
    },
    "17283": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17285": {
      "op": "DUP3"
    },
    "17286": {
      "op": "ADD"
    },
    "17287": {
      "op": "MSTORE"
    },
    "17288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17292": {
      "op": "DUP3"
    },
    "17293": {
      "op": "ADD"
    },
    "17294": {
      "op": "MSTORE"
    },
    "17295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17297": {
      "op": "PUSH2",
      "value": "0x3F7D"
    },
    "17300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17302": {
      "op": "DUP4"
    },
    "17303": {
      "op": "ADD"
    },
    "17304": {
      "op": "DUP6"
    },
    "17305": {
      "op": "PUSH2",
      "value": "0x3F25"
    },
    "17308": {
      "jump": "i",
      "op": "JUMP"
    },
    "17309": {
      "op": "JUMPDEST"
    },
    "17310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17312": {
      "op": "DUP3"
    },
    "17313": {
      "op": "PUSH2",
      "value": "0x43AC"
    },
    "17316": {
      "op": "JUMPI"
    },
    "17317": {
      "op": "PUSH2",
      "value": "0x43AC"
    },
    "17320": {
      "op": "PUSH2",
      "value": "0x3EE8"
    },
    "17323": {
      "jump": "i",
      "op": "JUMP"
    },
    "17324": {
      "op": "JUMPDEST"
    },
    "17325": {
      "op": "POP"
    },
    "17326": {
      "op": "MOD"
    },
    "17327": {
      "op": "SWAP1"
    },
    "17328": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c4dafb8af5be5d2fac40bac9d57dbbe93efc1ae9",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.4;\n\nimport \"./idea.sol\";\n\n/// @title An extension of the Idea providing an administrable interface.\n/// @author Frederik W. L. Christoffersen\n/// @notice This contract adds administrability via permits and internally closed money supplies.\ncontract Administrable is Idea {\n\n    /// @notice An enum representing a Permit State of one of the many permits.\n    /// @param unauthorized The permit is NOT authorized.\n    /// @param authorized The permit is authorized.\n    /// @param administrator The holder of the permit is not only authorized but also an administrator of it too.\n    enum PermitState {\n        unauthorized,\n        authorized,\n        administrator\n    }\n\n    /// @notice A struct representing the information of a Dividend given to all current Shard holders.\n    /// @param tokenAddress The address of the token, in which the value of the Dividend is issued.\n    /// @param value The original value/amount of the Dividend before claims.\n    struct DividendInfo {\n        address tokenAddress;\n        uint256 value;\n    }\n\n    /// @notice A boolean stating if Non Shard Holders are allowed to administer the administrable or not.\n    bool allowNonShardHolders;\n\n    /// @notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not.\n    mapping(string => bool) validBanks;\n    \n    /// @notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank.\n    mapping(string => uint256) storedTokenAddressesByBank;\n\n    /// @notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address.\n    mapping(string => mapping(address => uint256)) balanceByBank;\n\n     /// @notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds.\n    mapping(string => mapping(address => bool)) adminOfBank;\n\n    /// @notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n    /// @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;\n    mapping(string => mapping(address => PermitState)) permits;\n\n    /// @notice A mapping pointing to a base Permit State, given the name of the permit.\n    mapping(string => PermitState) basePermits;\n    \n    /// @notice A mapping pointing to a boolean stating if a given Dividend is valid or not.\n    mapping(uint256 => bool) validDividends;\n\n    /// @notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => DividendInfo) infoByDividend;\n\n    /// @notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => uint256) residualByDividend;\n\n    /// @notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard.\n    mapping(uint256 => mapping(bytes32  => bool)) hasClaimedDividend;\n\n    /// @notice Event that triggers when an action is taken by somebody.\n    /// @param func The name of the function that was called.\n    /// @param args The arguments passed to the function call.\n    /// @param by The initiator of the action.\n    event ActionTaken(\n        string func,\n        bytes args,\n        address by\n        );\n\n    /// @notice Modifier that makes sure msg.sender has a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyWithPermit(string memory permitName) {\n        require(hasPermit(permitName, msg.sender));\n        _;\n    }\n    \n    /// @notice Modifier that makes sure msg.sender is an admin of a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyPermitAdmin(string memory permitName) {\n        require(isPermitAdmin(permitName, msg.sender));\n        _;\n\n    }\n\n    /// @notice Modifier that makes sure msg.sender is admin of a given bank.\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyBankAdmin(string memory bankName) {\n        require(isBankAdmin(bankName, msg.sender));\n        _;\n    }\n\n    /// @notice Modifier that makes sure a given bank exists\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyExistingBank(string memory bankName) {\n        require(bankExists(bankName), \"DNE\");\n        _;\n    }\n    \n    /// @notice Modifier that makes sure a given dividend exists and is valid\n    /// @param dividend The Dividend to be checked for.\n    modifier onlyExistingDividend(uint256 dividend) {\n        require(dividendExists(dividend));\n        _;\n    }\n\n    /// @notice Constructor function connecting the Idea entity and creating a Bank with an administrator.\n    constructor() {\n        _createBank(\"main\",msg.sender);\n        _setPermit(\"sNS\", msg.sender, PermitState.administrator);\n        _setPermit(\"iD\", msg.sender, PermitState.administrator);\n        _setPermit(\"dD\", msg.sender, PermitState.administrator);\n        _setPermit(\"mB\", msg.sender, PermitState.administrator);\n        _setPermit(\"lE\", msg.sender, PermitState.administrator);\n        _setPermit(\"mAT\", msg.sender, PermitState.administrator);\n    }\n\n    /// @notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n    /// @param shard The shard that was valid at the clock of the Dividend creation\n    /// @param dividend The dividend to be claimed.\n    function claimDividend(bytes32 shard, uint256 dividend) external onlyHolder(shard) onlyExistingDividend(dividend) onlyIfActive {\n        require(shardExisted(shard,dividend), \"NAF\");\n        require(hasClaimedDividend[dividend][shard] == false, \"AC\");\n        hasClaimedDividend[dividend][shard] = true;\n        uint256 dividendValue = infoByDividend[dividend].value * infoByShard[shard].numerator / infoByShard[shard].denominator;\n        require(dividendValue != 0, \"DTS\");\n        residualByDividend[dividend] -= dividendValue;\n        _transferToken(infoByDividend[dividend].tokenAddress,dividendValue,msg.sender);\n        emit ActionTaken(\"cD\",abi.encode(dividend,dividendValue),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function registerTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _registerTokenAddress(tokenAddress);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function unregisterTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _unregisterTokenAddress(tokenAddress);\n    }\n\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function issueDividend(string memory bankName, address tokenAddress, uint256 value) external onlyWithPermit(\"iD\") onlyBankAdmin(bankName) {\n        _issueDividend(bankName,tokenAddress,value);  \n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function dissolveDividend(uint256 dividend) external onlyWithPermit(\"dD\") {\n        _dissolveDividend(dividend);\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function createBank(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyIfActive {\n       _createBank(bankName,bankAdmin);\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function addBankAdmin(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyBankAdmin(bankName) {\n        require(isShardHolder(bankAdmin) || allowNonShardHolders, \"NSHNA\");\n        _addBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function removeBankAdmin(string memory bankName, address bankAdmin) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _removeBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function deleteBank(string memory bankName) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _deleteBank(bankName);\n    }\n\n    /// @notice Transfers a token bankAdmin a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) external onlyBankAdmin(bankName) {\n        _transferTokenFromBank(bankName,tokenAddress,value,to);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) external onlyBankAdmin(fromBankName) {\n        _moveToken(fromBankName,toBankName,tokenAddress,value);\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param account The address, whose permit state is to be set.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function setPermit(string memory permitName, address account, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(isShardHolder(account) || allowNonShardHolders, \"NSHNA\");\n        require(permits[permitName][account] != newState, \"AHP\");\n        _setPermit(permitName,account,newState);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function setBasePermit(string memory permitName, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(basePermits[permitName] != newState, \"AS\");\n        _setBasePermit(permitName,newState);\n    }\n\n    /// @notice Sets the state of the Non Shard Holders.\n    /// @param newState The Boolean state to be applied.\n    function setNonShardHolderState(bool newState) external onlyWithPermit(\"sNS\") {\n        require(allowNonShardHolders != newState, \"AS\");\n        _setNonShardHolderState(newState);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function liquidize() external onlyWithPermit(\"lE\") {\n        _liquidize();\n    }\n\n    /// @notice Returns the balance of a bank.\n    /// @param bankName The name of the Bank.\n    /// @param tokenAddress The address of the token balance to check for.\n    function getBankBalance(string memory bankName, address tokenAddress) public view returns(uint256) {\n        return balanceByBank[bankName][tokenAddress];\n    }\n    \n    /// @notice Returns the token of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendToken(uint256 dividend) public view returns(address) {\n        return infoByDividend[dividend].tokenAddress;\n    }\n    \n    /// @notice Returns the total value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendValue(uint256 dividend) public view returns(uint256) {\n        return infoByDividend[dividend].value;\n    }\n\n    /// @notice Returns the residual value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendResidual(uint256 dividend) public view returns(uint256) {\n        return residualByDividend[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given Bank exists.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankExists(string memory bankName) public view returns(bool) {\n        return validBanks[bankName] == true;\n    }\n\n    /// @notice Returns a boolean stating if a given Bank is empty.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankIsEmpty(string memory bankName) public view returns(bool) {\n        return storedTokenAddressesByBank[bankName] == 0 && balanceByBank[bankName][address(0)] == 0;\n    }\n    \n    /// @notice Returns a boolean stating if a given Dividend exists.\n    /// @param dividend The Dividend to be checked for.\n    function dividendExists(uint256 dividend) public view returns(bool) {\n      return validDividends[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given bank.\n    /// @param account The address to be checked for.\n    /// @param bankName The name of the Bank to be checked for.\n    function isBankAdmin(string memory bankName, address account) public view returns(bool) {\n        return adminOfBank[bankName][account] == true || isPermitAdmin(\"mB\",account);\n    }\n\n    /// @notice Returns a boolean stating if a given address has a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function hasPermit(string memory permitName, address account) public view returns(bool) {\n        if (!(isShardHolder(account) || allowNonShardHolders)) {return false;}\n        return permits[permitName][account] >= PermitState.authorized || basePermits[permitName] >= PermitState.authorized;\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function isPermitAdmin(string memory permitName, address account) public view returns(bool) {\n        if (!(isShardHolder(account) || allowNonShardHolders)) {return false;}\n        return permits[permitName][account] == PermitState.administrator || basePermits[permitName] == PermitState.administrator;\n    }\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function _issueDividend(string memory bankName, address tokenAddress, uint256 value) internal onlyIfActive {\n        uint256 transferClock = clock;\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        infoByDividend[transferClock] = DividendInfo({\n            tokenAddress:tokenAddress,\n            value:value\n        });\n        residualByDividend[transferClock] = value;\n        validDividends[transferClock] = true;\n        emit ActionTaken(\"iD\",abi.encode(bankName,tokenAddress,value),msg.sender);\n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function _dissolveDividend(uint256 dividend) internal onlyExistingDividend(dividend) onlyIfActive {\n        validDividends[dividend] = false; // -1 to distinguish between empty values;\n        balanceByBank[\"main\"][infoByDividend[dividend].tokenAddress] += residualByDividend[dividend];\n        emit ActionTaken(\"dD\",abi.encode(dividend),msg.sender);\n\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function _createBank(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(!bankExists(bankName), \"AE\");\n        adminOfBank[bankName][bankAdmin] = true;\n        validBanks[bankName] = true;\n        emit ActionTaken(\"cB\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function _addBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(hasPermit(\"mB\",bankAdmin),\"NP\");\n        adminOfBank[bankName][bankAdmin] = true;\n        emit ActionTaken(\"aA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function _removeBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(isBankAdmin(bankName,bankAdmin));\n        adminOfBank[bankName][bankAdmin] = false;\n        emit ActionTaken(\"rA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function _deleteBank(string memory bankName) internal onlyIfActive {\n        require(bankExists(bankName), \"UB!\");\n        require(keccak256(bytes(bankName)) != keccak256(bytes(\"main\")), \"MB\");\n        require(bankIsEmpty(bankName), \"BE\");\n        validBanks[bankName] = false;\n        emit ActionTaken(\"dB\",abi.encode(bankName),msg.sender);\n\n    }\n\n    /// @notice Transfers a token from a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function _transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) internal onlyIfActive {\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        _transferToken(tokenAddress,value,to);\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        emit ActionTaken(\"tT\",abi.encode(bankName,tokenAddress,value,to),msg.sender);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function _moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) internal onlyExistingBank(toBankName) onlyIfActive {\n        require(value <= balanceByBank[fromBankName][tokenAddress], \"IF\");\n        balanceByBank[fromBankName][tokenAddress] -= value;\n        if (tokenAddress != address(0)) {\n            if (balanceByBank[fromBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[fromBankName] -= 1;\n\n            }\n            if (balanceByBank[toBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[toBankName] += 1;\n            }\n        }\n        balanceByBank[toBankName][tokenAddress] += value;\n        emit ActionTaken(\"mT\",abi.encode(fromBankName,toBankName,tokenAddress,value),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param account The address, whose permit state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function _setPermit(string memory permitName, address account, PermitState newState) internal onlyIfActive {\n        permits[permitName][account] = newState;\n        emit ActionTaken(\"sP\",abi.encode(permitName,account,newState),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function _setBasePermit(string memory permitName, PermitState newState) internal onlyIfActive {\n        basePermits[permitName] = newState;\n        emit ActionTaken(\"sB\",abi.encode(permitName,newState),msg.sender);\n    }\n\n    /// @notice Sets the state of the Non Shard Holders.\n    /// @param newState The Boolean state to be applied.\n    function _setNonShardHolderState(bool newState) internal onlyIfActive {\n        allowNonShardHolders = newState;\n        emit ActionTaken(\"sNS\",abi.encode(newState),msg.sender);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function _unregisterTokenAddress(address tokenAddress) override internal {\n        super._unregisterTokenAddress(tokenAddress);\n        emit ActionTaken(\"uT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function _registerTokenAddress(address tokenAddress) override internal {\n        super._registerTokenAddress(tokenAddress);\n        emit ActionTaken(\"rT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Keeps track of a token receipt by adding it to the registry\n    /// @param tokenAddress The address of the received token.\n    /// @param value The value/amount of the received token.\n    /// @param from The sender of the received token.\n    function _processTokenReceipt(address tokenAddress, uint256 value, address from) override internal {\n        super._processTokenReceipt(tokenAddress, value, from);\n        // Then: Bank logic\n        if (balanceByBank[\"main\"][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[\"main\"] += 1;\n        }\n        balanceByBank[\"main\"][tokenAddress] += value;\n        emit TokenReceived(tokenAddress,value,from);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function _liquidize() override internal {\n        super._liquidize();\n        emit ActionTaken(\"lE\",\"\",msg.sender);\n    }\n\n}",
  "sourceMap": "307:23654:0:-:0;;;4857:1:2;4841:17;;4936:453:0;;;;;;;;;-1:-1:-1;8903:31:2;8914:1;;8920:10;8932:1;8903:10;:31::i;:::-;8953:4;8944:13;;-1:-1:-1;;8944:13:2;;;;;4960:30:0;;;;;;;;;;;;-1:-1:-1;;;4960:30:0;;;;;;4979:10;4960:11;:30::i;:::-;5000:56;;;;;;;;;;;;-1:-1:-1;;;5000:56:0;;;;;;5018:10;5030:25;5000:10;:56::i;:::-;5066:55;;;;;;;;;;;;;;-1:-1:-1;;;5066:55:0;;;5083:10;5095:25;5066:10;;;:55;;:::i;:::-;5131;;;;;;;;;;;;;;-1:-1:-1;;;5131:55:0;;;5148:10;5160:25;5131:10;;;:55;;:::i;:::-;5196;;;;;;;;;;;;;;-1:-1:-1;;;5196:55:0;;;5213:10;5225:25;5196:10;;;:55;;:::i;:::-;5261;;;;;;;;;;;;;;-1:-1:-1;;;5261:55:0;;;5278:10;5290:25;5261:10;;;:55;;:::i;:::-;5326:56;;;;;;;;;;;;-1:-1:-1;;;5326:56:0;;;;;;5344:10;5356:25;5326:10;:56::i;:::-;307:23654;;18317:750:2;18506:37;;-1:-1:-1;;;;;;216:2:8;187:15;;;183:45;18506:37:2;;;171:58:8;245:12;;;238:28;;;18480:13:2;;282:12:8;;18506:37:2;;;;;;-1:-1:-1;;18506:37:2;;;;;;18496:48;;18506:37;18496:48;;;;-1:-1:-1;;;;;18554:19:2;;;;;;;:12;:19;;;;;;:27;;;18591;;;:20;:27;;;;;-1:-1:-1;;18591:47:2;;18746:263;;;;;;;;;;;;;;;;;;;;;;;;;;;18725:18;;;:11;:18;;;;;;;:284;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18725:284:2;;;;;;;;;;;;;;;;;;;;;;19024:35;;507:25:8;;;548:18;;;541:60;;;;617:18;;;610:34;;;18496:48:2;;-1:-1:-1;19024:35:2;;480:18:8;19024:35:2;;;;;;;18424:643;18317:750;;;;:::o;17123:300:0:-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;857:2:8;8388:29:2;;;839:21:8;896:1;876:18;;;869:29;-1:-1:-1;;;914:18:8;;;907:32;956:18;;8388:29:2;;;;;;;;;17228:20:0::1;17239:8:::0;17228:10:::1;:20::i;:::-;17227:21;17219:36;;;::::0;-1:-1:-1;;;17219:36:0;;1187:2:8;17219:36:0::1;::::0;::::1;1169:21:8::0;1226:1;1206:18;;;1199:29;-1:-1:-1;;;1244:18:8;;;1237:32;1286:18;;17219:36:0::1;985:325:8::0;17219:36:0::1;17300:4;17265:11;17277:8;17265:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17265:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17265:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17314:10:0::1;::::0;:20:::1;::::0;17325:8;;17314:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17314:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17356:59:0;17373:30:::1;::::0;17384:8;;17393:9;;17373:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17373:30:0;;::::1;::::0;;;;;;;17356:59:::1;::::0;17404:10:::1;::::0;17356:59:::1;:::i;:::-;;;;;;;;17123:300:::0;;:::o;21271:247::-;8396:6:2;;;;;:14;;;8388:29;;;;-1:-1:-1;;;8388:29:2;;857:2:8;8388:29:2;;;839:21:8;896:1;876:18;;;869:29;-1:-1:-1;;;914:18:8;;;907:32;956:18;;8388:29:2;655:325:8;8388:29:2;21419:8:0::1;21388:7;21396:10;21388:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21388:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21388:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21470:10:0::1;21481:7;21489:8;21459:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21459:39:0;;::::1;::::0;;;;;;;21442:68:::1;::::0;21499:10:::1;::::0;21442:68:::1;:::i;:::-;;;;;;;;21271:247:::0;;;:::o;13221:122::-;13285:4;13308:10;13319:8;13308:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13221:122;-1:-1:-1;;13221:122:0:o;1315:250:8:-;1400:1;1410:113;1424:6;1421:1;1418:13;1410:113;;;1500:11;;;1494:18;1481:11;;;1474:39;1446:2;1439:10;1410:113;;;-1:-1:-1;;1557:1:8;1539:16;;1532:27;1315:250::o;1570:289::-;1701:3;1739:6;1733:13;1755:66;1814:6;1809:3;1802:4;1794:6;1790:17;1755:66;:::i;:::-;1837:16;;;;;1570:289;-1:-1:-1;;1570:289:8:o;1864:271::-;1906:3;1944:5;1938:12;1971:6;1966:3;1959:19;1987:76;2056:6;2049:4;2044:3;2040:14;2033:4;2026:5;2022:16;1987:76;:::i;:::-;2117:2;2096:15;-1:-1:-1;;2092:29:8;2083:39;;;;2124:4;2079:50;;1864:271;-1:-1:-1;;1864:271:8:o;2140:317::-;2317:2;2306:9;2299:21;2280:4;2337:45;2378:2;2367:9;2363:18;2355:6;2337:45;:::i;:::-;2329:53;;2447:1;2443;2438:3;2434:11;2430:19;2422:6;2418:32;2413:2;2402:9;2398:18;2391:60;2140:317;;;;;:::o;2462:539::-;2738:2;2727:9;2720:21;2777:1;2772:2;2761:9;2757:18;2750:29;-1:-1:-1;;;2810:3:8;2799:9;2795:19;2788:33;2859:3;2852:4;2841:9;2837:20;2830:33;2701:4;2880:46;2921:3;2910:9;2906:19;2898:6;2880:46;:::i;:::-;2872:54;;2991:1;2987;2982:3;2978:11;2974:19;2966:6;2962:32;2957:2;2946:9;2942:18;2935:60;2462:539;;;;;:::o;3006:127::-;3067:10;3062:3;3058:20;3055:1;3048:31;3098:4;3095:1;3088:15;3122:4;3119:1;3112:15;3138:552;3354:2;3343:9;3336:21;3317:4;3374:45;3415:2;3404:9;3400:18;3392:6;3374:45;:::i;:::-;-1:-1:-1;;;;;3455:32:8;;3450:2;3435:18;;3428:60;3366:53;-1:-1:-1;3518:1:8;3507:13;;3497:144;;3563:10;3558:3;3554:20;3551:1;3544:31;3598:4;3595:1;3588:15;3626:4;3623:1;3616:15;3497:144;3677:6;3672:2;3661:9;3657:18;3650:34;3138:552;;;;;;:::o;3695:539::-;3971:2;3960:9;3953:21;4010:1;4005:2;3994:9;3990:18;3983:29;-1:-1:-1;;;4043:3:8;4032:9;4028:19;4021:33;4092:3;4085:4;4074:9;4070:20;4063:33;3934:4;4113:46;4154:3;4143:9;4139:19;4131:6;4113:46;:::i;3695:539::-;307:23654:0;;;;;;",
  "sourcePath": "contracts/administrable.sol",
  "type": "contract"
}