{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "ActionTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationClock",
          "type": "uint256"
        }
      ],
      "name": "ExpiredShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "name": "NewShard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "PutForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "SaleSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "acceptsToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "addBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "bankIsEmpty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "claimDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimLiquid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimTerminatedLiquid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "createBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        }
      ],
      "name": "deleteBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dissolveDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "dividendExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBankBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "getDividendValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getLiquidResidual",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardExpirationClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "getShardSalePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasPermit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "infoByShard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creationClock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBankAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPermitAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isShardHolder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTerminated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        }
      ],
      "name": "isValidShard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "issueDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "issueShards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromBankName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "toBankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "moveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "putForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "receiveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "bankAdmin",
          "type": "address"
        }
      ],
      "name": "removeBankAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setBasePermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "permitName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "enum Administrable.PermitState",
          "name": "newState",
          "type": "uint8"
        }
      ],
      "name": "setPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shardByOwner",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "shard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "atClock",
          "type": "uint256"
        }
      ],
      "name": "shardExisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "senderShard",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "split",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalShardAmountByClock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferTokenFromBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "unregisterTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/administrable.sol",
    "1": "contracts/idea.sol",
    "2": "contracts/shardable.sol"
  },
  "ast": {
    "absolutePath": "contracts/administrable.sol",
    "exportedSymbols": {
      "Administrable": [
        1460
      ],
      "Context": [
        4770
      ],
      "ERC20": [
        4645
      ],
      "IERC20": [
        4723
      ],
      "IERC20Metadata": [
        4748
      ],
      "IIdea": [
        2123
      ],
      "Idea": [
        2112
      ],
      "Shardable": [
        3102
      ],
      "divideUnequallyIntoTwoWithRemainder": [
        2175
      ]
    },
    "id": 1461,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:0"
      },
      {
        "absolutePath": "contracts/idea.sol",
        "file": "./idea.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1461,
        "sourceUnit": 2113,
        "src": "71:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Idea",
              "nameLocations": [
                "333:4:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2112,
              "src": "333:4:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "333:4:0"
          }
        ],
        "canonicalName": "Administrable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "93:214:0",
          "text": "@title An extension of the Idea providing an administrable interface.\n @author Frederik W. L. Christoffersen\n @notice This contract adds administrability via permits and internally closed money supplies."
        },
        "fullyImplemented": true,
        "id": 1460,
        "linearizedBaseContracts": [
          1460,
          2112,
          3102
        ],
        "name": "Administrable",
        "nameLocation": "316:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Administrable.PermitState",
            "id": 9,
            "members": [
              {
                "id": 6,
                "name": "unauthorized",
                "nameLocation": "676:12:0",
                "nodeType": "EnumValue",
                "src": "676:12:0"
              },
              {
                "id": 7,
                "name": "authorized",
                "nameLocation": "698:10:0",
                "nodeType": "EnumValue",
                "src": "698:10:0"
              },
              {
                "id": 8,
                "name": "administrator",
                "nameLocation": "718:13:0",
                "nodeType": "EnumValue",
                "src": "718:13:0"
              }
            ],
            "name": "PermitState",
            "nameLocation": "654:11:0",
            "nodeType": "EnumDefinition",
            "src": "649:88:0"
          },
          {
            "canonicalName": "Administrable.DividendInfo",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "1063:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1055:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1055:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1093:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "1085:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DividendInfo",
            "nameLocation": "1032:12:0",
            "nodeType": "StructDefinition",
            "scope": 1460,
            "src": "1025:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "1111:91:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not."
            },
            "id": 19,
            "mutability": "mutable",
            "name": "validBanks",
            "nameLocation": "1231:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "1207:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 18,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 16,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1215:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1207:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 17,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1225:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "1252:114:0",
              "text": "@notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank."
            },
            "id": 24,
            "mutability": "mutable",
            "name": "storedTokenAddressesByBank",
            "nameLocation": "1398:26:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "1371:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1379:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1371:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1389:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "1431:136:0",
              "text": "@notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address."
            },
            "id": 31,
            "mutability": "mutable",
            "name": "balanceByBank",
            "nameLocation": "1619:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "1572:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(string => mapping(address => uint256))"
            },
            "typeName": {
              "id": 30,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1580:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1572:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(string => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 29,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1598:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1590:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1609:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "1640:169:0",
              "text": "@notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds."
            },
            "id": 38,
            "mutability": "mutable",
            "name": "adminOfBank",
            "nameLocation": "1858:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "1814:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(string => mapping(address => bool))"
            },
            "typeName": {
              "id": 37,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1822:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1814:43:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(string => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 36,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1840:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1832:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 35,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1851:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "1876:260:0",
              "text": "@notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
            },
            "id": 46,
            "mutability": "mutable",
            "name": "permits",
            "nameLocation": "2192:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2141:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
              "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
            },
            "typeName": {
              "id": 45,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 40,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2149:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2141:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                "typeString": "mapping(string => mapping(address => enum Administrable.PermitState))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2167:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2159:31:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                  "typeString": "mapping(address => enum Administrable.PermitState)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 43,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 42,
                    "name": "PermitState",
                    "nameLocations": [
                      "2178:11:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9,
                    "src": "2178:11:0"
                  },
                  "referencedDeclaration": 9,
                  "src": "2178:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 47,
              "nodeType": "StructuredDocumentation",
              "src": "2206:84:0",
              "text": "@notice A mapping pointing to a base Permit State, given the name of the permit."
            },
            "id": 52,
            "mutability": "mutable",
            "name": "basePermits",
            "nameLocation": "2326:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2295:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
              "typeString": "mapping(string => enum Administrable.PermitState)"
            },
            "typeName": {
              "id": 51,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2303:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2295:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                "typeString": "mapping(string => enum Administrable.PermitState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 49,
                  "name": "PermitState",
                  "nameLocations": [
                    "2313:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9,
                  "src": "2313:11:0"
                },
                "referencedDeclaration": 9,
                "src": "2313:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PermitState_$9",
                  "typeString": "enum Administrable.PermitState"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "2348:88:0",
              "text": "@notice A mapping pointing to a boolean stating if a given Dividend is valid or not."
            },
            "id": 57,
            "mutability": "mutable",
            "name": "validDividends",
            "nameLocation": "2466:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2441:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 56,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 54,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2449:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2441:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 55,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2460:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "2487:98:0",
              "text": "@notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend."
            },
            "id": 63,
            "mutability": "mutable",
            "name": "infoByDividend",
            "nameLocation": "2623:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2590:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
              "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
            },
            "typeName": {
              "id": 62,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2598:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2590:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                "typeString": "mapping(uint256 => struct Administrable.DividendInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 61,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60,
                  "name": "DividendInfo",
                  "nameLocations": [
                    "2609:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "2609:12:0"
                },
                "referencedDeclaration": 14,
                "src": "2609:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DividendInfo_$14_storage_ptr",
                  "typeString": "struct Administrable.DividendInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 64,
              "nodeType": "StructuredDocumentation",
              "src": "2644:102:0",
              "text": "@notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend."
            },
            "id": 68,
            "mutability": "mutable",
            "name": "residualByDividend",
            "nameLocation": "2779:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2751:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 67,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 65,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2759:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2751:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2770:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "2804:154:0",
              "text": "@notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard."
            },
            "id": 75,
            "mutability": "mutable",
            "name": "hasClaimedDividend",
            "nameLocation": "3009:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1460,
            "src": "2963:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 74,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 70,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2971:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2963:45:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 71,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2990:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2982:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 72,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3002:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "3034:240:0",
              "text": "@notice Event that triggers when an action is taken by somebody.\n @param func The name of the function that was called.\n @param args The arguments passed to the function call.\n @param by The initiator of the action."
            },
            "eventSelector": "43cd76b5eb40da9ea5eb31a199f443f7cf7955ec280bc5981a2e3445c79c9055",
            "id": 84,
            "name": "ActionTaken",
            "nameLocation": "3285:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "func",
                  "nameLocation": "3313:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "3306:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3333:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "3327:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "3355:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "3347:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:71:0"
            },
            "src": "3279:89:0"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "3564:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "3592:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 92,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3604:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3608:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3604:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "3582:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3582:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3574:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:42:0"
                },
                {
                  "id": 97,
                  "nodeType": "PlaceholderStatement",
                  "src": "3626:1:0"
                }
              ]
            },
            "documentation": {
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "3374:135:0",
              "text": "@notice Modifier that makes sure msg.sender has a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 99,
            "name": "onlyWithPermit",
            "nameLocation": "3523:14:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3552:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "3538:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3538:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3537:26:0"
            },
            "src": "3514:120:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "3846:75:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "3878:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3890:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3894:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3890:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 105,
                          "name": "isPermitAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 796,
                          "src": "3864:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3864:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3856:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:46:0"
                },
                {
                  "id": 112,
                  "nodeType": "PlaceholderStatement",
                  "src": "3912:1:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "3644:146:0",
              "text": "@notice Modifier that makes sure msg.sender is an admin of a given permit.\n @param permitName The name of the permit to be checked for."
            },
            "id": 114,
            "name": "onlyPermitAdmin",
            "nameLocation": "3804:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "3834:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3820:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3820:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3819:26:0"
            },
            "src": "3795:126:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "4116:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 121,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "4146:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4156:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4160:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4156:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 120,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4134:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4134:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4126:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:42:0"
                },
                {
                  "id": 127,
                  "nodeType": "PlaceholderStatement",
                  "src": "4178:1:0"
                }
              ]
            },
            "documentation": {
              "id": 115,
              "nodeType": "StructuredDocumentation",
              "src": "3927:137:0",
              "text": "@notice Modifier that makes sure msg.sender is admin of a given bank.\n @param bankName The name of the Bank to be checked for."
            },
            "id": 129,
            "name": "onlyBankAdmin",
            "nameLocation": "4078:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4106:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "4092:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4091:24:0"
            },
            "src": "4069:117:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "4367:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 136,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "4396:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 135,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "4385:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444e45",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4407:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        },
                        "value": "DNE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9b054de270c30ccc5535282866a66676fca5f363faf35d797d3f212fba44710",
                          "typeString": "literal_string \"DNE\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4377:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:36:0"
                },
                {
                  "id": 141,
                  "nodeType": "PlaceholderStatement",
                  "src": "4423:1:0"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "4192:120:0",
              "text": "@notice Modifier that makes sure a given bank exists\n @param bankName The name of the Bank to be checked for."
            },
            "id": 143,
            "name": "onlyExistingBank",
            "nameLocation": "4326:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "4357:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "4343:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4343:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4342:24:0"
            },
            "src": "4317:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "4623:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 150,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4656:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 149,
                          "name": "dividendExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "4641:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4641:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4633:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4633:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:33:0"
                },
                {
                  "id": 154,
                  "nodeType": "PlaceholderStatement",
                  "src": "4676:1:0"
                }
              ]
            },
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "4441:129:0",
              "text": "@notice Modifier that makes sure a given dividend exists and is valid\n @param dividend The Dividend to be checked for."
            },
            "id": 156,
            "name": "onlyExistingDividend",
            "nameLocation": "4584:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "4613:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "4605:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4605:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4604:18:0"
            },
            "src": "4575:109:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "4838:504:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d61696e",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4860:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        "value": "main"
                      },
                      {
                        "expression": {
                          "id": 167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4867:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4871:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4867:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                          "typeString": "literal_string \"main\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 165,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "4848:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "4848:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "734e53",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4899:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        "value": "sNS"
                      },
                      {
                        "expression": {
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4906:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4910:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4906:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 175,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4918:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4930:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "4918:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6a729ef647d42a1b882cee660ca3e23d9dc3fab81118b3e5d99255a1f2dd79d",
                          "typeString": "literal_string \"sNS\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 171,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "4888:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4888:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "4888:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6953",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4965:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                          "typeString": "literal_string \"iS\""
                        },
                        "value": "iS"
                      },
                      {
                        "expression": {
                          "id": 181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4971:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4975:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4971:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 183,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4983:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4995:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "4983:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                          "typeString": "literal_string \"iS\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 179,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "4954:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4954:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "4954:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "expression": {
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5036:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5040:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5036:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 191,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5048:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5060:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5048:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 187,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "5019:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5019:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5095:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "expression": {
                          "id": 197,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5101:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5105:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5101:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 199,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5113:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5125:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5113:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 195,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "5084:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d42",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5160:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        "value": "mB"
                      },
                      {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5166:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5170:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5166:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 207,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5178:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5190:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5178:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                          "typeString": "literal_string \"mB\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 203,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "5149:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "5149:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5225:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5231:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5235:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5231:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 215,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5243:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5255:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5243:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 211,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "5214:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5214:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d4154",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5290:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        "value": "mAT"
                      },
                      {
                        "expression": {
                          "id": 221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5297:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5301:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5297:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 223,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5309:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5321:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5309:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                          "typeString": "literal_string \"mAT\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 219,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "5279:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:56:0"
                }
              ]
            },
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "4690:102:0",
              "text": "@notice Constructor function connecting the Idea entity and creating a Bank with an administrator."
            },
            "id": 228,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 162,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "4830:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 163,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 161,
                  "name": "Idea",
                  "nameLocations": [
                    "4825:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2112,
                  "src": "4825:4:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4825:12:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4817:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4809:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4809:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4808:16:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4838:0:0"
            },
            "scope": 1460,
            "src": "4797:545:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "5731:572:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 246,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "5762:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 247,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "5768:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 245,
                          "name": "shardExisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2800,
                          "src": "5749:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32,uint256) view returns (bool)"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5749:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4146",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5779:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        },
                        "value": "NAF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20ccbfcd493b6e6ef25a998d496844aca79e45f16bde73b6b52fd155ad45e12c",
                          "typeString": "literal_string \"NAF\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5741:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 253,
                              "name": "hasClaimedDividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "5803:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 255,
                            "indexExpression": {
                              "id": 254,
                              "name": "dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "5822:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5803:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 257,
                          "indexExpression": {
                            "id": 256,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "5832:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5803:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5842:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5803:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4143",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5849:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        },
                        "value": "AC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8000d6c495cd6554eda9c41698803d200f48131d5e2449a72bf3e85f02df92f3",
                          "typeString": "literal_string \"AC\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5795:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5795:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "5795:59:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 263,
                          "name": "hasClaimedDividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "5864:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "id": 264,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "5883:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5864:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "id": 265,
                        "name": "shard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "5893:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5864:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5902:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5864:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "5864:42:0"
                },
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "dividendValue",
                      "nameLocation": "5924:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 321,
                      "src": "5916:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5916:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 286,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 273,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "5940:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "5955:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5940:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5965:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "5940:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 277,
                            "name": "infoByShard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2210,
                            "src": "5973:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ShardInfo_$2183_storage_$",
                              "typeString": "mapping(bytes32 => struct Shardable.ShardInfo storage ref)"
                            }
                          },
                          "id": 279,
                          "indexExpression": {
                            "id": 278,
                            "name": "shard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "5985:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5973:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ShardInfo_$2183_storage",
                            "typeString": "struct Shardable.ShardInfo storage ref"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5992:6:0",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2178,
                        "src": "5973:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5940:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 282,
                        "name": "totalShardAmountByClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2204,
                        "src": "6001:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 284,
                      "indexExpression": {
                        "id": 283,
                        "name": "clock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "6025:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6001:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5940:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5916:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 288,
                          "name": "dividendValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "6049:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6066:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6049:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "445453",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6069:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        },
                        "value": "DTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bee12f4ec70419f91ccba1fcb8f15d653f8d368d253ded942f92d8598770db9",
                          "typeString": "literal_string \"DTS\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6041:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6041:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "6041:34:0"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 294,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "6085:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 296,
                      "indexExpression": {
                        "id": 295,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "6104:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6085:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 297,
                      "name": "dividendValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "6117:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6085:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "6085:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 301,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "6155:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 303,
                          "indexExpression": {
                            "id": 302,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "6170:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6155:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6180:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "6155:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 305,
                        "name": "dividendValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "6193:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6207:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6211:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6207:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 300,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1863,
                      "src": "6140:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6140:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "6140:78:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6344",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6245:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        "value": "cD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 314,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "6261:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 315,
                            "name": "dividendValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "6270:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 312,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6254:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6250:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6250:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 317,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6285:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6289:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6285:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2dc8ed860abd281f4df5fdff13159fed8dd152d13a0fd94ca3787cf7512c63fd",
                          "typeString": "literal_string \"cD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 310,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "6233:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6233:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "EmitStatement",
                  "src": "6228:68:0"
                }
              ]
            },
            "documentation": {
              "id": 229,
              "nodeType": "StructuredDocumentation",
              "src": "5348:251:0",
              "text": "@notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n @param shard The shard that was valid at the clock of the Dividend creation\n @param dividend The dividend to be claimed."
            },
            "functionSelector": "354cd135",
            "id": 322,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 236,
                    "name": "shard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 231,
                    "src": "5680:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 235,
                  "name": "onlyHolder",
                  "nameLocations": [
                    "5669:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2346,
                  "src": "5669:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5669:17:0"
              },
              {
                "arguments": [
                  {
                    "id": 239,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 233,
                    "src": "5708:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "5687:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156,
                  "src": "5687:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5687:30:0"
              },
              {
                "id": 242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "5718:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "5718:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5718:12:0"
              }
            ],
            "name": "claimDividend",
            "nameLocation": "5613:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "shard",
                  "nameLocation": "5635:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "5627:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5627:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "5650:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "5642:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5626:33:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5731:0:0"
            },
            "scope": 1460,
            "src": "5604:699:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "6593:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "6625:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 333,
                      "name": "_registerTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1385
                      ],
                      "referencedDeclaration": 1385,
                      "src": "6603:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6603:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "6603:35:0"
                }
              ]
            },
            "documentation": {
              "id": 323,
              "nodeType": "StructuredDocumentation",
              "src": "6309:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "functionSelector": "8786df6a",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6573:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 327,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "6558:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "6558:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6558:21:0"
              },
              {
                "id": 331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "6580:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "6580:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6580:12:0"
              }
            ],
            "name": "registerTokenAddress",
            "nameLocation": "6506:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6535:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "6527:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6526:22:0"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6593:0:0"
            },
            "scope": 1460,
            "src": "6497:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "6941:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 350,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6975:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 349,
                      "name": "_unregisterTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1361
                      ],
                      "referencedDeclaration": 1361,
                      "src": "6951:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6951:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "6951:37:0"
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "6651:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "functionSelector": "859d9fd5",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d4154",
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6921:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f750f7f319fd85e00b466dfe682571bbc6e5e2d92075420374cfaba62437148b",
                      "typeString": "literal_string \"mAT\""
                    },
                    "value": "mAT"
                  }
                ],
                "id": 345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "6906:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "6906:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6906:21:0"
              },
              {
                "id": 347,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 346,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "6928:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "6928:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6928:12:0"
              }
            ],
            "name": "unregisterTokenAddress",
            "nameLocation": "6852:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6883:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "6875:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6875:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6874:22:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6941:0:0"
            },
            "scope": 1460,
            "src": "6843:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "7394:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "7417:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 371,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "7424:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 372,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "7437:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 373,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "7443:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 369,
                      "name": "_issueShards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "7404:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,uint256,address)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7404:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "7404:42:0"
                }
              ]
            },
            "documentation": {
              "id": 355,
              "nodeType": "StructuredDocumentation",
              "src": "7001:272:0",
              "text": "@notice Issues new shards and puts them for sale.\n @param tokenAddress The token address the shards are put for sale for.\n @param price The price per token.\n @param to The specifically set buyer of the issued shards. Open to anyone, if address(0)."
            },
            "functionSelector": "3baf28f8",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6953",
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7388:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_feecfd0a1b3a3c5e6924d0f80f61d06ed8bfce1c07c1e8d497d89c7a3d9539f8",
                      "typeString": "literal_string \"iS\""
                    },
                    "value": "iS"
                  }
                ],
                "id": 367,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 365,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7373:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "7373:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7373:20:0"
              }
            ],
            "name": "issueShards",
            "nameLocation": "7287:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7307:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "7299:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7299:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7323:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "7315:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "7345:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "7337:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7337:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7360:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "7352:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7352:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7298:65:0"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7394:0:0"
            },
            "scope": 1460,
            "src": "7278:175:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "7942:62:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 394,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "7967:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 395,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "7976:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 396,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "7989:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 393,
                      "name": "_issueDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "7952:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7952:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "7952:43:0"
                }
              ]
            },
            "documentation": {
              "id": 378,
              "nodeType": "StructuredDocumentation",
              "src": "7459:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "functionSelector": "63879c0b",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6944",
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7912:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                      "typeString": "literal_string \"iD\""
                    },
                    "value": "iD"
                  }
                ],
                "id": 388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "7897:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "7897:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7897:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 390,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 380,
                    "src": "7932:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 389,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "7918:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "7918:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7918:23:0"
              }
            ],
            "name": "issueDividend",
            "nameLocation": "7813:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "7841:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "7827:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7827:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7859:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "7851:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7851:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7881:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "7873:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7873:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7826:61:0"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7942:0:0"
            },
            "scope": 1460,
            "src": "7804:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "8223:44:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 410,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "8251:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 409,
                      "name": "_dissolveDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "8233:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8233:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "8233:27:0"
                }
              ]
            },
            "documentation": {
              "id": 401,
              "nodeType": "StructuredDocumentation",
              "src": "8010:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "functionSelector": "23656642",
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6444",
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                      "typeString": "literal_string \"dD\""
                    },
                    "value": "dD"
                  }
                ],
                "id": 407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8202:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "8202:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8202:20:0"
              }
            ],
            "name": "dissolveDividend",
            "nameLocation": "8158:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "8183:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "8175:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8175:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8174:18:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8223:0:0"
            },
            "scope": 1460,
            "src": "8149:118:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "8545:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 428,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "8566:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 429,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "8575:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 427,
                      "name": "_createBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "8554:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8554:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "8554:31:0"
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "8273:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "functionSelector": "2ef37926",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8526:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8511:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "8511:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8511:20:0"
              },
              {
                "id": 425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 424,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "8532:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "8532:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8532:12:0"
              }
            ],
            "name": "createBank",
            "nameLocation": "8448:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8473:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "8459:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8459:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8491:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "8483:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8458:43:0"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8545:0:0"
            },
            "scope": 1460,
            "src": "8439:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "8953:50:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 448,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "8977:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 449,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "8986:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 447,
                      "name": "_addBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "8963:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8963:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "8963:33:0"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "8598:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "functionSelector": "a907b6c5",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8923:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 442,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 440,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "8908:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "8908:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8908:20:0"
              },
              {
                "arguments": [
                  {
                    "id": 444,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 436,
                    "src": "8943:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 445,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 443,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "8929:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "8929:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8929:23:0"
              }
            ],
            "name": "addBankAdmin",
            "nameLocation": "8843:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "8870:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "8856:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "8888:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "8880:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8880:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8855:43:0"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8953:0:0"
            },
            "scope": 1460,
            "src": "8834:169:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "9379:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "9406:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 469,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "9415:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 467,
                      "name": "_removeBankAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "9389:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9389:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "9389:36:0"
                }
              ]
            },
            "documentation": {
              "id": 454,
              "nodeType": "StructuredDocumentation",
              "src": "9009:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "functionSelector": "2f2e9a2a",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9349:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 460,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9333:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "9333:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9333:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 464,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 456,
                    "src": "9369:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 465,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 463,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9355:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "9355:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9355:23:0"
              }
            ],
            "name": "removeBankAdmin",
            "nameLocation": "9265:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9295:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "9281:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9281:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "9313:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "9305:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9305:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9280:43:0"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9379:0:0"
            },
            "scope": 1460,
            "src": "9256:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "9635:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 486,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "9657:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 485,
                      "name": "_deleteBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "9645:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9645:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "9645:21:0"
                }
              ]
            },
            "documentation": {
              "id": 474,
              "nodeType": "StructuredDocumentation",
              "src": "9438:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "functionSelector": "384fe2b5",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d42",
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9605:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                      "typeString": "literal_string \"mB\""
                    },
                    "value": "mB"
                  }
                ],
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 478,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "9589:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "9589:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9589:21:0"
              },
              {
                "arguments": [
                  {
                    "id": 482,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 476,
                    "src": "9625:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 481,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "9611:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "9611:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9611:23:0"
              }
            ],
            "name": "deleteBank",
            "nameLocation": "9545:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "9570:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "9556:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9556:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9555:24:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9635:0:0"
            },
            "scope": 1460,
            "src": "9536:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "10177:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 506,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "10210:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 507,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "10219:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 508,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "10232:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 509,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "10238:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 505,
                      "name": "_transferTokenFromBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "10187:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,uint256,address)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10187:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "10187:54:0"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "9679:356:0",
              "text": "@notice Transfers a token bankAdmin a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "functionSelector": "de9d6805",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 502,
                    "name": "bankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 493,
                    "src": "10167:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 503,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 501,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "10153:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "10153:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10153:23:0"
              }
            ],
            "name": "transferTokenFromBank",
            "nameLocation": "10049:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "10085:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10071:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10071:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "10103:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10095:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10095:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10125:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10117:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10117:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10140:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "10132:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10132:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10070:73:0"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10177:0:0"
            },
            "scope": 1460,
            "src": "10040:208:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "10766:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 529,
                        "name": "fromBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "10787:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 530,
                        "name": "toBankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "10800:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 531,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "10811:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 532,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "10824:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 528,
                      "name": "_moveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "10776:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10776:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "10776:54:0"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "10254:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "functionSelector": "a1916aef",
            "id": 536,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 525,
                    "name": "fromBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 516,
                    "src": "10752:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyBankAdmin",
                  "nameLocations": [
                    "10738:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "10738:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10738:27:0"
              }
            ],
            "name": "moveToken",
            "nameLocation": "10628:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "10652:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "10638:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10638:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "10680:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "10666:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10666:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "10700:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "10692:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10692:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10722:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "10714:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10714:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10637:91:0"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10766:0:0"
            },
            "scope": 1460,
            "src": "10619:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "11242:123:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 551,
                              "name": "permits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "11260:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                                "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                              }
                            },
                            "id": 553,
                            "indexExpression": {
                              "id": 552,
                              "name": "permitName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "11268:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11260:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(address => enum Administrable.PermitState)"
                            }
                          },
                          "id": 555,
                          "indexExpression": {
                            "id": 554,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "11280:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11260:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 556,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "11292:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11260:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414850",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11302:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        },
                        "value": "AHP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_410a6830e51d139c237ff6b8efd3ad676c7e0c6d4908fdb8292c51487afa8d01",
                          "typeString": "literal_string \"AHP\""
                        }
                      ],
                      "id": 550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11252:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "11252:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 562,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "11329:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 563,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "11340:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 564,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "11348:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 561,
                      "name": "_setPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "11318:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,address,enum Administrable.PermitState)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11318:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "11318:39:0"
                }
              ]
            },
            "documentation": {
              "id": 537,
              "nodeType": "StructuredDocumentation",
              "src": "10843:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param account The address, whose permit state is to be set.\n @param permitName The name of the permit, whose state is to be set.\n @param newState The new Permit State to be applied."
            },
            "functionSelector": "c5438a55",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 547,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "11230:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 546,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "11214:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "11214:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11214:27:0"
              }
            ],
            "name": "setPermit",
            "nameLocation": "11130:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "11154:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "11140:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11140:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11174:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "11166:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11166:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11195:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "11183:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 542,
                      "name": "PermitState",
                      "nameLocations": [
                        "11183:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "11183:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "11183:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11139:65:0"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11242:0:0"
            },
            "scope": 1460,
            "src": "11121:244:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "11684:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 581,
                            "name": "basePermits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "11702:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                              "typeString": "mapping(string memory => enum Administrable.PermitState)"
                            }
                          },
                          "id": 583,
                          "indexExpression": {
                            "id": 582,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "11714:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11702:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 584,
                          "name": "newState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "11729:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PermitState_$9",
                            "typeString": "enum Administrable.PermitState"
                          }
                        },
                        "src": "11702:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4153",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11739:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        },
                        "value": "AS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5",
                          "typeString": "literal_string \"AS\""
                        }
                      ],
                      "id": 580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11694:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "11694:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 590,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "11769:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 591,
                        "name": "newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "11780:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      ],
                      "id": 589,
                      "name": "_setBasePermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "11754:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$returns$__$",
                        "typeString": "function (string memory,enum Administrable.PermitState)"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11754:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "11754:35:0"
                }
              ]
            },
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "11371:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "functionSelector": "036f3aec",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 577,
                    "name": "permitName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 571,
                    "src": "11672:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 576,
                  "name": "onlyPermitAdmin",
                  "nameLocations": [
                    "11656:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "11656:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11656:27:0"
              }
            ],
            "name": "setBasePermit",
            "nameLocation": "11585:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "11613:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "11599:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "11637:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "11625:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 573,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 572,
                      "name": "PermitState",
                      "nameLocations": [
                        "11625:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "11625:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "11625:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11598:48:0"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11684:0:0"
            },
            "scope": 1460,
            "src": "11576:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "11929:29:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 602,
                      "name": "_liquidize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1459
                      ],
                      "referencedDeclaration": 1459,
                      "src": "11939:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11939:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "11939:12:0"
                }
              ]
            },
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "11802:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "functionSelector": "05c558f5",
            "id": 606,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6c45",
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11923:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                      "typeString": "literal_string \"lE\""
                    },
                    "value": "lE"
                  }
                ],
                "id": 600,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 598,
                  "name": "onlyWithPermit",
                  "nameLocations": [
                    "11908:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "11908:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11908:20:0"
              }
            ],
            "name": "liquidize",
            "nameLocation": "11887:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11896:2:0"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11929:0:0"
            },
            "scope": 1460,
            "src": "11878:80:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "12231:61:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 616,
                        "name": "balanceByBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "12248:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(string memory => mapping(address => uint256))"
                        }
                      },
                      "id": 618,
                      "indexExpression": {
                        "id": 617,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "12262:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12248:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 620,
                    "indexExpression": {
                      "id": 619,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "12272:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12248:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 621,
                  "nodeType": "Return",
                  "src": "12241:44:0"
                }
              ]
            },
            "documentation": {
              "id": 607,
              "nodeType": "StructuredDocumentation",
              "src": "11964:163:0",
              "text": "@notice Returns the balance of a bank.\n @param bankName The name of the Bank.\n @param tokenAddress The address of the token balance to check for."
            },
            "functionSelector": "2dec7cd2",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBankBalance",
            "nameLocation": "12141:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "12170:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12156:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12156:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "12188:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12180:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12155:46:0"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12222:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12221:9:0"
            },
            "scope": 1460,
            "src": "12132:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "12480:61:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 631,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "12497:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 633,
                      "indexExpression": {
                        "id": 632,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "12512:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12497:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12522:12:0",
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "12497:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "12490:44:0"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "12302:100:0",
              "text": "@notice Returns the token of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "62748dcc",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendToken",
            "nameLocation": "12416:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12441:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "12433:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12433:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12432:18:0"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "12471:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12471:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12470:9:0"
            },
            "scope": 1460,
            "src": "12407:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "12735:54:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 645,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "12752:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 647,
                      "indexExpression": {
                        "id": 646,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "12767:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12752:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12777:5:0",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13,
                    "src": "12752:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 644,
                  "id": 649,
                  "nodeType": "Return",
                  "src": "12745:37:0"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "12551:106:0",
              "text": "@notice Returns the total value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "4c46360b",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendValue",
            "nameLocation": "12671:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12696:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "12688:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12688:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12687:18:0"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "12726:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12726:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12725:9:0"
            },
            "scope": 1460,
            "src": "12662:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "12985:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 659,
                      "name": "residualByDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "13002:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 661,
                    "indexExpression": {
                      "id": 660,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "13021:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13002:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 658,
                  "id": 662,
                  "nodeType": "Return",
                  "src": "12995:35:0"
                }
              ]
            },
            "documentation": {
              "id": 652,
              "nodeType": "StructuredDocumentation",
              "src": "12795:109:0",
              "text": "@notice Returns the residual value of a dividend.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "e6778fce",
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDividendResidual",
            "nameLocation": "12918:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "12946:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "12938:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12937:18:0"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "12976:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12975:9:0"
            },
            "scope": 1460,
            "src": "12909:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "13243:52:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 672,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "13260:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 674,
                      "indexExpression": {
                        "id": 673,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "13271:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13260:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13284:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13260:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "13253:35:0"
                }
              ]
            },
            "documentation": {
              "id": 665,
              "nodeType": "StructuredDocumentation",
              "src": "13043:125:0",
              "text": "@notice Returns a boolean stating if a given Bank exists.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "b4af7d59",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankExists",
            "nameLocation": "13182:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "13207:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "13193:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13193:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13192:24:0"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "13237:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13237:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13236:6:0"
            },
            "scope": 1460,
            "src": "13173:122:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "13504:109:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 687,
                          "name": "storedTokenAddressesByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "13521:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 689,
                        "indexExpression": {
                          "id": 688,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 682,
                          "src": "13548:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13521:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13561:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13521:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 692,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "13566:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 694,
                          "indexExpression": {
                            "id": 693,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "13580:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13566:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 699,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13598:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13590:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 695,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13590:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13590:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13566:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13605:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13566:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13521:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "13514:92:0"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "13301:127:0",
              "text": "@notice Returns a boolean stating if a given Bank is empty.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "169936b4",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bankIsEmpty",
            "nameLocation": "13442:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "13468:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "13454:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13453:24:0"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "13498:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13498:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13497:6:0"
            },
            "scope": 1460,
            "src": "13433:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "13817:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 713,
                      "name": "validDividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "13832:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 715,
                    "indexExpression": {
                      "id": 714,
                      "name": "dividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "13847:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13832:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 712,
                  "id": 716,
                  "nodeType": "Return",
                  "src": "13825:31:0"
                }
              ]
            },
            "documentation": {
              "id": 706,
              "nodeType": "StructuredDocumentation",
              "src": "13623:121:0",
              "text": "@notice Returns a boolean stating if a given Dividend exists.\n @param dividend The Dividend to be checked for."
            },
            "functionSelector": "9211b7b3",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dividendExists",
            "nameLocation": "13758:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "13781:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "13773:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13773:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13772:18:0"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "13811:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13811:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13810:6:0"
            },
            "scope": 1460,
            "src": "13749:114:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "14165:93:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 728,
                            "name": "adminOfBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "14182:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(string memory => mapping(address => bool))"
                            }
                          },
                          "id": 730,
                          "indexExpression": {
                            "id": 729,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "14194:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14182:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 732,
                        "indexExpression": {
                          "id": 731,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "14204:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14182:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14216:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "14182:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "6d42",
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14238:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          "value": "mB"
                        },
                        {
                          "id": 737,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "14243:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                            "typeString": "literal_string \"mB\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 735,
                        "name": "isPermitAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "14224:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (string memory,address) view returns (bool)"
                        }
                      },
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14224:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14182:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 727,
                  "id": 740,
                  "nodeType": "Return",
                  "src": "14175:76:0"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "13869:203:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given bank.\n @param account The address to be checked for.\n @param bankName The name of the Bank to be checked for."
            },
            "functionSelector": "a80aed76",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBankAdmin",
            "nameLocation": "14086:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "14112:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "14098:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14098:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14130:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "14122:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14122:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14097:41:0"
            },
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "14159:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14159:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14158:6:0"
            },
            "scope": 1460,
            "src": "14077:181:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "14562:131:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 752,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "14579:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 754,
                          "indexExpression": {
                            "id": 753,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "14587:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14579:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 756,
                        "indexExpression": {
                          "id": 755,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 747,
                          "src": "14599:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14579:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 757,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "14611:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14623:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "14611:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "14579:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 760,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "14637:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 762,
                        "indexExpression": {
                          "id": 761,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "14649:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14637:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 763,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "14664:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14676:10:0",
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "14664:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "14637:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14579:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 751,
                  "id": 767,
                  "nodeType": "Return",
                  "src": "14572:114:0"
                }
              ]
            },
            "documentation": {
              "id": 743,
              "nodeType": "StructuredDocumentation",
              "src": "14264:205:0",
              "text": "@notice Returns a boolean stating if a given address has a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "db5dc9b7",
            "id": 769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPermit",
            "nameLocation": "14483:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "14507:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 769,
                  "src": "14493:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14527:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 769,
                  "src": "14519:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14492:43:0"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 769,
                  "src": "14556:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14556:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14555:6:0"
            },
            "scope": 1460,
            "src": "14474:219:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "15012:137:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 779,
                            "name": "permits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "15029:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                              "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                            }
                          },
                          "id": 781,
                          "indexExpression": {
                            "id": 780,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "15037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15029:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(address => enum Administrable.PermitState)"
                          }
                        },
                        "id": 783,
                        "indexExpression": {
                          "id": 782,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "15049:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15029:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 784,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15061:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15073:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15061:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15029:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 787,
                          "name": "basePermits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "15090:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                            "typeString": "mapping(string memory => enum Administrable.PermitState)"
                          }
                        },
                        "id": 789,
                        "indexExpression": {
                          "id": 788,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "15102:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15090:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 790,
                          "name": "PermitState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "15117:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PermitState_$9_$",
                            "typeString": "type(enum Administrable.PermitState)"
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15129:13:0",
                        "memberName": "administrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "15117:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermitState_$9",
                          "typeString": "enum Administrable.PermitState"
                        }
                      },
                      "src": "15090:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15029:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "15022:120:0"
                }
              ]
            },
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "14699:216:0",
              "text": "@notice Returns a boolean stating if a given address is an admin of a given permit or not.\n @param permitName The name of the permit to be checked for.\n @param account The address to be checked for."
            },
            "functionSelector": "258e4d9f",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermitAdmin",
            "nameLocation": "14929:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "14957:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "14943:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14943:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14977:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "14969:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14969:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14942:43:0"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15006:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15005:6:0"
            },
            "scope": 1460,
            "src": "14920:229:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "15607:636:0",
              "statements": [
                {
                  "assignments": [
                    809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 809,
                      "mutability": "mutable",
                      "name": "transferClock",
                      "nameLocation": "15625:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 886,
                      "src": "15617:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 808,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15617:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "id": 810,
                    "name": "clock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2196,
                    "src": "15641:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15617:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 813,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 803,
                          "src": "15664:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 814,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "15673:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 816,
                            "indexExpression": {
                              "id": 815,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "15687:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15673:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 818,
                          "indexExpression": {
                            "id": 817,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "15697:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15673:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15664:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15712:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15656:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15656:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "15656:61:0"
                },
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 823,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "15727:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 826,
                        "indexExpression": {
                          "id": 824,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 799,
                          "src": "15741:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15727:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 827,
                      "indexExpression": {
                        "id": 825,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "15751:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15727:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 828,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "15768:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15727:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "15727:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 831,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "15787:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 833,
                          "indexExpression": {
                            "id": 832,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "15801:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15787:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 835,
                        "indexExpression": {
                          "id": 834,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "15811:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15787:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15828:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15787:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 838,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "15833:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15857:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 839,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15849:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15849:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "15833:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15787:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 852,
                  "nodeType": "IfStatement",
                  "src": "15783:144:0",
                  "trueBody": {
                    "id": 851,
                    "nodeType": "Block",
                    "src": "15861:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 845,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "15875:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 847,
                            "indexExpression": {
                              "id": 846,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "15902:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15875:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15915:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15875:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 850,
                        "nodeType": "ExpressionStatement",
                        "src": "15875:41:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 853,
                        "name": "infoByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "15936:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                        }
                      },
                      "id": 855,
                      "indexExpression": {
                        "id": 854,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "15951:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15936:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                        "typeString": "struct Administrable.DividendInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 857,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "16008:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 858,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 803,
                          "src": "16040:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 856,
                        "name": "DividendInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "15968:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DividendInfo_$14_storage_ptr_$",
                          "typeString": "type(struct Administrable.DividendInfo storage pointer)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "15995:12:0",
                        "16034:5:0"
                      ],
                      "names": [
                        "tokenAddress",
                        "value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "15968:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DividendInfo_$14_memory_ptr",
                        "typeString": "struct Administrable.DividendInfo memory"
                      }
                    },
                    "src": "15936:120:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                      "typeString": "struct Administrable.DividendInfo storage ref"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "15936:120:0"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 862,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "16066:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 864,
                      "indexExpression": {
                        "id": 863,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "16085:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16066:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 865,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "16102:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16066:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "16066:41:0"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 868,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "16117:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 870,
                      "indexExpression": {
                        "id": 869,
                        "name": "transferClock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "16132:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16117:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16149:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16117:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "16117:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6944",
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16180:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        "value": "iD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 878,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "16196:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 879,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "16205:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 880,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 803,
                            "src": "16218:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 876,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16185:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16189:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16185:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16185:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16225:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16229:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16225:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e30fe68512c4dc839c8fef7a9dc85014e13ac9802b47c940ff0c42cd110e1089",
                          "typeString": "literal_string \"iD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 874,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "16168:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16168:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "EmitStatement",
                  "src": "16163:73:0"
                }
              ]
            },
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "15155:340:0",
              "text": "@notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n @param bankName The name of the Bank to issue the Dividend from.\n @param tokenAddress The address of the token to make up the Dividend.\n @param value The value/amount of the token to be issued in the Dividend."
            },
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 806,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 805,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "15594:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "15594:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "15594:12:0"
              }
            ],
            "name": "_issueDividend",
            "nameLocation": "15509:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "15538:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "15524:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15524:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "15556:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "15548:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15548:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "15578:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "15570:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15570:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15523:61:0"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15607:0:0"
            },
            "scope": 1460,
            "src": "15500:743:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "16486:259:0",
              "statements": [
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 898,
                        "name": "validDividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "16496:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 900,
                      "indexExpression": {
                        "id": 899,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "16511:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16496:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16523:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "16496:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "16496:32:0"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 904,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "16581:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 910,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16595:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16581:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 911,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 906,
                            "name": "infoByDividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "16603:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DividendInfo_$14_storage_$",
                              "typeString": "mapping(uint256 => struct Administrable.DividendInfo storage ref)"
                            }
                          },
                          "id": 908,
                          "indexExpression": {
                            "id": 907,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "16618:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16603:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DividendInfo_$14_storage",
                            "typeString": "struct Administrable.DividendInfo storage ref"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16628:12:0",
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "16603:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16581:60:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 912,
                        "name": "residualByDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "16645:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 914,
                      "indexExpression": {
                        "id": 913,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "16664:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16645:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16581:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "16581:92:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6444",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16700:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        "value": "dD"
                      },
                      {
                        "arguments": [
                          {
                            "id": 921,
                            "name": "dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "16716:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 919,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16705:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16709:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16705:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16705:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 923,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16726:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16730:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16726:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_122f11b3f2783ba06123f4645908c8ccc93dbe4f9377a1ff0dc3e54a137d58b9",
                          "typeString": "literal_string \"dD\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 917,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "16688:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16688:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "EmitStatement",
                  "src": "16683:54:0"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "16249:134:0",
              "text": "@notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n @param dividend The Dividend to be dissolved."
            },
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 893,
                    "name": "dividend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 890,
                    "src": "16463:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 892,
                  "name": "onlyExistingDividend",
                  "nameLocations": [
                    "16442:20:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156,
                  "src": "16442:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16442:30:0"
              },
              {
                "id": 896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 895,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "16473:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "16473:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16473:12:0"
              }
            ],
            "name": "_dissolveDividend",
            "nameLocation": "16397:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "dividend",
                  "nameLocation": "16423:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "16415:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16415:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16414:18:0"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16486:0:0"
            },
            "scope": 1460,
            "src": "16388:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 971,
              "nodeType": "Block",
              "src": "17003:214:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17021:21:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 940,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "17033:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 939,
                            "name": "bankExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "17022:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17022:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4145",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17044:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        },
                        "value": "AE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a09f9a1fd61674b10a603b289b38eb589edb1f22726c768995cbb8d4de55c39",
                          "typeString": "literal_string \"AE\""
                        }
                      ],
                      "id": 938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17013:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17013:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "17013:36:0"
                },
                {
                  "expression": {
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 946,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "17059:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "id": 947,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "17071:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17059:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 950,
                      "indexExpression": {
                        "id": 948,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "17081:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17059:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17094:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17059:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "17059:39:0"
                },
                {
                  "expression": {
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 954,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "17108:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 956,
                      "indexExpression": {
                        "id": 955,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 931,
                        "src": "17119:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17108:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17131:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17108:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "17108:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6342",
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17162:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        "value": "cB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 964,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "17178:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 965,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 933,
                            "src": "17187:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 962,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17171:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17167:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17167:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 967,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17198:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17202:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17198:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_def717b06df1b11182953610d5414abf5e280a98ea2b8b1f4f94dc930b18fcee",
                          "typeString": "literal_string \"cB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 960,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "17150:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17150:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "EmitStatement",
                  "src": "17145:64:0"
                }
              ]
            },
            "documentation": {
              "id": 929,
              "nodeType": "StructuredDocumentation",
              "src": "16751:161:0",
              "text": "@notice Creates a new Bank.\n @param bankName The name of the Bank to be created.\n @param bankAdmin The address of the first Bank administrator."
            },
            "id": 972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 935,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "16990:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "16990:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16990:12:0"
              }
            ],
            "name": "_createBank",
            "nameLocation": "16926:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "16952:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "16938:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16938:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "16970:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "16962:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16962:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16937:43:0"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17003:0:0"
            },
            "scope": 1460,
            "src": "16917:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "17547:180:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6d42",
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17575:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            "value": "mB"
                          },
                          {
                            "id": 985,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "17580:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6d8e8e3b077f8d946e7587ce66d751e227f722912e92cec5abed891a1aa90386",
                              "typeString": "literal_string \"mB\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 983,
                          "name": "hasPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "17565:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17565:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e50",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17591:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        },
                        "value": "NP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
                          "typeString": "literal_string \"NP\""
                        }
                      ],
                      "id": 982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17557:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17557:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "17557:39:0"
                },
                {
                  "expression": {
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 990,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "17606:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 993,
                        "indexExpression": {
                          "id": 991,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "17618:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17606:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 994,
                      "indexExpression": {
                        "id": 992,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "17628:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17606:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17641:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17606:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "17606:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6141",
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17672:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        "value": "aA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1002,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "17688:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "17697:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1000,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17677:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17681:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17677:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17677:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17708:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17712:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17708:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_95483b1c35b7a6cdf6e56dc2ac22bda14b26b395823712ac9f881f3639718402",
                          "typeString": "literal_string \"aA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 998,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "17660:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17660:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "EmitStatement",
                  "src": "17655:64:0"
                }
              ]
            },
            "documentation": {
              "id": 973,
              "nodeType": "StructuredDocumentation",
              "src": "17223:231:0",
              "text": "@notice Adds a new given administrator to a given Bank.\n @param bankName The name of the Bank to which the new administrator is to be added.\n @param bankAdmin The address of the new Bank administrator to be added."
            },
            "id": 1010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 980,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 979,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "17534:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "17534:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17534:12:0"
              }
            ],
            "name": "_addBankAdmin",
            "nameLocation": "17468:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "17496:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "17482:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17482:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "17514:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "17506:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17506:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17481:43:0"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17547:0:0"
            },
            "scope": 1460,
            "src": "17459:268:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1046,
              "nodeType": "Block",
              "src": "18071:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1022,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "18101:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1023,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "18110:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1021,
                          "name": "isBankAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "18089:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (string memory,address) view returns (bool)"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18089:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18081:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18081:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "18081:40:0"
                },
                {
                  "expression": {
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1027,
                          "name": "adminOfBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "18131:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 1030,
                        "indexExpression": {
                          "id": 1028,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "18143:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18131:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1031,
                      "indexExpression": {
                        "id": 1029,
                        "name": "bankAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "18153:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18131:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18166:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "18131:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "18131:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7241",
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18198:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        "value": "rA"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1039,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "18214:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1040,
                            "name": "bankAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "18223:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1037,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18203:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18207:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18203:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18203:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18234:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18238:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18234:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ba24429f7689d355fad2e857915733881bfd0aa699d4c346082d041af0ee1935",
                          "typeString": "literal_string \"rA\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1035,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "18186:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18186:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "EmitStatement",
                  "src": "18181:64:0"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "17733:242:0",
              "text": "@notice Removes a given administrator of a given Bank.\n @param bankName The name of the Bank from which the given administrator is to be removed.\n @param bankAdmin The address of the current Bank administrator to be removed."
            },
            "id": 1047,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1017,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18058:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "18058:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18058:12:0"
              }
            ],
            "name": "_removeBankAdmin",
            "nameLocation": "17989:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18020:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "18006:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18006:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "bankAdmin",
                  "nameLocation": "18038:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "18030:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18030:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18005:43:0"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18071:0:0"
            },
            "scope": 1460,
            "src": "17980:273:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "18424:281:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1057,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "18453:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1056,
                          "name": "bankExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "18442:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18442:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554221",
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18464:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        },
                        "value": "UB!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8e9a379b59ed091b032dfb49a8e5ccc6260e94cda7a67c1347b4bc8fb679feb",
                          "typeString": "literal_string \"UB!\""
                        }
                      ],
                      "id": 1055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18434:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18434:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "18434:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1066,
                                  "name": "bankName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "18504:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18498:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1064,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18498:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18498:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1063,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18488:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18488:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d61696e",
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18534:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  },
                                  "value": "main"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                    "typeString": "literal_string \"main\""
                                  }
                                ],
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18528:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1070,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18528:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18528:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1069,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18518:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18518:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18488:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d42",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18544:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        },
                        "value": "MB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c36b7e5ce6a9e7a497c101cecd8c3ef08b1196aef5473426d9137c949ca9c90",
                          "typeString": "literal_string \"MB\""
                        }
                      ],
                      "id": 1062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18480:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "18480:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1081,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "18579:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1080,
                          "name": "bankIsEmpty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "18567:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18567:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4245",
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18590:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        },
                        "value": "BE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79077c5f1a9c35423e7ecca4275dce99997710097e49d14525edd01bd2268668",
                          "typeString": "literal_string \"BE\""
                        }
                      ],
                      "id": 1079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18559:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18559:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "18559:36:0"
                },
                {
                  "expression": {
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1086,
                        "name": "validBanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "18605:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1088,
                      "indexExpression": {
                        "id": 1087,
                        "name": "bankName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "18616:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18605:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18628:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "18605:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "18605:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6442",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18660:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        "value": "dB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1096,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "18676:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1094,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18665:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18669:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18665:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18665:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18686:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18690:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18686:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                          "typeString": "literal_string \"dB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1092,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "18648:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18648:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1101,
                  "nodeType": "EmitStatement",
                  "src": "18643:54:0"
                }
              ]
            },
            "documentation": {
              "id": 1048,
              "nodeType": "StructuredDocumentation",
              "src": "18259:93:0",
              "text": "@notice Deletes a given Bank.\n @param bankName The name of the Bank to be deleted."
            },
            "id": 1103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1053,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1052,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "18411:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "18411:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18411:12:0"
              }
            ],
            "name": "_deleteBank",
            "nameLocation": "18366:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "18392:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "18378:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18378:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18377:24:0"
            },
            "returnParameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18424:0:0"
            },
            "scope": 1460,
            "src": "18357:348:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "19194:420:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1118,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1110,
                          "src": "19212:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1119,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "19221:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1121,
                            "indexExpression": {
                              "id": 1120,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "19235:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19221:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1123,
                          "indexExpression": {
                            "id": 1122,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "19245:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19221:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19212:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19260:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19204:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "19204:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1129,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "19290:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "19303:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1131,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "19309:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1128,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1863,
                      "src": "19275:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19275:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "19275:37:0"
                },
                {
                  "expression": {
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1134,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "19322:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1137,
                        "indexExpression": {
                          "id": 1135,
                          "name": "bankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "19336:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19322:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1138,
                      "indexExpression": {
                        "id": 1136,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "19346:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19322:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1139,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "19363:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19322:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "19322:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1142,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "19382:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1144,
                          "indexExpression": {
                            "id": 1143,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "19396:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19382:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1146,
                        "indexExpression": {
                          "id": 1145,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "19406:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19382:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19423:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19382:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1149,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "19428:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19452:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19444:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19444:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19444:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "19428:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19382:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1163,
                  "nodeType": "IfStatement",
                  "src": "19378:144:0",
                  "trueBody": {
                    "id": 1162,
                    "nodeType": "Block",
                    "src": "19456:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1156,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19470:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "id": 1157,
                              "name": "bankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "19497:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19470:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19510:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19470:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1161,
                        "nodeType": "ExpressionStatement",
                        "src": "19470:41:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7454",
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19548:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        "value": "tT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1168,
                            "name": "bankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "19564:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1169,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "19573:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1170,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1110,
                            "src": "19586:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1171,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "19592:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1166,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19553:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19557:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "19553:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19553:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19596:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19600:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19596:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9222cc18580b8c9298aadb4a85196960456fb6ced8b84a89860cc5ae7b6394f",
                          "typeString": "literal_string \"tT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1164,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "19536:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19536:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1176,
                  "nodeType": "EmitStatement",
                  "src": "19531:76:0"
                }
              ]
            },
            "documentation": {
              "id": 1104,
              "nodeType": "StructuredDocumentation",
              "src": "18711:351:0",
              "text": "@notice Transfers a token from a Bank to a recipient.\n @param bankName The name of the Bank from which the token is to be transferred.\n @param tokenAddress The address of the token to be transferred.\n @param value The value/amount of the token to be transferred.\n @param to The recipient of the token to be transferred."
            },
            "id": 1178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1114,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "19181:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "19181:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19181:12:0"
              }
            ],
            "name": "_transferTokenFromBank",
            "nameLocation": "19076:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "19113:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "19099:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19099:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "19131:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "19123:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19123:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19153:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "19145:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19145:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19168:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "19160:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19160:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19098:73:0"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19194:0:0"
            },
            "scope": 1460,
            "src": "19067:547:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "20147:634:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1196,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "20165:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1197,
                              "name": "balanceByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "20174:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(string memory => mapping(address => uint256))"
                              }
                            },
                            "id": 1199,
                            "indexExpression": {
                              "id": 1198,
                              "name": "fromBankName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "20188:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20174:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1201,
                          "indexExpression": {
                            "id": 1200,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "20202:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20174:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20165:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4946",
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20217:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        },
                        "value": "IF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc1542ed8f42ab7cceb0f267192e09e9334fc1d3b63f32c20f5f6a824e74e8d",
                          "typeString": "literal_string \"IF\""
                        }
                      ],
                      "id": 1195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20157:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20157:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "20157:65:0"
                },
                {
                  "expression": {
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1206,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "20232:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1209,
                        "indexExpression": {
                          "id": 1207,
                          "name": "fromBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1181,
                          "src": "20246:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20232:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1210,
                      "indexExpression": {
                        "id": 1208,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "20260:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20232:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1211,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "20277:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20232:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "20232:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1214,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "20296:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20320:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20312:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20312:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20296:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1251,
                  "nodeType": "IfStatement",
                  "src": "20292:326:0",
                  "trueBody": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "20324:294:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1220,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "20342:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1222,
                              "indexExpression": {
                                "id": 1221,
                                "name": "fromBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1181,
                                "src": "20356:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20342:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1224,
                            "indexExpression": {
                              "id": 1223,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "20370:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20342:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20387:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20342:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1234,
                        "nodeType": "IfStatement",
                        "src": "20338:131:0",
                        "trueBody": {
                          "id": 1233,
                          "nodeType": "Block",
                          "src": "20390:79:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1227,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20408:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1229,
                                  "indexExpression": {
                                    "id": 1228,
                                    "name": "fromBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "20435:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20408:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20452:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "20408:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1232,
                              "nodeType": "ExpressionStatement",
                              "src": "20408:45:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1235,
                                "name": "balanceByBank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "20486:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(string memory => mapping(address => uint256))"
                                }
                              },
                              "id": 1237,
                              "indexExpression": {
                                "id": 1236,
                                "name": "toBankName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1183,
                                "src": "20500:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20486:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1239,
                            "indexExpression": {
                              "id": 1238,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "20512:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20486:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20529:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20486:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1249,
                        "nodeType": "IfStatement",
                        "src": "20482:126:0",
                        "trueBody": {
                          "id": 1248,
                          "nodeType": "Block",
                          "src": "20532:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1242,
                                    "name": "storedTokenAddressesByBank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20550:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 1244,
                                  "indexExpression": {
                                    "id": 1243,
                                    "name": "toBankName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "20577:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20550:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20592:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "20550:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1247,
                              "nodeType": "ExpressionStatement",
                              "src": "20550:43:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1252,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "20627:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1255,
                        "indexExpression": {
                          "id": 1253,
                          "name": "toBankName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "20641:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20627:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1256,
                      "indexExpression": {
                        "id": 1254,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "20653:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20627:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1257,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "20670:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20627:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "20627:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6d54",
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20702:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        "value": "mT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1264,
                            "name": "fromBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "20718:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1265,
                            "name": "toBankName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "20731:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1266,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "20742:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1267,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "20755:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1262,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20707:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20711:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "20707:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20707:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20762:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20766:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20762:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_90d8ba758a5e6869c5eb6276e11fe4b0a61820432e573843ef6a23f9c88a3a17",
                          "typeString": "literal_string \"mT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1260,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "20690:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20690:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "EmitStatement",
                  "src": "20685:88:0"
                }
              ]
            },
            "documentation": {
              "id": 1179,
              "nodeType": "StructuredDocumentation",
              "src": "19620:360:0",
              "text": "@notice Internally moves a token from one Bank to another.\n @param fromBankName The name of the Bank from which the token is to be moved.\n @param toBankName The name of the Bank to which the token is to be moved.\n @param tokenAddress The address of the token to be moved.\n @param value The value/amount of the token to be moved."
            },
            "id": 1274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1190,
                    "name": "toBankName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1183,
                    "src": "20122:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1189,
                  "name": "onlyExistingBank",
                  "nameLocations": [
                    "20105:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "20105:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20105:28:0"
              },
              {
                "id": 1193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1192,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "20134:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "20134:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20134:12:0"
              }
            ],
            "name": "_moveToken",
            "nameLocation": "19994:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "mutability": "mutable",
                  "name": "fromBankName",
                  "nameLocation": "20019:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "20005:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "toBankName",
                  "nameLocation": "20047:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "20033:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20033:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "20067:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "20059:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20059:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "20089:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "20081:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20081:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20004:91:0"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20147:0:0"
            },
            "scope": 1460,
            "src": "19985:796:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "21172:140:0",
              "statements": [
                {
                  "expression": {
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1287,
                          "name": "permits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "21182:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_enum$_PermitState_$9_$_$",
                            "typeString": "mapping(string memory => mapping(address => enum Administrable.PermitState))"
                          }
                        },
                        "id": 1290,
                        "indexExpression": {
                          "id": 1288,
                          "name": "permitName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1277,
                          "src": "21190:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21182:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(address => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1291,
                      "indexExpression": {
                        "id": 1289,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "21202:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21182:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1292,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "21213:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "21182:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "21182:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7350",
                        "id": 1296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21248:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        "value": "sP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1299,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "21264:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1300,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "21275:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1301,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "21283:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1297,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21253:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21257:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21253:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21253:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1303,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21293:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21297:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21293:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0e4e4438b1b2079f7b681a112ce7f5b4e7394a8b0083779db816e89e61ea8a79",
                          "typeString": "literal_string \"sP\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1295,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "21236:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21236:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "EmitStatement",
                  "src": "21231:73:0"
                }
              ]
            },
            "documentation": {
              "id": 1275,
              "nodeType": "StructuredDocumentation",
              "src": "20787:273:0",
              "text": "@notice Sets the state of a specified permit of a given address.\n @param permitName The name of the permit, whose state is to be set.\n @param account The address, whose permit state is to be set.\n @param newState The new Permit State to be applied."
            },
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1284,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "21159:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "21159:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21159:12:0"
              }
            ],
            "name": "_setPermit",
            "nameLocation": "21074:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "21099:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "21085:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21085:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21119:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "21111:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21111:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "21140:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "21128:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1281,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1280,
                      "name": "PermitState",
                      "nameLocations": [
                        "21128:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "21128:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "21128:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21084:65:0"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21172:0:0"
            },
            "scope": 1460,
            "src": "21065:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "21617:126:0",
              "statements": [
                {
                  "expression": {
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1319,
                        "name": "basePermits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "21627:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_enum$_PermitState_$9_$",
                          "typeString": "mapping(string memory => enum Administrable.PermitState)"
                        }
                      },
                      "id": 1321,
                      "indexExpression": {
                        "id": 1320,
                        "name": "permitName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1311,
                        "src": "21639:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21627:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1322,
                      "name": "newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "21653:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermitState_$9",
                        "typeString": "enum Administrable.PermitState"
                      }
                    },
                    "src": "21627:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "21627:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7342",
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21688:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        "value": "sB"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1329,
                            "name": "permitName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "21704:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1330,
                            "name": "newState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1314,
                            "src": "21715:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_PermitState_$9",
                              "typeString": "enum Administrable.PermitState"
                            }
                          ],
                          "expression": {
                            "id": 1327,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21693:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21697:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "21693:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21693:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21725:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21729:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21725:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_501363e2889387ede54af7698ef8531bce18e8dd5ab0130ad0e0b288729cac45",
                          "typeString": "literal_string \"sB\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1325,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "21676:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21676:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "EmitStatement",
                  "src": "21671:65:0"
                }
              ]
            },
            "documentation": {
              "id": 1309,
              "nodeType": "StructuredDocumentation",
              "src": "21318:200:0",
              "text": "@notice Sets the state of a specified base permit.\n @param permitName The name of the base permit, whose state is to be set.\n @param newState The new base Permit State to be applied."
            },
            "id": 1337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1317,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1316,
                  "name": "onlyIfActive",
                  "nameLocations": [
                    "21604:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2328,
                  "src": "21604:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21604:12:0"
              }
            ],
            "name": "_setBasePermit",
            "nameLocation": "21532:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "permitName",
                  "nameLocation": "21561:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "21547:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21547:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "newState",
                  "nameLocation": "21585:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "21573:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermitState_$9",
                    "typeString": "enum Administrable.PermitState"
                  },
                  "typeName": {
                    "id": 1313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1312,
                      "name": "PermitState",
                      "nameLocations": [
                        "21573:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9,
                      "src": "21573:11:0"
                    },
                    "referencedDeclaration": 9,
                    "src": "21573:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermitState_$9",
                      "typeString": "enum Administrable.PermitState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21546:48:0"
            },
            "returnParameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21617:0:0"
            },
            "scope": 1460,
            "src": "21523:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2048
            ],
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "22014:128:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1347,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "22054:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1344,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22024:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1460_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22030:23:0",
                      "memberName": "_unregisterTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2048,
                      "src": "22024:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22024:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1349,
                  "nodeType": "ExpressionStatement",
                  "src": "22024:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7554",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22094:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        "value": "uT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1354,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "22110:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1352,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22099:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22103:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22099:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22099:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1356,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22124:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22128:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22124:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5638c6cfb7c7a7c905d3f671dde2f15eee41465bb0a76dd99d3442749bb8a7a2",
                          "typeString": "literal_string \"uT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1350,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "22082:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22082:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1359,
                  "nodeType": "EmitStatement",
                  "src": "22077:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "21749:187:0",
              "text": "@notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n @param tokenAddress The token address to be unregistered."
            },
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unregisterTokenAddress",
            "nameLocation": "21950:23:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1342,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21996:8:0"
            },
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "21982:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "21974:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21974:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21973:22:0"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22014:0:0"
            },
            "scope": 1460,
            "src": "21941:201:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2019
            ],
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "22407:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1371,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "22445:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1368,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22417:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1460_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22423:21:0",
                      "memberName": "_registerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2019,
                      "src": "22417:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22417:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "22417:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "7254",
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22485:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        "value": "rT"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1378,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "22501:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1376,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22490:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22494:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22490:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22490:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1380,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22515:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22519:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22515:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bd5f5cc39a03344ea90ff552f8901a96f8d71775d5e9292395737044809a9fd9",
                          "typeString": "literal_string \"rT\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1374,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "22473:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22473:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "EmitStatement",
                  "src": "22468:58:0"
                }
              ]
            },
            "documentation": {
              "id": 1362,
              "nodeType": "StructuredDocumentation",
              "src": "22148:183:0",
              "text": "@notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n @param tokenAddress The token address to be registered."
            },
            "id": 1385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTokenAddress",
            "nameLocation": "22345:21:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22389:8:0"
            },
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "22375:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "22367:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22367:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22366:22:0"
            },
            "returnParameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22407:0:0"
            },
            "scope": 1460,
            "src": "22336:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1977
            ],
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "22892:354:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1399,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "22929:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "22943:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1401,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "22950:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1396,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22902:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1460_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22908:20:0",
                      "memberName": "_processTokenReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1977,
                      "src": "22902:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22902:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1403,
                  "nodeType": "ExpressionStatement",
                  "src": "22902:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1404,
                            "name": "balanceByBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "22997:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(string memory => mapping(address => uint256))"
                            }
                          },
                          "id": 1406,
                          "indexExpression": {
                            "hexValue": "6d61696e",
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23011:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                              "typeString": "literal_string \"main\""
                            },
                            "value": "main"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22997:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1408,
                        "indexExpression": {
                          "id": 1407,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "23019:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22997:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23036:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "22997:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1411,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "23041:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23065:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23057:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23057:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23057:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "23041:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "22997:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1425,
                  "nodeType": "IfStatement",
                  "src": "22993:140:0",
                  "trueBody": {
                    "id": 1424,
                    "nodeType": "Block",
                    "src": "23069:64:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1418,
                              "name": "storedTokenAddressesByBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "23083:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 1420,
                            "indexExpression": {
                              "hexValue": "6d61696e",
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23110:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                                "typeString": "literal_string \"main\""
                              },
                              "value": "main"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23083:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23121:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "23083:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "23083:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1426,
                          "name": "balanceByBank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "23142:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(string memory => mapping(address => uint256))"
                          }
                        },
                        "id": 1429,
                        "indexExpression": {
                          "hexValue": "6d61696e",
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23156:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                            "typeString": "literal_string \"main\""
                          },
                          "value": "main"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23142:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1430,
                      "indexExpression": {
                        "id": 1428,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "23164:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23142:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1431,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "23181:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23142:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1433,
                  "nodeType": "ExpressionStatement",
                  "src": "23142:44:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1435,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "23215:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1436,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "23228:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1437,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "23234:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1434,
                      "name": "TokenReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "23201:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23201:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1439,
                  "nodeType": "EmitStatement",
                  "src": "23196:43:0"
                }
              ]
            },
            "documentation": {
              "id": 1386,
              "nodeType": "StructuredDocumentation",
              "src": "22539:249:0",
              "text": "@notice Keeps track of a token receipt by adding it to the registry\n @param tokenAddress The address of the received token.\n @param value The value/amount of the received token.\n @param from The sender of the received token."
            },
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processTokenReceipt",
            "nameLocation": "22802:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1394,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22874:8:0"
            },
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "22831:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "22823:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22823:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1390,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "22853:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "22845:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22845:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1392,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "22868:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "22860:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22860:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22822:51:0"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22892:0:0"
            },
            "scope": 1460,
            "src": "22793:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2064
            ],
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "23368:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1446,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23378:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Administrable_$1460_$",
                          "typeString": "type(contract super Administrable)"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23384:10:0",
                      "memberName": "_liquidize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2064,
                      "src": "23378:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23378:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "23378:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6c45",
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23423:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        "value": "lE"
                      },
                      {
                        "hexValue": "",
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23428:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23431:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23435:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23431:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_24aebf67db5005076cae9afbe8e4877ca349e52feb497766bfeba4a8699da0bf",
                          "typeString": "literal_string \"lE\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1451,
                      "name": "ActionTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "23411:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes memory,address)"
                      }
                    },
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23411:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1457,
                  "nodeType": "EmitStatement",
                  "src": "23406:36:0"
                }
              ]
            },
            "documentation": {
              "id": 1442,
              "nodeType": "StructuredDocumentation",
              "src": "23252:71:0",
              "text": "@notice Liquidizes and dissolves the entity. This cannot be undone."
            },
            "id": 1459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidize",
            "nameLocation": "23337:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1444,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23350:8:0"
            },
            "parameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23347:2:0"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23368:0:0"
            },
            "scope": 1460,
            "src": "23328:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1461,
        "src": "307:23145:0",
        "usedErrors": []
      }
    ],
    "src": "46:23406:0"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Administrable",
  "coverageMap": {
    "branches": {
      "0": {
        "Administrable._addBankAdmin": {
          "197": [
            17565,
            17590,
            true
          ]
        },
        "Administrable._createBank": {
          "184": [
            17021,
            17042,
            true
          ]
        },
        "Administrable._deleteBank": {
          "186": [
            18442,
            18462,
            true
          ],
          "187": [
            18488,
            18542,
            true
          ],
          "188": [
            18567,
            18588,
            true
          ]
        },
        "Administrable._issueDividend": {
          "189": [
            15664,
            15710,
            true
          ],
          "190": [
            15787,
            15829,
            false
          ],
          "191": [
            15833,
            15859,
            false
          ]
        },
        "Administrable._moveToken": {
          "192": [
            4385,
            4405,
            true
          ],
          "193": [
            20165,
            20215,
            true
          ],
          "194": [
            20296,
            20322,
            false
          ],
          "195": [
            20342,
            20388,
            false
          ],
          "196": [
            20486,
            20530,
            false
          ]
        },
        "Administrable._processTokenReceipt": {
          "174": [
            22997,
            23037,
            false
          ],
          "175": [
            23041,
            23067,
            false
          ]
        },
        "Administrable._removeBankAdmin": {
          "185": [
            18089,
            18120,
            true
          ]
        },
        "Administrable._transferTokenFromBank": {
          "198": [
            19212,
            19258,
            true
          ],
          "199": [
            19382,
            19424,
            false
          ],
          "200": [
            19428,
            19454,
            false
          ]
        },
        "Administrable.addBankAdmin": {
          "180": [
            3582,
            3615,
            true
          ]
        },
        "Administrable.claimDividend": {
          "177": [
            5749,
            5777,
            true
          ],
          "178": [
            5803,
            5847,
            true
          ],
          "179": [
            6049,
            6067,
            true
          ]
        },
        "Administrable.setBasePermit": {
          "176": [
            11702,
            11737,
            true
          ]
        },
        "Administrable.setPermit": {
          "181": [
            3864,
            3901,
            true
          ],
          "182": [
            11260,
            11300,
            true
          ]
        },
        "Administrable.transferTokenFromBank": {
          "183": [
            4134,
            4167,
            true
          ]
        }
      },
      "1": {
        "Idea._issueShards": {
          "212": [
            5107,
            5133,
            true
          ]
        },
        "Idea._payProfitToSeller": {
          "216": [
            9926,
            9950,
            false
          ],
          "217": [
            10209,
            10260,
            true
          ]
        },
        "Idea._receiveToken": {
          "213": [
            7260,
            7286,
            true
          ],
          "214": [
            7353,
            7403,
            true
          ],
          "215": [
            7427,
            7478,
            true
          ]
        },
        "Idea._registerTokenAddress": {
          "221": [
            8739,
            8766,
            true
          ]
        },
        "Idea._transferEther": {
          "218": [
            6888,
            6895,
            true
          ]
        },
        "Idea._transferToken": {
          "205": [
            5841,
            5870,
            true
          ],
          "206": [
            5891,
            5917,
            false
          ],
          "207": [
            6031,
            6055,
            true
          ],
          "208": [
            6080,
            6098,
            false
          ],
          "209": [
            6309,
            6333,
            true
          ],
          "210": [
            6415,
            6439,
            true
          ],
          "211": [
            6484,
            6490,
            false
          ]
        },
        "Idea._unregisterTokenAddress": {
          "219": [
            9118,
            9144,
            true
          ],
          "220": [
            9169,
            9194,
            true
          ]
        },
        "Idea.claimLiquid": {
          "202": [
            2720,
            2735,
            true
          ],
          "203": [
            2810,
            2848,
            true
          ],
          "204": [
            3040,
            3056,
            true
          ]
        },
        "Idea.claimTerminatedLiquid": {
          "201": [
            3481,
            3495,
            true
          ]
        }
      },
      "2": {
        "Idea._liquidize": {
          "239": [
            6303,
            6317,
            true
          ]
        },
        "Idea.claimLiquid": {
          "223": [
            5930,
            5955,
            true
          ]
        },
        "Shardable._pushShard": {
          "240": [
            15582,
            15592,
            true
          ]
        },
        "Shardable._putForSale": {
          "237": [
            14866,
            14895,
            true
          ],
          "238": [
            14914,
            14949,
            true
          ]
        },
        "Shardable._split": {
          "234": [
            13251,
            13292,
            true
          ],
          "235": [
            13313,
            13330,
            false
          ],
          "236": [
            14078,
            14087,
            false
          ]
        },
        "Shardable.cancelSale": {
          "222": [
            10471,
            10491,
            true
          ]
        },
        "Shardable.purchase": {
          "224": [
            7366,
            7386,
            true
          ],
          "225": [
            7411,
            7422,
            true
          ],
          "226": [
            7447,
            7482,
            true
          ],
          "227": [
            7992,
            8015,
            true
          ],
          "228": [
            8361,
            8376,
            false
          ],
          "229": [
            8380,
            8396,
            true
          ],
          "230": [
            8517,
            8572,
            true
          ],
          "231": [
            8650,
            8741,
            true
          ],
          "232": [
            8958,
            8999,
            false
          ],
          "233": [
            9307,
            9342,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Administrable._addBankAdmin": {
          "130": [
            17557,
            17596
          ],
          "131": [
            17606,
            17645
          ],
          "132": [
            17655,
            17719
          ]
        },
        "Administrable._createBank": {
          "93": [
            17013,
            17049
          ],
          "94": [
            17059,
            17098
          ],
          "95": [
            17108,
            17135
          ],
          "96": [
            17145,
            17209
          ]
        },
        "Administrable._deleteBank": {
          "100": [
            18434,
            18470
          ],
          "101": [
            18480,
            18549
          ],
          "102": [
            18559,
            18595
          ],
          "103": [
            18605,
            18633
          ],
          "104": [
            18643,
            18697
          ]
        },
        "Administrable._dissolveDividend": {
          "90": [
            16496,
            16528
          ],
          "91": [
            16581,
            16673
          ],
          "92": [
            16683,
            16737
          ]
        },
        "Administrable._issueDividend": {
          "109": [
            15656,
            15717
          ],
          "110": [
            15727,
            15773
          ],
          "111": [
            15875,
            15916
          ],
          "112": [
            15936,
            16056
          ],
          "113": [
            16066,
            16107
          ],
          "114": [
            16117,
            16153
          ],
          "115": [
            16163,
            16236
          ]
        },
        "Administrable._liquidize": {
          "81": [
            23378,
            23396
          ],
          "82": [
            23406,
            23442
          ]
        },
        "Administrable._moveToken": {
          "124": [
            20157,
            20222
          ],
          "125": [
            20232,
            20282
          ],
          "126": [
            20408,
            20453
          ],
          "127": [
            20550,
            20593
          ],
          "128": [
            20627,
            20675
          ],
          "129": [
            20685,
            20773
          ]
        },
        "Administrable._processTokenReceipt": {
          "10": [
            22902,
            22955
          ],
          "11": [
            23083,
            23122
          ],
          "12": [
            23142,
            23186
          ],
          "13": [
            23196,
            23239
          ]
        },
        "Administrable._registerTokenAddress": {
          "118": [
            22417,
            22458
          ],
          "119": [
            22468,
            22526
          ]
        },
        "Administrable._removeBankAdmin": {
          "97": [
            18081,
            18121
          ],
          "98": [
            18131,
            18171
          ],
          "99": [
            18181,
            18245
          ]
        },
        "Administrable._setBasePermit": {
          "79": [
            21627,
            21661
          ],
          "80": [
            21671,
            21736
          ]
        },
        "Administrable._setPermit": {
          "140": [
            21182,
            21221
          ],
          "141": [
            21231,
            21304
          ]
        },
        "Administrable._transferTokenFromBank": {
          "142": [
            19204,
            19265
          ],
          "143": [
            19275,
            19312
          ],
          "144": [
            19322,
            19368
          ],
          "145": [
            19470,
            19511
          ],
          "146": [
            19531,
            19607
          ]
        },
        "Administrable._unregisterTokenAddress": {
          "116": [
            22024,
            22067
          ],
          "117": [
            22077,
            22135
          ]
        },
        "Administrable.addBankAdmin": {
          "51": [
            8963,
            8996
          ]
        },
        "Administrable.bankExists": {
          "53": [
            13253,
            13288
          ]
        },
        "Administrable.bankIsEmpty": {
          "23": [
            13514,
            13606
          ]
        },
        "Administrable.claimDividend": {
          "35": [
            5741,
            5785
          ],
          "36": [
            5795,
            5854
          ],
          "37": [
            5864,
            5906
          ],
          "38": [
            6041,
            6075
          ],
          "39": [
            6085,
            6130
          ],
          "40": [
            6140,
            6218
          ],
          "41": [
            6228,
            6296
          ]
        },
        "Administrable.createBank": {
          "27": [
            8554,
            8585
          ]
        },
        "Administrable.deleteBank": {
          "42": [
            9645,
            9666
          ]
        },
        "Administrable.dissolveDividend": {
          "24": [
            8233,
            8260
          ]
        },
        "Administrable.dividendExists": {
          "5": [
            13825,
            13856
          ]
        },
        "Administrable.getBankBalance": {
          "26": [
            12241,
            12285
          ]
        },
        "Administrable.getDividendResidual": {
          "9": [
            12995,
            13030
          ]
        },
        "Administrable.getDividendToken": {
          "3": [
            12490,
            12534
          ]
        },
        "Administrable.getDividendValue": {
          "2": [
            12745,
            12782
          ]
        },
        "Administrable.hasPermit": {
          "57": [
            14572,
            14686
          ]
        },
        "Administrable.isBankAdmin": {
          "50": [
            14175,
            14251
          ]
        },
        "Administrable.isPermitAdmin": {
          "25": [
            15022,
            15142
          ]
        },
        "Administrable.issueDividend": {
          "44": [
            7952,
            7995
          ]
        },
        "Administrable.issueShards": {
          "43": [
            7404,
            7446
          ]
        },
        "Administrable.liquidize": {
          "16": [
            11939,
            11951
          ]
        },
        "Administrable.moveToken": {
          "49": [
            10776,
            10830
          ]
        },
        "Administrable.registerTokenAddress": {
          "47": [
            6603,
            6638
          ]
        },
        "Administrable.removeBankAdmin": {
          "28": [
            9389,
            9425
          ]
        },
        "Administrable.setBasePermit": {
          "14": [
            11694,
            11744
          ],
          "15": [
            11754,
            11789
          ]
        },
        "Administrable.setPermit": {
          "54": [
            11252,
            11308
          ],
          "55": [
            11318,
            11357
          ]
        },
        "Administrable.transferTokenFromBank": {
          "58": [
            10187,
            10241
          ]
        },
        "Administrable.unregisterTokenAddress": {
          "45": [
            6951,
            6988
          ]
        }
      },
      "1": {
        "Idea.<receive>": {
          "0": [
            1963,
            2016
          ]
        },
        "Idea._issueShards": {
          "105": [
            5099,
            5134
          ],
          "106": [
            5144,
            5191
          ],
          "107": [
            5201,
            5287
          ],
          "108": [
            5297,
            5366
          ]
        },
        "Idea._liquidize": {
          "156": [
            9403,
            9417
          ],
          "157": [
            9454,
            9485
          ]
        },
        "Idea._payProfitToSeller": {
          "149": [
            10034,
            10067
          ],
          "150": [
            10201,
            10267
          ]
        },
        "Idea._processTokenReceipt": {
          "77": [
            7922,
            7951
          ],
          "78": [
            7961,
            7998
          ]
        },
        "Idea._processTokenTransfer": {
          "159": [
            8374,
            8403
          ],
          "160": [
            8413,
            8450
          ]
        },
        "Idea._receiveToken": {
          "120": [
            7252,
            7292
          ],
          "121": [
            7345,
            7409
          ],
          "122": [
            7419,
            7485
          ],
          "123": [
            7495,
            7546
          ]
        },
        "Idea._registerTokenAddress": {
          "172": [
            8731,
            8773
          ],
          "173": [
            8783,
            8823
          ]
        },
        "Idea._transferEther": {
          "158": [
            6880,
            6902
          ]
        },
        "Idea._transferToken": {
          "84": [
            5833,
            5877
          ],
          "85": [
            5921,
            5946
          ],
          "86": [
            6023,
            6062
          ],
          "87": [
            6301,
            6340
          ],
          "88": [
            6407,
            6446
          ],
          "89": [
            6493,
            6534
          ]
        },
        "Idea._unregisterTokenAddress": {
          "169": [
            9110,
            9151
          ],
          "170": [
            9161,
            9201
          ],
          "171": [
            9211,
            9252
          ]
        },
        "Idea.acceptsToken": {
          "46": [
            4364,
            4442
          ]
        },
        "Idea.claimLiquid": {
          "29": [
            2712,
            2742
          ],
          "30": [
            2802,
            2855
          ],
          "31": [
            2865,
            2909
          ],
          "32": [
            3032,
            3062
          ],
          "33": [
            3072,
            3115
          ],
          "34": [
            3125,
            3176
          ]
        },
        "Idea.claimTerminatedLiquid": {
          "19": [
            3473,
            3501
          ],
          "20": [
            3595,
            3641
          ],
          "21": [
            3651,
            3751
          ],
          "22": [
            3761,
            3793
          ]
        },
        "Idea.getLiquidResidual": {
          "1": [
            4050,
            4085
          ]
        },
        "Idea.isTerminated": {
          "56": [
            4629,
            4693
          ]
        },
        "Idea.receiveToken": {
          "48": [
            2365,
            2398
          ]
        }
      },
      "2": {
        "Shardable._cancelSale": {
          "83": [
            12727,
            12755
          ]
        },
        "Shardable._expireShard": {
          "161": [
            16462,
            16513
          ],
          "162": [
            16523,
            16568
          ],
          "163": [
            16578,
            16618
          ]
        },
        "Shardable._pushShard": {
          "164": [
            15574,
            15599
          ],
          "165": [
            15729,
            15756
          ],
          "166": [
            15766,
            15813
          ],
          "167": [
            15900,
            16121
          ],
          "168": [
            16131,
            16171
          ]
        },
        "Shardable._putForSale": {
          "151": [
            14858,
            14896
          ],
          "152": [
            14906,
            14956
          ],
          "153": [
            14966,
            15122
          ],
          "154": [
            15132,
            15159
          ],
          "155": [
            15169,
            15220
          ]
        },
        "Shardable._split": {
          "133": [
            13243,
            13299
          ],
          "134": [
            13529,
            13559
          ],
          "135": [
            13618,
            13655
          ],
          "136": [
            13793,
            13820
          ],
          "137": [
            13880,
            13912
          ],
          "138": [
            14099,
            14152
          ],
          "139": [
            14172,
            14221
          ]
        },
        "Shardable.cancelSale": {
          "17": [
            10463,
            10498
          ],
          "18": [
            10508,
            10526
          ]
        },
        "Shardable.getCurrentClock": {
          "8": [
            11150,
            11162
          ]
        },
        "Shardable.getShardExpirationClock": {
          "7": [
            11335,
            11369
          ]
        },
        "Shardable.getShardSalePrice": {
          "4": [
            11528,
            11559
          ]
        },
        "Shardable.isShardHolder": {
          "74": [
            12084,
            12126
          ]
        },
        "Shardable.isValidShard": {
          "6": [
            11800,
            11845
          ]
        },
        "Shardable.purchase": {
          "59": [
            7358,
            7393
          ],
          "60": [
            7403,
            7429
          ],
          "61": [
            7439,
            7489
          ],
          "62": [
            7499,
            7594
          ],
          "63": [
            7604,
            7622
          ],
          "64": [
            7832,
            7859
          ],
          "65": [
            7984,
            8022
          ],
          "66": [
            8353,
            8403
          ],
          "67": [
            8509,
            8578
          ],
          "68": [
            8642,
            8748
          ],
          "69": [
            8801,
            8892
          ],
          "70": [
            8912,
            8944
          ],
          "71": [
            9098,
            9138
          ],
          "72": [
            9158,
            9253
          ],
          "73": [
            9401,
            9564
          ]
        },
        "Shardable.putForSale": {
          "75": [
            10211,
            10258
          ]
        },
        "Shardable.shardExisted": {
          "76": [
            12443,
            12537
          ]
        },
        "Shardable.split": {
          "52": [
            11007,
            11036
          ]
        },
        "divideUnequallyIntoTwoWithRemainder": {
          "147": [
            748,
            780
          ],
          "148": [
            912,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "Idea",
    "Shardable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "307:23145:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1963:53:1;1992:1;1995:9;2005:10;1963:20;:53::i;:::-;307:23145:0;;;;;2786:18:2;;;;;;;;;;-1:-1:-1;2786:18:2;;;;;;;;;;;179:14:8;;172:22;154:41;;142:2;127:18;2786::2;;;;;;;;11576:220:0;;;;;;;;;;-1:-1:-1;11576:220:0;;;;;:::i;:::-;;:::i;11878:80::-;;;;;;;;;;;;;:::i;2993:58:2:-;;;;;;;;;;-1:-1:-1;2993:58:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1973:25:8;;;1961:2;1946:18;2993:58:2;1827:177:8;10371:162:2;;;;;;;;;;-1:-1:-1;10371:162:2;;;;;:::i;:::-;;:::i;3401:399:1:-;;;;;;;;;;-1:-1:-1;3401:399:1;;;;;:::i;:::-;;:::i;13433:180:0:-;;;;;;;;;;-1:-1:-1;13433:180:0;;;;;:::i;:::-;;:::i;8149:118::-;;;;;;;;;;-1:-1:-1;8149:118:0;;;;;:::i;:::-;;:::i;14920:229::-;;;;;;;;;;-1:-1:-1;14920:229:0;;;;;:::i;:::-;;:::i;12132:160::-;;;;;;;;;;-1:-1:-1;12132:160:0;;;;;:::i;:::-;;:::i;8439:153::-;;;;;;;;;;-1:-1:-1;8439:153:0;;;;;:::i;:::-;;:::i;9256:176::-;;;;;;;;;;-1:-1:-1;9256:176:0;;;;;:::i;:::-;;:::i;2634:549:1:-;;;;;;;;;;-1:-1:-1;2634:549:1;;;;;:::i;:::-;;:::i;5604:699:0:-;;;;;;;;;;-1:-1:-1;5604:699:0;;;;;:::i;:::-;;:::i;9536:137::-;;;;;;;;;;-1:-1:-1;9536:137:0;;;;;:::i;:::-;;:::i;7278:175::-;;;;;;;;;;-1:-1:-1;7278:175:0;;;;;:::i;:::-;;:::i;3962:130:1:-;;;;;;;;;;-1:-1:-1;3962:130:1;;;;;:::i;:::-;-1:-1:-1;;;;;4057:28:1;4031:7;4057:28;;;:14;:28;;;;;;;3962:130;12662:127:0;;;;;;;;;;-1:-1:-1;12662:127:0;;;;;:::i;:::-;12726:7;12752:24;;;:14;:24;;;;;:30;;;;12662:127;684:41:1;;;;;;;;;;-1:-1:-1;684:41:1;;;;;:::i;:::-;;;;;;;;;;;;;;12407:134:0;;;;;;;;;;-1:-1:-1;12407:134:0;;;;;:::i;:::-;12471:7;12497:24;;;:14;:24;;;;;:37;-1:-1:-1;;;;;12497:37:0;;12407:134;;;;-1:-1:-1;;;;;4110:32:8;;;4092:51;;4080:2;4065:18;12407:134:0;3946:203:8;7804:200:0;;;;;;;;;;-1:-1:-1;7804:200:0;;;;;:::i;:::-;;:::i;11447:119:2:-;;;;;;;;;;-1:-1:-1;11447:119:2;;;;;:::i;:::-;11509:7;11535:18;;;:11;:18;;;;;:24;;;;11447:119;6843:152:0;;;;;;;;;;-1:-1:-1;6843:152:0;;;;;:::i;:::-;;:::i;4286:163:1:-;;;;;;;;;;-1:-1:-1;4286:163:1;;;;;:::i;:::-;;:::i;6497:148:0:-;;;;;;;;;;-1:-1:-1;6497:148:0;;;;;:::i;:::-;;:::i;13749:114::-;;;;;;;;;;-1:-1:-1;13749:114:0;;;;;:::i;:::-;13811:4;13832:24;;;:14;:24;;;;;;;;;13749:114;2287:118:1;;;;;;;;;;-1:-1:-1;2287:118:1;;;;;:::i;:::-;;:::i;11727:125:2:-;;;;;;;;;;-1:-1:-1;11727:125:2;;;;;:::i;:::-;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;10619:218:0;;;;;;;;;;-1:-1:-1;10619:218:0;;;;;:::i;:::-;;:::i;14077:181::-;;;;;;;;;;-1:-1:-1;14077:181:0;;;;;:::i;:::-;;:::i;11084:85:2:-;;;;;;;;;;-1:-1:-1;11131:7:2;11157:5;11084:85;;8834:169:0;;;;;;;;;;-1:-1:-1;8834:169:0;;;;;:::i;:::-;;:::i;10874::2:-;;;;;;;;;;-1:-1:-1;10874:169:2;;;;;:::i;:::-;;:::i;13173:122:0:-;;;;;;;;;;-1:-1:-1;13173:122:0;;;;;:::i;:::-;;:::i;3162:48:2:-;;;;;;;;;;-1:-1:-1;3162:48:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3162:48:2;;;;;;;;6102:25:8;;;-1:-1:-1;;;;;6163:32:8;;;6158:2;6143:18;;6136:60;6212:18;;;6205:34;6090:2;6075:18;3162:48:2;5900:345:8;3308:47:2;;;;;;;;;;-1:-1:-1;3308:47:2;;;;;:::i;:::-;;;;;;;;;;;;;;11121:244:0;;;;;;;;;;-1:-1:-1;11121:244:0;;;;;:::i;:::-;;:::i;4569:141:1:-;;;;;;;;;;;;;:::i;14474:219:0:-;;;;;;;;;;-1:-1:-1;14474:219:0;;;;;:::i;:::-;;:::i;10040:208::-;;;;;;;;;;-1:-1:-1;10040:208:0;;;;;:::i;:::-;;:::i;7260:2321:2:-;;;;;;:::i;:::-;;:::i;12008:125::-;;;;;;;;;;-1:-1:-1;12008:125:2;;;;;:::i;:::-;;:::i;12909:128:0:-;;;;;;;;;;-1:-1:-1;12909:128:0;;;;;:::i;:::-;12976:7;13002:28;;;:18;:28;;;;;;;12909:128;11248::2;;;;;;;;;;-1:-1:-1;11248:128:2;;;;;:::i;:::-;11316:7;11342:27;;;:20;:27;;;;;;;11248:128;10054:211;;;;;;;;;;-1:-1:-1;10054:211:2;;;;;:::i;:::-;;:::i;12353:191::-;;;;;;;;;;-1:-1:-1;12353:191:2;;;;;:::i;:::-;;:::i;22793:453:0:-;22902:53;22929:12;22943:5;22950:4;22902:26;:53::i;:::-;22997:21;;-1:-1:-1;;;8146:19:8;;22997:13:0;;8190:1:8;8181:11;22997:21:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;22997:35:0;;;;;;;;;;;:40;:70;;;;-1:-1:-1;;;;;;23041:26:0;;;;22997:70;22993:140;;;23121:1;23083:26;:34;;;;-1:-1:-1;;;8146:19:8;;8190:1;8181:11;;7944:254;23083:34:0;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;22993:140:0;23181:5;23142:13;:21;;;;-1:-1:-1;;;8146:19:8;;8190:1;8181:11;;7944:254;23142:21:0;;;;;;;;;;;;;:35;23164:12;-1:-1:-1;;;;;23142:35:0;-1:-1:-1;;;;;23142:35:0;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;23201:38:0;;;-1:-1:-1;;;;;8723:15:8;;;8705:34;;8770:2;8755:18;;8748:34;;;8818:15;;8798:18;;;8791:43;;;;23201:38:0;;8655:2:8;8640:18;23201:38:0;;;;;;;;22793:453;;;:::o;11576:220::-;11672:10;3864:37;3878:10;3890;3864:13;:37::i;:::-;3856:46;;;;;;11729:8:::1;11702:35;;;;;;;;:::i;:::-;:11;11714:10;11702:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:35;::::0;::::1;;;;;;:::i;:::-;::::0;11694:50:::1;;;::::0;-1:-1:-1;;;11694:50:0;;9728:2:8;11694:50:0::1;::::0;::::1;9710:21:8::0;9767:1;9747:18;;;9740:29;-1:-1:-1;;;9785:18:8;;;9778:32;9827:18;;11694:50:0::1;;;;;;;;;11754:35;11769:10;11780:8;11754:14;:35::i;:::-;11576:220:::0;;;:::o;11878:80::-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;11939:12:::1;:10;:12::i;:::-;11878:80:::0;:::o;10371:162:2:-;6551:18;;;;:11;:18;;;;;:24;;;10424:5;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;10446:5:::1;6119:19;6132:5;11784:4:::0;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;10471:20:::2;::::0;;;:13:::2;:20;::::0;;;;;::::2;;10463:35;;;::::0;-1:-1:-1;;;10463:35:2;;10718:2:8;10463:35:2::2;::::0;::::2;10700:21:8::0;10757:1;10737:18;;;10730:29;-1:-1:-1;;;10775:18:8;;;10768:32;10817:18;;10463:35:2::2;10516:325:8::0;10463:35:2::2;10508:18;10520:5;10508:11;:18::i;3401:399:1:-:0;3481:14;:12;:14::i;:::-;3473:28;;;;-1:-1:-1;;;3473:28:1;;11048:2:8;3473:28:1;;;11030:21:8;11087:1;11067:18;;;11060:29;-1:-1:-1;;;11105:18:8;;;11098:32;11147:18;;3473:28:1;10846:325:8;3473:28:1;-1:-1:-1;;;;;3603:28:1;;3634:1;3603:28;;;:14;:28;;;;;;3595:46;;;;-1:-1:-1;;;3595:46:1;;11378:2:8;3595:46:1;;;11360:21:8;11417:1;11397:18;;;11390:29;-1:-1:-1;;;11435:18:8;;;11428:31;11476:18;;3595:46:1;11176:324:8;3595:46:1;-1:-1:-1;;;;;3679:28:1;;;;;;:14;:28;;;;;;3651:100;;3666:12;;3708:42;3651:14;:100::i;:::-;-1:-1:-1;;;;;3761:28:1;3792:1;3761:28;;;:14;:28;;;;;:32;3401:399::o;13433:180:0:-;13498:4;13521:26;13548:8;13521:36;;;;;;:::i;:::-;;;;;;;;;;;;;;13561:1;13521:41;:85;;;;;13566:13;13580:8;13566:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:35;;;;;;;;;:40;13521:85;13514:92;13433:180;-1:-1:-1;;13433:180:0:o;8149:118::-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;8233:27:::1;8251:8;8233:17;:27::i;:::-;8149:118:::0;;:::o;14920:229::-;15006:4;15061:25;15029:7;15037:10;15029:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15029:28:0;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;:113;;;-1:-1:-1;15117:25:0;15090:11;15102:10;15090:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:52;;;;;;;;:::i;:::-;;15029:113;15022:120;14920:229;-1:-1:-1;;;14920:229:0:o;12132:160::-;12222:7;12248:13;12262:8;12248:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12248:37:0;;;;;;;;;;;;-1:-1:-1;12132:160:0;;;;:::o;8439:153::-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;8554:31:0::2;8566:8;8575:9;8554:11;:31::i;9256:176::-:0;3795:126;;;;;;;;;;;;;-1:-1:-1;;;3795:126:0;;;3864:37;3878:10;3890;3864:13;:37::i;:::-;3856:46;;;;;;9369:8:::1;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;::::0;::::1;;9389:36:::2;9406:8;9415:9;9389:16;:36::i;:::-;3912:1:::1;9256:176:::0;;;:::o;2634:549:1:-;5930:25:2;5944:10;5930:13;:25::i;:::-;5922:40;;;;-1:-1:-1;;;5922:40:2;;12037:2:8;5922:40:2;;;12019:21:8;12076:1;12056:18;;;12049:29;-1:-1:-1;;;12094:18:8;;;12087:32;12136:18;;5922:40:2;11835:325:8;5922:40:2;2720:6:1::1;::::0;::::1;;:15;2712:30;;;::::0;-1:-1:-1;;;2712:30:1;;12367:2:8;2712:30:1::1;::::0;::::1;12349:21:8::0;12406:1;12386:18;;;12379:29;-1:-1:-1;;;12424:18:8;;;12417:32;12466:18;;2712:30:1::1;12165:325:8::0;2712:30:1::1;2781:10;2752:13;2768:24:::0;;;:12:::1;:24;::::0;;;;;;;;-1:-1:-1;;;;;2811:30:1;::::1;::::0;;:16:::1;:30:::0;;;;;:37;;;;;;;;;;::::1;;2810:38;2802:53;;;::::0;-1:-1:-1;;;2802:53:1;;12697:2:8;2802:53:1::1;::::0;::::1;12679:21:8::0;12736:1;12716:18;;;12709:29;-1:-1:-1;;;12754:18:8;;;12747:32;12796:18;;2802:53:1::1;12495:325:8::0;2802:53:1::1;-1:-1:-1::0;;;;;2865:30:1;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;2865:44:1::1;2905:4;2865:44;::::0;;3016:5;;2992:30;;:23:::1;:30:::0;;;;;;2964:18;;;:11:::1;:18:::0;;;;;:25;2941:20;;;:6:::1;:20:::0;;;;;;2865:30;;2992;;2941:48:::1;::::0;2964:25;2941:48:::1;:::i;:::-;:81;;;;:::i;:::-;2919:103;;3040:11;3055:1;3040:16:::0;3032:30:::1;;;::::0;-1:-1:-1;;;3032:30:1;;11378:2:8;3032:30:1::1;::::0;::::1;11360:21:8::0;11417:1;11397:18;;;11390:29;-1:-1:-1;;;11435:18:8;;;11428:31;11476:18;;3032:30:1::1;11176:324:8::0;3032:30:1::1;-1:-1:-1::0;;;;;3072:28:1;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;3104:11;;3072:28;:43:::1;::::0;3104:11;;3072:43:::1;:::i;:::-;::::0;;;-1:-1:-1;3125:51:1::1;::::0;-1:-1:-1;3140:12:1;3153:11;3165:10:::1;3125:14;:51::i;5604:699:0:-:0;6551:18:2;;;;:11;:18;;;;;:24;;;5680:5:0;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;13811:4:0;13832:24;;;:14;:24;;;;;;5708:8;;13832:24;;4633:33:::1;;;::::0;::::1;;6303:6:2::2;::::0;;::::2;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::2;;;;;;;:::i;:::-;5749:28:0::3;5762:5;5768:8;5749:12;:28::i;:::-;5741:44;;;::::0;-1:-1:-1;;;5741:44:0;;13555:2:8;5741:44:0::3;::::0;::::3;13537:21:8::0;13594:1;13574:18;;;13567:29;-1:-1:-1;;;13612:18:8;;;13605:33;13655:18;;5741:44:0::3;13353:326:8::0;5741:44:0::3;5803:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;;::::3;;:44;5795:59;;;::::0;-1:-1:-1;;;5795:59:0;;12697:2:8;5795:59:0::3;::::0;::::3;12679:21:8::0;12736:1;12716:18;;;12709:29;-1:-1:-1;;;12754:18:8;;;12747:32;12796:18;;5795:59:0::3;12495:325:8::0;5795:59:0::3;5864:28;::::0;;;:18:::3;:28;::::0;;;;;;;:35;;;;;;;;:42;;-1:-1:-1;;5864:42:0::3;5902:4;5864:42:::0;;::::3;::::0;;;6025:5;;6001:30;;:23:::3;:30:::0;;;;;;5973:18;;;:11:::3;:18:::0;;;;;:25;5940:24;;;:14:::3;:24:::0;;;;;;:30:::3;::::0;6001;;5940:58:::3;::::0;::::3;:::i;:::-;:91;;;;:::i;:::-;5916:115;;6049:13;6066:1;6049:18:::0;6041:34:::3;;;::::0;-1:-1:-1;;;6041:34:0;;13886:2:8;6041:34:0::3;::::0;::::3;13868:21:8::0;13925:1;13905:18;;;13898:29;-1:-1:-1;;;13943:18:8;;;13936:33;13986:18;;6041:34:0::3;13684:326:8::0;6041:34:0::3;6085:28;::::0;;;:18:::3;:28;::::0;;;;:45;;6117:13;;6085:28;:45:::3;::::0;6117:13;;6085:45:::3;:::i;:::-;::::0;;;-1:-1:-1;;6155:24:0::3;::::0;;;:14:::3;:24;::::0;;;;:37;6140:78:::3;::::0;-1:-1:-1;;;;;6155:37:0::3;6193:13:::0;6207:10:::3;6140:14;:78::i;:::-;6250:34;::::0;;::::3;::::0;::::3;14189:25:8::0;;;14230:18;;;14223:34;;;-1:-1:-1;;;;;;;;;;;6233:63:0;14162:18:8;;6250:34:0::3;::::0;;-1:-1:-1;;6250:34:0;;::::3;::::0;;;;;;;6233:63:::3;::::0;6285:10:::3;::::0;6233:63:::3;:::i;:::-;;;;;;;;5731:572;6606:1:2::1;5604:699:0::0;;;:::o;9536:137::-;3795:126;;;;;;;;;;;;;-1:-1:-1;;;3795:126:0;;;3864:37;3878:10;3890;3864:13;:37::i;:::-;3856:46;;;;;;9625:8:::1;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;::::0;::::1;;9645:21:::2;9657:8;9645:11;:21::i;7278:175::-:0;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;7404::::1;7417:6;7424:12;7437:5;7443:2;7404:12;:42::i;:::-;7278:175:::0;;;;;:::o;7804:200::-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;7932:8:::1;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;::::0;::::1;;7952:43:::2;7967:8;7976:12;7989:5;7952:14;:43::i;6843:152::-:0;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;6951:37:0::2;6975:12;6951:23;:37::i;4286:163:1:-:0;-1:-1:-1;;;;;4371:33:1;;4350:4;4371:33;;;:19;:33;;;;;;;;:41;;:33;:41;;:71;;-1:-1:-1;;;;;;;4416:26:1;;;4286:163::o;6497:148:0:-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;6603:35:0::2;6625:12;6603:21;:35::i;2287:118:1:-:0;2365:33;2379:12;2392:5;2365:13;:33::i;10619:218:0:-;10752:12;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;;;;10776:54:::1;10787:12;10800:10;10811:12;10824:5;10776:10;:54::i;14077:181::-:0;14159:4;14182:11;14194:8;14182:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14182:30:0;;;;;;;;;;;;;:38;;:30;:38;;:69;;;14224:27;;;;;;;;;;;;;;-1:-1:-1;;;14224:27:0;;;14243:7;14224:13;:27::i;8834:169::-;3514:120;;;;;;;;;;;;;-1:-1:-1;;;3514:120:0;;;3582:33;3592:10;3604;3582:9;:33::i;:::-;3574:42;;;;;;8943:8:::1;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;::::0;::::1;;8963:33:::2;8977:8;8986:9;8963:13;:33::i;10874:169:2:-:0;6551:18;;;;:11;:18;;;;;:24;;;10956:11;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;10984:11:::1;6119:19;6132:5;11784:4:::0;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;11007:29:::2;11014:11;11026:6;11033:2;11007:6;:29::i;13173:122:0:-:0;13237:4;13260:10;13271:8;13260:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13173:122;-1:-1:-1;;13173:122:0:o;11121:244::-;11230:10;3864:37;3878:10;3890;3864:13;:37::i;:::-;3856:46;;;;;;11292:8:::1;11260:40;;;;;;;;:::i;:::-;:7;11268:10;11260:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;11260:28:0;::::1;;::::0;;;;;;;;::::1;;:40;::::0;::::1;;;;;;:::i;:::-;::::0;11252:56:::1;;;::::0;-1:-1:-1;;;11252:56:0;;15288:2:8;11252:56:0::1;::::0;::::1;15270:21:8::0;15327:1;15307:18;;;15300:29;-1:-1:-1;;;15345:18:8;;;15338:33;15388:18;;11252:56:0::1;15086:326:8::0;11252:56:0::1;11318:39;11329:10;11340:7;11348:8;11318:10;:39::i;4569:141:1:-:0;4636:6;;4613:4;;4636:6;;:15;;;:57;;;4689:3;4672:13;;4656:15;:29;;;;:::i;:::-;:36;;4636:57;4629:64;;4569:141;:::o;14474:219:0:-;14556:4;14611:22;14579:7;14587:10;14579:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14579:28:0;;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;;:107;;;-1:-1:-1;14664:22:0;14637:11;14649:10;14637:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:49;;;;;;;;:::i;:::-;;;;14474:219;-1:-1:-1;;;14474:219:0:o;10040:208::-;10167:8;4134:33;4146:8;4156:10;4134:11;:33::i;:::-;4126:42;;;;;;10187:54:::1;10210:8;10219:12;10232:5;10238:2;10187:22;:54::i;7260:2321:2:-:0;7341:5;6119:19;6132:5;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;7366:20:::1;::::0;;;:13:::1;:20;::::0;;;;;::::1;;7358:35;;;::::0;-1:-1:-1;;;7358:35:2;;10718:2:8;7358:35:2::1;::::0;::::1;10700:21:8::0;10757:1;10737:18;;;10730:29;-1:-1:-1;;;10775:18:8;;;10768:32;10817:18;;7358:35:2::1;10516:325:8::0;7358:35:2::1;7411:6;7421:1;7411:11:::0;7403:26:::1;;;::::0;-1:-1:-1;;;7403:26:2;;15619:2:8;7403:26:2::1;::::0;::::1;15601:21:8::0;15658:1;15638:18;;;15631:29;-1:-1:-1;;;15676:18:8;;;15669:32;15718:18;;7403:26:2::1;15417:325:8::0;7403:26:2::1;7447:18;::::0;;;:11:::1;:18;::::0;;;;:25;:35;-1:-1:-1;7447:35:2::1;7439:50;;;::::0;-1:-1:-1;;;7439:50:2;;15619:2:8;7439:50:2::1;::::0;::::1;15601:21:8::0;15658:1;15638:18;;;15631:29;-1:-1:-1;;;15676:18:8;;;15669:32;15718:18;;7439:50:2::1;15417:325:8::0;7439:50:2::1;7508:18;::::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;7508:21:2::1;7533:10;7508:35;::::0;7507:80:::1;;-1:-1:-1::0;7582:3:2::1;7549:18:::0;;;:11:::1;:18;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;7549:21:2::1;:37:::0;7507:80:::1;7499:95;;;::::0;-1:-1:-1;;;7499:95:2;;15949:2:8;7499:95:2::1;::::0;::::1;15931:21:8::0;15988:1;15968:18;;;15961:29;-1:-1:-1;;;16006:18:8;;;15999:32;16048:18;;7499:95:2::1;15747:325:8::0;7499:95:2::1;7604:18;7616:5;7604:11;:18::i;:::-;7632;7662::::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;7653:33:::1;::::0;:6;:33:::1;:::i;:::-;7632:54;;7697:23;7722:22:::0;7746:17:::1;7767:55;7803:10;7814:2;7817:4;7767:35;:55::i;:::-;7696:126:::0;;-1:-1:-1;7696:126:2;-1:-1:-1;7696:126:2;-1:-1:-1;7832:27:2::1;7696:126:::0;;7832:27:::1;:::i;:::-;7964:3;7921:18:::0;;;:11:::1;:18;::::0;;;;:31:::1;;::::0;7832:27;;-1:-1:-1;;;;;;7921:31:2::1;7917:986;;8005:10;7992:9;:23;;7984:38;;;::::0;-1:-1:-1;;;7984:38:2;;16279:2:8;7984:38:2::1;::::0;::::1;16261:21:8::0;16318:1;16298:18;;;16291:29;-1:-1:-1;;;16336:18:8;;;16329:32;16378:18;;7984:38:2::1;16077:325:8::0;7984:38:2::1;8113:83;::::0;8087:21:::1;::::0;8121:42:::1;::::0;8176:15;;8087:21;8113:83;8087:21;8113:83;8176:15;8121:42;8113:83:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;8250:20:2::1;8283:18:::0;;;:11:::1;:18;::::0;;;;;:24:::1;;::::0;8275:64;;8086:110;;-1:-1:-1;8250:20:2;;-1:-1:-1;;;;;8283:24:2;;::::1;::::0;8320:14;;8250:20;8275:64;8250:20;8275:64;8320:14;8283:24;8275:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8249:90;;;8361:15;:35;;;;;8380:16;8361:35;8353:50;;;::::0;-1:-1:-1;;;8353:50:2;;16819:2:8;8353:50:2::1;::::0;::::1;16801:21:8::0;16858:1;16838:18;;;16831:29;-1:-1:-1;;;16876:18:8;;;16869:32;16918:18;;8353:50:2::1;16617:325:8::0;8353:50:2::1;7970:444;;7917:986;;;8443:11;8463:18:::0;;;:11:::1;:18;::::0;;;;;;:31:::1;;::::0;8517:41;;-1:-1:-1;;;8517:41:2;;8533:10:::1;8517:41;::::0;::::1;17159:34:8::0;8552:4:2::1;17209:18:8::0;;;17202:43;-1:-1:-1;;;;;8463:31:2;;::::1;::::0;8562:10;;8463:31;;8517:15:::1;::::0;17094:18:8;;8517:41:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;8509:69;;;;-1:-1:-1::0;;;8509:69:2::1;;;;;;;:::i;:::-;8650:91;::::0;-1:-1:-1;;;8650:91:2;;8669:10:::1;8650:91;::::0;::::1;18015:34:8::0;8681:42:2::1;18065:18:8::0;;;18058:43;18117:18;;;18110:34;;;-1:-1:-1;;;;;8650:18:2;::::1;::::0;::::1;::::0;17950::8;;8650:91:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8642:106;;;;-1:-1:-1::0;;;8642:106:2::1;;;;;;;:::i;:::-;8820:18;::::0;;;:11:::1;:18;::::0;;;;;;;:24:::1;::::0;;::::1;::::0;8845:11:::1;:18:::0;;;;;:31;;::::1;::::0;8801:91:::1;::::0;-1:-1:-1;;;;;8820:24:2;;::::1;::::0;8845:31:::1;8877:14:::0;8801:18:::1;:91::i;:::-;8429:474;7917:986;8912:32;8919:5;8926:6;8933:10;8912:6;:32::i;:::-;8958:18;::::0;;;:11:::1;:18;::::0;;;;:24:::1;;::::0;8994:4:::1;-1:-1:-1::0;;;;;8958:24:2;;::::1;:41:::0;8954:195:::1;;9098:30;9122:5:::0;;9098:30;;:23:::1;:30;::::0;;;;:40;;9132:6;;9098:30;:40:::1;::::0;9132:6;;9098:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;8954:195:2::1;9196:18;::::0;;;:11:::1;:18;::::0;;;;;;;;:31:::1;::::0;::::1;::::0;9228:24:::1;::::0;;::::1;::::0;9163:90;;19026:25:8;;;19067:18;;;19060:34;;;9185:10:2::1;19148:18:8::0;;;19141:43;-1:-1:-1;;;;;9196:31:2;;::::1;19215:2:8::0;19200:18;;19193:43;19267:3;19252:19;;19245:35;9163:90:2;;::::1;::::0;;;;19013:3:8;9163:90:2;;::::1;9307:18;::::0;;;:11:::1;:18;::::0;;;;:25;:35;::::1;9303:272;;9413:38;9426:18:::0;;;:11:::1;:18;::::0;;;;;;;:24:::1;;::::0;-1:-1:-1;;;;;9426:24:2::1;9413:38:::0;;:12:::1;:38:::0;;;;;;9452:18;;;:11:::1;:18:::0;;;;;;:25;9401:163:::1;::::0;9413:38;9452:32:::1;::::0;9478:6;;9452:32:::1;:::i;:::-;9485:18;::::0;;;:11:::1;:18;::::0;;;;:31:::1;::::0;::::1;::::0;9517:24:::1;::::0;::::1;::::0;9542:21:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9485:31:2;;::::1;::::0;9517:24;9542:21:::1;9401:11;:163::i;:::-;7348:2233;;;;7260:2321:::0;;;:::o;12008:125::-;-1:-1:-1;;;;;12104:21:2;;12068:4;12104:21;;;:12;:21;;;;;;12091:35;;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;10054:211;6551:18;;;;:11;:18;;;;;:24;;;10172:5;;-1:-1:-1;;;;;6551:24:2;6579:10;6551:38;6543:53;;;;-1:-1:-1;;;6543:53:2;;;;;;;:::i;:::-;10194:5:::1;6119:19;6132:5;11784:4:::0;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19:::1;6111:34;;;;-1:-1:-1::0;;;6111:34:2::1;;;;;;;:::i;:::-;10211:47:::2;10223:5;10229:6;10236:12;10249:5;10255:2;10211:11;:47::i;12353:191::-:0;12427:4;12450:18;;;:11;:18;;;;;:32;;;:43;-1:-1:-1;12450:43:2;;;:87;;-1:-1:-1;;11316:7:2;11342:27;;;:20;:27;;;;;;;-1:-1:-1;12497:40:2;12353:191::o;7814:244:1:-;-1:-1:-1;;;;;7922:20:1;;;;;;:6;:20;;;;;:29;;7946:5;;7922:20;:29;;7946:5;;7922:29;:::i;:::-;;;;-1:-1:-1;;;;;;;7961:28:1;;;;;;:14;:28;;;;;:37;;7993:5;;7961:28;:37;;7993:5;;7961:37;:::i;21523:220:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;21653:8:0::1;21627:11;21639:10;21627:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:34;;-1:-1:-1;;21627:34:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21704:10:0::1;21715:8;21693:31;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21693:31:0;;::::1;::::0;;;;;;;21676:60:::1;::::0;21725:10:::1;::::0;21676:60:::1;:::i;:::-;;;;;;;;21523:220:::0;;:::o;23328:121::-;23378:18;:16;:18::i;:::-;23411:31;;;20735:2:8;20717:21;;;20774:1;20754:18;;;20747:29;-1:-1:-1;;;20807:3:8;20792:19;;20785:33;20856:3;20849:4;20834:20;;20827:33;;;-1:-1:-1;20876:19:8;;;20869:30;23431:10:0;20951:18:8;;;20944:60;23411:31:0;;-1:-1:-1;;;;;;;;;;;23411:31:0;;;;20931:3:8;23411:31:0;;;23328:121::o;12650:112:2:-;12710:5;6119:19;6132:5;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;-1:-1:-1;12750:5:2::1;12727:20:::0;;;:13:::1;:20;::::0;;;;:28;;-1:-1:-1;;12727:28:2::1;::::0;;12650:112::o;5741:810:1:-;-1:-1:-1;;;;;5841:20:1;;;;;;:6;:20;;;;;;:29;-1:-1:-1;5841:29:1;5833:44;;;;-1:-1:-1;;;5833:44:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5891:26:1;;5887:584;;5921:25;5936:5;5943:2;5921:14;:25::i;:::-;5887:584;;;6031:24;;-1:-1:-1;;;6031:24:1;;-1:-1:-1;;;;;21207:32:8;;;6031:24:1;;;21189:51:8;21256:18;;;21249:34;;;5996:12:1;;6031:13;;;;;;21162:18:8;;6031:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6023:39;;;;-1:-1:-1;;;6023:39:1;;21496:2:8;6023:39:1;;;21478:21:8;21535:1;21515:18;;;21508:29;-1:-1:-1;;;21553:18:8;;;21546:32;21595:18;;6023:39:1;21294:325:8;6023:39:1;-1:-1:-1;;;;;6080:14:1;;;:18;6076:385;;6122:43;;-1:-1:-1;;;6122:43:1;;-1:-1:-1;;;;;21207:32:8;;;6122:43:1;;;21189:51:8;21256:18;;;21249:34;;;6122:22:1;;;;;21162:18:8;;6122:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6118:241;;6309:24;;-1:-1:-1;;;6309:24:1;;-1:-1:-1;;;;;21207:32:8;;;6309:24:1;;;21189:51:8;21256:18;;;21249:34;;;6309:14:1;;;;;21162:18:8;;6309:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6301:39;;;;-1:-1:-1;;;6301:39:1;;;;;;;:::i;:::-;6076:385;;;6415:24;;-1:-1:-1;;;6415:24:1;;-1:-1:-1;;;;;21207:32:8;;;6415:24:1;;;21189:51:8;21256:18;;;21249:34;;;6415:14:1;;;;;21162:18:8;;6415:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6407:39;;;;-1:-1:-1;;;6407:39:1;;;;;;;:::i;:::-;5962:509;5887:584;6484:6;;;;6480:56;;;6493:41;6515:12;6528:5;6493:21;:41::i;16388:357:0:-;13811:4;13832:24;;;:14;:24;;;;;;16463:8;;13832:24;;4633:33;;;;;;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;16523:5:0::2;16496:24:::0;;;:14:::2;:24;::::0;;;;;;;:32;;-1:-1:-1;;16496:32:0::2;::::0;;16645:18:::2;:28:::0;;;;;;16581:21;;-1:-1:-1;;;8146:19:8;;16581:13:0::2;8190:1:8::0;8181:11;;16581:21:0;;;;;;;;;;;16603:24;;;:14:::2;:24:::0;;;;;:37;-1:-1:-1;;;;;16603:37:0::2;16581:60:::0;;;;;;;:92;;16645:28;;16581:60;;:92:::2;::::0;16645:28;;16581:92:::2;:::i;:::-;::::0;;;-1:-1:-1;;16705:20:0::2;::::0;;::::2;::::0;::::2;1973:25:8::0;;;-1:-1:-1;;;;;;;;;;;16688:49:0;1946:18:8;16705:20:0::2;::::0;;-1:-1:-1;;16705:20:0;;::::2;::::0;;;;;;;16688:49:::2;::::0;16726:10:::2;::::0;16688:49:::2;:::i;16917:300::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;17022:20:0::1;17033:8;17022:10;:20::i;:::-;17021:21;17013:36;;;::::0;-1:-1:-1;;;17013:36:0;;22369:2:8;17013:36:0::1;::::0;::::1;22351:21:8::0;22408:1;22388:18;;;22381:29;-1:-1:-1;;;22426:18:8;;;22419:32;22468:18;;17013:36:0::1;22167:325:8::0;17013:36:0::1;17094:4;17059:11;17071:8;17059:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17059:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17059:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17108:10:0::1;::::0;:20:::1;::::0;17119:8;;17108:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17108:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17150:59:0;17167:30:::1;::::0;17178:8;;17187:9;;17167:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17167:30:0;;::::1;::::0;;;;;;;17150:59:::1;::::0;17198:10:::1;::::0;17150:59:::1;:::i;17980:273::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;18089:31:0::1;18101:8;18110:9;18089:11;:31::i;:::-;18081:40;;;::::0;::::1;;18166:5;18131:11;18143:8;18131:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;18131:32:0;::::1;;::::0;;;;;;;;;;:40;;-1:-1:-1;;18131:40:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18186:59:0;18203:30:::1;::::0;18214:8;;18131:32;;18203:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18203:30:0;;::::1;::::0;;;;;;;18186:59:::1;::::0;18234:10:::1;::::0;18186:59:::1;:::i;18357:348::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;18442:20:0::1;18453:8;18442:10;:20::i;:::-;18434:36;;;::::0;-1:-1:-1;;;18434:36:0;;24106:2:8;18434:36:0::1;::::0;::::1;24088:21:8::0;24145:1;24125:18;;;24118:29;-1:-1:-1;;;24163:18:8;;;24156:33;24206:18;;18434:36:0::1;23904:326:8::0;18434:36:0::1;18528:13;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;18528:13:0::1;::::0;;::::1;::::0;18488:26;;;;::::1;::::0;:54;;18480:69:::1;;;::::0;-1:-1:-1;;;18480:69:0;;24437:2:8;18480:69:0::1;::::0;::::1;24419:21:8::0;24476:1;24456:18;;;24449:29;-1:-1:-1;;;24494:18:8;;;24487:32;24536:18;;18480:69:0::1;24235:325:8::0;18480:69:0::1;18567:21;18579:8;18567:11;:21::i;:::-;18559:36;;;::::0;-1:-1:-1;;;18559:36:0;;24767:2:8;18559:36:0::1;::::0;::::1;24749:21:8::0;24806:1;24786:18;;;24779:29;-1:-1:-1;;;24824:18:8;;;24817:32;24866:18;;18559:36:0::1;24565:325:8::0;18559:36:0::1;18628:5;18605:10;18616:8;18605:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:28;;-1:-1:-1;;18605:28:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;18648:49:0;18665:20:::1;::::0;18676:8;;18665:20:::1;;:::i;:::-;;::::0;;-1:-1:-1;;18665:20:0;;::::1;::::0;;;;;;;18648:49:::1;::::0;18686:10:::1;::::0;18648:49:::1;:::i;:::-;;;;;;;;18357:348:::0;:::o;4993:380:1:-;5107:26;5120:12;5107;:26::i;:::-;5099:35;;;;;;5178:4;5157:27;;;;:12;:27;;;;;;5185:5;;5144:47;;5157:27;5144:12;:47::i;:::-;5252:4;5219:40;5231:27;;;:12;:27;;;;;;;;;5219:40;;:11;:40;;;;;:47;5201:86;;5212:54;;:6;:54;:::i;:::-;5275:4;5281:5;;5201:10;:86::i;:::-;5330:4;5309:27;;;;:12;:27;;;;;;5297:69;;5337:6;5344:12;5357:5;5363:2;5297:11;:69::i;15500:743:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;15617:21:0::1;15641:5:::0;15673:23:::1;::::0;:13:::1;::::0;:23:::1;::::0;15687:8;;15673:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;15673:37:0;::::1;;::::0;;;;;;;;15664:46;::::1;;15656:61;;;;-1:-1:-1::0;;;15656:61:0::1;;;;;;;:::i;:::-;15768:5;15727:13;15741:8;15727:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;15751:12;-1:-1:-1::0;;;;;15727:37:0::1;-1:-1:-1::0;;;;;15727:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15787:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;15801:8;;15787:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;15787:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;15833:26:0;::::1;::::0;::::1;15787:72;15783:144;;;15915:1;15875:26;15902:8;15875:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15783:144:0::1;15968:88;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;15968:88:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;15936:29:0;;;:14:::1;:29:::0;;;;;:120;;;;-1:-1:-1;;;;;;15936:120:0::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;15936:120:0;;::::1;::::0;16066:18:::1;:33:::0;;;;;:41;;;16117:14:::1;:29:::0;;;;;;:36;;-1:-1:-1;;16117:36:0::1;::::0;;::::1;::::0;;;16185:39;;-1:-1:-1;;;;;;;;;;;16168:68:0;16185:39:::1;::::0;16196:8;;15968:88;;;;16185:39:::1;;:::i;:::-;;::::0;;-1:-1:-1;;16185:39:0;;::::1;::::0;;;;;;;16168:68:::1;::::0;16225:10:::1;::::0;16168:68:::1;:::i;:::-;;;;;;;;15607:636;15500:743:::0;;;:::o;21941:201::-;22024:43;22054:12;22024:29;:43::i;:::-;22099:24;;;-1:-1:-1;;;;;4110:32:8;;22099:24:0;;;4092:51:8;-1:-1:-1;;;;;;;;;;;22082:53:0;4065:18:8;22099:24:0;;;-1:-1:-1;;22099:24:0;;;;;;;;;;22082:53;;22124:10;;22082:53;:::i;22336:197::-;22417:41;22445:12;22417:27;:41::i;:::-;22490:24;;;-1:-1:-1;;;;;4110:32:8;;22490:24:0;;;4092:51:8;-1:-1:-1;;;;;;;;;;;22473:53:0;4065:18:8;22490:24:0;;;-1:-1:-1;;22490:24:0;;;;;;;;;;22473:53;;22515:10;;22473:53;:::i;7173:380:1:-;7260:26;7273:12;7260;:26::i;:::-;7252:40;;;;-1:-1:-1;;;7252:40:1;;28215:2:8;7252:40:1;;;28197:21:8;28254:1;28234:18;;;28227:29;-1:-1:-1;;;28272:18:8;;;28265:32;28314:18;;7252:40:1;28013:325:8;7252:40:1;7353:41;;-1:-1:-1;;;7353:41:1;;7369:10;7353:41;;;17159:34:8;7388:4:1;17209:18:8;;;17202:43;7322:12:1;;7398:5;;-1:-1:-1;;;;;7353:15:1;;;;;17094:18:8;;7353:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;7345:64;;;;-1:-1:-1;;;7345:64:1;;;;;;;:::i;:::-;7427:51;;-1:-1:-1;;;7427:51:1;;7446:10;7427:51;;;18015:34:8;7465:4:1;18065:18:8;;;18058:43;18117:18;;;18110:34;;;-1:-1:-1;;;;;7427:18:1;;;;;17950::8;;7427:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7419:66;;;;-1:-1:-1;;;7419:66:1;;;;;;;:::i;:::-;7495:51;7516:12;7529:5;7535:10;7495:20;:51::i;19985:796:0:-;20122:10;4385:20;4396:8;4385:10;:20::i;:::-;4377:36;;;;-1:-1:-1;;;4377:36:0;;28545:2:8;4377:36:0;;;28527:21:8;28584:1;28564:18;;;28557:29;-1:-1:-1;;;28602:18:8;;;28595:33;28645:18;;4377:36:0;28343:326:8;4377:36:0;6303:6:2::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;20174:13:0::2;20188:12;20174:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20174:41:0;::::2;;::::0;;;;;;;;20165:50;::::2;;20157:65;;;;-1:-1:-1::0;;;20157:65:0::2;;;;;;;:::i;:::-;20277:5;20232:13;20246:12;20232:27;;;;;;:::i;:::-;;;;;;;;;;;;;:41;20260:12;-1:-1:-1::0;;;;;20232:41:0::2;-1:-1:-1::0;;;;;20232:41:0::2;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;20296:26:0;::::2;::::0;20292:326:::2;;20342:13;20356:12;20342:27;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20342:41:0;::::2;;::::0;;;;;;;;:46;;20338:131:::2;;20452:1;20408:26;20435:12;20408:40;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20338:131:0::2;20486:13;20500:10;20486:25;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;20486:39:0;::::2;;::::0;;;;;;;;:44;;20482:126:::2;;20592:1;20550:26;20577:10;20550:38;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20482:126:0::2;20670:5;20627:13;20641:10;20627:25;;;;;;:::i;:::-;;;;;;;;;;;;;:39;20653:12;-1:-1:-1::0;;;;;20627:39:0::2;-1:-1:-1::0;;;;;20627:39:0::2;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20707:54:0::2;::::0;-1:-1:-1;;;;;;;;;;;20690:83:0;20707:54:::2;::::0;20718:12;;20731:10;;20742:12;;20755:5;;20707:54:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;20707:54:0;;::::2;::::0;;;;;;;20690:83:::2;::::0;20762:10:::2;::::0;20690:83:::2;:::i;17459:268::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;17565:25:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;17565:25:0::1;;::::0;17580:9:::1;17565;:25::i;:::-;17557:39;;;::::0;-1:-1:-1;;;17557:39:0;;29975:2:8;17557:39:0::1;::::0;::::1;29957:21:8::0;30014:1;29994:18;;;29987:29;-1:-1:-1;;;30032:18:8;;;30025:32;30074:18;;17557:39:0::1;29773:325:8::0;17557:39:0::1;17641:4;17606:11;17618:8;17606:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17606:32:0;::::1;;::::0;;;;;;;;;;:39;;-1:-1:-1;;17606:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17660:59:0;17677:30:::1;::::0;17688:8;;17606:32;;17677:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17677:30:0;;::::1;::::0;;;;;;;17660:59:::1;::::0;17708:10:::1;::::0;17660:59:::1;:::i;13103:1125:2:-:0;13192:11;6119:19;6132:5;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;6303:6:::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;13261:24:::3;::::0;;;:11:::3;:24;::::0;;;;:31;13251:41;::::3;;13243:56;;;::::0;-1:-1:-1;;;13243:56:2;;30848:2:8;13243:56:2::3;::::0;::::3;30830:21:8::0;30887:1;30867:18;;;30860:29;-1:-1:-1;;;30905:18:8;;;30898:32;30947:18;;13243:56:2::3;30646:325:8::0;13243:56:2::3;13313:17;13327:2;13313:13;:17::i;:::-;13309:522;;;-1:-1:-1::0;;;;;13491:16:2;::::3;13450:17;13491:16:::0;;;:12:::3;:16;::::0;;;;;;;;13479:29;;:11:::3;:29:::0;;;;;:36;13470:45:::3;::::0;:6;:45:::3;:::i;:::-;13450:65;;13529:30;13540:9;13550:2;13553:5;;13529:10;:30::i;:::-;-1:-1:-1::0;;;;;13631:16:2;::::3;;::::0;;;:12:::3;:16;::::0;;;;;13649:5;;13618:37:::3;::::0;13631:16;13618:12:::3;:37::i;:::-;13332:334;13309:522;;;13793:27;13804:6;13811:2;13814:5;;13793:10;:27::i;:::-;13880:32;13893:11;13906:5;;13880:12;:32::i;:::-;14009:12;14024:24:::0;;;:11:::3;:24;::::0;;;;:31;:40:::3;::::0;14058:6;;14024:40:::3;:::i;:::-;14009:55:::0;-1:-1:-1;14078:9:2;;14074:89:::3;;14115:24;::::0;;;:11:::3;:24;::::0;;;;:30:::3;;::::0;14146:5;;14099:53:::3;::::0;14110:4;;-1:-1:-1;;;;;14115:30:2;;::::3;::::0;14099:10:::3;:53::i;:::-;14177:44;::::0;;19026:25:8;;;19082:2;19067:18;;19060:34;;;-1:-1:-1;;;;;19168:15:8;;19148:18;;;19141:43;-1:-1:-1;19215:2:8;19200:18;;19193:43;;;19267:3;19252:19;;19245:35;14177:44:2;;::::3;::::0;;;;19013:3:8;14177:44:2;;::::3;-1:-1:-1::0;5680:30:2::2;5704:5:::0;;5680:30;;;:23:::2;:30;::::0;;;;;;;;:23;;5669:7:::2;::::0;5675:1:::2;5669:7;:::i;:::-;5645:32;;;;;;;;;;;:65;;;;5773:5;::::0;:7:::2;;;;;;;;;:::i;:::-;;;;;;13103:1125:::0;;;;:::o;21065:247:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;21213:8:0::1;21182:7;21190:10;21182:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21182:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21182:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21264:10:0::1;21275:7;21283:8;21253:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21253:39:0;;::::1;::::0;;;;;;;21236:68:::1;::::0;21293:10:::1;::::0;21236:68:::1;:::i;19067:547::-:0;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;19221:13:0::1;19235:8;19221:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;19221:37:0;::::1;;::::0;;;;;;;;19212:46;::::1;;19204:61;;;;-1:-1:-1::0;;;19204:61:0::1;;;;;;;:::i;:::-;19275:37;19290:12;19303:5;19309:2;19275:14;:37::i;:::-;19363:5;19322:13;19336:8;19322:23;;;;;;:::i;:::-;;;;;;;;;;;;;:37;19346:12;-1:-1:-1::0;;;;;19322:37:0::1;-1:-1:-1::0;;;;;19322:37:0::1;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19382:23:0::1;::::0;:13:::1;::::0;:23:::1;::::0;19396:8;;19382:23:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;19382:37:0;::::1;;::::0;;;;;;;;:42;:72;::::1;;;-1:-1:-1::0;;;;;;19428:26:0;::::1;::::0;::::1;19382:72;19378:144;;;19510:1;19470:26;19497:8;19470:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19378:144:0::1;-1:-1:-1::0;;;;;;;;;;;19564:8:0::1;19573:12;19586:5;19592:2;19553:42;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;19553:42:0;;::::1;::::0;;;;;;;19536:71:::1;::::0;19596:10:::1;::::0;19536:71:::1;:::i;599:381:2:-:0;715:7;724;733;770:9;756:11;:23;748:32;;;;;;786:17;825:11;806:18;815:9;806:8;:18;:::i;:::-;:30;;;;:::i;:::-;786:50;-1:-1:-1;842:17:2;895:11;872:21;884:9;895:11;872:21;:::i;:::-;862:32;;:8;:32;:::i;:::-;:44;;;;:::i;:::-;842:64;-1:-1:-1;920:9:2;842:64;954:21;842:64;920:9;954:21;:::i;:::-;942:34;;:8;:34;:::i;:::-;912:65;;;;;;;;599:381;;;;;;;:::o;9812:481:1:-;9945:4;-1:-1:-1;;;;;9926:24:1;;;9922:356;;10034:33;10048:12;10061:5;10034:13;:33::i;9922:356::-;10209:51;;-1:-1:-1;;;10209:51:1;;10228:10;10209:51;;;18015:34:8;10247:4:1;18065:18:8;;;18058:43;18117:18;;;18110:34;;;10174:12:1;;-1:-1:-1;;;;;10209:18:1;;;;;17950::8;;10209:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10201:66;;;;-1:-1:-1;;;10201:66:1;;;;;;;:::i;14703:524:2:-;14828:5;6119:19;6132:5;11784:4;11840:5;;11342:27;;;:20;:27;;;;;;11807:38;;11727:125;6119:19;6111:34;;;;-1:-1:-1;;;6111:34:2;;;;;;;:::i;:::-;6303:6:::1;::::0;;::::1;;:14;;;6295:29;;;;-1:-1:-1::0;;;6295:29:2::1;;;;;;;:::i;:::-;14866:20:::2;::::0;;;:13:::2;:20;::::0;;;;;::::2;;:29;14858:38;;;::::0;::::2;;14924:18;::::0;;;:11:::2;:18;::::0;;;;:25;14914:35;::::2;;14906:50;;;::::0;-1:-1:-1;;;14906:50:2;;30848:2:8;14906:50:2::2;::::0;::::2;30830:21:8::0;30887:1;30867:18;;;30860:29;-1:-1:-1;;;30905:18:8;;;30898:32;30947:18;;14906:50:2::2;30646:325:8::0;14906:50:2::2;14987:135;::::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;;14987:135:2;;::::2;;::::0;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;-1:-1:-1;14966:18:2;;;:11:::2;:18:::0;;;;;:156;;;;;;::::2;::::0;;::::2;::::0;;;;::::2;-1:-1:-1::0;;;;;;14966:156:2;;::::2;;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;15132:13:::2;:20:::0;;;;;;:27;;-1:-1:-1;;15132:27:2::2;::::0;;::::2;::::0;;15174:46;::::2;::::0;::::2;::::0;14978:5;;15019:6;;15053:12;;15086:5;;15109:2;;33912:25:8;;;33968:2;33953:18;;33946:34;;;;-1:-1:-1;;;;;34054:15:8;;;34049:2;34034:18;;34027:43;34101:2;34086:18;;34079:34;34150:15;34144:3;34129:19;;34122:44;33899:3;33884:19;;33653:519;15174:46:2::2;;;;;;;;14703:524:::0;;;;;;:::o;9341:151:1:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;;;;;;:::i;:::-;9403:6:1::1;:14:::0;;-1:-1:-1;;9403:14:1::1;::::0;;9470:15:::1;9454:13;:31:::0;9341:151::o;6748:161::-;6819:12;6845:2;-1:-1:-1;;;;;6837:16:1;6860:5;6837:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6818:52;;;6888:7;6880:22;;;;-1:-1:-1;;;6880:22:1;;16819:2:8;6880:22:1;;;16801:21:8;16858:1;16838:18;;;16831:29;-1:-1:-1;;;16876:18:8;;;16869:32;16918:18;;6880:22:1;16617:325:8;8279:178:1;-1:-1:-1;;;;;8374:20:1;;;;;;:6;:20;;;;;:29;;8398:5;;8374:20;:29;;8398:5;;8374:29;:::i;:::-;;;;-1:-1:-1;;;;;;;8413:28:1;;;;;;:14;:28;;;;;:37;;8445:5;;8413:28;:37;;8445:5;;8413:37;:::i;:::-;;;;-1:-1:-1;;;;8279:178:1:o;16381:244:2:-;16511:1;16475:18;;;:11;:18;;;;;;;;:24;;;-1:-1:-1;;;;;16475:24:2;16462:38;;:12;:38;;;;;:51;;;16523:27;;;:20;:27;;;;;;:45;;;16583:35;;14189:25:8;;;14230:18;;;14223:34;;;16583:35:2;;14162:18:8;16583:35:2;14015:248:8;15481:698:2;15591:1;15582:6;:10;15574:25;;;;-1:-1:-1;;;15574:25:2;;34632:2:8;15574:25:2;;;34614:21:8;34671:1;34651:18;;;34644:29;-1:-1:-1;;;34689:18:8;;;34682:32;34731:18;;15574:25:2;34430:325:8;15574:25:2;15681:37;;-1:-1:-1;;34937:2:8;34933:15;;;34929:53;15681:37:2;;;34917:66:8;34999:12;;;34992:28;;;15655:13:2;;35036:12:8;;15681:37:2;;;;;;-1:-1:-1;;15681:37:2;;;;;;15671:48;;15681:37;15671:48;;;;-1:-1:-1;;;;;15729:19:2;;;;;;;:12;:19;;;;;:27;;;15766;;;:20;:27;;;;;-1:-1:-1;;15766:47:2;;15921:200;;;;;;;;;;;;;;;;;;;;;15900:18;;;:11;:18;;;;;;:221;;;;;;;;;;-1:-1:-1;;;;;;15900:221:2;;;;;;;;;;;;;;;;;;16136:35;;6102:25:8;;;6143:18;;;6136:60;;;;6212:18;;;6205:34;;;15671:48:2;;-1:-1:-1;16136:35:2;;6075:18:8;16136:35:2;5900:345:8;9028:231:1;9118:26;9131:12;9118;:26::i;:::-;9110:41;;;;-1:-1:-1;;;9110:41:1;;28215:2:8;9110:41:1;;;28197:21:8;28254:1;28234:18;;;28227:29;-1:-1:-1;;;28272:18:8;;;28265:32;28314:18;;9110:41:1;28013:325:8;9110:41:1;-1:-1:-1;;;;;9169:20:1;;;;;;:6;:20;;;;;;:25;9161:40;;;;-1:-1:-1;;;9161:40:1;;35611:2:8;9161:40:1;;;35593:21:8;35650:1;35630:18;;;35623:29;-1:-1:-1;;;35668:18:8;;;35661:32;35710:18;;9161:40:1;35409:325:8;9161:40:1;-1:-1:-1;;;;;9211:33:1;9247:5;9211:33;;;:19;:33;;;;;:41;;-1:-1:-1;;9211:41:1;;;9028:231::o;8651:179::-;8740:26;8753:12;8740;:26::i;:::-;8739:27;8731:42;;;;-1:-1:-1;;;8731:42:1;;35941:2:8;8731:42:1;;;35923:21:8;35980:1;35960:18;;;35953:29;-1:-1:-1;;;35998:18:8;;;35991:32;36040:18;;8731:42:1;35739:325:8;8731:42:1;-1:-1:-1;;;;;8783:33:1;;;;;:19;:33;;;;;:40;;-1:-1:-1;;8783:40:1;8819:4;8783:40;;;8651:179::o;206:127:8:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:719;381:5;434:3;427:4;419:6;415:17;411:27;401:55;;452:1;449;442:12;401:55;488:6;475:20;514:18;551:2;547;544:10;541:36;;;557:18;;:::i;:::-;632:2;626:9;600:2;686:13;;-1:-1:-1;;682:22:8;;;706:2;678:31;674:40;662:53;;;730:18;;;750:22;;;727:46;724:72;;;776:18;;:::i;:::-;816:10;812:2;805:22;851:2;843:6;836:18;897:3;890:4;885:2;877:6;873:15;869:26;866:35;863:55;;;914:1;911;904:12;863:55;978:2;971:4;963:6;959:17;952:4;944:6;940:17;927:54;1025:1;1018:4;1013:2;1005:6;1001:15;997:26;990:37;1045:6;1036:15;;;;;;338:719;;;;:::o;1062:152::-;1139:20;;1188:1;1178:12;;1168:40;;1204:1;1201;1194:12;1168:40;1062:152;;;:::o;1219:418::-;1310:6;1318;1371:2;1359:9;1350:7;1346:23;1342:32;1339:52;;;1387:1;1384;1377:12;1339:52;1427:9;1414:23;1460:18;1452:6;1449:30;1446:50;;;1492:1;1489;1482:12;1446:50;1515;1557:7;1548:6;1537:9;1533:22;1515:50;:::i;:::-;1505:60;;;1584:47;1627:2;1616:9;1612:18;1584:47;:::i;:::-;1574:57;;1219:418;;;;;:::o;1642:180::-;1701:6;1754:2;1742:9;1733:7;1729:23;1725:32;1722:52;;;1770:1;1767;1760:12;1722:52;-1:-1:-1;1793:23:8;;1642:180;-1:-1:-1;1642:180:8:o;2194:173::-;2262:20;;-1:-1:-1;;;;;2311:31:8;;2301:42;;2291:70;;2357:1;2354;2347:12;2372:186;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;2523:29;2542:9;2523:29;:::i;2563:322::-;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;2741:9;2728:23;2774:18;2766:6;2763:30;2760:50;;;2806:1;2803;2796:12;2760:50;2829;2871:7;2862:6;2851:9;2847:22;2829:50;:::i;:::-;2819:60;2563:322;-1:-1:-1;;;;2563:322:8:o;2890:396::-;2968:6;2976;3029:2;3017:9;3008:7;3004:23;3000:32;2997:52;;;3045:1;3042;3035:12;2997:52;3085:9;3072:23;3118:18;3110:6;3107:30;3104:50;;;3150:1;3147;3140:12;3104:50;3173;3215:7;3206:6;3195:9;3191:22;3173:50;:::i;:::-;3163:60;;;3242:38;3276:2;3265:9;3261:18;3242:38;:::i;3291:248::-;3359:6;3367;3420:2;3408:9;3399:7;3395:23;3391:32;3388:52;;;3436:1;3433;3426:12;3388:52;-1:-1:-1;;3459:23:8;;;3529:2;3514:18;;;3501:32;;-1:-1:-1;3291:248:8:o;3544:397::-;3630:6;3638;3646;3654;3707:3;3695:9;3686:7;3682:23;3678:33;3675:53;;;3724:1;3721;3714:12;3675:53;3760:9;3747:23;3737:33;;3789:38;3823:2;3812:9;3808:18;3789:38;:::i;:::-;3779:48;;3874:2;3863:9;3859:18;3846:32;3836:42;;3897:38;3931:2;3920:9;3916:18;3897:38;:::i;:::-;3887:48;;3544:397;;;;;;;:::o;4154:464::-;4241:6;4249;4257;4310:2;4298:9;4289:7;4285:23;4281:32;4278:52;;;4326:1;4323;4316:12;4278:52;4366:9;4353:23;4399:18;4391:6;4388:30;4385:50;;;4431:1;4428;4421:12;4385:50;4454;4496:7;4487:6;4476:9;4472:22;4454:50;:::i;:::-;4444:60;;;4523:38;4557:2;4546:9;4542:18;4523:38;:::i;:::-;4513:48;;4608:2;4597:9;4593:18;4580:32;4570:42;;4154:464;;;;;:::o;4623:254::-;4691:6;4699;4752:2;4740:9;4731:7;4727:23;4723:32;4720:52;;;4768:1;4765;4758:12;4720:52;4791:29;4810:9;4791:29;:::i;:::-;4781:39;4867:2;4852:18;;;;4839:32;;-1:-1:-1;;;4623:254:8:o;4882:686::-;4988:6;4996;5004;5012;5065:3;5053:9;5044:7;5040:23;5036:33;5033:53;;;5082:1;5079;5072:12;5033:53;5122:9;5109:23;5151:18;5192:2;5184:6;5181:14;5178:34;;;5208:1;5205;5198:12;5178:34;5231:50;5273:7;5264:6;5253:9;5249:22;5231:50;:::i;:::-;5221:60;;5334:2;5323:9;5319:18;5306:32;5290:48;;5363:2;5353:8;5350:16;5347:36;;;5379:1;5376;5369:12;5347:36;;5402:52;5446:7;5435:8;5424:9;5420:24;5402:52;:::i;:::-;5392:62;;;5473:38;5507:2;5496:9;5492:18;5473:38;:::i;:::-;4882:686;;;;-1:-1:-1;5463:48:8;;5558:2;5543:18;5530:32;;-1:-1:-1;;4882:686:8:o;5573:322::-;5650:6;5658;5666;5719:2;5707:9;5698:7;5694:23;5690:32;5687:52;;;5735:1;5732;5725:12;5687:52;5771:9;5758:23;5748:33;;5828:2;5817:9;5813:18;5800:32;5790:42;;5851:38;5885:2;5874:9;5870:18;5851:38;:::i;:::-;5841:48;;5573:322;;;;;:::o;6432:492::-;6532:6;6540;6548;6601:2;6589:9;6580:7;6576:23;6572:32;6569:52;;;6617:1;6614;6607:12;6569:52;6657:9;6644:23;6690:18;6682:6;6679:30;6676:50;;;6722:1;6719;6712:12;6676:50;6745;6787:7;6778:6;6767:9;6763:22;6745:50;:::i;:::-;6735:60;;;6814:38;6848:2;6837:9;6833:18;6814:38;:::i;:::-;6804:48;;6871:47;6914:2;6903:9;6899:18;6871:47;:::i;6929:539::-;7025:6;7033;7041;7049;7102:3;7090:9;7081:7;7077:23;7073:33;7070:53;;;7119:1;7116;7109:12;7070:53;7159:9;7146:23;7192:18;7184:6;7181:30;7178:50;;;7224:1;7221;7214:12;7178:50;7247;7289:7;7280:6;7269:9;7265:22;7247:50;:::i;:::-;7237:60;;;7316:38;7350:2;7339:9;7335:18;7316:38;:::i;7473:466::-;7568:6;7576;7584;7592;7600;7653:3;7641:9;7632:7;7628:23;7624:33;7621:53;;;7670:1;7667;7660:12;7621:53;7706:9;7693:23;7683:33;;7763:2;7752:9;7748:18;7735:32;7725:42;;7786:38;7820:2;7809:9;7805:18;7786:38;:::i;:::-;7776:48;;7871:2;7860:9;7856:18;7843:32;7833:42;;7894:39;7928:3;7917:9;7913:19;7894:39;:::i;:::-;7884:49;;7473:466;;;;;;;;:::o;8203:127::-;8264:10;8259:3;8255:20;8252:1;8245:31;8295:4;8292:1;8285:15;8319:4;8316:1;8309:15;8335:125;8400:9;;;8421:10;;;8418:36;;;8434:18;;:::i;8845:127::-;8906:10;8901:3;8897:20;8894:1;8887:31;8937:4;8934:1;8927:15;8961:4;8958:1;8951:15;8977:250;9062:1;9072:113;9086:6;9083:1;9080:13;9072:113;;;9162:11;;;9156:18;9143:11;;;9136:39;9108:2;9101:10;9072:113;;;-1:-1:-1;;9219:1:8;9201:16;;9194:27;8977:250::o;9232:289::-;9363:3;9401:6;9395:13;9417:66;9476:6;9471:3;9464:4;9456:6;9452:17;9417:66;:::i;:::-;9499:16;;;;;9232:289;-1:-1:-1;;9232:289:8:o;9856:325::-;10058:2;10040:21;;;10097:1;10077:18;;;10070:29;-1:-1:-1;;;10130:2:8;10115:18;;10108:32;10172:2;10157:18;;9856:325::o;10186:::-;10388:2;10370:21;;;10427:1;10407:18;;;10400:29;-1:-1:-1;;;10460:2:8;10445:18;;10438:32;10502:2;10487:18;;10186:325::o;11505:::-;11707:2;11689:21;;;11746:1;11726:18;;;11719:29;-1:-1:-1;;;11779:2:8;11764:18;;11757:32;11821:2;11806:18;;11505:325::o;12825:168::-;12898:9;;;12929;;12946:15;;;12940:22;;12926:37;12916:71;;12967:18;;:::i;12998:217::-;13038:1;13064;13054:132;;13108:10;13103:3;13099:20;13096:1;13089:31;13143:4;13140:1;13133:15;13171:4;13168:1;13161:15;13054:132;-1:-1:-1;13200:9:8;;12998:217::o;13220:128::-;13287:9;;;13308:11;;;13305:37;;;13322:18;;:::i;14268:270::-;14309:3;14347:5;14341:12;14374:6;14369:3;14362:19;14390:76;14459:6;14452:4;14447:3;14443:14;14436:4;14429:5;14425:16;14390:76;:::i;:::-;14520:2;14499:15;-1:-1:-1;;14495:29:8;14486:39;;;;14527:4;14482:50;;14268:270;-1:-1:-1;;14268:270:8:o;14543:538::-;14819:2;14808:9;14801:21;14858:1;14853:2;14842:9;14838:18;14831:29;-1:-1:-1;;;14891:3:8;14880:9;14876:19;14869:33;14940:3;14933:4;14922:9;14918:20;14911:33;14782:4;14961:45;15001:3;14990:9;14986:19;14978:6;14961:45;:::i;:::-;14953:53;;15071:1;15067;15062:3;15058:11;15054:19;15046:6;15042:32;15037:2;15026:9;15022:18;15015:60;14543:538;;;;;:::o;17256:184::-;17326:6;17379:2;17367:9;17358:7;17354:23;17350:32;17347:52;;;17395:1;17392;17385:12;17347:52;-1:-1:-1;17418:16:8;;17256:184;-1:-1:-1;17256:184:8:o;17445:325::-;17647:2;17629:21;;;17686:1;17666:18;;;17659:29;-1:-1:-1;;;17719:2:8;17704:18;;17697:32;17761:2;17746:18;;17445:325::o;18155:277::-;18222:6;18275:2;18263:9;18254:7;18250:23;18246:32;18243:52;;;18291:1;18288;18281:12;18243:52;18323:9;18317:16;18376:5;18369:13;18362:21;18355:5;18352:32;18342:60;;18398:1;18395;18388:12;18437:325;18639:2;18621:21;;;18678:1;18658:18;;;18651:29;-1:-1:-1;;;18711:2:8;18696:18;;18689:32;18753:2;18738:18;;18437:325::o;19291:239::-;19374:1;19367:5;19364:12;19354:143;;19419:10;19414:3;19410:20;19407:1;19400:31;19454:4;19451:1;19444:15;19482:4;19479:1;19472:15;19354:143;19506:18;;19291:239::o;19535:322::-;19723:2;19712:9;19705:21;19686:4;19743:44;19783:2;19772:9;19768:18;19760:6;19743:44;:::i;:::-;19735:52;;19796:55;19847:2;19836:9;19832:18;19824:6;19796:55;:::i;19862:538::-;20138:2;20127:9;20120:21;20177:1;20172:2;20161:9;20157:18;20150:29;-1:-1:-1;;;20210:3:8;20199:9;20195:19;20188:33;20259:3;20252:4;20241:9;20237:20;20230:33;20101:4;20280:45;20320:3;20309:9;20305:19;20297:6;20280:45;:::i;21624:538::-;21900:2;21889:9;21882:21;21939:1;21934:2;21923:9;21919:18;21912:29;-1:-1:-1;;;21972:3:8;21961:9;21957:19;21950:33;22021:3;22014:4;22003:9;21999:20;21992:33;21863:4;22042:45;22082:3;22071:9;22067:19;22059:6;22042:45;:::i;22497:316::-;22674:2;22663:9;22656:21;22637:4;22694:44;22734:2;22723:9;22719:18;22711:6;22694:44;:::i;:::-;22686:52;;22803:1;22799;22794:3;22790:11;22786:19;22778:6;22774:32;22769:2;22758:9;22754:18;22747:60;22497:316;;;;;:::o;22818:538::-;23094:2;23083:9;23076:21;23133:1;23128:2;23117:9;23113:18;23106:29;-1:-1:-1;;;23166:3:8;23155:9;23151:19;23144:33;23215:3;23208:4;23197:9;23193:20;23186:33;23057:4;23236:45;23276:3;23265:9;23261:19;23253:6;23236:45;:::i;23361:538::-;23637:2;23626:9;23619:21;23676:1;23671:2;23660:9;23656:18;23649:29;-1:-1:-1;;;23709:3:8;23698:9;23694:19;23687:33;23758:3;23751:4;23740:9;23736:20;23729:33;23600:4;23779:45;23819:3;23808:9;23804:19;23796:6;23779:45;:::i;24895:219::-;25044:2;25033:9;25026:21;25007:4;25064:44;25104:2;25093:9;25089:18;25081:6;25064:44;:::i;25119:538::-;25395:2;25384:9;25377:21;25434:1;25429:2;25418:9;25414:18;25407:29;-1:-1:-1;;;25467:3:8;25456:9;25452:19;25445:33;25516:3;25509:4;25498:9;25494:20;25487:33;25358:4;25537:45;25577:3;25566:9;25562:19;25554:6;25537:45;:::i;25662:325::-;25864:2;25846:21;;;25903:1;25883:18;;;25876:29;-1:-1:-1;;;25936:2:8;25921:18;;25914:32;25978:2;25963:18;;25662:325::o;25992:387::-;26197:2;26186:9;26179:21;26160:4;26217:44;26257:2;26246:9;26242:18;26234:6;26217:44;:::i;:::-;-1:-1:-1;;;;;26297:32:8;;;;26292:2;26277:18;;26270:60;-1:-1:-1;26361:2:8;26346:18;26339:34;26209:52;25992:387;-1:-1:-1;25992:387:8:o;26384:538::-;26660:2;26649:9;26642:21;26699:1;26694:2;26683:9;26679:18;26672:29;-1:-1:-1;;;26732:3:8;26721:9;26717:19;26710:33;26781:3;26774:4;26763:9;26759:20;26752:33;26623:4;26802:45;26842:3;26831:9;26827:19;26819:6;26802:45;:::i;26927:538::-;27203:2;27192:9;27185:21;27242:1;27237:2;27226:9;27222:18;27215:29;-1:-1:-1;;;27275:3:8;27264:9;27260:19;27253:33;27324:3;27317:4;27306:9;27302:20;27295:33;27166:4;27345:45;27385:3;27374:9;27370:19;27362:6;27345:45;:::i;27470:538::-;27746:2;27735:9;27728:21;27785:1;27780:2;27769:9;27765:18;27758:29;-1:-1:-1;;;27818:3:8;27807:9;27803:19;27796:33;27867:3;27860:4;27849:9;27845:20;27838:33;27709:4;27888:45;27928:3;27917:9;27913:19;27905:6;27888:45;:::i;28674:551::-;28927:3;28916:9;28909:22;28890:4;28954:45;28994:3;28983:9;28979:19;28971:6;28954:45;:::i;:::-;29047:9;29039:6;29035:22;29030:2;29019:9;29015:18;29008:50;29075:32;29100:6;29092;29075:32;:::i;:::-;-1:-1:-1;;;;;29143:32:8;;;;29138:2;29123:18;;29116:60;-1:-1:-1;;29207:2:8;29192:18;29185:34;29067:40;28674:551;-1:-1:-1;;28674:551:8:o;29230:538::-;29506:2;29495:9;29488:21;29545:1;29540:2;29529:9;29525:18;29518:29;-1:-1:-1;;;29578:3:8;29567:9;29563:19;29556:33;29627:3;29620:4;29609:9;29605:20;29598:33;29469:4;29648:45;29688:3;29677:9;29673:19;29665:6;29648:45;:::i;30103:538::-;30379:2;30368:9;30361:21;30418:1;30413:2;30402:9;30398:18;30391:29;-1:-1:-1;;;30451:3:8;30440:9;30436:19;30429:33;30500:3;30493:4;30482:9;30478:20;30471:33;30342:4;30521:45;30561:3;30550:9;30546:19;30538:6;30521:45;:::i;31508:135::-;31547:3;31568:17;;;31565:43;;31588:18;;:::i;:::-;-1:-1:-1;31635:1:8;31624:13;;31508:135::o;31648:419::-;31864:2;31853:9;31846:21;31827:4;31884:44;31924:2;31913:9;31909:18;31901:6;31884:44;:::i;:::-;-1:-1:-1;;;;;31964:32:8;;31959:2;31944:18;;31937:60;31876:52;-1:-1:-1;32006:55:8;32057:2;32042:18;;32034:6;32006:55;:::i;32072:538::-;32348:2;32337:9;32330:21;32387:1;32382:2;32371:9;32367:18;32360:29;-1:-1:-1;;;32420:3:8;32409:9;32405:19;32398:33;32469:3;32462:4;32451:9;32447:20;32440:33;32311:4;32490:45;32530:3;32519:9;32515:19;32507:6;32490:45;:::i;32615:490::-;32848:3;32837:9;32830:22;32811:4;32869:45;32909:3;32898:9;32894:19;32886:6;32869:45;:::i;:::-;-1:-1:-1;;;;;32988:15:8;;;32983:2;32968:18;;32961:43;33035:2;33020:18;;33013:34;;;;-1:-1:-1;33083:15:8;;33078:2;33063:18;;;33056:43;;;;32861:53;32615:490;-1:-1:-1;32615:490:8:o;33110:538::-;33386:2;33375:9;33368:21;33425:1;33420:2;33409:9;33405:18;33398:29;-1:-1:-1;;;33458:3:8;33447:9;33443:19;33436:33;33507:3;33500:4;33489:9;33485:20;33478:33;33349:4;33528:45;33568:3;33557:9;33553:19;33545:6;33528:45;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Frederik W. L. Christoffersen",
    "events": {
      "ActionTaken(string,bytes,address)": {
        "params": {
          "args": "The arguments passed to the function call.",
          "by": "The initiator of the action.",
          "func": "The name of the function that was called."
        }
      },
      "ExpiredShard(bytes32,uint256)": {
        "params": {
          "expirationClock": "The clock at which the shard expired.",
          "shard": "The Shard byte identifier, which expired."
        }
      },
      "NewShard(bytes32,address,uint256)": {
        "params": {
          "creationClock": "The clock at which the shard was created.",
          "owner": "The owner of the created Shard.",
          "shard": "The Shard byte identifier, which was created."
        }
      },
      "PutForSale(bytes32,uint256,address,uint256,address)": {
        "params": {
          "amount": "Amount of the Shard put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard that was put for sale.",
          "to": "The specifically set buyer of the sale, if any.",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "SaleSold(bytes32,uint256,address,address,uint256)": {
        "params": {
          "amount": "Amount of the Shard that was sold.",
          "price": "The amount which the Shard was for sale for. The token address being the valuta.",
          "shard": "The shard that was sold from.",
          "to": "The buyer of the sale.",
          "tokenAddress": "The address of the token that was accepted in the purchase. A value of 0x0 represents ether."
        }
      },
      "TokenReceived(address,uint256,address)": {
        "params": {
          "from": "The sender of the received token.",
          "tokenAddress": "The address of the received token.",
          "value": "The value/amount of the received token."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "acceptsToken(address)": {
        "notice": "Returns a boolean value, stating if the given token address is registered as acceptable or not.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "active()": {
        "notice": "Boolean stating if the Shardable is active and tradeable or not."
      },
      "addBankAdmin(string,address)": {
        "notice": "Adds a new given administrator to a given Bank.",
        "params": {
          "bankAdmin": "The address of the new Bank administrator to be added.",
          "bankName": "The name of the Bank to which the new administrator is to be added."
        }
      },
      "bankExists(string)": {
        "notice": "Returns a boolean stating if a given Bank exists.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "bankIsEmpty(string)": {
        "notice": "Returns a boolean stating if a given Bank is empty.",
        "params": {
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "cancelSale(bytes32)": {
        "notice": "Cancels a sell of a given shard.",
        "params": {
          "shard": "The shard to be put off sale."
        }
      },
      "claimDividend(bytes32,uint256)": {
        "notice": "Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.",
        "params": {
          "dividend": "The dividend to be claimed.",
          "shard": "The shard that was valid at the clock of the Dividend creation"
        }
      },
      "claimLiquid(address)": {
        "notice": "Claims the owed liquid value corresponding to the shard holder's respective shard fraction after the entity has been liquidized/dissolved.",
        "params": {
          "tokenAddress": "The address of the token to be claimed."
        }
      },
      "claimTerminatedLiquid(address)": {
        "notice": "Claims the remaining unclaimed liquid value after termination (100 days passed since liquidization) as the property of Counekt.",
        "params": {
          "tokenAddress": "The address of the token to be claimed."
        }
      },
      "constructor": {
        "notice": "Constructor function connecting the Idea entity and creating a Bank with an administrator."
      },
      "createBank(string,address)": {
        "notice": "Creates a new Bank.",
        "params": {
          "bankAdmin": "The address of the first Bank administrator.",
          "bankName": "The name of the Bank to be created."
        }
      },
      "deleteBank(string)": {
        "notice": "Deletes a given Bank.",
        "params": {
          "bankName": "The name of the Bank to be deleted."
        }
      },
      "dissolveDividend(uint256)": {
        "notice": "Dissolves a Dividend and moves its last contents to the 'main' Bank.",
        "params": {
          "dividend": "The Dividend to be dissolved."
        }
      },
      "dividendExists(uint256)": {
        "notice": "Returns a boolean stating if a given Dividend exists.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getBankBalance(string,address)": {
        "notice": "Returns the balance of a bank.",
        "params": {
          "bankName": "The name of the Bank.",
          "tokenAddress": "The address of the token balance to check for."
        }
      },
      "getCurrentClock()": {
        "notice": "Returns the clock."
      },
      "getDividendResidual(uint256)": {
        "notice": "Returns the residual value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendToken(uint256)": {
        "notice": "Returns the token of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getDividendValue(uint256)": {
        "notice": "Returns the total value of a dividend.",
        "params": {
          "dividend": "The Dividend to be checked for."
        }
      },
      "getLiquidResidual(address)": {
        "notice": "Returns the residual of a liquid, after liquidization/inactivation.",
        "params": {
          "tokenAddress": "The address of the token to be checked for."
        }
      },
      "getShardExpirationClock(bytes32)": {
        "notice": "Returns the clock, in which a shard will or has expired."
      },
      "getShardSalePrice(bytes32)": {
        "notice": "Returns the price, at which a shard is for sale."
      },
      "hasPermit(string,address)": {
        "notice": "Returns a boolean stating if a given address has a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "infoByShard(bytes32)": {
        "notice": "Mapping pointing to related info of a Shard given the bytes of a unique Shard instance."
      },
      "isBankAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given bank.",
        "params": {
          "account": "The address to be checked for.",
          "bankName": "The name of the Bank to be checked for."
        }
      },
      "isPermitAdmin(string,address)": {
        "notice": "Returns a boolean stating if a given address is an admin of a given permit or not.",
        "params": {
          "account": "The address to be checked for.",
          "permitName": "The name of the permit to be checked for."
        }
      },
      "isShardHolder(address)": {
        "notice": "Checks if address is a shard holder - at least a partial owner of the contract.",
        "params": {
          "account": "The address to be checked for."
        }
      },
      "isTerminated()": {
        "notice": "Returns a boolean value, stating if the liquidization is terminated (100 days have passed since)."
      },
      "isValidShard(bytes32)": {
        "notice": "Returns a boolean stating if a given shard is currently valid or not.",
        "params": {
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "issueDividend(string,address,uint256)": {
        "notice": "Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.",
        "params": {
          "bankName": "The name of the Bank to issue the Dividend from.",
          "tokenAddress": "The address of the token to make up the Dividend.",
          "value": "The value/amount of the token to be issued in the Dividend."
        }
      },
      "issueShards(uint256,address,uint256,address)": {
        "notice": "Issues new shards and puts them for sale.",
        "params": {
          "price": "The price per token.",
          "to": "The specifically set buyer of the issued shards. Open to anyone, if address(0).",
          "tokenAddress": "The token address the shards are put for sale for."
        }
      },
      "liquid(address)": {
        "notice": "Mapping pointing to a value/amount given the address of an ERC20 token."
      },
      "liquidize()": {
        "notice": "Liquidizes and dissolves the entity. This cannot be undone."
      },
      "moveToken(string,string,address,uint256)": {
        "notice": "Internally moves a token from one Bank to another.",
        "params": {
          "fromBankName": "The name of the Bank from which the token is to be moved.",
          "toBankName": "The name of the Bank to which the token is to be moved.",
          "tokenAddress": "The address of the token to be moved.",
          "value": "The value/amount of the token to be moved."
        }
      },
      "purchase(bytes32,uint256)": {
        "details": "If the purchase is with tokens (ie. tokenAddress != 0x0), first call 'token.approve(Shardable.address, salePrice);'",
        "notice": "Purchases a listed Shard for sale.",
        "params": {
          "shard": "The shard of which a fraction will be purchased."
        }
      },
      "putForSale(bytes32,uint256,address,uint256,address)": {
        "notice": "Puts a given shard for sale.",
        "params": {
          "amount": "Amount of the Shard to be put for sale.",
          "price": "The amount which the Shard is for sale as. The token address being the valuta.",
          "shard": "The shard to be put for sale.",
          "to": "The specifically set buyer of the sale. Open to anyone, if address(0).",
          "tokenAddress": "The address of the token that is accepted when purchasing. A value of 0x0 represents ether."
        }
      },
      "receiveToken(address,uint256)": {
        "notice": "Receives a specified token and adds it to the registry. Make sure 'token.approve()' is called beforehand.",
        "params": {
          "tokenAddress": "The address of the token to be received.",
          "value": "The value/amount of the token to be received."
        }
      },
      "registerTokenAddress(address)": {
        "notice": "Adds a token address to the registry. Also approves any future receipts of said token unless removed again.",
        "params": {
          "tokenAddress": "The token address to be registered."
        }
      },
      "removeBankAdmin(string,address)": {
        "notice": "Removes a given administrator of a given Bank.",
        "params": {
          "bankAdmin": "The address of the current Bank administrator to be removed.",
          "bankName": "The name of the Bank from which the given administrator is to be removed."
        }
      },
      "setBasePermit(string,uint8)": {
        "notice": "Sets the state of a specified base permit.",
        "params": {
          "newState": "The new base Permit State to be applied.",
          "permitName": "The name of the base permit, whose state is to be set."
        }
      },
      "setPermit(string,address,uint8)": {
        "notice": "Sets the state of a specified permit of a given address.",
        "params": {
          "account": "The address, whose permit state is to be set.",
          "newState": "The new Permit State to be applied.",
          "permitName": "The name of the permit, whose state is to be set."
        }
      },
      "shardByOwner(address)": {
        "notice": "Mapping pointing to a currently valid shard given the address of its owner."
      },
      "shardExisted(bytes32,uint256)": {
        "notice": "Returns a boolean stating if the given shard was valid at a given clock.",
        "params": {
          "atClock": "The clock to be checked for.",
          "shard": "The shard, whose validity is to be checked for."
        }
      },
      "split(bytes32,uint256,address)": {
        "notice": "Splits a currently valid shard into two new ones. One is assigned to the receiver. The rest to the previous owner.",
        "params": {
          "amount": "Amount, which will be subtracted from the previous shard and sent to the receiver.",
          "senderShard": "The shard to be split.",
          "to": "The receiver of the new Shard."
        }
      },
      "totalShardAmountByClock(uint256)": {
        "notice": "Mapping pointing to integer value representing the total number of shards issued, provided the clock. Used as the denominator to represent a relative shard fraction."
      },
      "transferTokenFromBank(string,address,uint256,address)": {
        "notice": "Transfers a token bankAdmin a Bank to a recipient.",
        "params": {
          "bankName": "The name of the Bank from which the token is to be transferred.",
          "to": "The recipient of the token to be transferred.",
          "tokenAddress": "The address of the token to be transferred.",
          "value": "The value/amount of the token to be transferred."
        }
      },
      "unregisterTokenAddress(address)": {
        "notice": "Removes a token address from the registry. Also cancels any future receipts of said token unless added again.",
        "params": {
          "tokenAddress": "The token address to be unregistered."
        }
      }
    },
    "notice": "This contract adds administrability via permits and internally closed money supplies.",
    "stateVariables": {
      "permits": {
        "custom:illustration": "permits[permitName][address] == PermitState.authorized || PermitState.administrator;"
      }
    },
    "title": "An extension of the Idea providing an administrable interface.",
    "version": 1
  },
  "offset": [
    307,
    23452
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x281 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x868399A5 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBCEDB2E0 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE123182B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE123182B EQ PUSH2 0x888 JUMPI DUP1 PUSH4 0xE1C34C1F EQ PUSH2 0x89B JUMPI DUP1 PUSH4 0xE6778FCE EQ PUSH2 0x8BB JUMPI DUP1 PUSH4 0xEFAE89F8 EQ PUSH2 0x8E8 JUMPI DUP1 PUSH4 0xF7AAE621 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xFD06636B EQ PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBCEDB2E0 EQ PUSH2 0x77E JUMPI DUP1 PUSH4 0xC4802EB2 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0xC5438A55 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xD1CC9976 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0xDB5DC9B7 EQ PUSH2 0x848 JUMPI DUP1 PUSH4 0xDE9D6805 EQ PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA1916AEF GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xA1916AEF EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0xA80AED76 EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xA902780F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xA907B6C5 EQ PUSH2 0x71E JUMPI DUP1 PUSH4 0xB2CB78AB EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xB4AF7D59 EQ PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x868399A5 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0x8786DF6A EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x9211B7B3 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x97235A1E EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0x9995B9A9 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2E9A2A GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x4C46360B GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4C46360B EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x5BEEFF33 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x62748DCC EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x63879C0B EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x7B785493 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x859D9FD5 EQ PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2E9A2A EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x350546D8 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x354CD135 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x384FE2B5 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x3BAF28F8 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x3DBEAA54 EQ PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD3330A1 GT PUSH2 0x245 JUMPI DUP1 PUSH4 0xD3330A1 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x169936B4 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x23656642 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x258E4D9F EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x2DEC7CD2 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x2EF37926 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x36F3AEC EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x5C558F5 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x66792D2 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xBEA8985 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x294 JUMPI PUSH2 0x292 PUSH1 0x0 CALLVALUE CALLER PUSH2 0x955 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2B3 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B12 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0xB43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2D JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4F JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C95 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0x1446 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x644 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0x147B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x694 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CEC JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x6E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D16 JUMP JUMPDEST PUSH2 0x14E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0x1503 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x32A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x739 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0x156E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D92 JUMP JUMPDEST PUSH2 0x15BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x779 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x1636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH2 0x799 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x801 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x3DC7 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x1713 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x863 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE8 JUMP JUMPDEST PUSH2 0x173D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x883 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E1C JUMP JUMPDEST PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x896 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2D JUMP JUMPDEST PUSH2 0x17F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x8B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B90 JUMP JUMPDEST PUSH2 0x1DD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x8D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x903 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x930 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E64 JUMP JUMPDEST PUSH2 0x1E09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x950 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2D JUMP JUMPDEST PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x960 DUP4 DUP4 DUP4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xF SWAP1 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x1 PUSH1 0xE PUSH1 0x40 MLOAD PUSH2 0x9CD SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xF PUSH1 0x40 MLOAD PUSH2 0xA0A SWAP1 PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xAAE DUP2 CALLER PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x3EDD JUMP JUMPDEST PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFD PUSH2 0x3EDD JUMP JUMPDEST SUB PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3E DUP4 DUP4 PUSH2 0x1F0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C45 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xB68 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB79 PUSH2 0x1FBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F33 JUMP JUMPDEST DUP2 PUSH2 0xBD1 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB3E DUP4 PUSH2 0x200E JUMP JUMPDEST PUSH2 0xC41 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xAE9 PUSH1 0xF3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCF4 SWAP1 DUP3 SWAP1 PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP3 PUSH1 0x40 MLOAD PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0xD66 JUMPI POP PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1911 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0xD91 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0xD9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA3 DUP3 PUSH2 0x2302 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH2 0x3EDD JUMP JUMPDEST EQ DUP1 PUSH2 0xE33 JUMPI POP PUSH1 0x2 PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE31 JUMPI PUSH2 0xE31 PUSH2 0x3EDD JUMP JUMPDEST EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xEA0 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0xB3E DUP4 DUP4 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0xEFE DUP2 CALLER PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xF07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0xF12 DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF25 DUP5 DUP5 PUSH2 0x24FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF34 CALLER PUSH2 0x1DD7 JUMP JUMPDEST PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xAA9 PUSH1 0xF3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0xC DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1060 SWAP2 SWAP1 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x106A SWAP2 SWAP1 PUSH2 0x3F9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10C8 SWAP1 DUP5 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB3E SWAP1 POP DUP4 DUP3 CALLER PUSH2 0x205D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F33 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x1131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0x1161 DUP5 DUP5 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x2720A3 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4143 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 SLOAD DUP5 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP9 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP9 DUP7 MSTORE PUSH1 0x14 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1238 SWAP2 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x3F9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x445453 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1298 SWAP1 DUP5 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALLER PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1300 SWAP2 CALLER SWAP1 PUSH2 0x3FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x1334 DUP2 CALLER PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x1348 DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x1351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3E DUP4 PUSH2 0x25BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6953 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0x137F DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1394 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2740 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A51 PUSH1 0xF2 SHL DUP2 MSTORE POP PUSH2 0x13C0 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x13D4 DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1394 DUP6 DUP6 DUP6 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x140E DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x143D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0xDA3 DUP3 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xD66 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1B5055 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x14A1 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0x14AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0xDA3 DUP3 PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0xDA3 DUP3 DUP3 PUSH2 0x2A5B JUMP JUMPDEST DUP4 PUSH2 0x14EE DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1394 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xE33 JUMPI POP PUSH2 0xE33 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP4 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP PUSH2 0x1593 DUP2 CALLER PUSH2 0x173D JUMP JUMPDEST PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0x15A7 DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x15B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF25 DUP5 DUP5 PUSH2 0x2E57 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F33 JUMP JUMPDEST DUP4 PUSH2 0x160F DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH2 0x1394 DUP6 DUP6 DUP6 PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH2 0x1671 DUP2 CALLER PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x168C JUMPI PUSH2 0x168C PUSH2 0x3EDD JUMP JUMPDEST PUSH1 0x11 DUP6 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x3EDD JUMP JUMPDEST SUB PUSH2 0x1708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x41485 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xF25 DUP5 DUP5 DUP5 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1738 JUMPI POP PUSH2 0x12C PUSH1 0xA SLOAD TIMESTAMP PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x178A PUSH2 0x3EDD JUMP JUMPDEST LT ISZERO DUP1 PUSH2 0xE33 JUMPI POP PUSH1 0x1 PUSH1 0x12 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17A4 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17C8 JUMPI PUSH2 0x17C8 PUSH2 0x3EDD JUMP JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x17DC DUP2 CALLER PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x17E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1394 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3233 JUMP JUMPDEST DUP2 PUSH2 0x180B DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x186A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4553 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4553 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1922 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x29A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x195C DUP4 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1978 SWAP1 DUP5 PUSH2 0x3F87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x198D DUP5 PUSH1 0x19 PUSH2 0x3E8 PUSH2 0x33D5 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x199E DUP2 DUP4 PUSH2 0x3ECA JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AFD JUMPI DUP4 CALLVALUE LT ISZERO PUSH2 0x19F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4945 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A4B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1AC5 JUMPI POP DUP2 JUMPDEST PUSH2 0x1AF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST POP POP PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP3 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B83 SWAP2 SWAP1 PUSH2 0x4042 JUMP JUMPDEST LT ISZERO PUSH2 0x1BA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x49A71890AEA5A751E30E740C504F2E9683F347BC PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0x1C48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1C81 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 PUSH2 0x3449 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1C8E DUP8 DUP8 CALLER PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1CD6 JUMPI PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1CD0 SWAP1 DUP5 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD DUP12 DUP2 MSTORE SWAP3 DUP4 ADD DUP11 SWAP1 MSTORE CALLER DUP4 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 EQ PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP11 DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x1D9D SWAP1 DUP10 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND PUSH2 0x34F8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD66 SWAP1 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F33 JUMP JUMPDEST DUP6 PUSH2 0x1E5E DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x1E7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH2 0x1DCE DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x34F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xE33 JUMPI POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1EE0 SWAP1 DUP5 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA4A SWAP1 DUP5 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1F33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST DUP1 PUSH1 0x12 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F44 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F6D JUMPI PUSH2 0x1F6D PUSH2 0x3EDD JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F94 SWAP3 SWAP2 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1FB0 SWAP2 CALLER SWAP1 PUSH2 0x40F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1FC4 PUSH2 0x36AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x6C45 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE CALLER DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 JUMP JUMPDEST DUP1 PUSH2 0x2028 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x2044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20B2 JUMPI PUSH2 0x20AD DUP3 DUP3 PUSH2 0x36E1 JUMP JUMPDEST PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2104 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0x2159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO PUSH2 0x225C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B91AD0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x97235A1E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21C4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2257 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x223B SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0x2257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22CF SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0x22EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4099 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB3E JUMPI PUSH2 0xB3E DUP4 DUP4 PUSH2 0x3769 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x231F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x15 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xF PUSH1 0x4 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 KECCAK256 DUP7 DUP6 MSTORE PUSH1 0x14 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x23B0 SWAP1 DUP5 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1FB0 SWAP2 CALLER SWAP1 PUSH2 0x4125 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0x241C DUP3 PUSH2 0x1636 JUMP JUMPDEST ISZERO PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4145 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2460 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 PUSH1 0xD SWAP1 PUSH2 0x24A5 SWAP1 DUP6 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x24E3 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1FB0 SWAP2 CALLER SWAP1 PUSH2 0x417B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2525 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0x252F DUP3 DUP3 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x2538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x259F SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1FB0 SWAP2 CALLER SWAP1 PUSH2 0x41A7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x25E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0x25EA DUP2 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x261C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x554221 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x36B0B4B7 PUSH1 0xE1 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659 ADD PUSH2 0x2691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x26A1 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x269A DUP2 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x26CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4245 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x26DD SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2719 SWAP2 DUP5 SWAP2 ADD PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2735 SWAP2 CALLER SWAP1 PUSH2 0x41E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2749 DUP4 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x2752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD PUSH2 0x276E SWAP2 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x27A2 SWAP1 PUSH2 0x2799 SWAP1 DUP7 PUSH2 0x3ECA JUMP JUMPDEST ADDRESS PUSH1 0x0 SLOAD PUSH2 0x3832 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF25 SWAP1 DUP6 DUP6 DUP6 DUP6 PUSH2 0x34F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x27E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x27F9 SWAP1 DUP7 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4212 JUMP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x284E SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x288E SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x28A4 SWAP1 DUP7 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x28DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2918 JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x28F5 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2912 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x14 DUP4 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE MLOAD PUSH1 0x1 SWAP4 DUP5 ADD SSTORE PUSH1 0x15 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x13 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x299F SWAP2 DUP8 SWAP2 DUP8 SWAP2 DUP8 SWAP2 ADD PUSH2 0x422E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x29BB SWAP2 CALLER SWAP1 PUSH2 0x425C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x29D2 DUP2 PUSH2 0x3956 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2735 SWAP2 CALLER SWAP1 PUSH2 0x4288 JUMP JUMPDEST PUSH2 0x2A1B DUP2 PUSH2 0x39FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2735 SWAP2 CALLER SWAP1 PUSH2 0x42B4 JUMP JUMPDEST PUSH2 0x2A64 DUP3 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x2A95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1555 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B07 SWAP2 SWAP1 PUSH2 0x4042 JUMP JUMPDEST LT ISZERO PUSH2 0x2B25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9C SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0x2BB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH2 0xB3E DUP4 DUP4 CALLER PUSH2 0x955 JUMP JUMPDEST DUP3 PUSH2 0x2BCD DUP2 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x2BFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x444E45 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2C25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C35 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2C79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4212 JUMP JUMPDEST DUP2 PUSH1 0xF DUP7 PUSH1 0x40 MLOAD PUSH2 0x2C8A SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CCA SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2DBE JUMPI PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2CEE SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2D4E JUMPI PUSH1 0x1 PUSH1 0xE DUP7 PUSH1 0x40 MLOAD PUSH2 0x2D2B SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D48 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D5E SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x2DBE JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x2D9B SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2DB8 SWAP2 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DCF SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E0F SWAP2 SWAP1 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x2E3B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x20 ADD PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1300 SWAP2 CALLER SWAP1 PUSH2 0x4322 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2E7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH2 0x2EA1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A1 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP3 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x2ED2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E5 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2EE4 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2F39 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1FB0 SWAP2 CALLER SWAP1 PUSH2 0x434E JUMP JUMPDEST DUP3 PUSH2 0x2F6F DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x2F8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2FB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x2FF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4941 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2FFD DUP3 PUSH2 0x1DD7 JUMP JUMPDEST ISZERO PUSH2 0x306C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x3032 SWAP1 DUP6 PUSH2 0x3ECA JUMP JUMPDEST SWAP1 POP PUSH2 0x3041 DUP2 DUP5 PUSH1 0x0 SLOAD PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SLOAD PUSH2 0x3066 SWAP2 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST POP PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x3079 DUP4 DUP4 PUSH1 0x0 SLOAD PUSH2 0x3832 JUMP JUMPDEST PUSH2 0x3085 DUP5 PUSH1 0x0 SLOAD PUSH2 0x37C7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x309F SWAP1 DUP6 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x30D2 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SLOAD PUSH2 0x30D2 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP1 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP3 SWAP1 SWAP2 PUSH2 0x314A SWAP1 PUSH1 0x1 PUSH2 0x3ECA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x316E SWAP1 PUSH2 0x437A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x319F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST DUP1 PUSH1 0x11 DUP5 PUSH1 0x40 MLOAD PUSH2 0x31B0 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x31EE JUMPI PUSH2 0x31EE PUSH2 0x3EDD JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4393 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xA96 SWAP2 CALLER SWAP1 PUSH2 0x43C4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3269 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x32AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4212 JUMP JUMPDEST PUSH2 0x32B8 DUP4 DUP4 DUP4 PUSH2 0x205D JUMP JUMPDEST DUP2 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x32C9 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3309 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0xF SWAP1 PUSH2 0x331F SWAP1 DUP7 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x3359 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x3393 JUMPI PUSH1 0x1 PUSH1 0xE DUP6 PUSH1 0x40 MLOAD PUSH2 0x3370 SWAP2 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x338D SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4459 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x29BB SWAP2 CALLER SWAP1 PUSH2 0x442C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP5 GT PUSH2 0x33E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x33F3 DUP8 DUP10 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x33FD SWAP2 SWAP1 PUSH2 0x3F9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x340C DUP9 DUP3 PUSH2 0x3FC0 JUMP JUMPDEST PUSH2 0x3416 SWAP1 DUP11 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3420 SWAP2 SWAP1 PUSH2 0x3F9E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x342E DUP2 DUP4 PUSH2 0x3ECA JUMP JUMPDEST PUSH2 0x3438 SWAP1 DUP12 PUSH2 0x3FC0 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x3463 JUMPI PUSH2 0xB3E DUP3 DUP3 PUSH2 0x2A5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34DC SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4099 JUMP JUMPDEST DUP5 PUSH2 0x3512 DUP2 PUSH1 0x0 DUP1 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x352E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F4F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x35B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4941 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP9 DUP2 MSTORE DUP8 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP1 DUP9 ADD DUP1 SLOAD SWAP3 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH32 0x4126DE2C73B6B69D46D3290EE98241C5C18CE39A61B29E4E91F877A6D56BB213 SWAP1 PUSH2 0x369B SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x36D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x3F6B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x372E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3733 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3791 SWAP1 DUP5 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x37BE SWAP1 DUP5 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F SWAP2 ADD PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x3867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x29AD PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP4 DUP2 MSTORE PUSH1 0x7 DUP6 MSTORE DUP6 DUP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE PUSH1 0x60 DUP1 DUP9 ADD DUP8 MSTORE DUP12 DUP9 MSTORE DUP6 DUP9 ADD DUP4 DUP2 MSTORE DUP9 DUP9 ADD DUP12 DUP2 MSTORE DUP7 DUP5 MSTORE PUSH1 0x3 DUP9 MSTORE SWAP3 DUP9 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SSTORE MLOAD PUSH1 0x1 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP4 MLOAD DUP3 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH32 0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD SWAP2 ADD PUSH2 0x29BB JUMP JUMPDEST PUSH2 0x395F DUP2 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x3990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1555 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x39DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x272D PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3A05 DUP2 PUSH2 0x1446 JUMP JUMPDEST ISZERO PUSH2 0x3A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x20A9 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3A9D JUMPI PUSH2 0x3A9D PUSH2 0x3A5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AC5 JUMPI PUSH2 0x3AC5 PUSH2 0x3A5B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B48 DUP6 DUP3 DUP7 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3B57 PUSH1 0x20 DUP5 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE33 DUP3 PUSH2 0x3B79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE0 DUP5 DUP3 DUP6 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C1E DUP6 DUP3 DUP7 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3B57 PUSH1 0x20 DUP5 ADD PUSH2 0x3B79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x3C75 PUSH1 0x20 DUP7 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3C8A PUSH1 0x60 DUP7 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CCD DUP7 DUP3 DUP8 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3CDC PUSH1 0x20 DUP6 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D08 DUP4 PUSH2 0x3B79 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D50 DUP9 DUP4 DUP10 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D73 DUP8 DUP3 DUP9 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3D82 PUSH1 0x40 DUP7 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3DBE PUSH1 0x40 DUP6 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DFF DUP7 DUP3 DUP8 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3E0E PUSH1 0x20 DUP6 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DBE PUSH1 0x40 DUP6 ADD PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E55 DUP8 DUP3 DUP9 ADD PUSH2 0x3A71 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x3C75 PUSH1 0x20 DUP7 ADD PUSH2 0x3B79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3E93 PUSH1 0x40 DUP8 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3EA8 PUSH1 0x80 DUP8 ADD PUSH2 0x3B79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD66 PUSH2 0x3EB4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3EF6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F29 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x9E9 PUSH1 0xF3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x5553 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1153 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD66 JUMPI PUSH2 0xD66 PUSH2 0x3EB4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3FBB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD66 PUSH2 0x3EB4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3FEB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18D1 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1395 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x40D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x40EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40B5 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x39A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1911 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4164 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x31A1 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7241 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3221 PUSH1 0xF1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x24A3 PUSH1 0xF1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4241 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1A51 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C95 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x42F3 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3FD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4305 DUP2 DUP8 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B55 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x6141 PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x438C JUMPI PUSH2 0x438C PUSH2 0x3EB4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x43A6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH2 0x3BE0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x40B5 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x735 PUSH1 0xF4 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4403 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 AND PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1D15 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x402B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3FD3 JUMP INVALID NUMBER 0xCD PUSH23 0xB5EB40DA9EA5EB31A199F443F7CF7955EC280BC5981A2E CALLVALUE GASLIMIT 0xC7 SWAP13 SWAP1 SSTORE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH1 0x7F 0xE4 PUSH4 0x564B2009 0xCF 0x4F 0xCB EXTCODECOPY 0x25 0xD8 PUSH17 0xCA306B72884283624D8B69F77022D08764 PUSH20 0x6F6C634300081300330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "12": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x868399A5"
    },
    "25": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBCEDB2E0"
    },
    "36": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE123182B"
    },
    "47": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE123182B"
    },
    "58": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x888"
    },
    "62": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE1C34C1F"
    },
    "69": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89B"
    },
    "73": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6778FCE"
    },
    "80": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BB"
    },
    "84": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEFAE89F8"
    },
    "91": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E8"
    },
    "95": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF7AAE621"
    },
    "102": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x915"
    },
    "106": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD06636B"
    },
    "113": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x935"
    },
    "117": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBCEDB2E0"
    },
    "129": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77E"
    },
    "133": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC4802EB2"
    },
    "140": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E6"
    },
    "144": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC5438A55"
    },
    "151": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "155": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD1CC9976"
    },
    "162": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x833"
    },
    "166": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDB5DC9B7"
    },
    "173": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x848"
    },
    "177": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE9D6805"
    },
    "184": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x868"
    },
    "188": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1916AEF"
    },
    "200": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1916AEF"
    },
    "211": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C9"
    },
    "215": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA80AED76"
    },
    "222": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E9"
    },
    "226": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA902780F"
    },
    "233": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x709"
    },
    "237": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA907B6C5"
    },
    "244": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71E"
    },
    "248": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB2CB78AB"
    },
    "255": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73E"
    },
    "259": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4AF7D59"
    },
    "266": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75E"
    },
    "270": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x868399A5"
    },
    "282": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x609"
    },
    "286": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8786DF6A"
    },
    "293": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x629"
    },
    "297": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9211B7B3"
    },
    "304": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x649"
    },
    "308": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97235A1E"
    },
    "315": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x679"
    },
    "319": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9995B9A9"
    },
    "326": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "330": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F2E9A2A"
    },
    "342": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "346": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "347": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C46360B"
    },
    "353": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "357": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C46360B"
    },
    "364": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "368": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5BEEFF33"
    },
    "375": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "379": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62748DCC"
    },
    "386": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54B"
    },
    "390": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "391": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "392": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63879C0B"
    },
    "397": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x599"
    },
    "401": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B785493"
    },
    "408": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B9"
    },
    "412": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x859D9FD5"
    },
    "419": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E9"
    },
    "423": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "424": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "427": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "428": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F2E9A2A"
    },
    "435": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "436": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x418"
    },
    "439": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x350546D8"
    },
    "446": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "447": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "450": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x354CD135"
    },
    "457": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "458": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x458"
    },
    "461": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "462": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x384FE2B5"
    },
    "468": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "472": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "474": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BAF28F8"
    },
    "479": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "483": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "484": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "485": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3DBEAA54"
    },
    "490": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "491": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "494": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "495": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "497": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "498": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "499": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD3330A1"
    },
    "506": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "GT",
      "path": "0"
    },
    "507": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "510": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD3330A1"
    },
    "517": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "518": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "521": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "522": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x169936B4"
    },
    "528": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "532": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "533": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23656642"
    },
    "539": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x398"
    },
    "543": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x258E4D9F"
    },
    "550": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "551": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "554": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2DEC7CD2"
    },
    "561": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "562": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "565": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "567": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EF37926"
    },
    "572": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "573": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "576": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "577": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "579": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "580": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "581": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "582": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2FB0C5E"
    },
    "588": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "589": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "592": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36F3AEC"
    },
    "599": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "600": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "603": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "605": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C558F5"
    },
    "610": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "611": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E8"
    },
    "614": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "615": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66792D2"
    },
    "621": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "622": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD"
    },
    "625": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "626": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "627": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEA8985"
    },
    "632": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "EQ",
      "path": "0"
    },
    "633": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "636": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "637": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "639": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "640": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "641": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "642": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "643": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "646": {
      "fn": null,
      "offset": [
        307,
        23452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "647": {
      "fn": "Idea.<receive>",
      "offset": [
        1963,
        2016
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 0,
      "value": "0x292"
    },
    "650": {
      "fn": "Idea.<receive>",
      "offset": [
        1992,
        1993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "652": {
      "fn": "Idea.<receive>",
      "offset": [
        1995,
        2004
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "653": {
      "fn": "Idea.<receive>",
      "offset": [
        2005,
        2015
      ],
      "op": "CALLER",
      "path": "1"
    },
    "654": {
      "fn": "Idea.<receive>",
      "offset": [
        1963,
        1983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x955"
    },
    "657": {
      "fn": "Idea.<receive>",
      "jump": "i",
      "offset": [
        1963,
        2016
      ],
      "op": "JUMP",
      "path": "1"
    },
    "658": {
      "fn": "Idea.<receive>",
      "offset": [
        1963,
        2016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "659": {
      "offset": [
        307,
        23452
      ],
      "op": "STOP",
      "path": "0"
    },
    "660": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "663": {
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "664": {
      "first_revert": true,
      "fn": "Idea.<receive>",
      "offset": [
        307,
        23452
      ],
      "op": "REVERT",
      "path": "0"
    },
    "665": {
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "666": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "667": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "668": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "669": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A5"
    },
    "672": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "673": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "675": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "676": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "REVERT",
      "path": "2"
    },
    "677": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "678": {
      "op": "POP"
    },
    "679": {
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "681": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "682": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "685": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "686": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "688": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "AND",
      "path": "2"
    },
    "689": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "690": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMP",
      "path": "2"
    },
    "691": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "692": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "694": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "ISZERO"
    },
    "697": {
      "op": "ISZERO"
    },
    "698": {
      "op": "DUP2"
    },
    "699": {
      "op": "MSTORE"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "offset": [
        2786,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "706": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "707": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "708": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "709": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SUB",
      "path": "2"
    },
    "710": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "711": {
      "fn": "Idea.<receive>",
      "offset": [
        2786,
        2804
      ],
      "op": "RETURN",
      "path": "2"
    },
    "712": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "714": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "715": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "716": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4"
    },
    "719": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "720": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "722": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "REVERT",
      "path": "0"
    },
    "724": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "725": {
      "op": "POP"
    },
    "726": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "729": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "732": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "733": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "735": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B12"
    },
    "738": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA3"
    },
    "743": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "744": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "745": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "746": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "DUP1",
      "path": "0"
    },
    "747": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "748": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F4"
    },
    "751": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "752": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "754": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "REVERT",
      "path": "0"
    },
    "756": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "757": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "761": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB43"
    },
    "764": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "766": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "767": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP1",
      "path": "2"
    },
    "768": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "769": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "772": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "773": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "775": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP1",
      "path": "2"
    },
    "776": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "REVERT",
      "path": "2"
    },
    "777": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "782": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x318"
    },
    "785": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "786": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "788": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "791": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "792": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "793": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "795": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "797": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "798": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "800": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "801": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "802": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "803": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "805": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "806": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "807": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "808": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "809": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "810": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "811": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "813": {
      "fn": "Administrable.liquidize",
      "offset": [
        2993,
        3051
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "814": {
      "op": "SWAP1"
    },
    "815": {
      "op": "DUP2"
    },
    "816": {
      "op": "MSTORE"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "offset": [
        2993,
        3051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "823": {
      "op": "JUMP"
    },
    "824": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "825": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "826": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "827": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "828": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x344"
    },
    "831": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "832": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "834": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "835": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "REVERT",
      "path": "2"
    },
    "836": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "841": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "844": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "845": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "847": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "850": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "851": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "852": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7C"
    },
    "855": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "856": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "857": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "858": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "DUP1",
      "path": "1"
    },
    "859": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "860": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x364"
    },
    "863": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "864": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "866": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "DUP1",
      "path": "1"
    },
    "867": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "REVERT",
      "path": "1"
    },
    "868": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "869": {
      "op": "POP"
    },
    "870": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "873": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x373"
    },
    "876": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "877": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "879": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B90"
    },
    "882": {
      "fn": "Idea.claimTerminatedLiquid",
      "jump": "i",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "883": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC39"
    },
    "887": {
      "fn": "Idea.claimTerminatedLiquid",
      "jump": "i",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "888": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "890": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "891": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "892": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384"
    },
    "895": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "896": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "898": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "899": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "REVERT",
      "path": "0"
    },
    "900": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "905": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "908": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "909": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "911": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BAB"
    },
    "914": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "915": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "916": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0E"
    },
    "919": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "920": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "921": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "922": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "923": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "924": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "927": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "928": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "930": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "931": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "REVERT",
      "path": "0"
    },
    "932": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "937": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B3"
    },
    "940": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "941": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "943": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B60"
    },
    "946": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "947": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "948": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6C"
    },
    "951": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "952": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "954": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "955": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "956": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "959": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "960": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "962": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "963": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "REVERT",
      "path": "0"
    },
    "964": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "969": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "972": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "973": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "975": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "978": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "979": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "983": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "984": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "986": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "987": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "988": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E4"
    },
    "991": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "992": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "994": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "995": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "REVERT",
      "path": "0"
    },
    "996": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "1001": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F3"
    },
    "1004": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1005": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1007": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "1010": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1011": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3A"
    },
    "1015": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1016": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1017": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1018": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1019": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1020": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x404"
    },
    "1023": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1024": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1026": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1027": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1028": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1033": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "1036": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1037": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1039": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "1042": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1043": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1044": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7B"
    },
    "1047": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1048": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1049": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1050": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1051": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1052": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "1055": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1056": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1058": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1059": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1060": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1065": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x433"
    },
    "1068": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1069": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1071": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "1074": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1075": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1076": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "1079": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1080": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1081": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1082": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1083": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1084": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "1087": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1088": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1090": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1091": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1092": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "1097": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x453"
    },
    "1100": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1101": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1103": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B90"
    },
    "1106": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1107": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1108": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2B"
    },
    "1111": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1112": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1113": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1114": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1116": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1119": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1120": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1122": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1124": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1129": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x473"
    },
    "1132": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1133": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1135": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2D"
    },
    "1138": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1139": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1140": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D9"
    },
    "1143": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1144": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1146": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1147": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1148": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x484"
    },
    "1151": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1152": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1154": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1155": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1156": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1161": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x493"
    },
    "1164": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1165": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1167": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BAB"
    },
    "1170": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1171": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1172": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130F"
    },
    "1175": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1176": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1177": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1178": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1179": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1180": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1184": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1186": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1188": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1193": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B3"
    },
    "1196": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1197": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1199": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4F"
    },
    "1202": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1203": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1204": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135A"
    },
    "1207": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1208": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1209": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1210": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1211": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1212": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C4"
    },
    "1215": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1216": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1218": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1219": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1220": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32A"
    },
    "1225": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D3"
    },
    "1228": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1229": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1231": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B90"
    },
    "1234": {
      "fn": "Idea.getLiquidResidual",
      "jump": "i",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1235": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "AND",
      "path": "1",
      "statement": 1
    },
    "1245": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4031,
        4038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1247": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1248": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1249": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1250": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "1252": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1254": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1255": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1257": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1258": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1259": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1260": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        4057,
        4085
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1261": {
      "fn": "Idea.getLiquidResidual",
      "offset": [
        3962,
        4092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1262": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1263": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1264": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1265": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1266": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FA"
    },
    "1269": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1270": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1272": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1273": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1274": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1275": {
      "op": "POP"
    },
    "1276": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "1279": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1282": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1283": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1285": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B60"
    },
    "1288": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1289": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1290": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12726,
        12733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1292": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 2
    },
    "1293": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1294": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1297": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1299": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1300": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1302": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12776
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1304": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1306": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12782
      ],
      "op": "ADD",
      "path": "0"
    },
    "1307": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1308": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12752,
        12782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        12662,
        12789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "offset": [
        684,
        725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1311": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1312": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1313": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1314": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52A"
    },
    "1317": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1318": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1320": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1321": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1322": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "offset": [
        684,
        725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32A"
    },
    "1327": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x539"
    },
    "1330": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1331": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1333": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B90"
    },
    "1336": {
      "fn": "Administrable.getDividendValue",
      "jump": "i",
      "offset": [
        684,
        725
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1337": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1338": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1340": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1342": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1343": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1345": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1346": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1347": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1348": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1350": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1351": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1352": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1353": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1354": {
      "fn": "Administrable.getDividendValue",
      "offset": [
        684,
        725
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1355": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1356": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1357": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1358": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1359": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x557"
    },
    "1362": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1363": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1365": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1366": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1367": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x581"
    },
    "1372": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x566"
    },
    "1375": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1376": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1378": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B60"
    },
    "1381": {
      "fn": "Administrable.getDividendToken",
      "jump": "i",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1382": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1383": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12471,
        12478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1385": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 3
    },
    "1386": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1387": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1388": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1390": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1392": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1393": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1395": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1396": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12521
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1397": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12534
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12534
      ],
      "op": "AND",
      "path": "0"
    },
    "1407": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12497,
        12534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1408": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1409": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1410": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1412": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "op": "SWAP1"
    },
    "1422": {
      "op": "SWAP2"
    },
    "1423": {
      "op": "AND"
    },
    "1424": {
      "op": "DUP2"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1428": {
      "op": "ADD"
    },
    "1429": {
      "fn": "Administrable.getDividendToken",
      "offset": [
        12407,
        12541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BF"
    },
    "1432": {
      "op": "JUMP"
    },
    "1433": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1434": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1435": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1436": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1437": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1441": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1443": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1444": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1445": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1450": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B4"
    },
    "1453": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1454": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1456": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C95"
    },
    "1459": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1460": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1461": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139B"
    },
    "1464": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1465": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1466": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1467": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1468": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1469": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C5"
    },
    "1472": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1473": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1475": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1476": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1477": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "1482": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D4"
    },
    "1485": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1486": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1488": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "1491": {
      "fn": "Shardable.getShardSalePrice",
      "jump": "i",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1492": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1493": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11509,
        11516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1495": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 4
    },
    "1496": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1497": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1498": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1500": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1502": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1503": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1505": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1506": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11553
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1507": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1509": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11559
      ],
      "op": "ADD",
      "path": "2"
    },
    "1510": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1511": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1512": {
      "fn": "Shardable.getShardSalePrice",
      "offset": [
        11447,
        11566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1513": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1514": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1515": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1516": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1517": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F5"
    },
    "1520": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1521": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1523": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1524": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1525": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1530": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x604"
    },
    "1533": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1534": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1536": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B90"
    },
    "1539": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1540": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1541": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E8"
    },
    "1544": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1545": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1546": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1547": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1549": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x615"
    },
    "1552": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1553": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1555": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1556": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1557": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B3"
    },
    "1562": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "1565": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1566": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1568": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B90"
    },
    "1571": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1572": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1573": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1446"
    },
    "1576": {
      "fn": "Idea.acceptsToken",
      "jump": "i",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1577": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1578": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1579": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1580": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1581": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x635"
    },
    "1584": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1585": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1587": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1588": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1589": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1594": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "1597": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1598": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1600": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B90"
    },
    "1603": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1604": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1605": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147B"
    },
    "1608": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1609": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1610": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1611": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1612": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1613": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x655"
    },
    "1616": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1617": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1619": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1620": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1621": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "1626": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x664"
    },
    "1629": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1630": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1632": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B60"
    },
    "1635": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1636": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1637": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13811,
        13815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1639": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1640": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1641": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1642": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1644": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1646": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1647": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1649": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1650": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1651": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1652": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1654": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "AND",
      "path": "0"
    },
    "1655": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1656": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13749,
        13863
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1657": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1658": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1659": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1660": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1661": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x685"
    },
    "1664": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1665": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1667": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1668": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1669": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "1674": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x694"
    },
    "1677": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1678": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1680": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CEC"
    },
    "1683": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1684": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1685": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D9"
    },
    "1688": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1689": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1690": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1691": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1692": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1693": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A5"
    },
    "1696": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1697": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1699": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1700": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1701": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "1706": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B4"
    },
    "1709": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1710": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1712": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "1715": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1716": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1717": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1719": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 6
    },
    "1720": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1721": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 7
    },
    "1722": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1723": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1724": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1726": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1728": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1729": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1731": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1732": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1733": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1734": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "1735": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1736": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1737": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1738": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1739": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1740": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1741": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D5"
    },
    "1744": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1745": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1747": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1748": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1749": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1754": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "1757": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1758": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1760": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D16"
    },
    "1763": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1764": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1765": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E3"
    },
    "1768": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1769": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1770": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1771": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1772": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1773": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1776": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1777": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1779": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1780": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1781": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "1786": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1789": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1790": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1792": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "1795": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1796": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "1800": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1801": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1802": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1803": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1804": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1805": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x715"
    },
    "1808": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1809": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1811": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1812": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1813": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11131,
        11138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1817": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11157,
        11162
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 8
    },
    "1818": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "1821": {
      "fn": "Shardable.getCurrentClock",
      "offset": [
        11084,
        11169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1822": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1823": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1824": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1825": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1826": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72A"
    },
    "1829": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1830": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1832": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1833": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1834": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "1839": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x739"
    },
    "1842": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1843": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1845": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "1848": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1849": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156E"
    },
    "1853": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1854": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1855": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1856": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1857": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1858": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x74A"
    },
    "1861": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1862": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1864": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1865": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1866": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "1871": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x759"
    },
    "1874": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1875": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1877": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D92"
    },
    "1880": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1881": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1882": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15BA"
    },
    "1885": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1886": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1887": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1888": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1889": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1890": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76A"
    },
    "1893": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1894": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1896": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1897": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1898": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "1903": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x779"
    },
    "1906": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1907": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1909": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BAB"
    },
    "1912": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1913": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1914": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1636"
    },
    "1917": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1918": {
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1919": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1920": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1921": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1922": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78A"
    },
    "1925": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1926": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1928": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1929": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1930": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C3"
    },
    "1935": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x799"
    },
    "1938": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1939": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1941": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "1944": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1945": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1946": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1948": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1950": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1951": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1953": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1954": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1955": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1956": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1958": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1959": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1960": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1961": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1962": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1964": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1965": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ADD",
      "path": "2"
    },
    "1966": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1967": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1969": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1970": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1971": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "ADD",
      "path": "2"
    },
    "1972": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1973": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "SUB"
    },
    "1983": {
      "offset": [
        3162,
        3210
      ],
      "op": "AND",
      "path": "2"
    },
    "1984": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1985": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1986": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1987": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1988": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1990": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1991": {
      "fn": "Administrable.bankExists",
      "offset": [
        3162,
        3210
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1992": {
      "op": "SWAP4"
    },
    "1993": {
      "op": "DUP5"
    },
    "1994": {
      "op": "MSTORE"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "op": "SWAP1"
    },
    "2004": {
      "op": "SWAP3"
    },
    "2005": {
      "op": "AND"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "op": "DUP5"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "SWAP1"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "offset": [
        3162,
        3210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "2021": {
      "op": "JUMP"
    },
    "2022": {
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2023": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2024": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2025": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2026": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F2"
    },
    "2029": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2030": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2032": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2033": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2034": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "2039": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x801"
    },
    "2042": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2043": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2045": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B90"
    },
    "2048": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2049": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2050": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2052": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2054": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2055": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2057": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2059": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2060": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2062": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2063": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2064": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2065": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2066": {
      "fn": "Administrable.bankExists",
      "offset": [
        3308,
        3355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2067": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2068": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2069": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2070": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2071": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "2074": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2075": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2077": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2078": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2079": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "2084": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82E"
    },
    "2087": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2088": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2090": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC7"
    },
    "2093": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2094": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2095": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1666"
    },
    "2098": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2099": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2100": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2101": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2102": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2103": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83F"
    },
    "2106": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2107": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2109": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2110": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2111": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2112": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "POP",
      "path": "1"
    },
    "2113": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B3"
    },
    "2116": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1713"
    },
    "2119": {
      "fn": "Idea.isTerminated",
      "jump": "i",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2120": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2121": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2122": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2123": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2124": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x854"
    },
    "2127": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2128": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2130": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2131": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2132": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "2137": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x863"
    },
    "2140": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2141": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2143": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE8"
    },
    "2146": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2147": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2148": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "2151": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2152": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2153": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2154": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2155": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2156": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x874"
    },
    "2159": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2160": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2162": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2163": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2164": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "2169": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x883"
    },
    "2172": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2173": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2175": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1C"
    },
    "2178": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2179": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2180": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D1"
    },
    "2183": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2184": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2185": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "2188": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x896"
    },
    "2191": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2192": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2194": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C2D"
    },
    "2197": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2198": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2199": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F1"
    },
    "2202": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2203": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2204": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2205": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2206": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2207": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2211": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2213": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2214": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2215": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "2220": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B6"
    },
    "2223": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2224": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2226": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B90"
    },
    "2229": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2230": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2231": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD7"
    },
    "2234": {
      "fn": "Shardable.isShardHolder",
      "jump": "i",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2235": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2236": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2237": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2238": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2239": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C7"
    },
    "2242": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2243": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2245": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2246": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2247": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "2252": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D6"
    },
    "2255": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2256": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2258": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B60"
    },
    "2261": {
      "fn": "Administrable.getDividendResidual",
      "jump": "i",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2262": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2263": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12976,
        12983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2265": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "2266": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2267": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2268": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "2270": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2272": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2273": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2275": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2276": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2277": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2278": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        13002,
        13030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2279": {
      "fn": "Administrable.getDividendResidual",
      "offset": [
        12909,
        13037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2281": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2282": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2283": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2284": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F4"
    },
    "2287": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2288": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2290": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2291": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2292": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2293": {
      "op": "POP"
    },
    "2294": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "2297": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2300": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2301": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2303": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B60"
    },
    "2306": {
      "fn": "Shardable.getShardExpirationClock",
      "jump": "i",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2307": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11316,
        11323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2310": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2311": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2312": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2313": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2315": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2317": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2318": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2320": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2321": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2322": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2323": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2324": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11248,
        11376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2325": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2326": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2327": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2328": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2329": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x921"
    },
    "2332": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2333": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2335": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2336": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2337": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "2342": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x930"
    },
    "2345": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2346": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2348": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E64"
    },
    "2351": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2352": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2353": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E09"
    },
    "2356": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2357": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2358": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2359": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2360": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2361": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x941"
    },
    "2364": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2365": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2367": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2368": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2369": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "2374": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x950"
    },
    "2377": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2378": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2380": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C2D"
    },
    "2383": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2384": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2385": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E87"
    },
    "2388": {
      "fn": "Shardable.shardExisted",
      "jump": "i",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2389": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22793,
        23246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22902,
        22955
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x960"
    },
    "2393": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22929,
        22941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2394": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22943,
        22948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2395": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22950,
        22954
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2396": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22902,
        22928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "2399": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        22902,
        22955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2400": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22902,
        22955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2401": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2403": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2404": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "DUP2"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2416": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2421": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2422": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2423": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2425": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2426": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2427": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2429": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2430": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2431": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2432": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "SUB",
      "path": "0"
    },
    "2433": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2434": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "ADD",
      "path": "0"
    },
    "2435": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2436": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23018
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "op": "SUB"
    },
    "2445": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2446": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "AND",
      "path": "0"
    },
    "2447": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2449": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2450": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2451": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2452": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2453": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2454": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2455": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2456": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23032
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2457": {
      "branch": 174,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23037
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2458": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2459": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23067
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2460": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AD"
    },
    "2463": {
      "branch": 174,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23067
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2471": {
      "op": "SHL"
    },
    "2472": {
      "op": "SUB"
    },
    "2473": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23041,
        23067
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2474": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23041,
        23067
      ],
      "op": "AND",
      "path": "0"
    },
    "2475": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23041,
        23067
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2476": {
      "branch": 175,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23041,
        23067
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2477": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22997,
        23067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2478": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22993,
        23133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2479": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22993,
        23133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F0"
    },
    "2482": {
      "branch": 175,
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22993,
        23133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2483": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23121,
        23122
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "2485": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2487": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2489": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2490": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CD"
    },
    "2493": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2494": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "DUP2"
    },
    "2503": {
      "op": "MSTORE"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "SWAP1"
    },
    "2508": {
      "op": "JUMP"
    },
    "2509": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2510": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2511": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2512": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2513": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2515": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "ADD",
      "path": "0"
    },
    "2516": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2518": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2519": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2520": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2521": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "SUB",
      "path": "0"
    },
    "2522": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2523": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2524": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2526": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2527": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2528": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2529": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EA"
    },
    "2532": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2533": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2534": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECA"
    },
    "2537": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23083,
        23122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2538": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2539": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2540": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2541": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23083,
        23122
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22993,
        23133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2545": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23181,
        23186
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "2546": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2548": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2550": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2551": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0A"
    },
    "2554": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2555": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "SWAP1"
    },
    "2569": {
      "op": "JUMP"
    },
    "2570": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2571": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2572": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2573": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2574": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2576": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "ADD",
      "path": "0"
    },
    "2577": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2579": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2580": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2581": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2582": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "SUB",
      "path": "0"
    },
    "2583": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2584": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2585": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2587": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23164,
        23176
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "SUB"
    },
    "2596": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "AND",
      "path": "0"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "AND",
      "path": "0"
    },
    "2606": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2607": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2608": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2610": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "ADD",
      "path": "0"
    },
    "2611": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2613": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2614": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2616": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "ADD",
      "path": "0"
    },
    "2617": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2619": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2620": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2622": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2623": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2624": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2625": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4A"
    },
    "2628": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2629": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2630": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECA"
    },
    "2633": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "i",
      "offset": [
        23142,
        23186
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2634": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2635": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2636": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2637": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23142,
        23186
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "2642": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2643": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "op": "DUP1"
    },
    "2653": {
      "op": "DUP7"
    },
    "2654": {
      "op": "AND"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "MSTORE"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2659": {
      "op": "DUP3"
    },
    "2660": {
      "op": "ADD"
    },
    "2661": {
      "op": "DUP6"
    },
    "2662": {
      "op": "SWAP1"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "DUP4"
    },
    "2665": {
      "op": "AND"
    },
    "2666": {
      "op": "SWAP2"
    },
    "2667": {
      "op": "DUP2"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "SWAP2"
    },
    "2670": {
      "op": "SWAP1"
    },
    "2671": {
      "op": "SWAP2"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDE49BBE8E448CDFA40E6FA0D22592BE9A03B28BA746527635DBE5235416659CF"
    },
    "2706": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2711": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2713": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2714": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2715": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2716": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "SUB",
      "path": "0"
    },
    "2717": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2718": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        23201,
        23239
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2719": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22793,
        23246
      ],
      "op": "POP",
      "path": "0"
    },
    "2720": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22793,
        23246
      ],
      "op": "POP",
      "path": "0"
    },
    "2721": {
      "fn": "Administrable._processTokenReceipt",
      "offset": [
        22793,
        23246
      ],
      "op": "POP",
      "path": "0"
    },
    "2722": {
      "fn": "Administrable._processTokenReceipt",
      "jump": "o",
      "offset": [
        22793,
        23246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2723": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2724": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11672,
        11682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2725": {
      "offset": [
        3864,
        3901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAE"
    },
    "2728": {
      "offset": [
        3878,
        3888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2729": {
      "offset": [
        3890,
        3900
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2730": {
      "offset": [
        3864,
        3877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "2733": {
      "jump": "i",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2734": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2735": {
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB7"
    },
    "2738": {
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2739": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2741": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3856,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2742": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3856,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2743": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2744": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11729,
        11737
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2745": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2747": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2748": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "GT",
      "path": "0"
    },
    "2749": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2750": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC9"
    },
    "2753": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2754": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC9"
    },
    "2757": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "2760": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2761": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2762": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2764": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11714,
        11724
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2765": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2767": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2768": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2771": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2772": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2773": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "2776": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11702,
        11725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2777": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2778": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2779": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2780": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2781": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2783": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2784": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2785": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2786": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2787": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SUB",
      "path": "0"
    },
    "2788": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2790": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "ADD",
      "path": "0"
    },
    "2791": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2792": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2793": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2794": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2796": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11725
      ],
      "op": "AND",
      "path": "0"
    },
    "2797": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2799": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2800": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "GT",
      "path": "0"
    },
    "2801": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2802": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "2805": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2806": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "2809": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "2812": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "branch": 176,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11702,
        11737
      ],
      "op": "SUB",
      "path": "0"
    },
    "2815": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB34"
    },
    "2818": {
      "branch": 176,
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2819": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2821": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2828": {
      "op": "SHL"
    },
    "2829": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2830": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2833": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2835": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2836": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "ADD",
      "path": "0"
    },
    "2837": {
      "op": "MSTORE"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2842": {
      "op": "DUP3"
    },
    "2843": {
      "op": "ADD"
    },
    "2844": {
      "op": "MSTORE"
    },
    "2845": {
      "op": "PUSH2",
      "value": "0x4153"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2860": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2862": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2863": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2864": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2865": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "SUB",
      "path": "0"
    },
    "2866": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2867": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2868": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11694,
        11744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2869": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11754,
        11789
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xB3E"
    },
    "2872": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11769,
        11779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2873": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11780,
        11788
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2874": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11754,
        11768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0D"
    },
    "2877": {
      "fn": "Administrable.setBasePermit",
      "jump": "i",
      "offset": [
        11754,
        11789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2878": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11754,
        11789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2879": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "POP",
      "path": "0"
    },
    "2880": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "POP",
      "path": "0"
    },
    "2881": {
      "fn": "Administrable.setBasePermit",
      "offset": [
        11576,
        11796
      ],
      "op": "POP",
      "path": "0"
    },
    "2882": {
      "fn": "Administrable.setBasePermit",
      "jump": "o",
      "offset": [
        11576,
        11796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2883": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2884": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2886": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2887": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2888": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2890": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "2891": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2893": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2894": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2895": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2897": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2898": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2899": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2901": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "2902": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2907": {
      "op": "SHL"
    },
    "2908": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2909": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2910": {
      "fn": "Administrable.liquidize",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "2911": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB68"
    },
    "2914": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2915": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2916": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "2919": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2920": {
      "fn": "Administrable.liquidize",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2921": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB71"
    },
    "2924": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2925": {
      "fn": "Administrable.liquidize",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2927": {
      "fn": "Administrable.liquidize",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2928": {
      "fn": "Administrable.liquidize",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2929": {
      "fn": "Administrable.liquidize",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2930": {
      "fn": "Administrable.liquidize",
      "offset": [
        11939,
        11951
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xB79"
    },
    "2933": {
      "fn": "Administrable.liquidize",
      "offset": [
        11939,
        11949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FBC"
    },
    "2936": {
      "fn": "Administrable.liquidize",
      "jump": "i",
      "offset": [
        11939,
        11951
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2937": {
      "fn": "Administrable.liquidize",
      "offset": [
        11939,
        11951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2938": {
      "fn": "Administrable.liquidize",
      "offset": [
        11878,
        11958
      ],
      "op": "POP",
      "path": "0"
    },
    "2939": {
      "fn": "Administrable.liquidize",
      "jump": "o",
      "offset": [
        11878,
        11958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2940": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10371,
        10533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2941": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2943": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2944": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2945": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2946": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2948": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2950": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2951": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2953": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2954": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2955": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2957": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "2958": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2959": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10424,
        10429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2960": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10424,
        10429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "op": "SUB"
    },
    "2969": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "2970": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2971": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "2972": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB7"
    },
    "2975": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2976": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2978": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2987": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2988": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2990": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "2991": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "2994": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F33"
    },
    "2998": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2999": {
      "fn": "Shardable.cancelSale",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3000": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10446,
        10451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3001": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD1"
    },
    "3004": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3005": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3007": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3008": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3009": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3010": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3011": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3012": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3014": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3016": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3017": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3019": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3020": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3021": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3022": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "3023": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3024": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3025": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3026": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBED"
    },
    "3029": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3030": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3032": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3041": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3042": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3044": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "3045": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "3048": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3049": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "3052": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3053": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3054": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x0"
    },
    "3056": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3057": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3058": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3059": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3061": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3063": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3064": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3066": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3067": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3068": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3069": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3071": {
      "branch": 222,
      "fn": "Shardable.cancelSale",
      "offset": [
        10471,
        10491
      ],
      "op": "AND",
      "path": "2"
    },
    "3072": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC30"
    },
    "3075": {
      "branch": 222,
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3076": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3078": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3087": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3090": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3092": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3093": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "ADD",
      "path": "2"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3107": {
      "op": "SHL"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3110": {
      "op": "DUP3"
    },
    "3111": {
      "op": "ADD"
    },
    "3112": {
      "op": "MSTORE"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "3119": {
      "op": "JUMP"
    },
    "3120": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10463,
        10498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3121": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10508,
        10526
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xB3E"
    },
    "3124": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10520,
        10525
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3125": {
      "fn": "Shardable.cancelSale",
      "offset": [
        10508,
        10519
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x200E"
    },
    "3128": {
      "fn": "Shardable.cancelSale",
      "jump": "i",
      "offset": [
        10508,
        10526
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3129": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3130": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3481,
        3495
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0xC41"
    },
    "3133": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3481,
        3493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1713"
    },
    "3136": {
      "fn": "Idea.claimTerminatedLiquid",
      "jump": "i",
      "offset": [
        3481,
        3495
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3137": {
      "branch": 201,
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3481,
        3495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3138": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC72"
    },
    "3141": {
      "branch": 201,
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3142": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3144": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3153": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3156": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3158": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3159": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "ADD",
      "path": "1"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3176": {
      "op": "DUP3"
    },
    "3177": {
      "op": "ADD"
    },
    "3178": {
      "op": "MSTORE"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3181": {
      "op": "ADD"
    },
    "3182": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "3185": {
      "op": "JUMP"
    },
    "3186": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3473,
        3501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3193": {
      "op": "SHL"
    },
    "3194": {
      "op": "SUB"
    },
    "3195": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 20
    },
    "3196": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "AND",
      "path": "1"
    },
    "3197": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3199": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3200": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3201": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3202": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3204": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3206": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3207": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3209": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3210": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3211": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3603,
        3631
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3212": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBB"
    },
    "3215": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3216": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3218": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3225": {
      "op": "SHL"
    },
    "3226": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3227": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3230": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3232": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3233": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "ADD",
      "path": "1"
    },
    "3234": {
      "op": "MSTORE"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3239": {
      "op": "DUP3"
    },
    "3240": {
      "op": "ADD"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3249": {
      "op": "DUP3"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "MSTORE"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "3258": {
      "op": "JUMP"
    },
    "3259": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3595,
        3641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "op": "SUB"
    },
    "3268": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 21
    },
    "3269": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "AND",
      "path": "1"
    },
    "3270": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3272": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3273": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3274": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3275": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3693
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3277": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3279": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3280": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3282": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3283": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3284": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3679,
        3707
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3285": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3651,
        3751
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF4"
    },
    "3288": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3651,
        3751
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3289": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3666,
        3678
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3290": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3666,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3291": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3708,
        3750
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "3312": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3651,
        3665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x205D"
    },
    "3315": {
      "fn": "Idea.claimTerminatedLiquid",
      "jump": "i",
      "offset": [
        3651,
        3751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3316": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3651,
        3751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3323": {
      "op": "SHL"
    },
    "3324": {
      "op": "SUB"
    },
    "3325": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "AND",
      "path": "1",
      "statement": 22
    },
    "3326": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3792,
        3793
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3328": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3329": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3330": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3331": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3333": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3335": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3336": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3338": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3339": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3789
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3340": {
      "fn": "Idea.claimTerminatedLiquid",
      "offset": [
        3761,
        3793
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3341": {
      "fn": "Idea.claimTerminatedLiquid",
      "jump": "o",
      "offset": [
        3401,
        3800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3342": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3343": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13498,
        13502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3345": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13547
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0xE"
    },
    "3347": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13548,
        13556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3348": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3350": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3351": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD20"
    },
    "3354": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3355": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3356": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "3359": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13521,
        13557
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3360": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3361": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3362": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3363": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3364": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3366": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "ADD",
      "path": "0"
    },
    "3367": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3369": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3370": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3371": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3372": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SUB",
      "path": "0"
    },
    "3373": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3374": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3375": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13557
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3376": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13561,
        13562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3378": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13562
      ],
      "op": "EQ",
      "path": "0"
    },
    "3379": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3380": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3381": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD66"
    },
    "3384": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3385": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "POP",
      "path": "0"
    },
    "3386": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3388": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13580,
        13588
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3389": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3391": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3392": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD49"
    },
    "3395": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3396": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3397": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "3400": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "i",
      "offset": [
        13566,
        13589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3401": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3402": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3403": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3404": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3405": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3407": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3408": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3409": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3411": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3412": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3413": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3414": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SUB",
      "path": "0"
    },
    "3415": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3416": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "ADD",
      "path": "0"
    },
    "3417": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3418": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13589
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3419": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3421": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3422": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3423": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3424": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3425": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3426": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3427": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3428": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13601
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3429": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13566,
        13606
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3430": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13521,
        13606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3431": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13514,
        13606
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3432": {
      "fn": "Administrable.bankIsEmpty",
      "offset": [
        13433,
        13613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "fn": "Administrable.bankIsEmpty",
      "jump": "o",
      "offset": [
        13433,
        13613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3436": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3437": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3439": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3440": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3441": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3443": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "3444": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3446": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3447": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3448": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3450": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3451": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3452": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3454": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3462": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3463": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "3464": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD91"
    },
    "3467": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3468": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3469": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "3472": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3473": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3474": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9A"
    },
    "3477": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3478": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3480": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3481": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3482": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3483": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8233,
        8260
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0xDA3"
    },
    "3486": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8251,
        8259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3487": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8233,
        8250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2302"
    },
    "3490": {
      "fn": "Administrable.dissolveDividend",
      "jump": "i",
      "offset": [
        8233,
        8260
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3491": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8233,
        8260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3492": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "POP",
      "path": "0"
    },
    "3493": {
      "fn": "Administrable.dissolveDividend",
      "offset": [
        8149,
        8267
      ],
      "op": "POP",
      "path": "0"
    },
    "3494": {
      "fn": "Administrable.dissolveDividend",
      "jump": "o",
      "offset": [
        8149,
        8267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3495": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3496": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15006,
        15010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3498": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15061,
        15086
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x2"
    },
    "3500": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3502": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15037,
        15047
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3503": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3505": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3506": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBB"
    },
    "3509": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3510": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3511": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "3514": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15029,
        15048
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3515": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3516": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3517": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3518": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3519": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3521": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3522": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3523": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3525": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3526": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3527": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3528": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SUB",
      "path": "0"
    },
    "3529": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3530": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "ADD",
      "path": "0"
    },
    "3531": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3532": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15048
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3539": {
      "op": "SHL"
    },
    "3540": {
      "op": "SUB"
    },
    "3541": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3542": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "AND",
      "path": "0"
    },
    "3543": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3545": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3546": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3547": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3548": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3549": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3550": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3551": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3552": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3553": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3555": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15057
      ],
      "op": "AND",
      "path": "0"
    },
    "3556": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3558": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3559": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "GT",
      "path": "0"
    },
    "3560": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3561": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF4"
    },
    "3564": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3565": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF4"
    },
    "3568": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "3571": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15029,
        15086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3572": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3573": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15086
      ],
      "op": "EQ",
      "path": "0"
    },
    "3574": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3575": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE33"
    },
    "3578": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15117,
        15142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3582": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3584": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15102,
        15112
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3585": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3587": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3588": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0D"
    },
    "3591": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3592": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3593": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "3596": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15090,
        15113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3597": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3598": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3599": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3600": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3601": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3603": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3604": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3605": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3606": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3607": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SUB",
      "path": "0"
    },
    "3608": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3610": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "ADD",
      "path": "0"
    },
    "3611": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3612": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3613": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3614": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3616": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15113
      ],
      "op": "AND",
      "path": "0"
    },
    "3617": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3619": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3620": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "GT",
      "path": "0"
    },
    "3621": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3622": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE31"
    },
    "3625": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3626": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE31"
    },
    "3629": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "3632": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "i",
      "offset": [
        15090,
        15142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3633": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3634": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15090,
        15142
      ],
      "op": "EQ",
      "path": "0"
    },
    "3635": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15029,
        15142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3636": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        15022,
        15142
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3637": {
      "fn": "Administrable.isPermitAdmin",
      "offset": [
        14920,
        15149
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "Administrable.isPermitAdmin",
      "jump": "o",
      "offset": [
        14920,
        15149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3642": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3643": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12222,
        12229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3645": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12261
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0xF"
    },
    "3647": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12262,
        12270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3648": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3650": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3651": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4C"
    },
    "3654": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3655": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3656": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "3659": {
      "fn": "Administrable.getBankBalance",
      "jump": "i",
      "offset": [
        12248,
        12271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3660": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3661": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3662": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3663": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3664": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3666": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3667": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3668": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3669": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3670": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3671": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SUB",
      "path": "0"
    },
    "3672": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3674": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3675": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3676": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "ADD",
      "path": "0"
    },
    "3677": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3678": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3679": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12271
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3686": {
      "op": "SHL"
    },
    "3687": {
      "op": "SUB"
    },
    "3688": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3689": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "AND",
      "path": "0"
    },
    "3690": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3692": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3693": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3694": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3695": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3696": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3697": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3698": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3699": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3700": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12248,
        12285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3703": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3704": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "POP",
      "path": "0"
    },
    "3705": {
      "fn": "Administrable.getBankBalance",
      "offset": [
        12132,
        12292
      ],
      "op": "POP",
      "path": "0"
    },
    "3706": {
      "fn": "Administrable.getBankBalance",
      "jump": "o",
      "offset": [
        12132,
        12292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3707": {
      "fn": "Administrable.createBank",
      "offset": [
        8439,
        8592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3708": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3710": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3711": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3712": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3714": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "3715": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3717": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3718": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3719": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3721": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3722": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3723": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3725": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "3726": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3733": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3734": {
      "fn": "Administrable.createBank",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "3735": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA0"
    },
    "3738": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3739": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3740": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "3743": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3744": {
      "fn": "Administrable.createBank",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3745": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA9"
    },
    "3748": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3749": {
      "fn": "Administrable.createBank",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3751": {
      "fn": "Administrable.createBank",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3752": {
      "fn": "Administrable.createBank",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3753": {
      "fn": "Administrable.createBank",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3754": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3756": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3757": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3758": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3760": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "3761": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3762": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3763": {
      "fn": "Administrable.createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "3764": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECF"
    },
    "3767": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3768": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3770": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3777": {
      "op": "SHL"
    },
    "3778": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3779": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3780": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3782": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "3783": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "3786": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3787": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "3790": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3791": {
      "fn": "Administrable.createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3792": {
      "fn": "Administrable.createBank",
      "offset": [
        8554,
        8585
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xB3E"
    },
    "3795": {
      "fn": "Administrable.createBank",
      "offset": [
        8566,
        8574
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3796": {
      "fn": "Administrable.createBank",
      "offset": [
        8575,
        8584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3797": {
      "fn": "Administrable.createBank",
      "offset": [
        8554,
        8565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23ED"
    },
    "3800": {
      "fn": "Administrable.createBank",
      "jump": "i",
      "offset": [
        8554,
        8585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3801": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3802": {
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3804": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3805": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3806": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3808": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "3809": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3811": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3812": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3813": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3815": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3816": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3817": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3819": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "offset": [
        3795,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3827": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3828": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3795,
        3921
      ],
      "op": "POP",
      "path": "0"
    },
    "3829": {
      "offset": [
        3864,
        3901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "3832": {
      "offset": [
        3878,
        3888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3833": {
      "offset": [
        3890,
        3900
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3834": {
      "offset": [
        3864,
        3877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "3837": {
      "jump": "i",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3838": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3839": {
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF07"
    },
    "3842": {
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3843": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3845": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3856,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3846": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3856,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3847": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3848": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9369,
        9377
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3849": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "3852": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3853": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3854": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "3857": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3858": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3859": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1B"
    },
    "3862": {
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3863": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3865": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3866": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3867": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3868": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9389,
        9425
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0xF25"
    },
    "3871": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9406,
        9414
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3872": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9415,
        9424
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3873": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9389,
        9405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24FF"
    },
    "3876": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "i",
      "offset": [
        9389,
        9425
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3877": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9389,
        9425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3878": {
      "offset": [
        3912,
        3913
      ],
      "op": "POP",
      "path": "0"
    },
    "3879": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "POP",
      "path": "0"
    },
    "3880": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "POP",
      "path": "0"
    },
    "3881": {
      "fn": "Administrable.removeBankAdmin",
      "offset": [
        9256,
        9432
      ],
      "op": "POP",
      "path": "0"
    },
    "3882": {
      "fn": "Administrable.removeBankAdmin",
      "jump": "o",
      "offset": [
        9256,
        9432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3883": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2634,
        3183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3884": {
      "offset": [
        5930,
        5955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF34"
    },
    "3887": {
      "offset": [
        5944,
        5954
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3888": {
      "offset": [
        5930,
        5943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD7"
    },
    "3891": {
      "jump": "i",
      "offset": [
        5930,
        5955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3892": {
      "branch": 223,
      "fn": "Idea.claimLiquid",
      "offset": [
        5930,
        5955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3893": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF65"
    },
    "3896": {
      "branch": 223,
      "offset": [
        5922,
        5962
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3897": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3899": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "offset": [
        5922,
        5962
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3908": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3911": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3913": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3914": {
      "fn": "Idea.claimLiquid",
      "offset": [
        5922,
        5962
      ],
      "op": "ADD",
      "path": "2"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3920": {
      "op": "DUP3"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "MSTORE"
    },
    "3923": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "3928": {
      "op": "SHL"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3931": {
      "op": "DUP3"
    },
    "3932": {
      "op": "ADD"
    },
    "3933": {
      "op": "MSTORE"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3936": {
      "op": "ADD"
    },
    "3937": {
      "offset": [
        5922,
        5962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "3940": {
      "op": "JUMP"
    },
    "3941": {
      "offset": [
        5922,
        5962
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3942": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2720,
        2726
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x1"
    },
    "3944": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2720,
        2726
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3945": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2720,
        2726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3947": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2720,
        2726
      ],
      "op": "AND",
      "path": "1"
    },
    "3948": {
      "branch": 202,
      "fn": "Idea.claimLiquid",
      "offset": [
        2720,
        2735
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3949": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF9D"
    },
    "3952": {
      "branch": 202,
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3953": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3955": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3964": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3967": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3969": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3970": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "ADD",
      "path": "1"
    },
    "3971": {
      "op": "MSTORE"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3976": {
      "op": "DUP3"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0x5341"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3984": {
      "op": "SHL"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3987": {
      "op": "DUP3"
    },
    "3988": {
      "op": "ADD"
    },
    "3989": {
      "op": "MSTORE"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "3996": {
      "op": "JUMP"
    },
    "3997": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2712,
        2742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3998": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2781,
        2791
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3999": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2752,
        2765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4001": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4002": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4003": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4004": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4006": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4008": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4009": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4010": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4011": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4013": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4014": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4015": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4016": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2768,
        2792
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "op": "SUB"
    },
    "4025": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 30
    },
    "4026": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "AND",
      "path": "1"
    },
    "4027": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4028": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4029": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "4031": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4032": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4033": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4034": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4035": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2841
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4036": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4037": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4038": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4039": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4040": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4041": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4042": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4043": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4044": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4045": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4046": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4048": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2811,
        2848
      ],
      "op": "AND",
      "path": "1"
    },
    "4049": {
      "branch": 203,
      "fn": "Idea.claimLiquid",
      "offset": [
        2810,
        2848
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4050": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1002"
    },
    "4053": {
      "branch": 203,
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4054": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4056": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4065": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4068": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4070": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4071": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "ADD",
      "path": "1"
    },
    "4072": {
      "op": "MSTORE"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4077": {
      "op": "DUP3"
    },
    "4078": {
      "op": "ADD"
    },
    "4079": {
      "op": "MSTORE"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "4097": {
      "op": "JUMP"
    },
    "4098": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2802,
        2855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4105": {
      "op": "SHL"
    },
    "4106": {
      "op": "SUB"
    },
    "4107": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 31
    },
    "4108": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "AND",
      "path": "1"
    },
    "4109": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4111": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4112": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4113": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4114": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "4116": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4118": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4119": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4120": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4121": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4123": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4124": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4125": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4126": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4127": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4128": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4129": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4130": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4131": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4132": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4133": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2902
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4134": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4135": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4138": {
      "op": "NOT"
    },
    "4139": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "AND",
      "path": "1"
    },
    "4140": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2905,
        2909
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4142": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "OR",
      "path": "1"
    },
    "4143": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4144": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2909
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4145": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3016,
        3021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4146": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3016,
        3021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4147": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4148": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4149": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4151": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4152": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4153": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4154": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4155": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4156": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4157": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4158": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4159": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4160": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "4162": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4163": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4164": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4165": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4166": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2982
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4167": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2989
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4168": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4169": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4170": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4171": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2947
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4173": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4174": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4175": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4176": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4177": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4178": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2961
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4179": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4180": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4181": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4182": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2992,
        3022
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4183": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1060"
    },
    "4186": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2989
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4187": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2964,
        2989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4188": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F87"
    },
    "4191": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2941,
        2989
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4192": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        2989
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4193": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        3022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106A"
    },
    "4196": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        3022
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4197": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        3022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4198": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        3022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9E"
    },
    "4201": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        2941,
        3022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4202": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2941,
        3022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4203": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2919,
        3022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4204": {
      "fn": "Idea.claimLiquid",
      "offset": [
        2919,
        3022
      ],
      "op": "POP",
      "path": "1"
    },
    "4205": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3040,
        3051
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 32
    },
    "4206": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3055,
        3056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4208": {
      "branch": 204,
      "fn": "Idea.claimLiquid",
      "offset": [
        3040,
        3056
      ],
      "op": "SUB",
      "path": "1"
    },
    "4209": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A0"
    },
    "4212": {
      "branch": 204,
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4213": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4215": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4224": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4227": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4229": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4230": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "ADD",
      "path": "1"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4243": {
      "op": "SHL"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "ADD"
    },
    "4248": {
      "op": "MSTORE"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "4255": {
      "op": "JUMP"
    },
    "4256": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3032,
        3062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4263": {
      "op": "SHL"
    },
    "4264": {
      "op": "SUB"
    },
    "4265": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 33
    },
    "4266": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "AND",
      "path": "1"
    },
    "4267": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4269": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4270": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4271": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4272": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "4274": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4276": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4277": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4279": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4280": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4281": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4282": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4283": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3104,
        3115
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4284": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3104,
        3115
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4285": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4286": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C8"
    },
    "4289": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4290": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3104,
        3115
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4291": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3104,
        3115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4292": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC0"
    },
    "4295": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3072,
        3115
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4296": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4297": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4298": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4299": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3072,
        3115
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4300": {
      "op": "POP"
    },
    "4301": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3125,
        3176
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0xB3E"
    },
    "4304": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3125,
        3176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3140,
        3152
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4307": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3153,
        3164
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4308": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3165,
        3175
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4309": {
      "fn": "Idea.claimLiquid",
      "offset": [
        3125,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x205D"
    },
    "4312": {
      "fn": "Idea.claimLiquid",
      "jump": "i",
      "offset": [
        3125,
        3176
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4313": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4314": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4316": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4317": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4318": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4319": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4321": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4323": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4324": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4326": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4327": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4328": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4330": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "4331": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4332": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5680,
        5685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4333": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5680,
        5685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4340": {
      "op": "SHL"
    },
    "4341": {
      "op": "SUB"
    },
    "4342": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "4343": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4344": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "4345": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1114"
    },
    "4348": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4349": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4351": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4360": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4361": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4363": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "4364": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "4367": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4368": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F33"
    },
    "4371": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4372": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4373": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13811,
        13815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4375": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4376": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4377": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4378": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "4380": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4382": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4383": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4385": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4386": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4387": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4388": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5708,
        5716
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4389": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5708,
        5716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4390": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4392": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "AND",
      "path": "0"
    },
    "4393": {
      "offset": [
        4633,
        4666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1131"
    },
    "4396": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4397": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4399": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4400": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4401": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4402": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4404": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4405": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4406": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4408": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "4409": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4410": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4411": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "4412": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1157"
    },
    "4415": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4416": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4418": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4427": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4428": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4430": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "4431": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "4434": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4435": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "4438": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4439": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4440": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5749,
        5777
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0x1161"
    },
    "4443": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5762,
        5767
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4444": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5768,
        5776
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4445": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5749,
        5761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E87"
    },
    "4448": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5749,
        5777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4449": {
      "branch": 177,
      "fn": "Administrable.claimDividend",
      "offset": [
        5749,
        5777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4450": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1193"
    },
    "4453": {
      "branch": 177,
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4454": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4456": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4465": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4468": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4470": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4471": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "ADD",
      "path": "0"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH3",
      "value": "0x2720A3"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4486": {
      "op": "SHL"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4489": {
      "op": "DUP3"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "op": "MSTORE"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "4498": {
      "op": "JUMP"
    },
    "4499": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5741,
        5785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4500": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x0"
    },
    "4502": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4503": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4504": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4505": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "4507": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4509": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4510": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4511": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4512": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4514": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4515": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4516": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5831
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4517": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4518": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4519": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4520": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4521": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4522": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4523": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4524": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4525": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4526": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4528": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5838
      ],
      "op": "AND",
      "path": "0"
    },
    "4529": {
      "branch": 178,
      "fn": "Administrable.claimDividend",
      "offset": [
        5803,
        5847
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4530": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E2"
    },
    "4533": {
      "branch": 178,
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4534": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4536": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4543": {
      "op": "SHL"
    },
    "4544": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4545": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4548": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4550": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4551": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "ADD",
      "path": "0"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "MSTORE"
    },
    "4560": {
      "op": "PUSH2",
      "value": "0x4143"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4565": {
      "op": "SHL"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "MSTORE"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "4577": {
      "op": "JUMP"
    },
    "4578": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5795,
        5854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4579": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x0"
    },
    "4581": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4582": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4583": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4584": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "4586": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4588": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4589": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4590": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4591": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4593": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4594": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4595": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5892
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4596": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4597": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4598": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4599": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4600": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4601": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4602": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4603": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5899
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4604": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4605": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4608": {
      "op": "NOT"
    },
    "4609": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "AND",
      "path": "0"
    },
    "4610": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5902,
        5906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4612": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4613": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4614": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "OR",
      "path": "0"
    },
    "4615": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4616": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4617": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5864,
        5906
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4618": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6025,
        6030
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4619": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6025,
        6030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4620": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4621": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4622": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4624": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4625": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4626": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4627": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4628": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4629": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4630": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4631": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4632": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4633": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4635": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4636": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4637": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4638": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4639": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5991
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4640": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5973,
        5998
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4641": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4642": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4643": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4644": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4646": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4647": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4648": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4649": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4650": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4651": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4652": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5970
      ],
      "op": "ADD",
      "path": "0"
    },
    "4653": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5970
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4654": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4655": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6001,
        6031
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4656": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5998
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1238"
    },
    "4659": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5998
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4660": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5998
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F87"
    },
    "4663": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5940,
        5998
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4664": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        5998
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4665": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        6031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1242"
    },
    "4668": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        6031
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4669": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4670": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        6031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9E"
    },
    "4673": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        5940,
        6031
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4674": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5940,
        6031
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4675": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5916,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4676": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5916,
        6031
      ],
      "op": "POP",
      "path": "0"
    },
    "4677": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6049,
        6062
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 38
    },
    "4678": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6066,
        6067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4680": {
      "branch": 179,
      "fn": "Administrable.claimDividend",
      "offset": [
        6049,
        6067
      ],
      "op": "SUB",
      "path": "0"
    },
    "4681": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127A"
    },
    "4684": {
      "branch": 179,
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4685": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4687": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4696": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4701": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4702": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "ADD",
      "path": "0"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "ADD"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH3",
      "value": "0x445453"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4717": {
      "op": "SHL"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4720": {
      "op": "DUP3"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "MSTORE"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "4729": {
      "op": "JUMP"
    },
    "4730": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6041,
        6075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4731": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x0"
    },
    "4733": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4734": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4735": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4736": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "4738": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4740": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4741": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4743": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4744": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4745": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4746": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4747": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6117,
        6130
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4748": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6117,
        6130
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4749": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4750": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1298"
    },
    "4753": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4754": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6117,
        6130
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4755": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6117,
        6130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4756": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "4759": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6085,
        6130
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4760": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4761": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4762": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4763": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6085,
        6130
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "4768": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4769": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4770": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4771": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4773": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4775": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4776": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4778": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4779": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6179
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4780": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6192
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4781": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C0"
    },
    "4784": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4791": {
      "op": "SHL"
    },
    "4792": {
      "op": "SUB"
    },
    "4793": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6155,
        6192
      ],
      "op": "AND",
      "path": "0"
    },
    "4794": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6193,
        6206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4795": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6207,
        6217
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4796": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205D"
    },
    "4799": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6140,
        6218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4800": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6140,
        6218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4801": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x40"
    },
    "4803": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4804": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4805": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4807": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4808": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "ADD",
      "path": "0"
    },
    "4809": {
      "op": "DUP7"
    },
    "4810": {
      "op": "SWAP1"
    },
    "4811": {
      "op": "MSTORE"
    },
    "4812": {
      "op": "SWAP1"
    },
    "4813": {
      "op": "DUP2"
    },
    "4814": {
      "op": "ADD"
    },
    "4815": {
      "op": "DUP3"
    },
    "4816": {
      "op": "SWAP1"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4820": {
      "op": "DUP1"
    },
    "4821": {
      "op": "MLOAD"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "4827": {
      "op": "DUP4"
    },
    "4828": {
      "op": "CODECOPY"
    },
    "4829": {
      "op": "DUP2"
    },
    "4830": {
      "op": "MLOAD"
    },
    "4831": {
      "op": "SWAP2"
    },
    "4832": {
      "op": "MSTORE"
    },
    "4833": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4836": {
      "op": "ADD"
    },
    "4837": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4839": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4840": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4843": {
      "op": "NOT"
    },
    "4844": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4845": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4846": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "SUB",
      "path": "0"
    },
    "4847": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "ADD",
      "path": "0"
    },
    "4848": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4849": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4850": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4851": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4852": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4853": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6250,
        6284
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4854": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1300"
    },
    "4857": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4858": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6285,
        6295
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4859": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6285,
        6295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4860": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FFF"
    },
    "4863": {
      "fn": "Administrable.claimDividend",
      "jump": "i",
      "offset": [
        6233,
        6296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4864": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4865": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4867": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4868": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4869": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4870": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "SUB",
      "path": "0"
    },
    "4871": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4872": {
      "fn": "Administrable.claimDividend",
      "offset": [
        6233,
        6296
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4873": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5731,
        6303
      ],
      "op": "POP",
      "path": "0"
    },
    "4874": {
      "offset": [
        6606,
        6607
      ],
      "op": "POP",
      "path": "2"
    },
    "4875": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "POP",
      "path": "0"
    },
    "4876": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "POP",
      "path": "0"
    },
    "4877": {
      "fn": "Administrable.claimDividend",
      "offset": [
        5604,
        6303
      ],
      "op": "POP",
      "path": "0"
    },
    "4878": {
      "fn": "Administrable.claimDividend",
      "jump": "o",
      "offset": [
        5604,
        6303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4879": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9536,
        9673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4880": {
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4882": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4883": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4884": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4886": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "4887": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4889": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4890": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4891": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4893": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4894": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4895": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4897": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "offset": [
        3795,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4905": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4906": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3795,
        3921
      ],
      "op": "POP",
      "path": "0"
    },
    "4907": {
      "offset": [
        3864,
        3901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1334"
    },
    "4910": {
      "offset": [
        3878,
        3888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4911": {
      "offset": [
        3890,
        3900
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4912": {
      "offset": [
        3864,
        3877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "4915": {
      "jump": "i",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4916": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4917": {
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133D"
    },
    "4920": {
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4921": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4923": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3856,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4924": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3856,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4925": {
      "fn": "Administrable.deleteBank",
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4926": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9625,
        9633
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4927": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1348"
    },
    "4930": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4931": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4932": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "4935": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4936": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4937": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1351"
    },
    "4940": {
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4941": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4943": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4944": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4945": {
      "fn": "Administrable.deleteBank",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4946": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9645,
        9666
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0xB3E"
    },
    "4949": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9657,
        9665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4950": {
      "fn": "Administrable.deleteBank",
      "offset": [
        9645,
        9656
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25BB"
    },
    "4953": {
      "fn": "Administrable.deleteBank",
      "jump": "i",
      "offset": [
        9645,
        9666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4954": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4955": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4957": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4958": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4959": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4961": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4962": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4964": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4965": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4966": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4968": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4969": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4970": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4972": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x6953"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4978": {
      "op": "SHL"
    },
    "4979": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4980": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4981": {
      "fn": "Administrable.issueShards",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "4982": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137F"
    },
    "4985": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4986": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4987": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "4990": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4991": {
      "fn": "Administrable.issueShards",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4992": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1388"
    },
    "4995": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4996": {
      "fn": "Administrable.issueShards",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4998": {
      "fn": "Administrable.issueShards",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4999": {
      "fn": "Administrable.issueShards",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5000": {
      "fn": "Administrable.issueShards",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5001": {
      "fn": "Administrable.issueShards",
      "offset": [
        7404,
        7446
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 43,
      "value": "0x1394"
    },
    "5004": {
      "fn": "Administrable.issueShards",
      "offset": [
        7417,
        7423
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5005": {
      "fn": "Administrable.issueShards",
      "offset": [
        7424,
        7436
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5006": {
      "fn": "Administrable.issueShards",
      "offset": [
        7437,
        7442
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5007": {
      "fn": "Administrable.issueShards",
      "offset": [
        7443,
        7445
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5008": {
      "fn": "Administrable.issueShards",
      "offset": [
        7404,
        7416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2740"
    },
    "5011": {
      "fn": "Administrable.issueShards",
      "jump": "i",
      "offset": [
        7404,
        7446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5012": {
      "fn": "Administrable.issueShards",
      "offset": [
        7404,
        7446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5013": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "5014": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "5015": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "5016": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "5017": {
      "fn": "Administrable.issueShards",
      "offset": [
        7278,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "5018": {
      "fn": "Administrable.issueShards",
      "jump": "o",
      "offset": [
        7278,
        7453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5019": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7804,
        8004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5020": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5022": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5023": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5024": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5026": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5027": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5029": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5030": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5031": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5033": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5034": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5035": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5037": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "5043": {
      "op": "SHL"
    },
    "5044": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5045": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5046": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "5047": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C0"
    },
    "5050": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5051": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5052": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "5055": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5056": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5057": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C9"
    },
    "5060": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5061": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5063": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5064": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5065": {
      "fn": "Administrable.issueDividend",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5066": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7932,
        7940
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5067": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D4"
    },
    "5070": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5071": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5072": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "5075": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5076": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5077": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DD"
    },
    "5080": {
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5081": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5083": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5084": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5085": {
      "fn": "Administrable.issueDividend",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5086": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7952,
        7995
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1394"
    },
    "5089": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7967,
        7975
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5090": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7976,
        7988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5091": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7989,
        7994
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5092": {
      "fn": "Administrable.issueDividend",
      "offset": [
        7952,
        7966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27BF"
    },
    "5095": {
      "fn": "Administrable.issueDividend",
      "jump": "i",
      "offset": [
        7952,
        7995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5096": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6843,
        6995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5097": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5099": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5100": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5101": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5103": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5104": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5106": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5107": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5108": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5110": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5111": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5112": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5114": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5115": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5121": {
      "op": "SHL"
    },
    "5122": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5123": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5124": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "5125": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140E"
    },
    "5128": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5129": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5130": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "5133": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5134": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5135": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "5138": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5139": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5141": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5142": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5143": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5144": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5146": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5147": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5148": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5150": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "5151": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5152": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5153": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "5154": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143D"
    },
    "5157": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5158": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5160": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5167": {
      "op": "SHL"
    },
    "5168": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5169": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5170": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5172": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5173": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "5176": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5177": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "5180": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5181": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5182": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6951,
        6988
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0xDA3"
    },
    "5185": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6975,
        6987
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5186": {
      "fn": "Administrable.unregisterTokenAddress",
      "offset": [
        6951,
        6974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C9"
    },
    "5189": {
      "fn": "Administrable.unregisterTokenAddress",
      "jump": "i",
      "offset": [
        6951,
        6988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5190": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5197": {
      "op": "SHL"
    },
    "5198": {
      "op": "SUB"
    },
    "5199": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 46
    },
    "5200": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "AND",
      "path": "1"
    },
    "5201": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4350,
        4354
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5203": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5204": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5205": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5206": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4390
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5208": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5210": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5211": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5213": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5214": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5215": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5216": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5218": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "AND",
      "path": "1"
    },
    "5219": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5220": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5221": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5223": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4412
      ],
      "op": "EQ",
      "path": "1"
    },
    "5224": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5225": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD66"
    },
    "5228": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4371,
        4442
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5237": {
      "op": "SHL"
    },
    "5238": {
      "op": "SUB"
    },
    "5239": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4416,
        4442
      ],
      "op": "AND",
      "path": "1"
    },
    "5240": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4416,
        4442
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5241": {
      "fn": "Idea.acceptsToken",
      "offset": [
        4416,
        4442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5242": {
      "fn": "Idea.acceptsToken",
      "jump": "o",
      "offset": [
        4286,
        4449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5243": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6497,
        6645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5244": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5246": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5247": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5248": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5250": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5251": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5253": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5254": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5255": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5257": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5258": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5259": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5261": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5262": {
      "op": "PUSH3",
      "value": "0x1B5055"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5270": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5271": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "5272": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A1"
    },
    "5275": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5276": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5277": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "5280": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5281": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5282": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AA"
    },
    "5285": {
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5286": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5288": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5289": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5290": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5291": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5293": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5294": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5295": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5297": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "5298": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5299": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5300": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "5301": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D0"
    },
    "5304": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5305": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5307": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5314": {
      "op": "SHL"
    },
    "5315": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5316": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5317": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5319": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5320": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "5323": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5324": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "5327": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5328": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5329": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6603,
        6638
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0xDA3"
    },
    "5332": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6625,
        6637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5333": {
      "fn": "Administrable.registerTokenAddress",
      "offset": [
        6603,
        6624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A12"
    },
    "5336": {
      "fn": "Administrable.registerTokenAddress",
      "jump": "i",
      "offset": [
        6603,
        6638
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5337": {
      "fn": "Idea.receiveToken",
      "offset": [
        2287,
        2405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5338": {
      "fn": "Idea.receiveToken",
      "offset": [
        2365,
        2398
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 48,
      "value": "0xDA3"
    },
    "5341": {
      "fn": "Idea.receiveToken",
      "offset": [
        2379,
        2391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5342": {
      "fn": "Idea.receiveToken",
      "offset": [
        2392,
        2397
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5343": {
      "fn": "Idea.receiveToken",
      "offset": [
        2365,
        2378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A5B"
    },
    "5346": {
      "fn": "Idea.receiveToken",
      "jump": "i",
      "offset": [
        2365,
        2398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5347": {
      "fn": "Administrable.moveToken",
      "offset": [
        10619,
        10837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5348": {
      "fn": "Administrable.moveToken",
      "offset": [
        10752,
        10764
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5349": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EE"
    },
    "5352": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5353": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5354": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "5357": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5358": {
      "fn": "Administrable.moveToken",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5359": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F7"
    },
    "5362": {
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5363": {
      "fn": "Administrable.moveToken",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5365": {
      "fn": "Administrable.moveToken",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5366": {
      "fn": "Administrable.moveToken",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5367": {
      "fn": "Administrable.moveToken",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5368": {
      "fn": "Administrable.moveToken",
      "offset": [
        10776,
        10830
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x1394"
    },
    "5371": {
      "fn": "Administrable.moveToken",
      "offset": [
        10787,
        10799
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5372": {
      "fn": "Administrable.moveToken",
      "offset": [
        10800,
        10810
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5373": {
      "fn": "Administrable.moveToken",
      "offset": [
        10811,
        10823
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5374": {
      "fn": "Administrable.moveToken",
      "offset": [
        10824,
        10829
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5375": {
      "fn": "Administrable.moveToken",
      "offset": [
        10776,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC3"
    },
    "5378": {
      "fn": "Administrable.moveToken",
      "jump": "i",
      "offset": [
        10776,
        10830
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5379": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14077,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5380": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14159,
        14163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5382": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14193
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x10"
    },
    "5384": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14194,
        14202
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5385": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5387": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5388": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1515"
    },
    "5391": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5392": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5393": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "5396": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14182,
        14203
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5397": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5398": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5399": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5400": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5401": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5403": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5404": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5405": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5406": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5407": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5408": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SUB",
      "path": "0"
    },
    "5409": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5411": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5412": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5413": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "ADD",
      "path": "0"
    },
    "5414": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5415": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5416": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14203
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5423": {
      "op": "SHL"
    },
    "5424": {
      "op": "SUB"
    },
    "5425": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5426": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "AND",
      "path": "0"
    },
    "5427": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5429": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5430": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5431": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5432": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5433": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5434": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5435": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5436": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5437": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5439": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "AND",
      "path": "0"
    },
    "5440": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5441": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5442": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5444": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14220
      ],
      "op": "EQ",
      "path": "0"
    },
    "5445": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5446": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE33"
    },
    "5449": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5450": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14182,
        14251
      ],
      "op": "POP",
      "path": "0"
    },
    "5451": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE33"
    },
    "5454": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5456": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5457": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5458": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5460": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "ADD",
      "path": "0"
    },
    "5461": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5463": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5464": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5465": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5467": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5468": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5469": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5471": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "ADD",
      "path": "0"
    },
    "5472": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5477": {
      "op": "SHL"
    },
    "5478": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5479": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5480": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14251
      ],
      "op": "POP",
      "path": "0"
    },
    "5481": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14243,
        14250
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5482": {
      "fn": "Administrable.isBankAdmin",
      "offset": [
        14224,
        14237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "5485": {
      "fn": "Administrable.isBankAdmin",
      "jump": "i",
      "offset": [
        14224,
        14251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5486": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8834,
        9003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5487": {
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5489": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5490": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5491": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5493": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5494": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5496": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5497": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5498": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5500": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5501": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5502": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5504": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "5505": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5510": {
      "op": "SHL"
    },
    "5511": {
      "offset": [
        3514,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5512": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5513": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3514,
        3634
      ],
      "op": "POP",
      "path": "0"
    },
    "5514": {
      "offset": [
        3582,
        3615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1593"
    },
    "5517": {
      "offset": [
        3592,
        3602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5518": {
      "offset": [
        3604,
        3614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5519": {
      "offset": [
        3582,
        3591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "5522": {
      "jump": "i",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5523": {
      "branch": 180,
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3582,
        3615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5524": {
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159C"
    },
    "5527": {
      "branch": 180,
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5528": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3574,
        3616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5530": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3574,
        3616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5531": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3574,
        3616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5532": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        3574,
        3616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5533": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8943,
        8951
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5534": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A7"
    },
    "5537": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5538": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5539": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "5542": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5543": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5544": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B0"
    },
    "5547": {
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5548": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5550": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5551": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5552": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5553": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8963,
        8996
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0xF25"
    },
    "5556": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8977,
        8985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5557": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8986,
        8995
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5558": {
      "fn": "Administrable.addBankAdmin",
      "offset": [
        8963,
        8976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E57"
    },
    "5561": {
      "fn": "Administrable.addBankAdmin",
      "jump": "i",
      "offset": [
        8963,
        8996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5562": {
      "fn": "Shardable.split",
      "offset": [
        10874,
        11043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5563": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5565": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5566": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5567": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5568": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5570": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5572": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5573": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5575": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5576": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5577": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5579": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5580": {
      "fn": "Shardable.split",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5581": {
      "fn": "Shardable.split",
      "offset": [
        10956,
        10967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5582": {
      "fn": "Shardable.split",
      "offset": [
        10956,
        10967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5589": {
      "op": "SHL"
    },
    "5590": {
      "op": "SUB"
    },
    "5591": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "5592": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5593": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "5594": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F5"
    },
    "5597": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5598": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5600": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5607": {
      "op": "SHL"
    },
    "5608": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5609": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5610": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5612": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "5613": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "5616": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5617": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F33"
    },
    "5620": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5621": {
      "fn": "Shardable.split",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5622": {
      "fn": "Shardable.split",
      "offset": [
        10984,
        10995
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5623": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160F"
    },
    "5626": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5627": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5629": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5630": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5631": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5632": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5633": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5634": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5636": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5638": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5639": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5641": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5642": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5643": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5644": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "5645": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5646": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5647": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5648": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "5651": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5652": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5654": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5661": {
      "op": "SHL"
    },
    "5662": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5663": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5664": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5666": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "5667": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "5670": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5671": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "5674": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5675": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5676": {
      "fn": "Shardable.split",
      "offset": [
        11007,
        11036
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 52,
      "value": "0x1394"
    },
    "5679": {
      "fn": "Shardable.split",
      "offset": [
        11014,
        11025
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5680": {
      "fn": "Shardable.split",
      "offset": [
        11026,
        11032
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5681": {
      "fn": "Shardable.split",
      "offset": [
        11033,
        11035
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5682": {
      "fn": "Shardable.split",
      "offset": [
        11007,
        11013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F55"
    },
    "5685": {
      "fn": "Shardable.split",
      "jump": "i",
      "offset": [
        11007,
        11036
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5686": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5687": {
      "fn": "Administrable.bankExists",
      "offset": [
        13237,
        13241
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5689": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13270
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0xD"
    },
    "5691": {
      "fn": "Administrable.bankExists",
      "offset": [
        13271,
        13279
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5692": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5694": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5695": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1648"
    },
    "5698": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5699": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5700": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "5703": {
      "fn": "Administrable.bankExists",
      "jump": "i",
      "offset": [
        13260,
        13280
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5704": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5705": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5706": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5707": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5708": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5710": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5711": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5712": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5713": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5714": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SUB",
      "path": "0"
    },
    "5715": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5717": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "ADD",
      "path": "0"
    },
    "5718": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5719": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5720": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5721": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5723": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "AND",
      "path": "0"
    },
    "5724": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13288
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5725": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13288
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5726": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5728": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13288
      ],
      "op": "EQ",
      "path": "0"
    },
    "5729": {
      "fn": "Administrable.bankExists",
      "offset": [
        13260,
        13288
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5730": {
      "fn": "Administrable.bankExists",
      "offset": [
        13173,
        13295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "fn": "Administrable.bankExists",
      "jump": "o",
      "offset": [
        13173,
        13295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5734": {
      "fn": "Administrable.setPermit",
      "offset": [
        11121,
        11365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5735": {
      "fn": "Administrable.setPermit",
      "offset": [
        11230,
        11240
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5736": {
      "offset": [
        3864,
        3901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1671"
    },
    "5739": {
      "offset": [
        3878,
        3888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5740": {
      "offset": [
        3890,
        3900
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5741": {
      "offset": [
        3864,
        3877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA7"
    },
    "5744": {
      "jump": "i",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5745": {
      "branch": 181,
      "fn": "Administrable.setPermit",
      "offset": [
        3864,
        3901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5746": {
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167A"
    },
    "5749": {
      "branch": 181,
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5750": {
      "fn": "Administrable.setPermit",
      "offset": [
        3856,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5752": {
      "fn": "Administrable.setPermit",
      "offset": [
        3856,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5753": {
      "fn": "Administrable.setPermit",
      "offset": [
        3856,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5754": {
      "fn": "Administrable.setPermit",
      "offset": [
        3856,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5755": {
      "fn": "Administrable.setPermit",
      "offset": [
        11292,
        11300
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 54
    },
    "5756": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5758": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5759": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "GT",
      "path": "0"
    },
    "5760": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5761": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168C"
    },
    "5764": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5765": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168C"
    },
    "5768": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "5771": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5772": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5773": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "5775": {
      "fn": "Administrable.setPermit",
      "offset": [
        11268,
        11278
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5776": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5778": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5779": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "5782": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5783": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5784": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "5787": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11260,
        11279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5788": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5789": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5790": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5791": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5792": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5794": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5795": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5796": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5798": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5799": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5800": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5801": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SUB",
      "path": "0"
    },
    "5802": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5803": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "ADD",
      "path": "0"
    },
    "5804": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5805": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11279
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5812": {
      "op": "SHL"
    },
    "5813": {
      "op": "SUB"
    },
    "5814": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5815": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "AND",
      "path": "0"
    },
    "5816": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5818": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5819": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5820": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5821": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5822": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5823": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5824": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5825": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5826": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5828": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11288
      ],
      "op": "AND",
      "path": "0"
    },
    "5829": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5831": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5832": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "GT",
      "path": "0"
    },
    "5833": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5834": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D5"
    },
    "5837": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5838": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D5"
    },
    "5841": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "5844": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5845": {
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5846": {
      "branch": 182,
      "fn": "Administrable.setPermit",
      "offset": [
        11260,
        11300
      ],
      "op": "SUB",
      "path": "0"
    },
    "5847": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1708"
    },
    "5850": {
      "branch": 182,
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5851": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5853": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5862": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5865": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5867": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5868": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5869": {
      "op": "MSTORE"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5874": {
      "op": "DUP3"
    },
    "5875": {
      "op": "ADD"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH3",
      "value": "0x41485"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "5883": {
      "op": "SHL"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5886": {
      "op": "DUP3"
    },
    "5887": {
      "op": "ADD"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "5895": {
      "op": "JUMP"
    },
    "5896": {
      "fn": "Administrable.setPermit",
      "offset": [
        11252,
        11308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5897": {
      "fn": "Administrable.setPermit",
      "offset": [
        11318,
        11357
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0xF25"
    },
    "5900": {
      "fn": "Administrable.setPermit",
      "offset": [
        11329,
        11339
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5901": {
      "fn": "Administrable.setPermit",
      "offset": [
        11340,
        11347
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5902": {
      "fn": "Administrable.setPermit",
      "offset": [
        11348,
        11356
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5903": {
      "fn": "Administrable.setPermit",
      "offset": [
        11318,
        11328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3179"
    },
    "5906": {
      "fn": "Administrable.setPermit",
      "jump": "i",
      "offset": [
        11318,
        11357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5907": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5908": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4642
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 56,
      "value": "0x1"
    },
    "5910": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5911": {
      "fn": "Idea.isTerminated",
      "offset": [
        4613,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5913": {
      "fn": "Idea.isTerminated",
      "offset": [
        4613,
        4617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5914": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5916": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4642
      ],
      "op": "AND",
      "path": "1"
    },
    "5917": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4651
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5918": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5919": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4651
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5920": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4693
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1738"
    },
    "5923": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4693
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5924": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4693
      ],
      "op": "POP",
      "path": "1"
    },
    "5925": {
      "fn": "Idea.isTerminated",
      "offset": [
        4689,
        4692
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C"
    },
    "5928": {
      "fn": "Idea.isTerminated",
      "offset": [
        4672,
        4685
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "5930": {
      "fn": "Idea.isTerminated",
      "offset": [
        4672,
        4685
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5931": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4671
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "5932": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1735"
    },
    "5935": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4685
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5936": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4685
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5937": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC0"
    },
    "5940": {
      "fn": "Idea.isTerminated",
      "jump": "i",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5941": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5942": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4692
      ],
      "op": "LT",
      "path": "1"
    },
    "5943": {
      "fn": "Idea.isTerminated",
      "offset": [
        4656,
        4692
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5944": {
      "fn": "Idea.isTerminated",
      "offset": [
        4636,
        4693
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5945": {
      "fn": "Idea.isTerminated",
      "offset": [
        4629,
        4693
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5946": {
      "fn": "Idea.isTerminated",
      "offset": [
        4629,
        4693
      ],
      "op": "POP",
      "path": "1"
    },
    "5947": {
      "fn": "Idea.isTerminated",
      "offset": [
        4569,
        4710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5948": {
      "fn": "Idea.isTerminated",
      "jump": "o",
      "offset": [
        4569,
        4710
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5949": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5950": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14556,
        14560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5952": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14611,
        14633
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x1"
    },
    "5954": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "5956": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14587,
        14597
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5957": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5959": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5960": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1751"
    },
    "5963": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5964": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5965": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "5968": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14579,
        14598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5969": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5970": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5971": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5972": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5973": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5975": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5976": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5977": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5979": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5980": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5981": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5982": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SUB",
      "path": "0"
    },
    "5983": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5984": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "ADD",
      "path": "0"
    },
    "5985": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5986": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14598
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5993": {
      "op": "SHL"
    },
    "5994": {
      "op": "SUB"
    },
    "5995": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5996": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "AND",
      "path": "0"
    },
    "5997": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5999": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6000": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6001": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6002": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6003": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6004": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6005": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6006": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6007": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6009": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14607
      ],
      "op": "AND",
      "path": "0"
    },
    "6010": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6012": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6013": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "GT",
      "path": "0"
    },
    "6014": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6015": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178A"
    },
    "6018": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6019": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178A"
    },
    "6022": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "6025": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14579,
        14633
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6026": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6027": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "LT",
      "path": "0"
    },
    "6028": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14633
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6029": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6030": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE33"
    },
    "6033": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14579,
        14686
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6034": {
      "op": "POP"
    },
    "6035": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14664,
        14686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6037": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "6039": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14649,
        14659
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6040": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6042": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6043": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A4"
    },
    "6046": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6047": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6048": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "6051": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14637,
        14660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6052": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6053": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6054": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6055": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6056": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6058": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6059": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6060": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6061": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6062": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SUB",
      "path": "0"
    },
    "6063": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6065": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "ADD",
      "path": "0"
    },
    "6066": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6067": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6068": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6069": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6071": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14660
      ],
      "op": "AND",
      "path": "0"
    },
    "6072": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6074": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6075": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "GT",
      "path": "0"
    },
    "6076": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6077": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C8"
    },
    "6080": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6081": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C8"
    },
    "6084": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "6087": {
      "fn": "Administrable.hasPermit",
      "jump": "i",
      "offset": [
        14637,
        14686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6088": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6089": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "LT",
      "path": "0"
    },
    "6090": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6091": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14637,
        14686
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6092": {
      "fn": "Administrable.hasPermit",
      "offset": [
        14474,
        14693
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "op": "POP"
    },
    "6095": {
      "op": "POP"
    },
    "6096": {
      "fn": "Administrable.hasPermit",
      "jump": "o",
      "offset": [
        14474,
        14693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6097": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10040,
        10248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6098": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10167,
        10175
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6099": {
      "offset": [
        4134,
        4167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DC"
    },
    "6102": {
      "offset": [
        4146,
        4154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6103": {
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6104": {
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "6107": {
      "jump": "i",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6108": {
      "branch": 183,
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4134,
        4167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6109": {
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E5"
    },
    "6112": {
      "branch": 183,
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6113": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4126,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6115": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4126,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6116": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4126,
        4168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6117": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        4126,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6118": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10187,
        10241
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x1394"
    },
    "6121": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10210,
        10218
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6122": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10219,
        10231
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6123": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10232,
        10237
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6124": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10238,
        10240
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6125": {
      "fn": "Administrable.transferTokenFromBank",
      "offset": [
        10187,
        10209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3233"
    },
    "6128": {
      "fn": "Administrable.transferTokenFromBank",
      "jump": "i",
      "offset": [
        10187,
        10241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6129": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6130": {
      "fn": "Shardable.purchase",
      "offset": [
        7341,
        7346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6131": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180B"
    },
    "6134": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6135": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6137": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6138": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6139": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6140": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6141": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6142": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6144": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6146": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6147": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6149": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6150": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6151": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6152": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "6153": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6154": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6155": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6156": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1827"
    },
    "6159": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6160": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6162": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6169": {
      "op": "SHL"
    },
    "6170": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6171": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6172": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6174": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "6175": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6178": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6179": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "6182": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6183": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6184": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x0"
    },
    "6186": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6187": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6188": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6189": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6191": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6193": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6194": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6196": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6197": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6198": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6199": {
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6201": {
      "branch": 224,
      "fn": "Shardable.purchase",
      "offset": [
        7366,
        7386
      ],
      "op": "AND",
      "path": "2"
    },
    "6202": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x186A"
    },
    "6205": {
      "branch": 224,
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6206": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6208": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6215": {
      "op": "SHL"
    },
    "6216": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6217": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6220": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6222": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6223": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "ADD",
      "path": "2"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6229": {
      "op": "DUP3"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH2",
      "value": "0x4E53"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6240": {
      "op": "DUP3"
    },
    "6241": {
      "op": "ADD"
    },
    "6242": {
      "op": "MSTORE"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6245": {
      "op": "ADD"
    },
    "6246": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6249": {
      "op": "JUMP"
    },
    "6250": {
      "fn": "Shardable.purchase",
      "offset": [
        7358,
        7393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6251": {
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7417
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 60
    },
    "6252": {
      "fn": "Shardable.purchase",
      "offset": [
        7421,
        7422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6254": {
      "branch": 225,
      "fn": "Shardable.purchase",
      "offset": [
        7411,
        7422
      ],
      "op": "SUB",
      "path": "2"
    },
    "6255": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189F"
    },
    "6258": {
      "branch": 225,
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6259": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6261": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6268": {
      "op": "SHL"
    },
    "6269": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6270": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6273": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6275": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6276": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "ADD",
      "path": "2"
    },
    "6277": {
      "op": "MSTORE"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6282": {
      "op": "DUP3"
    },
    "6283": {
      "op": "ADD"
    },
    "6284": {
      "op": "MSTORE"
    },
    "6285": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6293": {
      "op": "DUP3"
    },
    "6294": {
      "op": "ADD"
    },
    "6295": {
      "op": "MSTORE"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6302": {
      "op": "JUMP"
    },
    "6303": {
      "fn": "Shardable.purchase",
      "offset": [
        7403,
        7429
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6304": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x0"
    },
    "6306": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6307": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6308": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6309": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6311": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6313": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6314": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6316": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6317": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7465
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6318": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6319": {
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6320": {
      "op": "GT"
    },
    "6321": {
      "branch": 226,
      "fn": "Shardable.purchase",
      "offset": [
        7447,
        7482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6322": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E2"
    },
    "6325": {
      "branch": 226,
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6326": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6328": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6335": {
      "op": "SHL"
    },
    "6336": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6337": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6340": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6342": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6343": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "ADD",
      "path": "2"
    },
    "6344": {
      "op": "MSTORE"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6349": {
      "op": "DUP3"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "MSTORE"
    },
    "6352": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6357": {
      "op": "SHL"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6360": {
      "op": "DUP3"
    },
    "6361": {
      "op": "ADD"
    },
    "6362": {
      "op": "MSTORE"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6365": {
      "op": "ADD"
    },
    "6366": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6369": {
      "op": "JUMP"
    },
    "6370": {
      "fn": "Shardable.purchase",
      "offset": [
        7439,
        7489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6371": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x0"
    },
    "6373": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6374": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6375": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6376": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7519
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6378": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6380": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6381": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6383": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6384": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6385": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6387": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7529
      ],
      "op": "ADD",
      "path": "2"
    },
    "6388": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7529
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "op": "SUB"
    },
    "6397": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7529
      ],
      "op": "AND",
      "path": "2"
    },
    "6398": {
      "fn": "Shardable.purchase",
      "offset": [
        7533,
        7543
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6399": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7543
      ],
      "op": "EQ",
      "path": "2"
    },
    "6400": {
      "fn": "Shardable.purchase",
      "offset": [
        7508,
        7543
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6401": {
      "fn": "Shardable.purchase",
      "offset": [
        7507,
        7587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1922"
    },
    "6404": {
      "fn": "Shardable.purchase",
      "offset": [
        7507,
        7587
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "fn": "Shardable.purchase",
      "offset": [
        7582,
        7585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6408": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6409": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6410": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6411": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6413": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6415": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6416": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6418": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6419": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7567
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6420": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6422": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7570
      ],
      "op": "ADD",
      "path": "2"
    },
    "6423": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6430": {
      "op": "SHL"
    },
    "6431": {
      "op": "SUB"
    },
    "6432": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7570
      ],
      "op": "AND",
      "path": "2"
    },
    "6433": {
      "fn": "Shardable.purchase",
      "offset": [
        7549,
        7586
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6434": {
      "fn": "Shardable.purchase",
      "offset": [
        7507,
        7587
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6435": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1953"
    },
    "6438": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6439": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6441": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6448": {
      "op": "SHL"
    },
    "6449": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6450": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6453": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6455": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6456": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "ADD",
      "path": "2"
    },
    "6457": {
      "op": "MSTORE"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6462": {
      "op": "DUP3"
    },
    "6463": {
      "op": "ADD"
    },
    "6464": {
      "op": "MSTORE"
    },
    "6465": {
      "op": "PUSH2",
      "value": "0x29A9"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6470": {
      "op": "SHL"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6473": {
      "op": "DUP3"
    },
    "6474": {
      "op": "ADD"
    },
    "6475": {
      "op": "MSTORE"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6478": {
      "op": "ADD"
    },
    "6479": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6482": {
      "op": "JUMP"
    },
    "6483": {
      "fn": "Shardable.purchase",
      "offset": [
        7499,
        7594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6484": {
      "fn": "Shardable.purchase",
      "offset": [
        7604,
        7622
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 63,
      "value": "0x195C"
    },
    "6487": {
      "fn": "Shardable.purchase",
      "offset": [
        7616,
        7621
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6488": {
      "fn": "Shardable.purchase",
      "offset": [
        7604,
        7615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x200E"
    },
    "6491": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7604,
        7622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6492": {
      "fn": "Shardable.purchase",
      "offset": [
        7604,
        7622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6493": {
      "fn": "Shardable.purchase",
      "offset": [
        7632,
        7650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6495": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6496": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6497": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6498": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6500": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6502": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6503": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6505": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6506": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7680
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6507": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7686
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6509": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7686
      ],
      "op": "ADD",
      "path": "2"
    },
    "6510": {
      "fn": "Shardable.purchase",
      "offset": [
        7662,
        7686
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6511": {
      "fn": "Shardable.purchase",
      "offset": [
        7653,
        7686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1978"
    },
    "6514": {
      "fn": "Shardable.purchase",
      "offset": [
        7653,
        7686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6515": {
      "fn": "Shardable.purchase",
      "offset": [
        7653,
        7659
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6516": {
      "fn": "Shardable.purchase",
      "offset": [
        7653,
        7686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F87"
    },
    "6519": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7653,
        7686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6520": {
      "fn": "Shardable.purchase",
      "offset": [
        7653,
        7686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6521": {
      "fn": "Shardable.purchase",
      "offset": [
        7632,
        7686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6522": {
      "fn": "Shardable.purchase",
      "offset": [
        7632,
        7686
      ],
      "op": "POP",
      "path": "2"
    },
    "6523": {
      "fn": "Shardable.purchase",
      "offset": [
        7697,
        7720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6525": {
      "fn": "Shardable.purchase",
      "offset": [
        7722,
        7744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6526": {
      "fn": "Shardable.purchase",
      "offset": [
        7746,
        7763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6528": {
      "fn": "Shardable.purchase",
      "offset": [
        7767,
        7822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198D"
    },
    "6531": {
      "fn": "Shardable.purchase",
      "offset": [
        7803,
        7813
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6532": {
      "fn": "Shardable.purchase",
      "offset": [
        7814,
        7816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "6534": {
      "fn": "Shardable.purchase",
      "offset": [
        7817,
        7821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "6537": {
      "fn": "Shardable.purchase",
      "offset": [
        7767,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33D5"
    },
    "6540": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7767,
        7822
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6541": {
      "fn": "Shardable.purchase",
      "offset": [
        7767,
        7822
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6542": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6543": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6544": {
      "op": "POP"
    },
    "6545": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "fn": "Shardable.purchase",
      "offset": [
        7832,
        7859
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0x199E"
    },
    "6552": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6553": {
      "fn": "Shardable.purchase",
      "offset": [
        7696,
        7822
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6554": {
      "fn": "Shardable.purchase",
      "offset": [
        7832,
        7859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ECA"
    },
    "6557": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        7832,
        7859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6558": {
      "fn": "Shardable.purchase",
      "offset": [
        7832,
        7859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6559": {
      "fn": "Shardable.purchase",
      "offset": [
        7964,
        7967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6561": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6562": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6563": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6564": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6566": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6568": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6569": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6571": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6572": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7939
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6573": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6575": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7952
      ],
      "op": "ADD",
      "path": "2"
    },
    "6576": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7952
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6577": {
      "fn": "Shardable.purchase",
      "offset": [
        7832,
        7859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6578": {
      "fn": "Shardable.purchase",
      "offset": [
        7832,
        7859
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6579": {
      "op": "POP"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6586": {
      "op": "SHL"
    },
    "6587": {
      "op": "SUB"
    },
    "6588": {
      "fn": "Shardable.purchase",
      "offset": [
        7921,
        7952
      ],
      "op": "AND",
      "path": "2"
    },
    "6589": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AFD"
    },
    "6592": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6593": {
      "fn": "Shardable.purchase",
      "offset": [
        8005,
        8015
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 65
    },
    "6594": {
      "fn": "Shardable.purchase",
      "offset": [
        7992,
        8001
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6595": {
      "fn": "Shardable.purchase",
      "offset": [
        7992,
        8015
      ],
      "op": "LT",
      "path": "2"
    },
    "6596": {
      "branch": 227,
      "fn": "Shardable.purchase",
      "offset": [
        7992,
        8015
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6597": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F5"
    },
    "6600": {
      "branch": 227,
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6601": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6603": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6610": {
      "op": "SHL"
    },
    "6611": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6612": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6615": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6617": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6618": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "ADD",
      "path": "2"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6624": {
      "op": "DUP3"
    },
    "6625": {
      "op": "ADD"
    },
    "6626": {
      "op": "MSTORE"
    },
    "6627": {
      "op": "PUSH2",
      "value": "0x4945"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6632": {
      "op": "SHL"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6635": {
      "op": "DUP3"
    },
    "6636": {
      "op": "ADD"
    },
    "6637": {
      "op": "MSTORE"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6644": {
      "op": "JUMP"
    },
    "6645": {
      "fn": "Shardable.purchase",
      "offset": [
        7984,
        8022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6646": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6648": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6649": {
      "fn": "Shardable.purchase",
      "offset": [
        8087,
        8108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6651": {
      "fn": "Shardable.purchase",
      "offset": [
        8087,
        8108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6652": {
      "fn": "Shardable.purchase",
      "offset": [
        8121,
        8163
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "6673": {
      "fn": "Shardable.purchase",
      "offset": [
        8121,
        8163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6674": {
      "fn": "Shardable.purchase",
      "offset": [
        8176,
        8191
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6675": {
      "fn": "Shardable.purchase",
      "offset": [
        8176,
        8191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6676": {
      "fn": "Shardable.purchase",
      "offset": [
        8087,
        8108
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6677": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6678": {
      "fn": "Shardable.purchase",
      "offset": [
        8087,
        8108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6679": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6680": {
      "fn": "Shardable.purchase",
      "offset": [
        8176,
        8191
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6681": {
      "fn": "Shardable.purchase",
      "offset": [
        8121,
        8163
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6682": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "GAS",
      "path": "2"
    },
    "6683": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "CALL",
      "path": "2"
    },
    "6684": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6685": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "POP",
      "path": "2"
    },
    "6686": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "POP",
      "path": "2"
    },
    "6687": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "POP",
      "path": "2"
    },
    "6688": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6689": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6690": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6692": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6693": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "EQ",
      "path": "2"
    },
    "6694": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4B"
    },
    "6697": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6698": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6700": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6701": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6702": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "POP",
      "path": "2"
    },
    "6703": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6705": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "NOT",
      "path": "2"
    },
    "6706": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6708": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6709": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "ADD",
      "path": "2"
    },
    "6710": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "AND",
      "path": "2"
    },
    "6711": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6712": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "ADD",
      "path": "2"
    },
    "6713": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6715": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6716": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6717": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6718": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6719": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6720": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6722": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6724": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6725": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "ADD",
      "path": "2"
    },
    "6726": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6727": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A50"
    },
    "6730": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6731": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6732": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6734": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6735": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "POP",
      "path": "2"
    },
    "6736": {
      "fn": "Shardable.purchase",
      "offset": [
        8113,
        8196
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6737": {
      "op": "POP"
    },
    "6738": {
      "op": "POP"
    },
    "6739": {
      "fn": "Shardable.purchase",
      "offset": [
        8250,
        8270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6741": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6742": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6743": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6744": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6746": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6748": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6749": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6751": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6752": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6753": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8301
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6754": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6756": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "ADD",
      "path": "2"
    },
    "6757": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6758": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6759": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6760": {
      "fn": "Shardable.purchase",
      "offset": [
        8086,
        8196
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6761": {
      "fn": "Shardable.purchase",
      "offset": [
        8086,
        8196
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6762": {
      "op": "POP"
    },
    "6763": {
      "fn": "Shardable.purchase",
      "offset": [
        8250,
        8270
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6764": {
      "fn": "Shardable.purchase",
      "offset": [
        8250,
        8270
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6771": {
      "op": "SHL"
    },
    "6772": {
      "op": "SUB"
    },
    "6773": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6774": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6775": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "AND",
      "path": "2"
    },
    "6776": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6777": {
      "fn": "Shardable.purchase",
      "offset": [
        8320,
        8334
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6778": {
      "fn": "Shardable.purchase",
      "offset": [
        8320,
        8334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6779": {
      "fn": "Shardable.purchase",
      "offset": [
        8250,
        8270
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6780": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6781": {
      "fn": "Shardable.purchase",
      "offset": [
        8250,
        8270
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6782": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6783": {
      "fn": "Shardable.purchase",
      "offset": [
        8320,
        8334
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6784": {
      "fn": "Shardable.purchase",
      "offset": [
        8283,
        8307
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6785": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "GAS",
      "path": "2"
    },
    "6786": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "CALL",
      "path": "2"
    },
    "6787": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6788": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6789": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6790": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6791": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6792": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6793": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6795": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6796": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "EQ",
      "path": "2"
    },
    "6797": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB2"
    },
    "6800": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6801": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6803": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6804": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6805": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6806": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6808": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "NOT",
      "path": "2"
    },
    "6809": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6811": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6812": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "ADD",
      "path": "2"
    },
    "6813": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "AND",
      "path": "2"
    },
    "6814": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6815": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "ADD",
      "path": "2"
    },
    "6816": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6818": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6819": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6820": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6821": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6822": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6823": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6825": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6827": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6828": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "ADD",
      "path": "2"
    },
    "6829": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6830": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB7"
    },
    "6833": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6834": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6835": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6837": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6838": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6839": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6840": {
      "fn": "Shardable.purchase",
      "offset": [
        8275,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6841": {
      "fn": "Shardable.purchase",
      "offset": [
        8249,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6842": {
      "fn": "Shardable.purchase",
      "offset": [
        8249,
        8339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6843": {
      "fn": "Shardable.purchase",
      "offset": [
        8249,
        8339
      ],
      "op": "POP",
      "path": "2"
    },
    "6844": {
      "branch": 228,
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8376
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 66
    },
    "6845": {
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6846": {
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6847": {
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC5"
    },
    "6850": {
      "branch": 228,
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6851": {
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "POP",
      "path": "2"
    },
    "6852": {
      "branch": 229,
      "fn": "Shardable.purchase",
      "offset": [
        8380,
        8396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6853": {
      "fn": "Shardable.purchase",
      "offset": [
        8361,
        8396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6854": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF6"
    },
    "6857": {
      "branch": 229,
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6858": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6860": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6867": {
      "op": "SHL"
    },
    "6868": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6869": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6872": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6874": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6875": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "ADD",
      "path": "2"
    },
    "6876": {
      "op": "MSTORE"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6881": {
      "op": "DUP3"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6889": {
      "op": "SHL"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6892": {
      "op": "DUP3"
    },
    "6893": {
      "op": "ADD"
    },
    "6894": {
      "op": "MSTORE"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6897": {
      "op": "ADD"
    },
    "6898": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "6901": {
      "op": "JUMP"
    },
    "6902": {
      "fn": "Shardable.purchase",
      "offset": [
        8353,
        8403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6903": {
      "fn": "Shardable.purchase",
      "offset": [
        7970,
        8414
      ],
      "op": "POP",
      "path": "2"
    },
    "6904": {
      "fn": "Shardable.purchase",
      "offset": [
        7970,
        8414
      ],
      "op": "POP",
      "path": "2"
    },
    "6905": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C83"
    },
    "6908": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6909": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6910": {
      "fn": "Shardable.purchase",
      "offset": [
        8443,
        8454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6912": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6913": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6914": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6915": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6917": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6919": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6920": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6922": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6923": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6924": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6925": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8481
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6926": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6928": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "ADD",
      "path": "2"
    },
    "6929": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6930": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 67
    },
    "6931": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6932": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6939": {
      "op": "SHL"
    },
    "6940": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6941": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6942": {
      "fn": "Shardable.purchase",
      "offset": [
        8533,
        8543
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6943": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6945": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6946": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ADD",
      "path": "2"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "fn": "Shardable.purchase",
      "offset": [
        8552,
        8556
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6951": {
      "op": "DUP3"
    },
    "6952": {
      "op": "ADD"
    },
    "6953": {
      "op": "MSTORE"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6960": {
      "op": "SHL"
    },
    "6961": {
      "op": "SUB"
    },
    "6962": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6963": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6964": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "AND",
      "path": "2"
    },
    "6965": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6966": {
      "fn": "Shardable.purchase",
      "offset": [
        8562,
        8572
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6967": {
      "fn": "Shardable.purchase",
      "offset": [
        8562,
        8572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6968": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6969": {
      "fn": "Shardable.purchase",
      "offset": [
        8463,
        8494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6970": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8532
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "6975": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6978": {
      "op": "ADD"
    },
    "6979": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6981": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6983": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6984": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6985": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6986": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "SUB",
      "path": "2"
    },
    "6987": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6988": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6989": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "GAS",
      "path": "2"
    },
    "6990": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6991": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6992": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6993": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6994": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5F"
    },
    "6997": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6998": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6999": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7001": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7002": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7003": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7004": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7006": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7007": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7008": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "POP",
      "path": "2"
    },
    "7009": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "POP",
      "path": "2"
    },
    "7010": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "POP",
      "path": "2"
    },
    "7011": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "POP",
      "path": "2"
    },
    "7012": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7014": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7015": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7016": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7018": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "NOT",
      "path": "2"
    },
    "7019": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7021": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7022": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ADD",
      "path": "2"
    },
    "7023": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "AND",
      "path": "2"
    },
    "7024": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7025": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ADD",
      "path": "2"
    },
    "7026": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7027": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7029": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7030": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "POP",
      "path": "2"
    },
    "7031": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7032": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "ADD",
      "path": "2"
    },
    "7033": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7034": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B83"
    },
    "7037": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7038": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7039": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4042"
    },
    "7042": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8517,
        8558
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7043": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7044": {
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8572
      ],
      "op": "LT",
      "path": "2"
    },
    "7045": {
      "branch": 230,
      "fn": "Shardable.purchase",
      "offset": [
        8517,
        8572
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7046": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA1"
    },
    "7049": {
      "branch": 230,
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7050": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7052": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7061": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7062": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7064": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "ADD",
      "path": "2"
    },
    "7065": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "7068": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7069": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x405B"
    },
    "7072": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8509,
        8578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7073": {
      "fn": "Shardable.purchase",
      "offset": [
        8509,
        8578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7074": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x40"
    },
    "7076": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7077": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7084": {
      "op": "SHL"
    },
    "7085": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7086": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7087": {
      "fn": "Shardable.purchase",
      "offset": [
        8669,
        8679
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7088": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7090": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7091": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ADD",
      "path": "2"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "fn": "Shardable.purchase",
      "offset": [
        8681,
        8723
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x49A71890AEA5A751E30E740C504F2E9683F347BC"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7116": {
      "op": "DUP3"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7121": {
      "op": "DUP2"
    },
    "7122": {
      "op": "ADD"
    },
    "7123": {
      "op": "DUP6"
    },
    "7124": {
      "op": "SWAP1"
    },
    "7125": {
      "op": "MSTORE"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7132": {
      "op": "SHL"
    },
    "7133": {
      "op": "SUB"
    },
    "7134": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8668
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7135": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8668
      ],
      "op": "AND",
      "path": "2"
    },
    "7136": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7137": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8668
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "7142": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7145": {
      "op": "ADD"
    },
    "7146": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7148": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7150": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7151": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7152": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7153": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "SUB",
      "path": "2"
    },
    "7154": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7155": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7157": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7158": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "GAS",
      "path": "2"
    },
    "7159": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "CALL",
      "path": "2"
    },
    "7160": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7161": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7162": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7163": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C08"
    },
    "7166": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7167": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7168": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7170": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7171": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7172": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7173": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7175": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7176": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7177": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "7178": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "7179": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "7180": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "7181": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7183": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7184": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7185": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7187": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "NOT",
      "path": "2"
    },
    "7188": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7190": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7191": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ADD",
      "path": "2"
    },
    "7192": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "AND",
      "path": "2"
    },
    "7193": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7194": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ADD",
      "path": "2"
    },
    "7195": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7196": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7198": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7199": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "7200": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7201": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "ADD",
      "path": "2"
    },
    "7202": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7203": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2C"
    },
    "7206": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7207": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7208": {
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4077"
    },
    "7211": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8650,
        8741
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7212": {
      "branch": 231,
      "fn": "Shardable.purchase",
      "offset": [
        8650,
        8741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7213": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C48"
    },
    "7216": {
      "branch": 231,
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7217": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7219": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7226": {
      "op": "SHL"
    },
    "7227": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7228": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7229": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7231": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "ADD",
      "path": "2"
    },
    "7232": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "7235": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7236": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4099"
    },
    "7239": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8642,
        8748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7240": {
      "fn": "Shardable.purchase",
      "offset": [
        8642,
        8748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7241": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x0"
    },
    "7243": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7244": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7245": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7246": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7248": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7250": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7251": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7252": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7253": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7255": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7256": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7257": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8838
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7258": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7260": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7261": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7262": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "ADD",
      "path": "2"
    },
    "7263": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7264": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7266": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7267": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8863
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7268": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7269": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8863
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7270": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7271": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8876
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7272": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8876
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7273": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8876
      ],
      "op": "ADD",
      "path": "2"
    },
    "7274": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8876
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7275": {
      "fn": "Shardable.purchase",
      "offset": [
        8801,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C81"
    },
    "7278": {
      "fn": "Shardable.purchase",
      "offset": [
        8801,
        8892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7285": {
      "op": "SHL"
    },
    "7286": {
      "op": "SUB"
    },
    "7287": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7288": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7289": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "AND",
      "path": "2"
    },
    "7290": {
      "fn": "Shardable.purchase",
      "offset": [
        8820,
        8844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7291": {
      "fn": "Shardable.purchase",
      "offset": [
        8845,
        8876
      ],
      "op": "AND",
      "path": "2"
    },
    "7292": {
      "fn": "Shardable.purchase",
      "offset": [
        8877,
        8891
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7293": {
      "fn": "Shardable.purchase",
      "offset": [
        8801,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3449"
    },
    "7296": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8801,
        8892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7297": {
      "fn": "Shardable.purchase",
      "offset": [
        8801,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7298": {
      "fn": "Shardable.purchase",
      "offset": [
        8429,
        8903
      ],
      "op": "POP",
      "path": "2"
    },
    "7299": {
      "fn": "Shardable.purchase",
      "offset": [
        7917,
        8903
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7300": {
      "fn": "Shardable.purchase",
      "offset": [
        8912,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 70,
      "value": "0x1C8E"
    },
    "7303": {
      "fn": "Shardable.purchase",
      "offset": [
        8919,
        8924
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7304": {
      "fn": "Shardable.purchase",
      "offset": [
        8926,
        8932
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7305": {
      "fn": "Shardable.purchase",
      "offset": [
        8933,
        8943
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7306": {
      "fn": "Shardable.purchase",
      "offset": [
        8912,
        8918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F55"
    },
    "7309": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        8912,
        8944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7310": {
      "fn": "Shardable.purchase",
      "offset": [
        8912,
        8944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7311": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7313": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7314": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7315": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7316": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7318": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7320": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7321": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7323": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7324": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7325": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7327": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "ADD",
      "path": "2"
    },
    "7328": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7329": {
      "fn": "Shardable.purchase",
      "offset": [
        8994,
        8998
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7336": {
      "op": "SHL"
    },
    "7337": {
      "op": "SUB"
    },
    "7338": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7340": {
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8982
      ],
      "op": "AND",
      "path": "2"
    },
    "7341": {
      "branch": 232,
      "fn": "Shardable.purchase",
      "offset": [
        8958,
        8999
      ],
      "op": "SUB",
      "path": "2"
    },
    "7342": {
      "fn": "Shardable.purchase",
      "offset": [
        8954,
        9149
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD6"
    },
    "7345": {
      "branch": 232,
      "fn": "Shardable.purchase",
      "offset": [
        8954,
        9149
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7346": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "7348": {
      "fn": "Shardable.purchase",
      "offset": [
        9122,
        9127
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7349": {
      "fn": "Shardable.purchase",
      "offset": [
        9122,
        9127
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7350": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7351": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7352": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7354": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7356": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7357": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7359": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7360": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7361": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7362": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7363": {
      "fn": "Shardable.purchase",
      "offset": [
        9132,
        9138
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7364": {
      "fn": "Shardable.purchase",
      "offset": [
        9132,
        9138
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7365": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9128
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7366": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD0"
    },
    "7369": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7370": {
      "fn": "Shardable.purchase",
      "offset": [
        9132,
        9138
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7371": {
      "fn": "Shardable.purchase",
      "offset": [
        9132,
        9138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7372": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ECA"
    },
    "7375": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9098,
        9138
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7376": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7377": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7378": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7379": {
      "fn": "Shardable.purchase",
      "offset": [
        9098,
        9138
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7380": {
      "op": "POP"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "fn": "Shardable.purchase",
      "offset": [
        8954,
        9149
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7383": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x0"
    },
    "7385": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7386": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7387": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7388": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7390": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7392": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7393": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7394": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7395": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7397": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7398": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7399": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7400": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9214
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7401": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7403": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7404": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "ADD",
      "path": "2"
    },
    "7405": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7406": {
      "fn": "Shardable.purchase",
      "offset": [
        9228,
        9252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7408": {
      "fn": "Shardable.purchase",
      "offset": [
        9228,
        9252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7409": {
      "fn": "Shardable.purchase",
      "offset": [
        9228,
        9252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7410": {
      "fn": "Shardable.purchase",
      "offset": [
        9228,
        9252
      ],
      "op": "ADD",
      "path": "2"
    },
    "7411": {
      "fn": "Shardable.purchase",
      "offset": [
        9228,
        9252
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7412": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7413": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7414": {
      "op": "DUP12"
    },
    "7415": {
      "op": "DUP2"
    },
    "7416": {
      "op": "MSTORE"
    },
    "7417": {
      "op": "SWAP3"
    },
    "7418": {
      "op": "DUP4"
    },
    "7419": {
      "op": "ADD"
    },
    "7420": {
      "op": "DUP11"
    },
    "7421": {
      "op": "SWAP1"
    },
    "7422": {
      "op": "MSTORE"
    },
    "7423": {
      "fn": "Shardable.purchase",
      "offset": [
        9185,
        9195
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7424": {
      "op": "DUP4"
    },
    "7425": {
      "op": "DUP6"
    },
    "7426": {
      "op": "ADD"
    },
    "7427": {
      "op": "MSTORE"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "op": "SUB"
    },
    "7436": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7437": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7438": {
      "fn": "Shardable.purchase",
      "offset": [
        9196,
        9227
      ],
      "op": "AND",
      "path": "2"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7441": {
      "op": "DUP4"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7446": {
      "op": "DUP3"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "op": "MSTORE"
    },
    "7449": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7450": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7451": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F"
    },
    "7484": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7485": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7486": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7487": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "SUB",
      "path": "2"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7490": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "ADD",
      "path": "2"
    },
    "7491": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7492": {
      "fn": "Shardable.purchase",
      "offset": [
        9163,
        9253
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7493": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7495": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7496": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7497": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7498": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7500": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7502": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7503": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7505": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7506": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9325
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7507": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7508": {
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9342
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7509": {
      "branch": 233,
      "fn": "Shardable.purchase",
      "offset": [
        9307,
        9342
      ],
      "op": "EQ",
      "path": "2"
    },
    "7510": {
      "fn": "Shardable.purchase",
      "offset": [
        9303,
        9575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCE"
    },
    "7513": {
      "branch": 233,
      "fn": "Shardable.purchase",
      "offset": [
        9303,
        9575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7514": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x0"
    },
    "7516": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7517": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7518": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7519": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7521": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7523": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7524": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7525": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7526": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7528": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7529": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7530": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9444
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7531": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7533": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9450
      ],
      "op": "ADD",
      "path": "2"
    },
    "7534": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7541": {
      "op": "SHL"
    },
    "7542": {
      "op": "SUB"
    },
    "7543": {
      "fn": "Shardable.purchase",
      "offset": [
        9426,
        9450
      ],
      "op": "AND",
      "path": "2"
    },
    "7544": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7545": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7546": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7548": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7549": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7550": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7551": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7552": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7553": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7554": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7555": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7556": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7557": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7559": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7560": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7561": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7562": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7563": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7564": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9470
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7565": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9477
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7566": {
      "fn": "Shardable.purchase",
      "offset": [
        9401,
        9564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCE"
    },
    "7569": {
      "fn": "Shardable.purchase",
      "offset": [
        9401,
        9564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7570": {
      "fn": "Shardable.purchase",
      "offset": [
        9413,
        9451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7571": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9D"
    },
    "7574": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7575": {
      "fn": "Shardable.purchase",
      "offset": [
        9478,
        9484
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7576": {
      "fn": "Shardable.purchase",
      "offset": [
        9478,
        9484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7577": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC0"
    },
    "7580": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9452,
        9484
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7581": {
      "fn": "Shardable.purchase",
      "offset": [
        9452,
        9484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7582": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7584": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7585": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7586": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7587": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7589": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7591": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7592": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7594": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7595": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9503
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7596": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7598": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7599": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "7600": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7601": {
      "fn": "Shardable.purchase",
      "offset": [
        9517,
        9541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7603": {
      "fn": "Shardable.purchase",
      "offset": [
        9517,
        9541
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7604": {
      "fn": "Shardable.purchase",
      "offset": [
        9517,
        9541
      ],
      "op": "ADD",
      "path": "2"
    },
    "7605": {
      "fn": "Shardable.purchase",
      "offset": [
        9517,
        9541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7606": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7608": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7609": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7610": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "ADD",
      "path": "2"
    },
    "7611": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7618": {
      "op": "SHL"
    },
    "7619": {
      "op": "SUB"
    },
    "7620": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7621": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7622": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "AND",
      "path": "2"
    },
    "7623": {
      "fn": "Shardable.purchase",
      "offset": [
        9485,
        9516
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7624": {
      "fn": "Shardable.purchase",
      "offset": [
        9517,
        9541
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7625": {
      "fn": "Shardable.purchase",
      "offset": [
        9542,
        9563
      ],
      "op": "AND",
      "path": "2"
    },
    "7626": {
      "fn": "Shardable.purchase",
      "offset": [
        9401,
        9412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F8"
    },
    "7629": {
      "fn": "Shardable.purchase",
      "jump": "i",
      "offset": [
        9401,
        9564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7630": {
      "fn": "Shardable.purchase",
      "offset": [
        9401,
        9564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7631": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7632": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7633": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7634": {
      "fn": "Shardable.purchase",
      "offset": [
        7348,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7635": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7636": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7637": {
      "fn": "Shardable.purchase",
      "offset": [
        7260,
        9581
      ],
      "op": "POP",
      "path": "2"
    },
    "7638": {
      "fn": "Shardable.purchase",
      "jump": "o",
      "offset": [
        7260,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7639": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12008,
        12133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "op": "SUB"
    },
    "7648": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 74
    },
    "7649": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "AND",
      "path": "2"
    },
    "7650": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12068,
        12072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7652": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7653": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7654": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7655": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7657": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7659": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7660": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7662": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7663": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7664": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12104,
        12125
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7665": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12091,
        12126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD66"
    },
    "7668": {
      "fn": "Shardable.isShardHolder",
      "offset": [
        12091,
        12126
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7669": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7671": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7672": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7673": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7674": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7675": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7676": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7678": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7680": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7681": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7683": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7684": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7685": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7686": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "7687": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7688": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7689": {
      "fn": "Shardable.putForSale",
      "offset": [
        10054,
        10265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7690": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7692": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7693": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7694": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7695": {
      "offset": [
        6551,
        6562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7697": {
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7699": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7700": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7702": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7703": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7704": {
      "offset": [
        6551,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7706": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6575
      ],
      "op": "ADD",
      "path": "2"
    },
    "7707": {
      "fn": "Shardable.putForSale",
      "offset": [
        6551,
        6575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7708": {
      "fn": "Shardable.putForSale",
      "offset": [
        10172,
        10177
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7709": {
      "fn": "Shardable.putForSale",
      "offset": [
        10172,
        10177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "SUB"
    },
    "7718": {
      "offset": [
        6551,
        6575
      ],
      "op": "AND",
      "path": "2"
    },
    "7719": {
      "offset": [
        6579,
        6589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7720": {
      "offset": [
        6551,
        6589
      ],
      "op": "EQ",
      "path": "2"
    },
    "7721": {
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E44"
    },
    "7724": {
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7725": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7727": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7734": {
      "op": "SHL"
    },
    "7735": {
      "offset": [
        6543,
        6596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7736": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7737": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7739": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "ADD",
      "path": "2"
    },
    "7740": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "7743": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7744": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F33"
    },
    "7747": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7748": {
      "fn": "Shardable.putForSale",
      "offset": [
        6543,
        6596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7749": {
      "fn": "Shardable.putForSale",
      "offset": [
        10194,
        10199
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7750": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5E"
    },
    "7753": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7754": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7756": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7757": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7758": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7759": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7760": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7761": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7763": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7765": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7766": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7768": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7769": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7770": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7771": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "7772": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7773": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7774": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7775": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7A"
    },
    "7778": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7779": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7781": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7788": {
      "op": "SHL"
    },
    "7789": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7790": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7791": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7793": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "7794": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "7797": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7798": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "7801": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7802": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7803": {
      "fn": "Shardable.putForSale",
      "offset": [
        10211,
        10258
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0x1DCE"
    },
    "7806": {
      "fn": "Shardable.putForSale",
      "offset": [
        10223,
        10228
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7807": {
      "fn": "Shardable.putForSale",
      "offset": [
        10229,
        10235
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7808": {
      "fn": "Shardable.putForSale",
      "offset": [
        10236,
        10248
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7809": {
      "fn": "Shardable.putForSale",
      "offset": [
        10249,
        10254
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7810": {
      "fn": "Shardable.putForSale",
      "offset": [
        10255,
        10257
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7811": {
      "fn": "Shardable.putForSale",
      "offset": [
        10211,
        10222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F8"
    },
    "7814": {
      "fn": "Shardable.putForSale",
      "jump": "i",
      "offset": [
        10211,
        10258
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7815": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7816": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12427,
        12431
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7818": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 76
    },
    "7819": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7820": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7821": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7823": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7825": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7826": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7828": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7829": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12468
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7830": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7832": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12482
      ],
      "op": "ADD",
      "path": "2"
    },
    "7833": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7834": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7835": {
      "op": "LT"
    },
    "7836": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12493
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7837": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12493
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7838": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7839": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE33"
    },
    "7842": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12450,
        12537
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7843": {
      "op": "POP"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11316,
        11323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7847": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7848": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7849": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7850": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7852": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7854": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7855": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7857": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7858": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7859": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7860": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7861": {
      "op": "GT"
    },
    "7862": {
      "fn": "Shardable.shardExisted",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7863": {
      "fn": "Shardable.shardExisted",
      "jump": "o",
      "offset": [
        12353,
        12544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7864": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7814,
        8058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7871": {
      "op": "SHL"
    },
    "7872": {
      "op": "SUB"
    },
    "7873": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 77
    },
    "7874": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "AND",
      "path": "1"
    },
    "7875": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7877": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7878": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7879": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7880": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "7882": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7884": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7885": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7887": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7888": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7889": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7890": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7891": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7946,
        7951
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7892": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7946,
        7951
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7893": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7894": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EE0"
    },
    "7897": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7898": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7946,
        7951
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7899": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7946,
        7951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7900": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ECA"
    },
    "7903": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        7922,
        7951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7904": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7905": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7906": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7907": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7922,
        7951
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7908": {
      "op": "POP"
    },
    "7909": {
      "op": "POP"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7916": {
      "op": "SHL"
    },
    "7917": {
      "op": "SUB"
    },
    "7918": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 78
    },
    "7919": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "AND",
      "path": "1"
    },
    "7920": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7922": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7923": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7924": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7925": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "7927": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7929": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7930": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7932": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7933": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7934": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7998
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7935": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7998
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7936": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7993,
        7998
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7937": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7993,
        7998
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7938": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7939": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7998
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4A"
    },
    "7942": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7998
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7943": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7993,
        7998
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7944": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7993,
        7998
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7945": {
      "fn": "Idea._processTokenReceipt",
      "offset": [
        7961,
        7998
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ECA"
    },
    "7948": {
      "fn": "Idea._processTokenReceipt",
      "jump": "i",
      "offset": [
        7961,
        7998
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7949": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21523,
        21743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7950": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7952": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7953": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7954": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7956": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "7957": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7958": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7959": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "7960": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F33"
    },
    "7963": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7964": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7966": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7973": {
      "op": "SHL"
    },
    "7974": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7975": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7976": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7978": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "7979": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "7982": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7983": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "7986": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7987": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7988": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21653,
        21661
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 79
    },
    "7989": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "7991": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21639,
        21649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7992": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7994": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7995": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F44"
    },
    "7998": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7999": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8000": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "8003": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21627,
        21650
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8004": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8005": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8006": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8007": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8008": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8010": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8011": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8012": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8013": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8014": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SUB",
      "path": "0"
    },
    "8015": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8017": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "ADD",
      "path": "0"
    },
    "8018": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8019": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21650
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8020": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8021": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8024": {
      "op": "NOT"
    },
    "8025": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "AND",
      "path": "0"
    },
    "8026": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8028": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8029": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8031": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8032": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "GT",
      "path": "0"
    },
    "8033": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8034": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6D"
    },
    "8037": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8038": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6D"
    },
    "8041": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "8044": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21627,
        21661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8045": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8046": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "MUL",
      "path": "0"
    },
    "8047": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "OR",
      "path": "0"
    },
    "8048": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8049": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8050": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21627,
        21661
      ],
      "op": "POP",
      "path": "0"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8053": {
      "op": "DUP1"
    },
    "8054": {
      "op": "MLOAD"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8057": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "8060": {
      "op": "DUP4"
    },
    "8061": {
      "op": "CODECOPY"
    },
    "8062": {
      "op": "DUP2"
    },
    "8063": {
      "op": "MLOAD"
    },
    "8064": {
      "op": "SWAP2"
    },
    "8065": {
      "op": "MSTORE"
    },
    "8066": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21704,
        21714
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 80
    },
    "8067": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21715,
        21723
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8068": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8070": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8071": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8073": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "ADD",
      "path": "0"
    },
    "8074": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F94"
    },
    "8077": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8078": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8079": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8080": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D7"
    },
    "8083": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21693,
        21724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8084": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8085": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8087": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8088": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8091": {
      "op": "NOT"
    },
    "8092": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8093": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8094": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SUB",
      "path": "0"
    },
    "8095": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "ADD",
      "path": "0"
    },
    "8096": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8097": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8098": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8099": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8100": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8101": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21693,
        21724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8102": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB0"
    },
    "8105": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8106": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21725,
        21735
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8107": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21725,
        21735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8108": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40F9"
    },
    "8111": {
      "fn": "Administrable._setBasePermit",
      "jump": "i",
      "offset": [
        21676,
        21736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8112": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8113": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8115": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8116": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8117": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8118": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "SUB",
      "path": "0"
    },
    "8119": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8120": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21676,
        21736
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8121": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21523,
        21743
      ],
      "op": "POP",
      "path": "0"
    },
    "8122": {
      "fn": "Administrable._setBasePermit",
      "offset": [
        21523,
        21743
      ],
      "op": "POP",
      "path": "0"
    },
    "8123": {
      "fn": "Administrable._setBasePermit",
      "jump": "o",
      "offset": [
        21523,
        21743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8124": {
      "fn": "Administrable._liquidize",
      "offset": [
        23328,
        23449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8125": {
      "fn": "Administrable._liquidize",
      "offset": [
        23378,
        23396
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 81,
      "value": "0x1FC4"
    },
    "8128": {
      "fn": "Administrable._liquidize",
      "offset": [
        23378,
        23394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36AB"
    },
    "8131": {
      "fn": "Administrable._liquidize",
      "jump": "i",
      "offset": [
        23378,
        23396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8132": {
      "fn": "Administrable._liquidize",
      "offset": [
        23378,
        23396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8133": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x40"
    },
    "8135": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8136": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8139": {
      "op": "DUP1"
    },
    "8140": {
      "op": "DUP3"
    },
    "8141": {
      "op": "MSTORE"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8144": {
      "op": "SWAP1"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "ADD"
    },
    "8147": {
      "op": "MSTORE"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x6C45"
    },
    "8151": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8153": {
      "op": "SHL"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8156": {
      "op": "DUP3"
    },
    "8157": {
      "op": "ADD"
    },
    "8158": {
      "op": "MSTORE"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8163": {
      "op": "DUP3"
    },
    "8164": {
      "op": "ADD"
    },
    "8165": {
      "op": "DUP2"
    },
    "8166": {
      "op": "SWAP1"
    },
    "8167": {
      "op": "MSTORE"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8170": {
      "op": "SWAP1"
    },
    "8171": {
      "op": "DUP3"
    },
    "8172": {
      "op": "ADD"
    },
    "8173": {
      "op": "MSTORE"
    },
    "8174": {
      "fn": "Administrable._liquidize",
      "offset": [
        23431,
        23441
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8175": {
      "op": "DUP2"
    },
    "8176": {
      "op": "DUP4"
    },
    "8177": {
      "op": "ADD"
    },
    "8178": {
      "op": "MSTORE"
    },
    "8179": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8180": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8183": {
      "op": "DUP1"
    },
    "8184": {
      "op": "MLOAD"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8187": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "8190": {
      "op": "DUP4"
    },
    "8191": {
      "op": "CODECOPY"
    },
    "8192": {
      "op": "DUP2"
    },
    "8193": {
      "op": "MLOAD"
    },
    "8194": {
      "op": "SWAP2"
    },
    "8195": {
      "op": "MSTORE"
    },
    "8196": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8197": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8198": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8199": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "SUB",
      "path": "0"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8202": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "ADD",
      "path": "0"
    },
    "8203": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8204": {
      "fn": "Administrable._liquidize",
      "offset": [
        23411,
        23442
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8205": {
      "fn": "Administrable._liquidize",
      "jump": "o",
      "offset": [
        23328,
        23449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8206": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12650,
        12762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8207": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12710,
        12715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8208": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2028"
    },
    "8211": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8212": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8214": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8215": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8216": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8217": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8218": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8219": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8221": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8223": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8224": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8226": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8227": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8228": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8229": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "8230": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8231": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8232": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8233": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2044"
    },
    "8236": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8237": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8239": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8246": {
      "op": "SHL"
    },
    "8247": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8248": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8249": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8251": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "8252": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "8255": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8256": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "8259": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8260": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8261": {
      "op": "POP"
    },
    "8262": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12750,
        12755
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x0"
    },
    "8264": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8265": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8266": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8267": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8269": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8271": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8272": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8274": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8275": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12747
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8276": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8277": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12755
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8280": {
      "op": "NOT"
    },
    "8281": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12755
      ],
      "op": "AND",
      "path": "2"
    },
    "8282": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8283": {
      "fn": "Shardable._cancelSale",
      "offset": [
        12727,
        12755
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8284": {
      "fn": "Shardable._cancelSale",
      "jump": "o",
      "offset": [
        12650,
        12762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8285": {
      "fn": "Idea._transferToken",
      "offset": [
        5741,
        6551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8292": {
      "op": "SHL"
    },
    "8293": {
      "op": "SUB"
    },
    "8294": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 84
    },
    "8295": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "AND",
      "path": "1"
    },
    "8296": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8298": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8299": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8300": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8301": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "8303": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8305": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8306": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8308": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8309": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8310": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5861
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8311": {
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8312": {
      "op": "GT"
    },
    "8313": {
      "branch": 205,
      "fn": "Idea._transferToken",
      "offset": [
        5841,
        5870
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8314": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2095"
    },
    "8317": {
      "branch": 205,
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8318": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8320": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8327": {
      "op": "SHL"
    },
    "8328": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8329": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8330": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8332": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "ADD",
      "path": "1"
    },
    "8333": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "8336": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8337": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405B"
    },
    "8340": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5833,
        5877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8341": {
      "fn": "Idea._transferToken",
      "offset": [
        5833,
        5877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8348": {
      "op": "SHL"
    },
    "8349": {
      "op": "SUB"
    },
    "8350": {
      "fn": "Idea._transferToken",
      "offset": [
        5891,
        5917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8351": {
      "branch": 206,
      "fn": "Idea._transferToken",
      "offset": [
        5891,
        5917
      ],
      "op": "AND",
      "path": "1"
    },
    "8352": {
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B2"
    },
    "8355": {
      "branch": 206,
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8356": {
      "fn": "Idea._transferToken",
      "offset": [
        5921,
        5946
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 85,
      "value": "0x20AD"
    },
    "8359": {
      "fn": "Idea._transferToken",
      "offset": [
        5936,
        5941
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8360": {
      "fn": "Idea._transferToken",
      "offset": [
        5943,
        5945
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8361": {
      "fn": "Idea._transferToken",
      "offset": [
        5921,
        5935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36E1"
    },
    "8364": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        5921,
        5946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8365": {
      "fn": "Idea._transferToken",
      "offset": [
        5921,
        5946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8366": {
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22ED"
    },
    "8369": {
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8370": {
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8371": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 86,
      "value": "0x40"
    },
    "8373": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8374": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8381": {
      "op": "SHL"
    },
    "8382": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8383": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8390": {
      "op": "SHL"
    },
    "8391": {
      "op": "SUB"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "DUP2"
    },
    "8394": {
      "op": "AND"
    },
    "8395": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8397": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8398": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ADD",
      "path": "1"
    },
    "8399": {
      "op": "MSTORE"
    },
    "8400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8402": {
      "op": "DUP3"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "op": "DUP5"
    },
    "8405": {
      "op": "SWAP1"
    },
    "8406": {
      "op": "MSTORE"
    },
    "8407": {
      "fn": "Idea._transferToken",
      "offset": [
        5996,
        6008
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8408": {
      "fn": "Idea._transferToken",
      "offset": [
        5996,
        6008
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8409": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8410": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8411": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "AND",
      "path": "1"
    },
    "8412": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8413": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "8418": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8424": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8426": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8427": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8428": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8429": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "SUB",
      "path": "1"
    },
    "8430": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8431": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8433": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8434": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "GAS",
      "path": "1"
    },
    "8435": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "CALL",
      "path": "1"
    },
    "8436": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8437": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8438": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8439": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2104"
    },
    "8442": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8443": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8444": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8446": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8447": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8448": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8449": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8451": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8452": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8453": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "POP",
      "path": "1"
    },
    "8454": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "POP",
      "path": "1"
    },
    "8455": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "POP",
      "path": "1"
    },
    "8456": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "POP",
      "path": "1"
    },
    "8457": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8459": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8460": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8461": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8463": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "NOT",
      "path": "1"
    },
    "8464": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8466": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8467": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ADD",
      "path": "1"
    },
    "8468": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "AND",
      "path": "1"
    },
    "8469": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8470": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ADD",
      "path": "1"
    },
    "8471": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8472": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8474": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8475": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "POP",
      "path": "1"
    },
    "8476": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8477": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "ADD",
      "path": "1"
    },
    "8478": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8479": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2128"
    },
    "8482": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8483": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8484": {
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4077"
    },
    "8487": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6031,
        6055
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8488": {
      "branch": 207,
      "fn": "Idea._transferToken",
      "offset": [
        6031,
        6055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8489": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2159"
    },
    "8492": {
      "branch": 207,
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8493": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8495": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8502": {
      "op": "SHL"
    },
    "8503": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8504": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8507": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8509": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8510": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "ADD",
      "path": "1"
    },
    "8511": {
      "op": "MSTORE"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8516": {
      "op": "DUP3"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "op": "MSTORE"
    },
    "8519": {
      "op": "PUSH2",
      "value": "0x4E41"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8524": {
      "op": "SHL"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8527": {
      "op": "DUP3"
    },
    "8528": {
      "op": "ADD"
    },
    "8529": {
      "op": "MSTORE"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8532": {
      "op": "ADD"
    },
    "8533": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "8536": {
      "op": "JUMP"
    },
    "8537": {
      "fn": "Idea._transferToken",
      "offset": [
        6023,
        6062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8544": {
      "op": "SHL"
    },
    "8545": {
      "op": "SUB"
    },
    "8546": {
      "fn": "Idea._transferToken",
      "offset": [
        6080,
        6094
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8547": {
      "fn": "Idea._transferToken",
      "offset": [
        6080,
        6094
      ],
      "op": "AND",
      "path": "1"
    },
    "8548": {
      "fn": "Idea._transferToken",
      "offset": [
        6080,
        6094
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8549": {
      "branch": 208,
      "fn": "Idea._transferToken",
      "offset": [
        6080,
        6098
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8550": {
      "fn": "Idea._transferToken",
      "offset": [
        6076,
        6461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x225C"
    },
    "8553": {
      "branch": 208,
      "fn": "Idea._transferToken",
      "offset": [
        6076,
        6461
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8554": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8556": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8557": {
      "op": "PUSH4",
      "value": "0x4B91AD0F"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8564": {
      "op": "SHL"
    },
    "8565": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8566": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "op": "SUB"
    },
    "8575": {
      "op": "DUP6"
    },
    "8576": {
      "op": "DUP2"
    },
    "8577": {
      "op": "AND"
    },
    "8578": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8580": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8581": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "ADD",
      "path": "1"
    },
    "8582": {
      "op": "MSTORE"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8585": {
      "op": "DUP3"
    },
    "8586": {
      "op": "ADD"
    },
    "8587": {
      "op": "DUP6"
    },
    "8588": {
      "op": "SWAP1"
    },
    "8589": {
      "op": "MSTORE"
    },
    "8590": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6144
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8591": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6144
      ],
      "op": "AND",
      "path": "1"
    },
    "8592": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8593": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6144
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x97235A1E"
    },
    "8598": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8601": {
      "op": "ADD"
    },
    "8602": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8604": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8606": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8607": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8608": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8609": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "SUB",
      "path": "1"
    },
    "8610": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8611": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8613": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8614": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8615": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8616": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8617": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8618": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8619": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B3"
    },
    "8622": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8623": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8625": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8626": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8627": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8628": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "POP",
      "path": "1"
    },
    "8629": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "GAS",
      "path": "1"
    },
    "8630": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "CALL",
      "path": "1"
    },
    "8631": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8632": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "POP",
      "path": "1"
    },
    "8633": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "POP",
      "path": "1"
    },
    "8634": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "POP",
      "path": "1"
    },
    "8635": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8636": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8637": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21C4"
    },
    "8640": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8641": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "POP",
      "path": "1"
    },
    "8642": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8644": {
      "fn": "Idea._transferToken",
      "offset": [
        6122,
        6165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8645": {
      "fn": "Idea._transferToken",
      "offset": [
        6118,
        6359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2257"
    },
    "8648": {
      "fn": "Idea._transferToken",
      "offset": [
        6118,
        6359
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8649": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 87,
      "value": "0x40"
    },
    "8651": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8652": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8661": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8668": {
      "op": "SHL"
    },
    "8669": {
      "op": "SUB"
    },
    "8670": {
      "op": "DUP4"
    },
    "8671": {
      "op": "DUP2"
    },
    "8672": {
      "op": "AND"
    },
    "8673": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8675": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8676": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ADD",
      "path": "1"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8680": {
      "op": "DUP3"
    },
    "8681": {
      "op": "ADD"
    },
    "8682": {
      "op": "DUP6"
    },
    "8683": {
      "op": "SWAP1"
    },
    "8684": {
      "op": "MSTORE"
    },
    "8685": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6323
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8686": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6323
      ],
      "op": "AND",
      "path": "1"
    },
    "8687": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6323
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8688": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6323
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "8693": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6323
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8696": {
      "op": "ADD"
    },
    "8697": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8699": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8701": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8702": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8703": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8704": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "SUB",
      "path": "1"
    },
    "8705": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8706": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8708": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8709": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "GAS",
      "path": "1"
    },
    "8710": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "CALL",
      "path": "1"
    },
    "8711": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8712": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8713": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8714": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2217"
    },
    "8717": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8718": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8719": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8721": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8722": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8723": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8724": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8726": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8727": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8728": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "POP",
      "path": "1"
    },
    "8729": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "POP",
      "path": "1"
    },
    "8730": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "POP",
      "path": "1"
    },
    "8731": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "POP",
      "path": "1"
    },
    "8732": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8734": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8735": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8736": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8738": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "NOT",
      "path": "1"
    },
    "8739": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8741": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8742": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ADD",
      "path": "1"
    },
    "8743": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "AND",
      "path": "1"
    },
    "8744": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8745": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ADD",
      "path": "1"
    },
    "8746": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8747": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8749": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8750": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "POP",
      "path": "1"
    },
    "8751": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8752": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "ADD",
      "path": "1"
    },
    "8753": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8754": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x223B"
    },
    "8757": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8758": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8759": {
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4077"
    },
    "8762": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6309,
        6333
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8763": {
      "branch": 209,
      "fn": "Idea._transferToken",
      "offset": [
        6309,
        6333
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8764": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2257"
    },
    "8767": {
      "branch": 209,
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8768": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8770": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8777": {
      "op": "SHL"
    },
    "8778": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8779": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8780": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8782": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "ADD",
      "path": "1"
    },
    "8783": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "8786": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8787": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4099"
    },
    "8790": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6301,
        6340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8791": {
      "fn": "Idea._transferToken",
      "offset": [
        6301,
        6340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8792": {
      "fn": "Idea._transferToken",
      "offset": [
        6076,
        6461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22EB"
    },
    "8795": {
      "fn": "Idea._transferToken",
      "offset": [
        6076,
        6461
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8796": {
      "fn": "Idea._transferToken",
      "offset": [
        6076,
        6461
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8797": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 88,
      "value": "0x40"
    },
    "8799": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8800": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8809": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8816": {
      "op": "SHL"
    },
    "8817": {
      "op": "SUB"
    },
    "8818": {
      "op": "DUP4"
    },
    "8819": {
      "op": "DUP2"
    },
    "8820": {
      "op": "AND"
    },
    "8821": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8823": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8824": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ADD",
      "path": "1"
    },
    "8825": {
      "op": "MSTORE"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8828": {
      "op": "DUP3"
    },
    "8829": {
      "op": "ADD"
    },
    "8830": {
      "op": "DUP6"
    },
    "8831": {
      "op": "SWAP1"
    },
    "8832": {
      "op": "MSTORE"
    },
    "8833": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6429
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8834": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6429
      ],
      "op": "AND",
      "path": "1"
    },
    "8835": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6429
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8836": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6429
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "8841": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6429
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8844": {
      "op": "ADD"
    },
    "8845": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8847": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8849": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8850": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8851": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8852": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "SUB",
      "path": "1"
    },
    "8853": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8854": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8856": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8857": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "GAS",
      "path": "1"
    },
    "8858": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "CALL",
      "path": "1"
    },
    "8859": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8860": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8861": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8862": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22AB"
    },
    "8865": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8866": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8867": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8869": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8870": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8871": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8872": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8874": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8875": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8876": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "POP",
      "path": "1"
    },
    "8877": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "POP",
      "path": "1"
    },
    "8878": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "POP",
      "path": "1"
    },
    "8879": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "POP",
      "path": "1"
    },
    "8880": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8882": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8883": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8884": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8886": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "NOT",
      "path": "1"
    },
    "8887": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8889": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8890": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ADD",
      "path": "1"
    },
    "8891": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "AND",
      "path": "1"
    },
    "8892": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8893": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ADD",
      "path": "1"
    },
    "8894": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8895": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8897": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8898": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "POP",
      "path": "1"
    },
    "8899": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8900": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "ADD",
      "path": "1"
    },
    "8901": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8902": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22CF"
    },
    "8905": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8906": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8907": {
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4077"
    },
    "8910": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6415,
        6439
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8911": {
      "branch": 210,
      "fn": "Idea._transferToken",
      "offset": [
        6415,
        6439
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8912": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22EB"
    },
    "8915": {
      "branch": 210,
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8916": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8918": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8925": {
      "op": "SHL"
    },
    "8926": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8927": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8928": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8930": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "ADD",
      "path": "1"
    },
    "8931": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "8934": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8935": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4099"
    },
    "8938": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6407,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8939": {
      "fn": "Idea._transferToken",
      "offset": [
        6407,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8940": {
      "fn": "Idea._transferToken",
      "offset": [
        5962,
        6471
      ],
      "op": "POP",
      "path": "1"
    },
    "8941": {
      "fn": "Idea._transferToken",
      "offset": [
        5887,
        6471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8942": {
      "fn": "Idea._transferToken",
      "offset": [
        6484,
        6490
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8944": {
      "fn": "Idea._transferToken",
      "offset": [
        6484,
        6490
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8945": {
      "fn": "Idea._transferToken",
      "offset": [
        6484,
        6490
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8947": {
      "branch": 211,
      "fn": "Idea._transferToken",
      "offset": [
        6484,
        6490
      ],
      "op": "AND",
      "path": "1"
    },
    "8948": {
      "fn": "Idea._transferToken",
      "offset": [
        6480,
        6536
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8949": {
      "fn": "Idea._transferToken",
      "offset": [
        6480,
        6536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3E"
    },
    "8952": {
      "branch": 211,
      "fn": "Idea._transferToken",
      "offset": [
        6480,
        6536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8953": {
      "fn": "Idea._transferToken",
      "offset": [
        6493,
        6534
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 89,
      "value": "0xB3E"
    },
    "8956": {
      "fn": "Idea._transferToken",
      "offset": [
        6515,
        6527
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8957": {
      "fn": "Idea._transferToken",
      "offset": [
        6528,
        6533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8958": {
      "fn": "Idea._transferToken",
      "offset": [
        6493,
        6514
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3769"
    },
    "8961": {
      "fn": "Idea._transferToken",
      "jump": "i",
      "offset": [
        6493,
        6534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8962": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16388,
        16745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8963": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13811,
        13815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8965": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8966": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8967": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8968": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "8970": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8972": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8973": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8975": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8976": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8977": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8978": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16463,
        16471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8979": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16463,
        16471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8980": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8982": {
      "fn": "Administrable.dividendExists",
      "offset": [
        13832,
        13856
      ],
      "op": "AND",
      "path": "0"
    },
    "8983": {
      "offset": [
        4633,
        4666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231F"
    },
    "8986": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8987": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8989": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8990": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8991": {
      "fn": "Administrable.dividendExists",
      "offset": [
        4633,
        4666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8992": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8994": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8995": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8996": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8998": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "8999": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9000": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9001": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "9002": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2345"
    },
    "9005": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9006": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9008": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9015": {
      "op": "SHL"
    },
    "9016": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9017": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9018": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9020": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9021": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "9024": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9025": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "9028": {
      "fn": "Administrable.dividendExists",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9029": {
      "fn": "Administrable.dividendExists",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9030": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16523,
        16528
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0x0"
    },
    "9032": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9033": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9034": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9035": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "9037": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9039": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9040": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9041": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9042": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9044": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9045": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9046": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16520
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9047": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9048": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16528
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9051": {
      "op": "NOT"
    },
    "9052": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16528
      ],
      "op": "AND",
      "path": "0"
    },
    "9053": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9054": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16496,
        16528
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9055": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16663
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0x15"
    },
    "9057": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9058": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9059": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9060": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9061": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9062": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9063": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9064": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9065": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "9070": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9072": {
      "op": "SHL"
    },
    "9073": {
      "op": "DUP2"
    },
    "9074": {
      "op": "MSTORE"
    },
    "9075": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9079": {
      "op": "DUP3"
    },
    "9080": {
      "op": "ADD"
    },
    "9081": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9082": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9083": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9084": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9085": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9086": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9087": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "SUB",
      "path": "0"
    },
    "9088": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "9090": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "ADD",
      "path": "0"
    },
    "9091": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9092": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16602
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9093": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9094": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9095": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9096": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "9098": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9099": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9100": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9101": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9102": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16627
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9103": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16640
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9110": {
      "op": "SHL"
    },
    "9111": {
      "op": "SUB"
    },
    "9112": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16603,
        16640
      ],
      "op": "AND",
      "path": "0"
    },
    "9113": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9114": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9115": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9116": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9117": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9118": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9119": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9120": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9121": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9122": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9123": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9124": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9125": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9126": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B0"
    },
    "9129": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9130": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9131": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16645,
        16673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9132": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECA"
    },
    "9135": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        16581,
        16673
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9136": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9137": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9138": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9139": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16581,
        16673
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "9144": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9145": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9146": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9148": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9149": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "ADD",
      "path": "0"
    },
    "9150": {
      "op": "DUP5"
    },
    "9151": {
      "op": "SWAP1"
    },
    "9152": {
      "op": "MSTORE"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9155": {
      "op": "DUP1"
    },
    "9156": {
      "op": "MLOAD"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9159": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "9162": {
      "op": "DUP4"
    },
    "9163": {
      "op": "CODECOPY"
    },
    "9164": {
      "op": "DUP2"
    },
    "9165": {
      "op": "MLOAD"
    },
    "9166": {
      "op": "SWAP2"
    },
    "9167": {
      "op": "MSTORE"
    },
    "9168": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16688,
        16737
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9169": {
      "op": "ADD"
    },
    "9170": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9172": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9173": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9176": {
      "op": "NOT"
    },
    "9177": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9178": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9179": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "SUB",
      "path": "0"
    },
    "9180": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "ADD",
      "path": "0"
    },
    "9181": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9182": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9183": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9184": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9185": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9186": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16705,
        16725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9187": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16688,
        16737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB0"
    },
    "9190": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16688,
        16737
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9191": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16726,
        16736
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9192": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16726,
        16736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9193": {
      "fn": "Administrable._dissolveDividend",
      "offset": [
        16688,
        16737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4125"
    },
    "9196": {
      "fn": "Administrable._dissolveDividend",
      "jump": "i",
      "offset": [
        16688,
        16737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9197": {
      "fn": "Administrable._createBank",
      "offset": [
        16917,
        17217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9198": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9200": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9201": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9202": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9204": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "9205": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9206": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9207": {
      "fn": "Administrable._createBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "9208": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2413"
    },
    "9211": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9212": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9214": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9221": {
      "op": "SHL"
    },
    "9222": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9223": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9224": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9226": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9227": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "9230": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9231": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "9234": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9235": {
      "fn": "Administrable._createBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9236": {
      "fn": "Administrable._createBank",
      "offset": [
        17022,
        17042
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 93,
      "value": "0x241C"
    },
    "9239": {
      "fn": "Administrable._createBank",
      "offset": [
        17033,
        17041
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9240": {
      "fn": "Administrable._createBank",
      "offset": [
        17022,
        17032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1636"
    },
    "9243": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17022,
        17042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9244": {
      "fn": "Administrable._createBank",
      "offset": [
        17022,
        17042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9245": {
      "branch": 184,
      "fn": "Administrable._createBank",
      "offset": [
        17021,
        17042
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9246": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244E"
    },
    "9249": {
      "branch": 184,
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9250": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9252": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9259": {
      "op": "SHL"
    },
    "9260": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9261": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9264": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9266": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9267": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "ADD",
      "path": "0"
    },
    "9268": {
      "op": "MSTORE"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9273": {
      "op": "DUP3"
    },
    "9274": {
      "op": "ADD"
    },
    "9275": {
      "op": "MSTORE"
    },
    "9276": {
      "op": "PUSH2",
      "value": "0x4145"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9281": {
      "op": "SHL"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9284": {
      "op": "DUP3"
    },
    "9285": {
      "op": "ADD"
    },
    "9286": {
      "op": "MSTORE"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9289": {
      "op": "ADD"
    },
    "9290": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "9293": {
      "op": "JUMP"
    },
    "9294": {
      "fn": "Administrable._createBank",
      "offset": [
        17013,
        17049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9295": {
      "fn": "Administrable._createBank",
      "offset": [
        17094,
        17098
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x1"
    },
    "9297": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "9299": {
      "fn": "Administrable._createBank",
      "offset": [
        17071,
        17079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9300": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9302": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9303": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2460"
    },
    "9306": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9307": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9308": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "9311": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17059,
        17080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9312": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9313": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9314": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9315": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9316": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9318": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9319": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9320": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9322": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9323": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9324": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9325": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "SUB",
      "path": "0"
    },
    "9326": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9327": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "ADD",
      "path": "0"
    },
    "9328": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9329": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17080
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9336": {
      "op": "SHL"
    },
    "9337": {
      "op": "SUB"
    },
    "9338": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9339": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "AND",
      "path": "0"
    },
    "9340": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9342": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9343": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9344": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9345": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9346": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9347": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9348": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17091
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9349": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9350": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9353": {
      "op": "NOT"
    },
    "9354": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "AND",
      "path": "0"
    },
    "9355": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9356": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9357": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9358": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9359": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9360": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9361": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "OR",
      "path": "0"
    },
    "9362": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9363": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9364": {
      "fn": "Administrable._createBank",
      "offset": [
        17059,
        17098
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9367": {
      "op": "SWAP1"
    },
    "9368": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0xD"
    },
    "9370": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9371": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A5"
    },
    "9374": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9375": {
      "fn": "Administrable._createBank",
      "offset": [
        17119,
        17127
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9376": {
      "fn": "Administrable._createBank",
      "offset": [
        17119,
        17127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9377": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "9380": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17108,
        17128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9381": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9382": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9383": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9384": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9385": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9387": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9388": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9390": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9391": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9392": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9393": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "SUB",
      "path": "0"
    },
    "9394": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9395": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "ADD",
      "path": "0"
    },
    "9396": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9397": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17128
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9398": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9399": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9402": {
      "op": "NOT"
    },
    "9403": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "AND",
      "path": "0"
    },
    "9404": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9405": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9406": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9407": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9408": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9409": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9410": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "OR",
      "path": "0"
    },
    "9411": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9412": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9413": {
      "fn": "Administrable._createBank",
      "offset": [
        17108,
        17135
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9416": {
      "op": "DUP1"
    },
    "9417": {
      "op": "MLOAD"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9420": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "9423": {
      "op": "DUP4"
    },
    "9424": {
      "op": "CODECOPY"
    },
    "9425": {
      "op": "DUP2"
    },
    "9426": {
      "op": "MLOAD"
    },
    "9427": {
      "op": "SWAP2"
    },
    "9428": {
      "op": "MSTORE"
    },
    "9429": {
      "fn": "Administrable._createBank",
      "offset": [
        17150,
        17209
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 96
    },
    "9430": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24E3"
    },
    "9433": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9434": {
      "fn": "Administrable._createBank",
      "offset": [
        17178,
        17186
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9435": {
      "fn": "Administrable._createBank",
      "offset": [
        17178,
        17186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9436": {
      "fn": "Administrable._createBank",
      "offset": [
        17187,
        17196
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9437": {
      "fn": "Administrable._createBank",
      "offset": [
        17187,
        17196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9438": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "ADD",
      "path": "0"
    },
    "9439": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "9442": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17167,
        17197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9443": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9444": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9446": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9447": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9450": {
      "op": "NOT"
    },
    "9451": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9452": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9453": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "SUB",
      "path": "0"
    },
    "9454": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "ADD",
      "path": "0"
    },
    "9455": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9456": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9457": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9458": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9459": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9460": {
      "fn": "Administrable._createBank",
      "offset": [
        17167,
        17197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9461": {
      "fn": "Administrable._createBank",
      "offset": [
        17150,
        17209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB0"
    },
    "9464": {
      "fn": "Administrable._createBank",
      "offset": [
        17150,
        17209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9465": {
      "fn": "Administrable._createBank",
      "offset": [
        17198,
        17208
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9466": {
      "fn": "Administrable._createBank",
      "offset": [
        17198,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9467": {
      "fn": "Administrable._createBank",
      "offset": [
        17150,
        17209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x417B"
    },
    "9470": {
      "fn": "Administrable._createBank",
      "jump": "i",
      "offset": [
        17150,
        17209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9471": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        17980,
        18253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9472": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9474": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9475": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9476": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9478": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "9479": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9480": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9481": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "9482": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2525"
    },
    "9485": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9486": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9488": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9495": {
      "op": "SHL"
    },
    "9496": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9497": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9498": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9500": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9501": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "9504": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9505": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "9508": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9509": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9510": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18089,
        18120
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 97,
      "value": "0x252F"
    },
    "9513": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18101,
        18109
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9514": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18110,
        18119
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9515": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18089,
        18100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1503"
    },
    "9518": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18089,
        18120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9519": {
      "branch": 185,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18089,
        18120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9520": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2538"
    },
    "9523": {
      "branch": 185,
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9524": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9526": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9527": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9528": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18081,
        18121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9529": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18166,
        18171
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x0"
    },
    "9531": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "9533": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18143,
        18151
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9534": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9536": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9537": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x254A"
    },
    "9540": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9541": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9542": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "9545": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18131,
        18152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9546": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9547": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9548": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9549": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9550": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9552": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9553": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9554": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9556": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9557": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9558": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9559": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "SUB",
      "path": "0"
    },
    "9560": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9561": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "ADD",
      "path": "0"
    },
    "9562": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9563": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18152
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9570": {
      "op": "SHL"
    },
    "9571": {
      "op": "SUB"
    },
    "9572": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9573": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "AND",
      "path": "0"
    },
    "9574": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9576": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9577": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9578": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9579": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9580": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9581": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9582": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9583": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9584": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9585": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9586": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9587": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9590": {
      "op": "NOT"
    },
    "9591": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "AND",
      "path": "0"
    },
    "9592": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9593": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9594": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9595": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9596": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9597": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9598": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "OR",
      "path": "0"
    },
    "9599": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9600": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9601": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18171
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9604": {
      "op": "DUP1"
    },
    "9605": {
      "op": "MLOAD"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9608": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "9611": {
      "op": "DUP4"
    },
    "9612": {
      "op": "CODECOPY"
    },
    "9613": {
      "op": "DUP2"
    },
    "9614": {
      "op": "MLOAD"
    },
    "9615": {
      "op": "SWAP2"
    },
    "9616": {
      "op": "MSTORE"
    },
    "9617": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18186,
        18245
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 99
    },
    "9618": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x259F"
    },
    "9621": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9622": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18214,
        18222
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9623": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18214,
        18222
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9624": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9625": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18131,
        18163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9626": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "ADD",
      "path": "0"
    },
    "9627": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "9630": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18203,
        18233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9631": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9632": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9634": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9635": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9638": {
      "op": "NOT"
    },
    "9639": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9640": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9641": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "SUB",
      "path": "0"
    },
    "9642": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "ADD",
      "path": "0"
    },
    "9643": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9644": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9645": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9646": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9647": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9648": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18203,
        18233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9649": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18186,
        18245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB0"
    },
    "9652": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18186,
        18245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9653": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18234,
        18244
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9654": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18234,
        18244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9655": {
      "fn": "Administrable._removeBankAdmin",
      "offset": [
        18186,
        18245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A7"
    },
    "9658": {
      "fn": "Administrable._removeBankAdmin",
      "jump": "i",
      "offset": [
        18186,
        18245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9659": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18357,
        18705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9660": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9662": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9663": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9664": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9666": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "9667": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9668": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9669": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "9670": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E1"
    },
    "9673": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9674": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9676": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9683": {
      "op": "SHL"
    },
    "9684": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9685": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9686": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9688": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9689": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "9692": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9693": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "9696": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9697": {
      "fn": "Administrable._deleteBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9698": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18442,
        18462
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 100,
      "value": "0x25EA"
    },
    "9701": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18453,
        18461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9702": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18442,
        18452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1636"
    },
    "9705": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18442,
        18462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9706": {
      "branch": 186,
      "fn": "Administrable._deleteBank",
      "offset": [
        18442,
        18462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9707": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261C"
    },
    "9710": {
      "branch": 186,
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9711": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9713": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9720": {
      "op": "SHL"
    },
    "9721": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9722": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9725": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9727": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9728": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "ADD",
      "path": "0"
    },
    "9729": {
      "op": "MSTORE"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9734": {
      "op": "DUP3"
    },
    "9735": {
      "op": "ADD"
    },
    "9736": {
      "op": "MSTORE"
    },
    "9737": {
      "op": "PUSH3",
      "value": "0x554221"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9743": {
      "op": "SHL"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9746": {
      "op": "DUP3"
    },
    "9747": {
      "op": "ADD"
    },
    "9748": {
      "op": "MSTORE"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "9755": {
      "op": "JUMP"
    },
    "9756": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18434,
        18470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9757": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 101,
      "value": "0x40"
    },
    "9759": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9760": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9761": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9762": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9763": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "ADD",
      "path": "0"
    },
    "9764": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9765": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9766": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9767": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9769": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9770": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9771": {
      "op": "PUSH4",
      "value": "0x36B0B4B7"
    },
    "9776": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9778": {
      "op": "SHL"
    },
    "9779": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9781": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9782": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9783": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "ADD",
      "path": "0"
    },
    "9784": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18528,
        18541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9785": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9786": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9787": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9788": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9789": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "ADD",
      "path": "0"
    },
    "9790": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18514
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9791": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18542
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x471DFAB0756EDC981C75DD3188CCD700755407F7D3BEDF452610F7A1E240D659"
    },
    "9824": {
      "branch": 187,
      "fn": "Administrable._deleteBank",
      "offset": [
        18488,
        18542
      ],
      "op": "ADD",
      "path": "0"
    },
    "9825": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2691"
    },
    "9828": {
      "branch": 187,
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9829": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9831": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9838": {
      "op": "SHL"
    },
    "9839": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9840": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9843": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9845": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9846": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "ADD",
      "path": "0"
    },
    "9847": {
      "op": "MSTORE"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9852": {
      "op": "DUP3"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "MSTORE"
    },
    "9855": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "9860": {
      "op": "SHL"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9863": {
      "op": "DUP3"
    },
    "9864": {
      "op": "ADD"
    },
    "9865": {
      "op": "MSTORE"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9868": {
      "op": "ADD"
    },
    "9869": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "9872": {
      "op": "JUMP"
    },
    "9873": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18480,
        18549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9874": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18567,
        18588
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 102,
      "value": "0x269A"
    },
    "9877": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18579,
        18587
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9878": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18567,
        18578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0E"
    },
    "9881": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18567,
        18588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9882": {
      "branch": 188,
      "fn": "Administrable._deleteBank",
      "offset": [
        18567,
        18588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9883": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26CB"
    },
    "9886": {
      "branch": 188,
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9887": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9889": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9896": {
      "op": "SHL"
    },
    "9897": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9898": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9901": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9903": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9904": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "ADD",
      "path": "0"
    },
    "9905": {
      "op": "MSTORE"
    },
    "9906": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9910": {
      "op": "DUP3"
    },
    "9911": {
      "op": "ADD"
    },
    "9912": {
      "op": "MSTORE"
    },
    "9913": {
      "op": "PUSH2",
      "value": "0x4245"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9918": {
      "op": "SHL"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9921": {
      "op": "DUP3"
    },
    "9922": {
      "op": "ADD"
    },
    "9923": {
      "op": "MSTORE"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9926": {
      "op": "ADD"
    },
    "9927": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "9930": {
      "op": "JUMP"
    },
    "9931": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18559,
        18595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9932": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18628,
        18633
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x0"
    },
    "9934": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "9936": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18616,
        18624
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9937": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9939": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9940": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26DD"
    },
    "9943": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9944": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9945": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "9948": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18605,
        18625
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9949": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9950": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9951": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9952": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9953": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9955": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9956": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9958": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9959": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9960": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9961": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "SUB",
      "path": "0"
    },
    "9962": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9963": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "ADD",
      "path": "0"
    },
    "9964": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9965": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18625
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9966": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9967": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9968": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9970": {
      "op": "NOT"
    },
    "9971": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "AND",
      "path": "0"
    },
    "9972": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9973": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9974": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9975": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9976": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9977": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9978": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "OR",
      "path": "0"
    },
    "9979": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9980": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9981": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18605,
        18633
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9984": {
      "op": "DUP1"
    },
    "9985": {
      "op": "MLOAD"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9988": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "9991": {
      "op": "DUP4"
    },
    "9992": {
      "op": "CODECOPY"
    },
    "9993": {
      "op": "DUP2"
    },
    "9994": {
      "op": "MLOAD"
    },
    "9995": {
      "op": "SWAP2"
    },
    "9996": {
      "op": "MSTORE"
    },
    "9997": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 104
    },
    "9998": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2719"
    },
    "10001": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10002": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18676,
        18684
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10003": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18676,
        18684
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10004": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "ADD",
      "path": "0"
    },
    "10005": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41D3"
    },
    "10008": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18665,
        18685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10009": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10010": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10012": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10013": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10016": {
      "op": "NOT"
    },
    "10017": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10018": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10019": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "SUB",
      "path": "0"
    },
    "10020": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "ADD",
      "path": "0"
    },
    "10021": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10022": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10023": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10024": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10025": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10026": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18665,
        18685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10027": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2735"
    },
    "10030": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10031": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18696
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10032": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18686,
        18696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10033": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E6"
    },
    "10036": {
      "fn": "Administrable._deleteBank",
      "jump": "i",
      "offset": [
        18648,
        18697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10037": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10038": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10040": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10041": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10042": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10043": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "SUB",
      "path": "0"
    },
    "10044": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10045": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18648,
        18697
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10046": {
      "fn": "Administrable._deleteBank",
      "offset": [
        18357,
        18705
      ],
      "op": "POP",
      "path": "0"
    },
    "10047": {
      "fn": "Administrable._deleteBank",
      "jump": "o",
      "offset": [
        18357,
        18705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10048": {
      "fn": "Idea._issueShards",
      "offset": [
        4993,
        5373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10049": {
      "fn": "Idea._issueShards",
      "offset": [
        5107,
        5133
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 105,
      "value": "0x2749"
    },
    "10052": {
      "fn": "Idea._issueShards",
      "offset": [
        5120,
        5132
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10053": {
      "fn": "Idea._issueShards",
      "offset": [
        5107,
        5119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1446"
    },
    "10056": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        5107,
        5133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10057": {
      "branch": 212,
      "fn": "Idea._issueShards",
      "offset": [
        5107,
        5133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10058": {
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2752"
    },
    "10061": {
      "branch": 212,
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10062": {
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10064": {
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10065": {
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10066": {
      "fn": "Idea._issueShards",
      "offset": [
        5099,
        5134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10067": {
      "fn": "Idea._issueShards",
      "offset": [
        5178,
        5182
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 106
    },
    "10068": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10070": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10071": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10072": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10073": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10075": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10077": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10078": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10080": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10081": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10082": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10083": {
      "fn": "Idea._issueShards",
      "offset": [
        5185,
        5190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10084": {
      "fn": "Idea._issueShards",
      "offset": [
        5185,
        5190
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10085": {
      "fn": "Idea._issueShards",
      "offset": [
        5144,
        5191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x276E"
    },
    "10088": {
      "fn": "Idea._issueShards",
      "offset": [
        5144,
        5191
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10089": {
      "fn": "Idea._issueShards",
      "offset": [
        5157,
        5184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10090": {
      "fn": "Idea._issueShards",
      "offset": [
        5144,
        5156
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C7"
    },
    "10093": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        5144,
        5191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10094": {
      "fn": "Idea._issueShards",
      "offset": [
        5144,
        5191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10095": {
      "fn": "Idea._issueShards",
      "offset": [
        5252,
        5256
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 107
    },
    "10096": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10098": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10099": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10100": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10101": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10103": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10105": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10106": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10107": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10108": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10110": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10111": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10112": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10113": {
      "fn": "Idea._issueShards",
      "offset": [
        5231,
        5258
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10114": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10115": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10116": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "10118": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10119": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10120": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10121": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10122": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5259
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10123": {
      "fn": "Idea._issueShards",
      "offset": [
        5219,
        5266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10124": {
      "fn": "Idea._issueShards",
      "offset": [
        5201,
        5287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27A2"
    },
    "10127": {
      "fn": "Idea._issueShards",
      "offset": [
        5201,
        5287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10128": {
      "fn": "Idea._issueShards",
      "offset": [
        5212,
        5266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2799"
    },
    "10131": {
      "fn": "Idea._issueShards",
      "offset": [
        5212,
        5266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10132": {
      "fn": "Idea._issueShards",
      "offset": [
        5212,
        5218
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10133": {
      "fn": "Idea._issueShards",
      "offset": [
        5212,
        5266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ECA"
    },
    "10136": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        5212,
        5266
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10137": {
      "fn": "Idea._issueShards",
      "offset": [
        5212,
        5266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10138": {
      "fn": "Idea._issueShards",
      "offset": [
        5275,
        5279
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "10139": {
      "fn": "Idea._issueShards",
      "offset": [
        5281,
        5286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10141": {
      "fn": "Idea._issueShards",
      "offset": [
        5281,
        5286
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10142": {
      "fn": "Idea._issueShards",
      "offset": [
        5201,
        5211
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3832"
    },
    "10145": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        5201,
        5287
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10146": {
      "fn": "Idea._issueShards",
      "offset": [
        5201,
        5287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10147": {
      "fn": "Idea._issueShards",
      "offset": [
        5330,
        5334
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 108
    },
    "10148": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10150": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10151": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10152": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10153": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10155": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10157": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10158": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10160": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10161": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10162": {
      "fn": "Idea._issueShards",
      "offset": [
        5309,
        5336
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10163": {
      "fn": "Idea._issueShards",
      "offset": [
        5297,
        5366
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF25"
    },
    "10166": {
      "fn": "Idea._issueShards",
      "offset": [
        5297,
        5366
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10167": {
      "fn": "Idea._issueShards",
      "offset": [
        5337,
        5343
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10168": {
      "fn": "Idea._issueShards",
      "offset": [
        5344,
        5356
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10169": {
      "fn": "Idea._issueShards",
      "offset": [
        5357,
        5362
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10170": {
      "fn": "Idea._issueShards",
      "offset": [
        5363,
        5365
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10171": {
      "fn": "Idea._issueShards",
      "offset": [
        5297,
        5308
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34F8"
    },
    "10174": {
      "fn": "Idea._issueShards",
      "jump": "i",
      "offset": [
        5297,
        5366
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10175": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15500,
        16243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10176": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10178": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10179": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10180": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10182": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "10183": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10184": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10185": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "10186": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E5"
    },
    "10189": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10190": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10192": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10199": {
      "op": "SHL"
    },
    "10200": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10201": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10202": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10204": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "10205": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "10208": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10209": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "10212": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10213": {
      "fn": "Administrable._issueDividend",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10214": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15617,
        15638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10216": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15641,
        15646
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10217": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 109,
      "value": "0x40"
    },
    "10219": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10220": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10222": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10223": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F9"
    },
    "10226": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10227": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15687,
        15695
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10228": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15687,
        15695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10229": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "10232": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15673,
        15696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10233": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10234": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10235": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10236": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10237": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10239": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10240": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10241": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10243": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10244": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10245": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10246": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SUB",
      "path": "0"
    },
    "10247": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10248": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "ADD",
      "path": "0"
    },
    "10249": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10250": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10257": {
      "op": "SHL"
    },
    "10258": {
      "op": "SUB"
    },
    "10259": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10260": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "AND",
      "path": "0"
    },
    "10261": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10263": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10264": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10265": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10266": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10267": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10268": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10269": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10270": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15673,
        15710
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10271": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15664,
        15710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10272": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15664,
        15710
      ],
      "op": "GT",
      "path": "0"
    },
    "10273": {
      "branch": 189,
      "fn": "Administrable._issueDividend",
      "offset": [
        15664,
        15710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10274": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283D"
    },
    "10277": {
      "branch": 189,
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10278": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10280": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10287": {
      "op": "SHL"
    },
    "10288": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10289": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10290": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10292": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "ADD",
      "path": "0"
    },
    "10293": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "10296": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10297": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4212"
    },
    "10300": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15656,
        15717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10301": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15656,
        15717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10302": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15768,
        15773
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 110
    },
    "10303": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10305": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15741,
        15749
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10306": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10308": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10309": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284E"
    },
    "10312": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10313": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10314": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "10317": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15727,
        15750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10318": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10319": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10320": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10321": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10322": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10324": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "ADD",
      "path": "0"
    },
    "10325": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10327": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10328": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10329": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10330": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SUB",
      "path": "0"
    },
    "10331": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10332": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15750
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10333": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10335": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15751,
        15763
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10342": {
      "op": "SHL"
    },
    "10343": {
      "op": "SUB"
    },
    "10344": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "AND",
      "path": "0"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10351": {
      "op": "SHL"
    },
    "10352": {
      "op": "SUB"
    },
    "10353": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "AND",
      "path": "0"
    },
    "10354": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10355": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10356": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10358": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "ADD",
      "path": "0"
    },
    "10359": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10360": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10361": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10362": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10364": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "ADD",
      "path": "0"
    },
    "10365": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10367": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10368": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10370": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10371": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10372": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10373": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x288E"
    },
    "10376": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10377": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10378": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "10381": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15727,
        15773
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10382": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10383": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10384": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10385": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15727,
        15773
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10386": {
      "op": "POP"
    },
    "10387": {
      "op": "POP"
    },
    "10388": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10390": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10391": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10393": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10394": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A4"
    },
    "10397": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10398": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15801,
        15809
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10399": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15801,
        15809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10400": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "10403": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15787,
        15810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10404": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10405": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10406": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10407": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10408": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10410": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10411": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10412": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10414": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10415": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10416": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10417": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SUB",
      "path": "0"
    },
    "10418": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10419": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "ADD",
      "path": "0"
    },
    "10420": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10421": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15810
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10428": {
      "op": "SHL"
    },
    "10429": {
      "op": "SUB"
    },
    "10430": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10431": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "AND",
      "path": "0"
    },
    "10432": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10434": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10435": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10436": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10437": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10438": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10439": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10440": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10441": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10442": {
      "branch": 190,
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15829
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10443": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10444": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10445": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28DE"
    },
    "10448": {
      "branch": 190,
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10449": {
      "op": "POP"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10456": {
      "op": "SHL"
    },
    "10457": {
      "op": "SUB"
    },
    "10458": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15833,
        15859
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10459": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15833,
        15859
      ],
      "op": "AND",
      "path": "0"
    },
    "10460": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15833,
        15859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10461": {
      "branch": 191,
      "fn": "Administrable._issueDividend",
      "offset": [
        15833,
        15859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10462": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15787,
        15859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10463": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15783,
        15927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10464": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15783,
        15927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2918"
    },
    "10467": {
      "branch": 191,
      "fn": "Administrable._issueDividend",
      "offset": [
        15783,
        15927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10468": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15915,
        15916
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 111,
      "value": "0x1"
    },
    "10470": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10472": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15902,
        15910
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10473": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10475": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10476": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F5"
    },
    "10479": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10480": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10481": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "10484": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15875,
        15911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10485": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10486": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10487": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10488": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10489": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10491": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "ADD",
      "path": "0"
    },
    "10492": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10494": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10495": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10496": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10497": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SUB",
      "path": "0"
    },
    "10498": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10499": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10500": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10502": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10503": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10504": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10505": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2912"
    },
    "10508": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10509": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10510": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "10513": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        15875,
        15916
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10514": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10515": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10516": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10517": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15875,
        15916
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10518": {
      "op": "POP"
    },
    "10519": {
      "op": "POP"
    },
    "10520": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15783,
        15927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10521": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 112,
      "value": "0x40"
    },
    "10523": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10524": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10525": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10526": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10527": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "ADD",
      "path": "0"
    },
    "10528": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10529": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10536": {
      "op": "SHL"
    },
    "10537": {
      "op": "SUB"
    },
    "10538": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10539": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10540": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "AND",
      "path": "0"
    },
    "10541": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10542": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10543": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10545": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10546": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10547": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "ADD",
      "path": "0"
    },
    "10548": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10549": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10550": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10553": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10554": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10555": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10556": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "10558": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10559": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10560": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10561": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10562": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        15965
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10563": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10564": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10565": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10566": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10573": {
      "op": "SHL"
    },
    "10574": {
      "op": "SUB"
    },
    "10575": {
      "op": "NOT"
    },
    "10576": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "AND",
      "path": "0"
    },
    "10577": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10578": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "AND",
      "path": "0"
    },
    "10579": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10580": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10581": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10582": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "OR",
      "path": "0"
    },
    "10583": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10584": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10585": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10588": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10589": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10590": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "ADD",
      "path": "0"
    },
    "10591": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15936,
        16056
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10592": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16084
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 113,
      "value": "0x15"
    },
    "10594": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16099
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10595": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16099
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10596": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16099
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10597": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16099
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10598": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16099
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10599": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16107
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10600": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10601": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16066,
        16107
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10602": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16131
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 114,
      "value": "0x13"
    },
    "10604": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10605": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10606": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10607": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10608": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10609": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16146
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10610": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10611": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10614": {
      "op": "NOT"
    },
    "10615": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "AND",
      "path": "0"
    },
    "10616": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10617": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10618": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "OR",
      "path": "0"
    },
    "10619": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10620": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10621": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16117,
        16153
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10622": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 115
    },
    "10623": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10626": {
      "op": "DUP1"
    },
    "10627": {
      "op": "MLOAD"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10630": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "10633": {
      "op": "DUP4"
    },
    "10634": {
      "op": "CODECOPY"
    },
    "10635": {
      "op": "DUP2"
    },
    "10636": {
      "op": "MLOAD"
    },
    "10637": {
      "op": "SWAP2"
    },
    "10638": {
      "op": "MSTORE"
    },
    "10639": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10640": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299F"
    },
    "10643": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10644": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16196,
        16204
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10645": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16196,
        16204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10646": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10647": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10648": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10649": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15968,
        16056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10650": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "ADD",
      "path": "0"
    },
    "10651": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422E"
    },
    "10654": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16185,
        16224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10655": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10656": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10658": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10659": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10662": {
      "op": "NOT"
    },
    "10663": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10664": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10665": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "SUB",
      "path": "0"
    },
    "10666": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "ADD",
      "path": "0"
    },
    "10667": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10668": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10669": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10670": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10671": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10672": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16185,
        16224
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10673": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29BB"
    },
    "10676": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10677": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16225,
        16235
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10678": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16225,
        16235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10679": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425C"
    },
    "10682": {
      "fn": "Administrable._issueDividend",
      "jump": "i",
      "offset": [
        16168,
        16236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10683": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10684": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10686": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10687": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10688": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10689": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "SUB",
      "path": "0"
    },
    "10690": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10691": {
      "fn": "Administrable._issueDividend",
      "offset": [
        16168,
        16236
      ],
      "op": "LOG1",
      "path": "0"
    },
    "10692": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15607,
        16243
      ],
      "op": "POP",
      "path": "0"
    },
    "10693": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15500,
        16243
      ],
      "op": "POP",
      "path": "0"
    },
    "10694": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15500,
        16243
      ],
      "op": "POP",
      "path": "0"
    },
    "10695": {
      "fn": "Administrable._issueDividend",
      "offset": [
        15500,
        16243
      ],
      "op": "POP",
      "path": "0"
    },
    "10696": {
      "fn": "Administrable._issueDividend",
      "jump": "o",
      "offset": [
        15500,
        16243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10697": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        21941,
        22142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10698": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22024,
        22067
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 116,
      "value": "0x29D2"
    },
    "10701": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22054,
        22066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10702": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22024,
        22053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3956"
    },
    "10705": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        22024,
        22067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10706": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22024,
        22067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10707": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 117,
      "value": "0x40"
    },
    "10709": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10710": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10717": {
      "op": "SHL"
    },
    "10718": {
      "op": "SUB"
    },
    "10719": {
      "op": "DUP4"
    },
    "10720": {
      "op": "AND"
    },
    "10721": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10723": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10724": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "ADD",
      "path": "0"
    },
    "10725": {
      "op": "MSTORE"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10728": {
      "op": "DUP1"
    },
    "10729": {
      "op": "MLOAD"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10732": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "10735": {
      "op": "DUP4"
    },
    "10736": {
      "op": "CODECOPY"
    },
    "10737": {
      "op": "DUP2"
    },
    "10738": {
      "op": "MLOAD"
    },
    "10739": {
      "op": "SWAP2"
    },
    "10740": {
      "op": "MSTORE"
    },
    "10741": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22082,
        22135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10742": {
      "op": "ADD"
    },
    "10743": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10745": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10746": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10749": {
      "op": "NOT"
    },
    "10750": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10751": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10752": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "SUB",
      "path": "0"
    },
    "10753": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "ADD",
      "path": "0"
    },
    "10754": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10755": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10756": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10757": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10758": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10759": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22099,
        22123
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10760": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22082,
        22135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2735"
    },
    "10763": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22082,
        22135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10764": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22124,
        22134
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10765": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22124,
        22134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10766": {
      "fn": "Administrable._unregisterTokenAddress",
      "offset": [
        22082,
        22135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4288"
    },
    "10769": {
      "fn": "Administrable._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        22082,
        22135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10770": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22336,
        22533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10771": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22417,
        22458
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 118,
      "value": "0x2A1B"
    },
    "10774": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22445,
        22457
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10775": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22417,
        22444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39FC"
    },
    "10778": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        22417,
        22458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10779": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22417,
        22458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10780": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 119,
      "value": "0x40"
    },
    "10782": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10783": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10790": {
      "op": "SHL"
    },
    "10791": {
      "op": "SUB"
    },
    "10792": {
      "op": "DUP4"
    },
    "10793": {
      "op": "AND"
    },
    "10794": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10796": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10797": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "ADD",
      "path": "0"
    },
    "10798": {
      "op": "MSTORE"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10801": {
      "op": "DUP1"
    },
    "10802": {
      "op": "MLOAD"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10805": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "10808": {
      "op": "DUP4"
    },
    "10809": {
      "op": "CODECOPY"
    },
    "10810": {
      "op": "DUP2"
    },
    "10811": {
      "op": "MLOAD"
    },
    "10812": {
      "op": "SWAP2"
    },
    "10813": {
      "op": "MSTORE"
    },
    "10814": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22473,
        22526
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10815": {
      "op": "ADD"
    },
    "10816": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10818": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10819": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10822": {
      "op": "NOT"
    },
    "10823": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10824": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10825": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "SUB",
      "path": "0"
    },
    "10826": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "ADD",
      "path": "0"
    },
    "10827": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10828": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10829": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10830": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10831": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10832": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22490,
        22514
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10833": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22473,
        22526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2735"
    },
    "10836": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22473,
        22526
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10837": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22515,
        22525
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10838": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22515,
        22525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10839": {
      "fn": "Administrable._registerTokenAddress",
      "offset": [
        22473,
        22526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42B4"
    },
    "10842": {
      "fn": "Administrable._registerTokenAddress",
      "jump": "i",
      "offset": [
        22473,
        22526
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10843": {
      "fn": "Idea._receiveToken",
      "offset": [
        7173,
        7553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10844": {
      "fn": "Idea._receiveToken",
      "offset": [
        7260,
        7286
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 120,
      "value": "0x2A64"
    },
    "10847": {
      "fn": "Idea._receiveToken",
      "offset": [
        7273,
        7285
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10848": {
      "fn": "Idea._receiveToken",
      "offset": [
        7260,
        7272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1446"
    },
    "10851": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7260,
        7286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10852": {
      "branch": 213,
      "fn": "Idea._receiveToken",
      "offset": [
        7260,
        7286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10853": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A95"
    },
    "10856": {
      "branch": 213,
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10857": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10859": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10866": {
      "op": "SHL"
    },
    "10867": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10868": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10871": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10873": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10874": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "ADD",
      "path": "1"
    },
    "10875": {
      "op": "MSTORE"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10880": {
      "op": "DUP3"
    },
    "10881": {
      "op": "ADD"
    },
    "10882": {
      "op": "MSTORE"
    },
    "10883": {
      "op": "PUSH2",
      "value": "0x1555"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "10888": {
      "op": "SHL"
    },
    "10889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10891": {
      "op": "DUP3"
    },
    "10892": {
      "op": "ADD"
    },
    "10893": {
      "op": "MSTORE"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10896": {
      "op": "ADD"
    },
    "10897": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "10900": {
      "op": "JUMP"
    },
    "10901": {
      "fn": "Idea._receiveToken",
      "offset": [
        7252,
        7292
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10902": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 121,
      "value": "0x40"
    },
    "10904": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10905": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "10910": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10912": {
      "op": "SHL"
    },
    "10913": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10914": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10915": {
      "fn": "Idea._receiveToken",
      "offset": [
        7369,
        7379
      ],
      "op": "CALLER",
      "path": "1"
    },
    "10916": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10918": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10919": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ADD",
      "path": "1"
    },
    "10920": {
      "op": "MSTORE"
    },
    "10921": {
      "fn": "Idea._receiveToken",
      "offset": [
        7388,
        7392
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10924": {
      "op": "DUP3"
    },
    "10925": {
      "op": "ADD"
    },
    "10926": {
      "op": "MSTORE"
    },
    "10927": {
      "fn": "Idea._receiveToken",
      "offset": [
        7322,
        7334
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10928": {
      "fn": "Idea._receiveToken",
      "offset": [
        7322,
        7334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10929": {
      "fn": "Idea._receiveToken",
      "offset": [
        7398,
        7403
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10930": {
      "fn": "Idea._receiveToken",
      "offset": [
        7398,
        7403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10937": {
      "op": "SHL"
    },
    "10938": {
      "op": "SUB"
    },
    "10939": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7368
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10940": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7368
      ],
      "op": "AND",
      "path": "1"
    },
    "10941": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10942": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7368
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "10947": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10948": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10950": {
      "op": "ADD"
    },
    "10951": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10953": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10955": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10956": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10957": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10958": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "SUB",
      "path": "1"
    },
    "10959": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10960": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10961": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "GAS",
      "path": "1"
    },
    "10962": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "10963": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10964": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10965": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10966": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AE3"
    },
    "10969": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10970": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10971": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10973": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10974": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10975": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10976": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10978": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10979": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10980": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "POP",
      "path": "1"
    },
    "10981": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "POP",
      "path": "1"
    },
    "10982": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "POP",
      "path": "1"
    },
    "10983": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "POP",
      "path": "1"
    },
    "10984": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10986": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10987": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10988": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10990": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "NOT",
      "path": "1"
    },
    "10991": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10993": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10994": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ADD",
      "path": "1"
    },
    "10995": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "AND",
      "path": "1"
    },
    "10996": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10997": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ADD",
      "path": "1"
    },
    "10998": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10999": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11001": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11002": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "POP",
      "path": "1"
    },
    "11003": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11004": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "ADD",
      "path": "1"
    },
    "11005": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11006": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B07"
    },
    "11009": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11010": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11011": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4042"
    },
    "11014": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7353,
        7394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11015": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11016": {
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7403
      ],
      "op": "LT",
      "path": "1"
    },
    "11017": {
      "branch": 214,
      "fn": "Idea._receiveToken",
      "offset": [
        7353,
        7403
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11018": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B25"
    },
    "11021": {
      "branch": 214,
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11022": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11024": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11031": {
      "op": "SHL"
    },
    "11032": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11033": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11034": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11036": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "ADD",
      "path": "1"
    },
    "11037": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "11040": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11041": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405B"
    },
    "11044": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7345,
        7409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11045": {
      "fn": "Idea._receiveToken",
      "offset": [
        7345,
        7409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11046": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 122,
      "value": "0x40"
    },
    "11048": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11049": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11056": {
      "op": "SHL"
    },
    "11057": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11058": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11059": {
      "fn": "Idea._receiveToken",
      "offset": [
        7446,
        7456
      ],
      "op": "CALLER",
      "path": "1"
    },
    "11060": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11062": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11063": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ADD",
      "path": "1"
    },
    "11064": {
      "op": "MSTORE"
    },
    "11065": {
      "fn": "Idea._receiveToken",
      "offset": [
        7465,
        7469
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11068": {
      "op": "DUP3"
    },
    "11069": {
      "op": "ADD"
    },
    "11070": {
      "op": "MSTORE"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11073": {
      "op": "DUP2"
    },
    "11074": {
      "op": "ADD"
    },
    "11075": {
      "op": "DUP4"
    },
    "11076": {
      "op": "SWAP1"
    },
    "11077": {
      "op": "MSTORE"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11084": {
      "op": "SHL"
    },
    "11085": {
      "op": "SUB"
    },
    "11086": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7445
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11087": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7445
      ],
      "op": "AND",
      "path": "1"
    },
    "11088": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11089": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7445
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "11094": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11097": {
      "op": "ADD"
    },
    "11098": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11100": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11102": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11103": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11104": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11105": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "SUB",
      "path": "1"
    },
    "11106": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11107": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11109": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP8",
      "path": "1"
    },
    "11110": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "GAS",
      "path": "1"
    },
    "11111": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "CALL",
      "path": "1"
    },
    "11112": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11113": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11114": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11115": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B78"
    },
    "11118": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11119": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11120": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11122": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11123": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "11124": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11125": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11127": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11128": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11129": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "POP",
      "path": "1"
    },
    "11130": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "POP",
      "path": "1"
    },
    "11131": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "POP",
      "path": "1"
    },
    "11132": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "POP",
      "path": "1"
    },
    "11133": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11135": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11136": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11137": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11139": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "NOT",
      "path": "1"
    },
    "11140": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11142": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11143": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ADD",
      "path": "1"
    },
    "11144": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "AND",
      "path": "1"
    },
    "11145": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11146": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ADD",
      "path": "1"
    },
    "11147": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11148": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11150": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11151": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "POP",
      "path": "1"
    },
    "11152": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11153": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "ADD",
      "path": "1"
    },
    "11154": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11155": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B9C"
    },
    "11158": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11159": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11160": {
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4077"
    },
    "11163": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7427,
        7478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11164": {
      "branch": 215,
      "fn": "Idea._receiveToken",
      "offset": [
        7427,
        7478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11165": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB8"
    },
    "11168": {
      "branch": 215,
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11169": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11171": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11178": {
      "op": "SHL"
    },
    "11179": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11180": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11181": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11183": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "ADD",
      "path": "1"
    },
    "11184": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "11187": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11188": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4099"
    },
    "11191": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7419,
        7485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11192": {
      "fn": "Idea._receiveToken",
      "offset": [
        7419,
        7485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11193": {
      "fn": "Idea._receiveToken",
      "offset": [
        7495,
        7546
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 123,
      "value": "0xB3E"
    },
    "11196": {
      "fn": "Idea._receiveToken",
      "offset": [
        7516,
        7528
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11197": {
      "fn": "Idea._receiveToken",
      "offset": [
        7529,
        7534
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11198": {
      "fn": "Idea._receiveToken",
      "offset": [
        7535,
        7545
      ],
      "op": "CALLER",
      "path": "1"
    },
    "11199": {
      "fn": "Idea._receiveToken",
      "offset": [
        7495,
        7515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x955"
    },
    "11202": {
      "fn": "Idea._receiveToken",
      "jump": "i",
      "offset": [
        7495,
        7546
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11203": {
      "fn": "Administrable._moveToken",
      "offset": [
        19985,
        20781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11204": {
      "fn": "Administrable._moveToken",
      "offset": [
        20122,
        20132
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11205": {
      "offset": [
        4385,
        4405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BCD"
    },
    "11208": {
      "offset": [
        4396,
        4404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11209": {
      "offset": [
        4385,
        4395
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1636"
    },
    "11212": {
      "jump": "i",
      "offset": [
        4385,
        4405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11213": {
      "branch": 192,
      "fn": "Administrable._moveToken",
      "offset": [
        4385,
        4405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11214": {
      "offset": [
        4377,
        4413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BFF"
    },
    "11217": {
      "branch": 192,
      "offset": [
        4377,
        4413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11218": {
      "fn": "Administrable._moveToken",
      "offset": [
        4377,
        4413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11220": {
      "fn": "Administrable._moveToken",
      "offset": [
        4377,
        4413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11227": {
      "op": "SHL"
    },
    "11228": {
      "offset": [
        4377,
        4413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11229": {
      "fn": "Administrable._moveToken",
      "offset": [
        4377,
        4413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11232": {
      "offset": [
        4377,
        4413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11234": {
      "fn": "Administrable._moveToken",
      "offset": [
        4377,
        4413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11235": {
      "fn": "Administrable._moveToken",
      "offset": [
        4377,
        4413
      ],
      "op": "ADD",
      "path": "0"
    },
    "11236": {
      "op": "MSTORE"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11241": {
      "op": "DUP3"
    },
    "11242": {
      "op": "ADD"
    },
    "11243": {
      "op": "MSTORE"
    },
    "11244": {
      "op": "PUSH3",
      "value": "0x444E45"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11250": {
      "op": "SHL"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11253": {
      "op": "DUP3"
    },
    "11254": {
      "op": "ADD"
    },
    "11255": {
      "op": "MSTORE"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11258": {
      "op": "ADD"
    },
    "11259": {
      "offset": [
        4377,
        4413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "11262": {
      "op": "JUMP"
    },
    "11263": {
      "offset": [
        4377,
        4413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11264": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11266": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11267": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11268": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11270": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "11271": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11272": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11273": {
      "fn": "Administrable._moveToken",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "11274": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C25"
    },
    "11277": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11278": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11280": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11287": {
      "op": "SHL"
    },
    "11288": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11289": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11290": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11292": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "11293": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "11296": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11297": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "11300": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11301": {
      "fn": "Administrable._moveToken",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11302": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20187
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 124,
      "value": "0xF"
    },
    "11304": {
      "fn": "Administrable._moveToken",
      "offset": [
        20188,
        20200
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11305": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11307": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11308": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C35"
    },
    "11311": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11312": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11313": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11316": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20174,
        20201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11317": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11318": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11319": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11320": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11321": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11323": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11324": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11325": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11327": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11328": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11329": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11330": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SUB",
      "path": "0"
    },
    "11331": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11332": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "ADD",
      "path": "0"
    },
    "11333": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11334": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20201
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11341": {
      "op": "SHL"
    },
    "11342": {
      "op": "SUB"
    },
    "11343": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11344": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "AND",
      "path": "0"
    },
    "11345": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11347": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11348": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11349": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11350": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11351": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11352": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11353": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11354": {
      "fn": "Administrable._moveToken",
      "offset": [
        20174,
        20215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11355": {
      "fn": "Administrable._moveToken",
      "offset": [
        20165,
        20215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11356": {
      "fn": "Administrable._moveToken",
      "offset": [
        20165,
        20215
      ],
      "op": "GT",
      "path": "0"
    },
    "11357": {
      "branch": 193,
      "fn": "Administrable._moveToken",
      "offset": [
        20165,
        20215
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11358": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C79"
    },
    "11361": {
      "branch": 193,
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11362": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11364": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11371": {
      "op": "SHL"
    },
    "11372": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11373": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11374": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11376": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "ADD",
      "path": "0"
    },
    "11377": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "11380": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11381": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4212"
    },
    "11384": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20157,
        20222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11385": {
      "fn": "Administrable._moveToken",
      "offset": [
        20157,
        20222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11386": {
      "fn": "Administrable._moveToken",
      "offset": [
        20277,
        20282
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 125
    },
    "11387": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11389": {
      "fn": "Administrable._moveToken",
      "offset": [
        20246,
        20258
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11390": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11392": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11393": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8A"
    },
    "11396": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11397": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11398": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11401": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20232,
        20259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11402": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11403": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11404": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11405": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11406": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11408": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "ADD",
      "path": "0"
    },
    "11409": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11411": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11412": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11413": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11414": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SUB",
      "path": "0"
    },
    "11415": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11416": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20259
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11417": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11419": {
      "fn": "Administrable._moveToken",
      "offset": [
        20260,
        20272
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11426": {
      "op": "SHL"
    },
    "11427": {
      "op": "SUB"
    },
    "11428": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "AND",
      "path": "0"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11435": {
      "op": "SHL"
    },
    "11436": {
      "op": "SUB"
    },
    "11437": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "AND",
      "path": "0"
    },
    "11438": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11439": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11440": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11442": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "ADD",
      "path": "0"
    },
    "11443": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11444": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11445": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11446": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11448": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "ADD",
      "path": "0"
    },
    "11449": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11451": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11452": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11454": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11455": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11456": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11457": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CCA"
    },
    "11460": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11461": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11462": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "11465": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20232,
        20282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11466": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11467": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11468": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11469": {
      "fn": "Administrable._moveToken",
      "offset": [
        20232,
        20282
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11470": {
      "op": "POP"
    },
    "11471": {
      "op": "POP"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11478": {
      "op": "SHL"
    },
    "11479": {
      "op": "SUB"
    },
    "11480": {
      "fn": "Administrable._moveToken",
      "offset": [
        20296,
        20322
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11481": {
      "fn": "Administrable._moveToken",
      "offset": [
        20296,
        20322
      ],
      "op": "AND",
      "path": "0"
    },
    "11482": {
      "branch": 194,
      "fn": "Administrable._moveToken",
      "offset": [
        20296,
        20322
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11483": {
      "fn": "Administrable._moveToken",
      "offset": [
        20292,
        20618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DBE"
    },
    "11486": {
      "branch": 194,
      "fn": "Administrable._moveToken",
      "offset": [
        20292,
        20618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11487": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11489": {
      "fn": "Administrable._moveToken",
      "offset": [
        20356,
        20368
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11490": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11492": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11493": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CEE"
    },
    "11496": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11497": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11498": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11501": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20342,
        20369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11502": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11503": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11504": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11505": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11506": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11508": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11509": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11510": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11512": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11513": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11514": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11515": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SUB",
      "path": "0"
    },
    "11516": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11517": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "ADD",
      "path": "0"
    },
    "11518": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11519": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20369
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11526": {
      "op": "SHL"
    },
    "11527": {
      "op": "SUB"
    },
    "11528": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11529": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "AND",
      "path": "0"
    },
    "11530": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11532": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11533": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11534": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11535": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11536": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11537": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11538": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11539": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20383
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11540": {
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11541": {
      "branch": 195,
      "fn": "Administrable._moveToken",
      "offset": [
        20342,
        20388
      ],
      "op": "SUB",
      "path": "0"
    },
    "11542": {
      "fn": "Administrable._moveToken",
      "offset": [
        20338,
        20469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4E"
    },
    "11545": {
      "branch": 195,
      "fn": "Administrable._moveToken",
      "offset": [
        20338,
        20469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11546": {
      "fn": "Administrable._moveToken",
      "offset": [
        20452,
        20453
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 126,
      "value": "0x1"
    },
    "11548": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11550": {
      "fn": "Administrable._moveToken",
      "offset": [
        20435,
        20447
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11551": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11553": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11554": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2B"
    },
    "11557": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11558": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11559": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11562": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20408,
        20448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11563": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11564": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11565": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11566": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11567": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11569": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "ADD",
      "path": "0"
    },
    "11570": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11572": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11573": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11574": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11575": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SUB",
      "path": "0"
    },
    "11576": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11577": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11578": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11580": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11581": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11582": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11583": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D48"
    },
    "11586": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11587": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11588": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "11591": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20408,
        20453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11592": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11593": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11594": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11595": {
      "fn": "Administrable._moveToken",
      "offset": [
        20408,
        20453
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11596": {
      "op": "POP"
    },
    "11597": {
      "op": "POP"
    },
    "11598": {
      "fn": "Administrable._moveToken",
      "offset": [
        20338,
        20469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11599": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11601": {
      "fn": "Administrable._moveToken",
      "offset": [
        20500,
        20510
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11602": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11604": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11605": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5E"
    },
    "11608": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11609": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11610": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11613": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20486,
        20511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11614": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11615": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11616": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11617": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11618": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11620": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11621": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11622": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11624": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11625": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11626": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11627": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SUB",
      "path": "0"
    },
    "11628": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11629": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "ADD",
      "path": "0"
    },
    "11630": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11631": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20511
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11638": {
      "op": "SHL"
    },
    "11639": {
      "op": "SUB"
    },
    "11640": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11641": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "AND",
      "path": "0"
    },
    "11642": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11644": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11645": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11646": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11647": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11648": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11649": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11650": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11651": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11652": {
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11653": {
      "branch": 196,
      "fn": "Administrable._moveToken",
      "offset": [
        20486,
        20530
      ],
      "op": "SUB",
      "path": "0"
    },
    "11654": {
      "fn": "Administrable._moveToken",
      "offset": [
        20482,
        20608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DBE"
    },
    "11657": {
      "branch": 196,
      "fn": "Administrable._moveToken",
      "offset": [
        20482,
        20608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11658": {
      "fn": "Administrable._moveToken",
      "offset": [
        20592,
        20593
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 127,
      "value": "0x1"
    },
    "11660": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "11662": {
      "fn": "Administrable._moveToken",
      "offset": [
        20577,
        20587
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11663": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11665": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11666": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D9B"
    },
    "11669": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11670": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11671": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11674": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20550,
        20588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11675": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11676": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11677": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11678": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11679": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11681": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "ADD",
      "path": "0"
    },
    "11682": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11684": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11685": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11686": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11687": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SUB",
      "path": "0"
    },
    "11688": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11689": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11690": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11692": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11693": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11694": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11695": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB8"
    },
    "11698": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11699": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11700": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECA"
    },
    "11703": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20550,
        20593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11704": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11705": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11706": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11707": {
      "fn": "Administrable._moveToken",
      "offset": [
        20550,
        20593
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11708": {
      "op": "POP"
    },
    "11709": {
      "op": "POP"
    },
    "11710": {
      "fn": "Administrable._moveToken",
      "offset": [
        20482,
        20608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11711": {
      "fn": "Administrable._moveToken",
      "offset": [
        20670,
        20675
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 128
    },
    "11712": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "11714": {
      "fn": "Administrable._moveToken",
      "offset": [
        20641,
        20651
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11715": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11717": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11718": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCF"
    },
    "11721": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11722": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11723": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "11726": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20627,
        20652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11727": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11728": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11729": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11730": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11731": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11733": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "ADD",
      "path": "0"
    },
    "11734": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11736": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11737": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11738": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11739": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SUB",
      "path": "0"
    },
    "11740": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11741": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20652
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11742": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11744": {
      "fn": "Administrable._moveToken",
      "offset": [
        20653,
        20665
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11751": {
      "op": "SHL"
    },
    "11752": {
      "op": "SUB"
    },
    "11753": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "AND",
      "path": "0"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11760": {
      "op": "SHL"
    },
    "11761": {
      "op": "SUB"
    },
    "11762": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "AND",
      "path": "0"
    },
    "11763": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11764": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11765": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11767": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "ADD",
      "path": "0"
    },
    "11768": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11769": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11770": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11771": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11773": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "ADD",
      "path": "0"
    },
    "11774": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11776": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11777": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11779": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11780": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11781": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11782": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0F"
    },
    "11785": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11786": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11787": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECA"
    },
    "11790": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20627,
        20675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11791": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11792": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11793": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11794": {
      "fn": "Administrable._moveToken",
      "offset": [
        20627,
        20675
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11795": {
      "op": "POP"
    },
    "11796": {
      "op": "POP"
    },
    "11797": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 129,
      "value": "0x40"
    },
    "11799": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11802": {
      "op": "DUP1"
    },
    "11803": {
      "op": "MLOAD"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11806": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "11809": {
      "op": "DUP4"
    },
    "11810": {
      "op": "CODECOPY"
    },
    "11811": {
      "op": "DUP2"
    },
    "11812": {
      "op": "MLOAD"
    },
    "11813": {
      "op": "SWAP2"
    },
    "11814": {
      "op": "MSTORE"
    },
    "11815": {
      "fn": "Administrable._moveToken",
      "offset": [
        20690,
        20773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11816": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3B"
    },
    "11819": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11820": {
      "fn": "Administrable._moveToken",
      "offset": [
        20718,
        20730
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11821": {
      "fn": "Administrable._moveToken",
      "offset": [
        20718,
        20730
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11822": {
      "fn": "Administrable._moveToken",
      "offset": [
        20731,
        20741
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11823": {
      "fn": "Administrable._moveToken",
      "offset": [
        20731,
        20741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11824": {
      "fn": "Administrable._moveToken",
      "offset": [
        20742,
        20754
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11825": {
      "fn": "Administrable._moveToken",
      "offset": [
        20742,
        20754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11826": {
      "fn": "Administrable._moveToken",
      "offset": [
        20755,
        20760
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11827": {
      "fn": "Administrable._moveToken",
      "offset": [
        20755,
        20760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11828": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11830": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "ADD",
      "path": "0"
    },
    "11831": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E0"
    },
    "11834": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20707,
        20761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11835": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11836": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11838": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11839": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11842": {
      "op": "NOT"
    },
    "11843": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11844": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11845": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "SUB",
      "path": "0"
    },
    "11846": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "ADD",
      "path": "0"
    },
    "11847": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11848": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11849": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11850": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11851": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11852": {
      "fn": "Administrable._moveToken",
      "offset": [
        20707,
        20761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11853": {
      "fn": "Administrable._moveToken",
      "offset": [
        20690,
        20773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1300"
    },
    "11856": {
      "fn": "Administrable._moveToken",
      "offset": [
        20690,
        20773
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11857": {
      "fn": "Administrable._moveToken",
      "offset": [
        20762,
        20772
      ],
      "op": "CALLER",
      "path": "0"
    },
    "11858": {
      "fn": "Administrable._moveToken",
      "offset": [
        20762,
        20772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11859": {
      "fn": "Administrable._moveToken",
      "offset": [
        20690,
        20773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4322"
    },
    "11862": {
      "fn": "Administrable._moveToken",
      "jump": "i",
      "offset": [
        20690,
        20773
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11863": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17459,
        17727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11864": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11866": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11867": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11868": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11870": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "11871": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11872": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11873": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "11874": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7D"
    },
    "11877": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11878": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11880": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11887": {
      "op": "SHL"
    },
    "11888": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11889": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11890": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11892": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "11893": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "11896": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11897": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "11900": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11901": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11902": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 130,
      "value": "0x2EA1"
    },
    "11905": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11907": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11908": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11909": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11911": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "ADD",
      "path": "0"
    },
    "11912": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11914": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11915": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11916": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "11918": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11919": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11920": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11922": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "ADD",
      "path": "0"
    },
    "11923": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "11928": {
      "op": "SHL"
    },
    "11929": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11930": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11931": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "POP",
      "path": "0"
    },
    "11932": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17580,
        17589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11933": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173D"
    },
    "11936": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17565,
        17590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11937": {
      "branch": 197,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17565,
        17590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11938": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED2"
    },
    "11941": {
      "branch": 197,
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11942": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11944": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11951": {
      "op": "SHL"
    },
    "11952": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11953": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11956": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11958": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11959": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "ADD",
      "path": "0"
    },
    "11960": {
      "op": "MSTORE"
    },
    "11961": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11965": {
      "op": "DUP3"
    },
    "11966": {
      "op": "ADD"
    },
    "11967": {
      "op": "MSTORE"
    },
    "11968": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "11973": {
      "op": "SHL"
    },
    "11974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11976": {
      "op": "DUP3"
    },
    "11977": {
      "op": "ADD"
    },
    "11978": {
      "op": "MSTORE"
    },
    "11979": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11981": {
      "op": "ADD"
    },
    "11982": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "11985": {
      "op": "JUMP"
    },
    "11986": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17557,
        17596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11987": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17641,
        17645
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 131,
      "value": "0x1"
    },
    "11989": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "11991": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17618,
        17626
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11992": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11994": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11995": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EE4"
    },
    "11998": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11999": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12000": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "12003": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17606,
        17627
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12004": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12005": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12006": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12007": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12008": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12010": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12011": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12012": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12014": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12015": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12016": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12017": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "SUB",
      "path": "0"
    },
    "12018": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12019": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "ADD",
      "path": "0"
    },
    "12020": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12021": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17627
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12028": {
      "op": "SHL"
    },
    "12029": {
      "op": "SUB"
    },
    "12030": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12031": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "AND",
      "path": "0"
    },
    "12032": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12034": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12035": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12036": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12037": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12038": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12039": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12040": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12041": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12042": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12043": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12044": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12045": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12048": {
      "op": "NOT"
    },
    "12049": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "AND",
      "path": "0"
    },
    "12050": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12051": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12052": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12053": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12054": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12055": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12056": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "OR",
      "path": "0"
    },
    "12057": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12058": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12059": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17645
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12062": {
      "op": "DUP1"
    },
    "12063": {
      "op": "MLOAD"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "12069": {
      "op": "DUP4"
    },
    "12070": {
      "op": "CODECOPY"
    },
    "12071": {
      "op": "DUP2"
    },
    "12072": {
      "op": "MLOAD"
    },
    "12073": {
      "op": "SWAP2"
    },
    "12074": {
      "op": "MSTORE"
    },
    "12075": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17660,
        17719
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 132
    },
    "12076": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F39"
    },
    "12079": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12080": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17688,
        17696
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12081": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17688,
        17696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12082": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12083": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17606,
        17638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12084": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "ADD",
      "path": "0"
    },
    "12085": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "12088": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17677,
        17707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12089": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12090": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12092": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12093": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12094": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12096": {
      "op": "NOT"
    },
    "12097": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12098": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12099": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "SUB",
      "path": "0"
    },
    "12100": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "ADD",
      "path": "0"
    },
    "12101": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12102": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12103": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12104": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12105": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12106": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17677,
        17707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12107": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17660,
        17719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB0"
    },
    "12110": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17660,
        17719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12111": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17708,
        17718
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12112": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17708,
        17718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12113": {
      "fn": "Administrable._addBankAdmin",
      "offset": [
        17660,
        17719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x434E"
    },
    "12116": {
      "fn": "Administrable._addBankAdmin",
      "jump": "i",
      "offset": [
        17660,
        17719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12117": {
      "fn": "Shardable._split",
      "offset": [
        13103,
        14228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12118": {
      "fn": "Shardable._split",
      "offset": [
        13192,
        13203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12119": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6F"
    },
    "12122": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12123": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12125": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12126": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12127": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12128": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12129": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12130": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "12132": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12134": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12135": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12137": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12138": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12139": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12140": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "12141": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12142": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12143": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12144": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F8B"
    },
    "12147": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12148": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12150": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12157": {
      "op": "SHL"
    },
    "12158": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12159": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12160": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12162": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "12163": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "12166": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12167": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "12170": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12171": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12172": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12174": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12175": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12176": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12178": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12179": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12180": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12181": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12182": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB1"
    },
    "12185": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12186": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12188": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12195": {
      "op": "SHL"
    },
    "12196": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12197": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12198": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12200": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12201": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "12204": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12205": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "12208": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12209": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12210": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 133,
      "value": "0x0"
    },
    "12212": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12213": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12214": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12215": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12217": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12219": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12220": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12222": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12223": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13285
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12224": {
      "fn": "Shardable._split",
      "offset": [
        13261,
        13292
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12225": {
      "fn": "Shardable._split",
      "offset": [
        13251,
        13292
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12226": {
      "fn": "Shardable._split",
      "offset": [
        13251,
        13292
      ],
      "op": "GT",
      "path": "2"
    },
    "12227": {
      "branch": 234,
      "fn": "Shardable._split",
      "offset": [
        13251,
        13292
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12228": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF4"
    },
    "12231": {
      "branch": 234,
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12232": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12234": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12241": {
      "op": "SHL"
    },
    "12242": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12243": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12246": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12248": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12249": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "ADD",
      "path": "2"
    },
    "12250": {
      "op": "MSTORE"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12255": {
      "op": "DUP3"
    },
    "12256": {
      "op": "ADD"
    },
    "12257": {
      "op": "MSTORE"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x4941"
    },
    "12261": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12263": {
      "op": "SHL"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12266": {
      "op": "DUP3"
    },
    "12267": {
      "op": "ADD"
    },
    "12268": {
      "op": "MSTORE"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12271": {
      "op": "ADD"
    },
    "12272": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "12275": {
      "op": "JUMP"
    },
    "12276": {
      "fn": "Shardable._split",
      "offset": [
        13243,
        13299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12277": {
      "fn": "Shardable._split",
      "offset": [
        13313,
        13330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FFD"
    },
    "12280": {
      "fn": "Shardable._split",
      "offset": [
        13327,
        13329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12281": {
      "fn": "Shardable._split",
      "offset": [
        13313,
        13326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD7"
    },
    "12284": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13313,
        13330
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12285": {
      "branch": 235,
      "fn": "Shardable._split",
      "offset": [
        13313,
        13330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12286": {
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12287": {
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306C"
    },
    "12290": {
      "branch": 235,
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12297": {
      "op": "SHL"
    },
    "12298": {
      "op": "SUB"
    },
    "12299": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12300": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "AND",
      "path": "2"
    },
    "12301": {
      "fn": "Shardable._split",
      "offset": [
        13450,
        13467
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12303": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12304": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12305": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12306": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12308": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12310": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12311": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12312": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12313": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12315": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12316": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12317": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12318": {
      "fn": "Shardable._split",
      "offset": [
        13491,
        13507
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12319": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12320": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12321": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12323": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12324": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12325": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12326": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12327": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13508
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12328": {
      "fn": "Shardable._split",
      "offset": [
        13479,
        13515
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12329": {
      "fn": "Shardable._split",
      "offset": [
        13470,
        13515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3032"
    },
    "12332": {
      "fn": "Shardable._split",
      "offset": [
        13470,
        13515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12333": {
      "fn": "Shardable._split",
      "offset": [
        13470,
        13476
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12334": {
      "fn": "Shardable._split",
      "offset": [
        13470,
        13515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ECA"
    },
    "12337": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13470,
        13515
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12338": {
      "fn": "Shardable._split",
      "offset": [
        13470,
        13515
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12339": {
      "fn": "Shardable._split",
      "offset": [
        13450,
        13515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12340": {
      "fn": "Shardable._split",
      "offset": [
        13450,
        13515
      ],
      "op": "POP",
      "path": "2"
    },
    "12341": {
      "fn": "Shardable._split",
      "offset": [
        13529,
        13559
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 134,
      "value": "0x3041"
    },
    "12344": {
      "fn": "Shardable._split",
      "offset": [
        13540,
        13549
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12345": {
      "fn": "Shardable._split",
      "offset": [
        13550,
        13552
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12346": {
      "fn": "Shardable._split",
      "offset": [
        13553,
        13558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12348": {
      "fn": "Shardable._split",
      "offset": [
        13553,
        13558
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12349": {
      "fn": "Shardable._split",
      "offset": [
        13529,
        13539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3832"
    },
    "12352": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13529,
        13559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12353": {
      "fn": "Shardable._split",
      "offset": [
        13529,
        13559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12360": {
      "op": "SHL"
    },
    "12361": {
      "op": "SUB"
    },
    "12362": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 135
    },
    "12363": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "AND",
      "path": "2"
    },
    "12364": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12366": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12367": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12368": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12369": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12371": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12373": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12374": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12376": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12377": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12378": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12379": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13654
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12380": {
      "fn": "Shardable._split",
      "offset": [
        13649,
        13654
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12381": {
      "fn": "Shardable._split",
      "offset": [
        13618,
        13655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3066"
    },
    "12384": {
      "fn": "Shardable._split",
      "offset": [
        13618,
        13655
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12385": {
      "fn": "Shardable._split",
      "offset": [
        13631,
        13647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12386": {
      "fn": "Shardable._split",
      "offset": [
        13618,
        13630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C7"
    },
    "12389": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13618,
        13655
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12390": {
      "fn": "Shardable._split",
      "offset": [
        13618,
        13655
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12391": {
      "fn": "Shardable._split",
      "offset": [
        13332,
        13666
      ],
      "op": "POP",
      "path": "2"
    },
    "12392": {
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3079"
    },
    "12395": {
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12396": {
      "fn": "Shardable._split",
      "offset": [
        13309,
        13831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12397": {
      "fn": "Shardable._split",
      "offset": [
        13793,
        13820
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 136,
      "value": "0x3079"
    },
    "12400": {
      "fn": "Shardable._split",
      "offset": [
        13804,
        13810
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12401": {
      "fn": "Shardable._split",
      "offset": [
        13811,
        13813
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12402": {
      "fn": "Shardable._split",
      "offset": [
        13814,
        13819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12404": {
      "fn": "Shardable._split",
      "offset": [
        13814,
        13819
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12405": {
      "fn": "Shardable._split",
      "offset": [
        13793,
        13803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3832"
    },
    "12408": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13793,
        13820
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12409": {
      "fn": "Shardable._split",
      "offset": [
        13793,
        13820
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12410": {
      "fn": "Shardable._split",
      "offset": [
        13880,
        13912
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 137,
      "value": "0x3085"
    },
    "12413": {
      "fn": "Shardable._split",
      "offset": [
        13893,
        13904
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12414": {
      "fn": "Shardable._split",
      "offset": [
        13906,
        13911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12416": {
      "fn": "Shardable._split",
      "offset": [
        13906,
        13911
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12417": {
      "fn": "Shardable._split",
      "offset": [
        13880,
        13892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C7"
    },
    "12420": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        13880,
        13912
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12421": {
      "fn": "Shardable._split",
      "offset": [
        13880,
        13912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12422": {
      "fn": "Shardable._split",
      "offset": [
        14009,
        14021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12424": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12425": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12426": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12427": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12429": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12431": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12432": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12434": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12435": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14048
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12436": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14055
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12437": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14064
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309F"
    },
    "12440": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12441": {
      "fn": "Shardable._split",
      "offset": [
        14058,
        14064
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12442": {
      "fn": "Shardable._split",
      "offset": [
        14058,
        14064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12443": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14064
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC0"
    },
    "12446": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        14024,
        14064
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12447": {
      "fn": "Shardable._split",
      "offset": [
        14024,
        14064
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12448": {
      "fn": "Shardable._split",
      "offset": [
        14009,
        14064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12449": {
      "op": "POP"
    },
    "12450": {
      "fn": "Shardable._split",
      "offset": [
        14078,
        14087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12451": {
      "branch": 236,
      "fn": "Shardable._split",
      "offset": [
        14078,
        14087
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12452": {
      "fn": "Shardable._split",
      "offset": [
        14074,
        14163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D2"
    },
    "12455": {
      "branch": 236,
      "fn": "Shardable._split",
      "offset": [
        14074,
        14163
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12456": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 138,
      "value": "0x0"
    },
    "12458": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12459": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12460": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12461": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12463": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12465": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12466": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12468": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12469": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14139
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12470": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12472": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "ADD",
      "path": "2"
    },
    "12473": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12474": {
      "fn": "Shardable._split",
      "offset": [
        14146,
        14151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12475": {
      "fn": "Shardable._split",
      "offset": [
        14146,
        14151
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12476": {
      "fn": "Shardable._split",
      "offset": [
        14099,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D2"
    },
    "12479": {
      "fn": "Shardable._split",
      "offset": [
        14099,
        14152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12480": {
      "fn": "Shardable._split",
      "offset": [
        14110,
        14114
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12481": {
      "fn": "Shardable._split",
      "offset": [
        14110,
        14114
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12488": {
      "op": "SHL"
    },
    "12489": {
      "op": "SUB"
    },
    "12490": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12491": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12492": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "AND",
      "path": "2"
    },
    "12493": {
      "fn": "Shardable._split",
      "offset": [
        14115,
        14145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12494": {
      "fn": "Shardable._split",
      "offset": [
        14099,
        14109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3832"
    },
    "12497": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        14099,
        14152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12498": {
      "fn": "Shardable._split",
      "offset": [
        14099,
        14152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12499": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 139,
      "value": "0x40"
    },
    "12501": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12502": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12503": {
      "op": "DUP7"
    },
    "12504": {
      "op": "DUP2"
    },
    "12505": {
      "op": "MSTORE"
    },
    "12506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12508": {
      "op": "DUP2"
    },
    "12509": {
      "op": "ADD"
    },
    "12510": {
      "op": "DUP7"
    },
    "12511": {
      "op": "SWAP1"
    },
    "12512": {
      "op": "MSTORE"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12519": {
      "op": "SHL"
    },
    "12520": {
      "op": "SUB"
    },
    "12521": {
      "op": "DUP6"
    },
    "12522": {
      "op": "AND"
    },
    "12523": {
      "op": "DUP2"
    },
    "12524": {
      "op": "DUP4"
    },
    "12525": {
      "op": "ADD"
    },
    "12526": {
      "op": "MSTORE"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12531": {
      "op": "DUP3"
    },
    "12532": {
      "op": "ADD"
    },
    "12533": {
      "op": "DUP2"
    },
    "12534": {
      "op": "SWAP1"
    },
    "12535": {
      "op": "MSTORE"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12538": {
      "op": "DUP3"
    },
    "12539": {
      "op": "ADD"
    },
    "12540": {
      "op": "MSTORE"
    },
    "12541": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12542": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12543": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x443732A78C29282934211EAE7AA500DD12DB85D4DD795DBCDA5F94EE19A67E4F"
    },
    "12576": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12577": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12578": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12579": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "SUB",
      "path": "2"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12582": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "ADD",
      "path": "2"
    },
    "12583": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12584": {
      "fn": "Shardable._split",
      "offset": [
        14177,
        14221
      ],
      "op": "LOG1",
      "path": "2"
    },
    "12585": {
      "op": "POP"
    },
    "12586": {
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12588": {
      "offset": [
        5704,
        5709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12589": {
      "fn": "Shardable._split",
      "offset": [
        5704,
        5709
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12590": {
      "offset": [
        5680,
        5710
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12591": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12592": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12593": {
      "offset": [
        5680,
        5703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12595": {
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12597": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12598": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12599": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12600": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12602": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12603": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12604": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12605": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5710
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12606": {
      "offset": [
        5680,
        5703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12607": {
      "fn": "Shardable._split",
      "offset": [
        5680,
        5703
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12608": {
      "offset": [
        5669,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314A"
    },
    "12611": {
      "fn": "Shardable._split",
      "offset": [
        5669,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12612": {
      "offset": [
        5675,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12614": {
      "offset": [
        5669,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ECA"
    },
    "12617": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        5669,
        5676
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12618": {
      "fn": "Shardable._split",
      "offset": [
        5669,
        5676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12619": {
      "offset": [
        5645,
        5677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12620": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12621": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12623": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "ADD",
      "path": "2"
    },
    "12624": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12625": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12626": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12627": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12629": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "ADD",
      "path": "2"
    },
    "12630": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12632": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5677
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12633": {
      "offset": [
        5645,
        5710
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12634": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12635": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12636": {
      "fn": "Shardable._split",
      "offset": [
        5645,
        5710
      ],
      "op": "POP",
      "path": "2"
    },
    "12637": {
      "offset": [
        5773,
        5778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12639": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5778
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12640": {
      "offset": [
        5773,
        5780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12641": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12642": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12643": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12644": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12645": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12646": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316E"
    },
    "12649": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12650": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x437A"
    },
    "12653": {
      "fn": "Shardable._split",
      "jump": "i",
      "offset": [
        5773,
        5780
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12654": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12655": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12656": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12657": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "POP",
      "path": "2"
    },
    "12658": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12659": {
      "fn": "Shardable._split",
      "offset": [
        5773,
        5780
      ],
      "op": "POP",
      "path": "2"
    },
    "12660": {
      "fn": "Shardable._split",
      "offset": [
        13103,
        14228
      ],
      "op": "POP",
      "path": "2"
    },
    "12661": {
      "fn": "Shardable._split",
      "offset": [
        13103,
        14228
      ],
      "op": "POP",
      "path": "2"
    },
    "12662": {
      "fn": "Shardable._split",
      "offset": [
        13103,
        14228
      ],
      "op": "POP",
      "path": "2"
    },
    "12663": {
      "fn": "Shardable._split",
      "offset": [
        13103,
        14228
      ],
      "op": "POP",
      "path": "2"
    },
    "12664": {
      "fn": "Shardable._split",
      "jump": "o",
      "offset": [
        13103,
        14228
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12665": {
      "fn": "Administrable._setPermit",
      "offset": [
        21065,
        21312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12666": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12668": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12669": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12670": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12672": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12673": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12674": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12675": {
      "fn": "Administrable._setPermit",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12676": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319F"
    },
    "12679": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12680": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12682": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12689": {
      "op": "SHL"
    },
    "12690": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12691": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12692": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12694": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12695": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "12698": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12699": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "12702": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12703": {
      "fn": "Administrable._setPermit",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12704": {
      "fn": "Administrable._setPermit",
      "offset": [
        21213,
        21221
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 140
    },
    "12705": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "12707": {
      "fn": "Administrable._setPermit",
      "offset": [
        21190,
        21200
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12708": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12710": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12711": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B0"
    },
    "12714": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12715": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12716": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "12719": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21182,
        21201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12720": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12721": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12722": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12723": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12724": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12726": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12727": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12728": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12730": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12731": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12732": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12733": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SUB",
      "path": "0"
    },
    "12734": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12735": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "ADD",
      "path": "0"
    },
    "12736": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12737": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21201
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12744": {
      "op": "SHL"
    },
    "12745": {
      "op": "SUB"
    },
    "12746": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12747": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "AND",
      "path": "0"
    },
    "12748": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12750": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12751": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12752": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12753": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12754": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12755": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12756": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12757": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12758": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12761": {
      "op": "NOT"
    },
    "12762": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "AND",
      "path": "0"
    },
    "12763": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "12765": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12766": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12768": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12769": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "GT",
      "path": "0"
    },
    "12770": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12771": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "12774": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12775": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "12778": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EDD"
    },
    "12781": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21182,
        21221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12782": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12783": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "MUL",
      "path": "0"
    },
    "12784": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "OR",
      "path": "0"
    },
    "12785": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12786": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "12787": {
      "fn": "Administrable._setPermit",
      "offset": [
        21182,
        21221
      ],
      "op": "POP",
      "path": "0"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12790": {
      "op": "DUP1"
    },
    "12791": {
      "op": "MLOAD"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12794": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "12797": {
      "op": "DUP4"
    },
    "12798": {
      "op": "CODECOPY"
    },
    "12799": {
      "op": "DUP2"
    },
    "12800": {
      "op": "MLOAD"
    },
    "12801": {
      "op": "SWAP2"
    },
    "12802": {
      "op": "MSTORE"
    },
    "12803": {
      "fn": "Administrable._setPermit",
      "offset": [
        21264,
        21274
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 141
    },
    "12804": {
      "fn": "Administrable._setPermit",
      "offset": [
        21275,
        21282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12805": {
      "fn": "Administrable._setPermit",
      "offset": [
        21283,
        21291
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12806": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12808": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12809": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12811": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "ADD",
      "path": "0"
    },
    "12812": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3217"
    },
    "12815": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "12816": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12817": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12818": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12819": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4393"
    },
    "12822": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21253,
        21292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12823": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12824": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12826": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12827": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12830": {
      "op": "NOT"
    },
    "12831": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12832": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12833": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SUB",
      "path": "0"
    },
    "12834": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "ADD",
      "path": "0"
    },
    "12835": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12836": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12837": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12838": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12839": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12840": {
      "fn": "Administrable._setPermit",
      "offset": [
        21253,
        21292
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12841": {
      "fn": "Administrable._setPermit",
      "offset": [
        21236,
        21304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA96"
    },
    "12844": {
      "fn": "Administrable._setPermit",
      "offset": [
        21236,
        21304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12845": {
      "fn": "Administrable._setPermit",
      "offset": [
        21293,
        21303
      ],
      "op": "CALLER",
      "path": "0"
    },
    "12846": {
      "fn": "Administrable._setPermit",
      "offset": [
        21293,
        21303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12847": {
      "fn": "Administrable._setPermit",
      "offset": [
        21236,
        21304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43C4"
    },
    "12850": {
      "fn": "Administrable._setPermit",
      "jump": "i",
      "offset": [
        21236,
        21304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12851": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19067,
        19614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12852": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12854": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12855": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12856": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12858": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "12859": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12860": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12861": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "12862": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3259"
    },
    "12865": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12866": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12868": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12875": {
      "op": "SHL"
    },
    "12876": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12877": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12878": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12880": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "12881": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "12884": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12885": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "12888": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12889": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12890": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 142,
      "value": "0xF"
    },
    "12892": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19235,
        19243
      ],
      "op": "DUP5",
      "path": "0"
    },
    "12893": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12895": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12896": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3269"
    },
    "12899": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12900": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12901": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "12904": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19221,
        19244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12905": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12906": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12907": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12908": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12909": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12911": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12912": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12913": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12915": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12916": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12917": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12918": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SUB",
      "path": "0"
    },
    "12919": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12920": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "ADD",
      "path": "0"
    },
    "12921": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12922": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19244
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12929": {
      "op": "SHL"
    },
    "12930": {
      "op": "SUB"
    },
    "12931": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12932": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "AND",
      "path": "0"
    },
    "12933": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12935": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12936": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12937": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12938": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12939": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12940": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12941": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12942": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19221,
        19258
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12943": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19212,
        19258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12944": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19212,
        19258
      ],
      "op": "GT",
      "path": "0"
    },
    "12945": {
      "branch": 198,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19212,
        19258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12946": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32AD"
    },
    "12949": {
      "branch": 198,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12950": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12952": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12959": {
      "op": "SHL"
    },
    "12960": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12961": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12962": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12964": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "ADD",
      "path": "0"
    },
    "12965": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "12968": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12969": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4212"
    },
    "12972": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19204,
        19265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12973": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19204,
        19265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12974": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19275,
        19312
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 143,
      "value": "0x32B8"
    },
    "12977": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19290,
        19302
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12978": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19303,
        19308
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12979": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19309,
        19311
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12980": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19275,
        19289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205D"
    },
    "12983": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19275,
        19312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12984": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19275,
        19312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12985": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19363,
        19368
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 144
    },
    "12986": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "12988": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19336,
        19344
      ],
      "op": "DUP6",
      "path": "0"
    },
    "12989": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12991": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12992": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32C9"
    },
    "12995": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12996": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12997": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "13000": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19322,
        19345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13001": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13002": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13003": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13004": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13005": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13007": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "ADD",
      "path": "0"
    },
    "13008": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13010": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13011": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13012": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13013": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SUB",
      "path": "0"
    },
    "13014": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13015": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19345
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13016": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13018": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19346,
        19358
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13025": {
      "op": "SHL"
    },
    "13026": {
      "op": "SUB"
    },
    "13027": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "AND",
      "path": "0"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13034": {
      "op": "SHL"
    },
    "13035": {
      "op": "SUB"
    },
    "13036": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "AND",
      "path": "0"
    },
    "13037": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13038": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13039": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13041": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "ADD",
      "path": "0"
    },
    "13042": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13043": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13044": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13045": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13047": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "ADD",
      "path": "0"
    },
    "13048": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13050": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13051": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13053": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13054": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13055": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13056": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3309"
    },
    "13059": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13060": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13061": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "13064": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19322,
        19368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13065": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13066": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13067": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13068": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19322,
        19368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13069": {
      "op": "POP"
    },
    "13070": {
      "op": "POP"
    },
    "13071": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13073": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13074": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "13076": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13077": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331F"
    },
    "13080": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13081": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19396,
        19404
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13082": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19396,
        19404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13083": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "13086": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19382,
        19405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13087": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13088": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13089": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13090": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13091": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13093": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13094": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13095": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13097": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13098": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13099": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13100": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SUB",
      "path": "0"
    },
    "13101": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13102": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "ADD",
      "path": "0"
    },
    "13103": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13104": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19405
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13111": {
      "op": "SHL"
    },
    "13112": {
      "op": "SUB"
    },
    "13113": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13114": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "AND",
      "path": "0"
    },
    "13115": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13117": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13118": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13119": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13120": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13121": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13122": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13123": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13124": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19419
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13125": {
      "branch": 199,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19424
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13126": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13127": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19454
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13128": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3359"
    },
    "13131": {
      "branch": 199,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19454
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13132": {
      "op": "POP"
    },
    "13133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13139": {
      "op": "SHL"
    },
    "13140": {
      "op": "SUB"
    },
    "13141": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19428,
        19454
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13142": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19428,
        19454
      ],
      "op": "AND",
      "path": "0"
    },
    "13143": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19428,
        19454
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13144": {
      "branch": 200,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19428,
        19454
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13145": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19382,
        19454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13146": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19378,
        19522
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13147": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19378,
        19522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3393"
    },
    "13150": {
      "branch": 200,
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19378,
        19522
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13151": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19510,
        19511
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 145,
      "value": "0x1"
    },
    "13153": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "13155": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19497,
        19505
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13156": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13158": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13159": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3370"
    },
    "13162": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13163": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13164": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F17"
    },
    "13167": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19470,
        19506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13168": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13169": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13170": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13171": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13172": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13174": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "ADD",
      "path": "0"
    },
    "13175": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13177": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13178": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13179": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13180": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SUB",
      "path": "0"
    },
    "13181": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13182": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13183": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13185": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13186": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13187": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13188": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338D"
    },
    "13191": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13192": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13193": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC0"
    },
    "13196": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19470,
        19511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13197": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13198": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13199": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13200": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19470,
        19511
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13201": {
      "op": "POP"
    },
    "13202": {
      "op": "POP"
    },
    "13203": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19378,
        19522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13206": {
      "op": "DUP1"
    },
    "13207": {
      "op": "MLOAD"
    },
    "13208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13210": {
      "op": "PUSH2",
      "value": "0x4459"
    },
    "13213": {
      "op": "DUP4"
    },
    "13214": {
      "op": "CODECOPY"
    },
    "13215": {
      "op": "DUP2"
    },
    "13216": {
      "op": "MLOAD"
    },
    "13217": {
      "op": "SWAP2"
    },
    "13218": {
      "op": "MSTORE"
    },
    "13219": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19564,
        19572
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 146
    },
    "13220": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19573,
        19585
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13221": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19586,
        19591
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13222": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19592,
        19594
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13223": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13225": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13226": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13228": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "ADD",
      "path": "0"
    },
    "13229": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B9"
    },
    "13232": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "13233": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "13234": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13235": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13236": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13237": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F0"
    },
    "13240": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19553,
        19595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13241": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13242": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13244": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13245": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13246": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13248": {
      "op": "NOT"
    },
    "13249": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13250": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13251": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SUB",
      "path": "0"
    },
    "13252": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "ADD",
      "path": "0"
    },
    "13253": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13254": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13255": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13256": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13257": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13258": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19553,
        19595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13259": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19536,
        19607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29BB"
    },
    "13262": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19536,
        19607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13263": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19596,
        19606
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13264": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19596,
        19606
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13265": {
      "fn": "Administrable._transferTokenFromBank",
      "offset": [
        19536,
        19607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442C"
    },
    "13268": {
      "fn": "Administrable._transferTokenFromBank",
      "jump": "i",
      "offset": [
        19536,
        19607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13269": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13270": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        715,
        722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13272": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        724,
        731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13273": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        733,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13275": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        770,
        779
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 147
    },
    "13276": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        756,
        767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13277": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        756,
        779
      ],
      "op": "GT",
      "path": "2"
    },
    "13278": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33E6"
    },
    "13281": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13282": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13284": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13285": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13286": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        748,
        780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13287": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13289": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        825,
        836
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13290": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33F3"
    },
    "13293": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        815,
        824
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13294": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        814
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13295": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F87"
    },
    "13298": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        806,
        824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13299": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13300": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33FD"
    },
    "13303": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13304": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13305": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9E"
    },
    "13308": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        806,
        836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13309": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        806,
        836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13310": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        786,
        836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13311": {
      "op": "POP"
    },
    "13312": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13314": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        895,
        906
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13315": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340C"
    },
    "13318": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        884,
        893
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13319": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        895,
        906
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13320": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC0"
    },
    "13323": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        872,
        893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13324": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        872,
        893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13325": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3416"
    },
    "13328": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13329": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        870
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13330": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F87"
    },
    "13333": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        862,
        894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13334": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13335": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3420"
    },
    "13338": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13339": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13340": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9E"
    },
    "13343": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        862,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13344": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        862,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13345": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13346": {
      "op": "POP"
    },
    "13347": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        920,
        929
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 148
    },
    "13348": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13349": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342E"
    },
    "13352": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        842,
        906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13353": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        920,
        929
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13354": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ECA"
    },
    "13357": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        954,
        975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13358": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        954,
        975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13359": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3438"
    },
    "13362": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13363": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        950
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13364": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC0"
    },
    "13367": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "i",
      "offset": [
        942,
        976
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13368": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        942,
        976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13369": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13370": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13371": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13372": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13373": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13374": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13375": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13376": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        912,
        977
      ],
      "op": "POP",
      "path": "2"
    },
    "13377": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13378": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13379": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13380": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13381": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13382": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13383": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "offset": [
        599,
        980
      ],
      "op": "POP",
      "path": "2"
    },
    "13384": {
      "fn": "divideUnequallyIntoTwoWithRemainder",
      "jump": "o",
      "offset": [
        599,
        980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13385": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9812,
        10293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13386": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9945,
        9949
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13393": {
      "op": "SHL"
    },
    "13394": {
      "op": "SUB"
    },
    "13395": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9926,
        9950
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13396": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9926,
        9950
      ],
      "op": "AND",
      "path": "1"
    },
    "13397": {
      "branch": 216,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9926,
        9950
      ],
      "op": "SUB",
      "path": "1"
    },
    "13398": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9922,
        10278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3463"
    },
    "13401": {
      "branch": 216,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9922,
        10278
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13402": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10034,
        10067
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 149,
      "value": "0xB3E"
    },
    "13405": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10048,
        10060
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13406": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10061,
        10066
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13407": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10034,
        10047
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A5B"
    },
    "13410": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        10034,
        10067
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13411": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        9922,
        10278
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13412": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 150,
      "value": "0x40"
    },
    "13414": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13415": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13422": {
      "op": "SHL"
    },
    "13423": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13424": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13425": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10228,
        10238
      ],
      "op": "CALLER",
      "path": "1"
    },
    "13426": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13428": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13429": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ADD",
      "path": "1"
    },
    "13430": {
      "op": "MSTORE"
    },
    "13431": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10247,
        10251
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13434": {
      "op": "DUP3"
    },
    "13435": {
      "op": "ADD"
    },
    "13436": {
      "op": "MSTORE"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13439": {
      "op": "DUP2"
    },
    "13440": {
      "op": "ADD"
    },
    "13441": {
      "op": "DUP3"
    },
    "13442": {
      "op": "SWAP1"
    },
    "13443": {
      "op": "MSTORE"
    },
    "13444": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10174,
        10186
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13445": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10174,
        10186
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13452": {
      "op": "SHL"
    },
    "13453": {
      "op": "SUB"
    },
    "13454": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10227
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13455": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10227
      ],
      "op": "AND",
      "path": "1"
    },
    "13456": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13457": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10227
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "13462": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13463": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13468": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13470": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13471": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13472": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP4",
      "path": "1"
    },
    "13473": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "SUB",
      "path": "1"
    },
    "13474": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13475": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13477": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP8",
      "path": "1"
    },
    "13478": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "GAS",
      "path": "1"
    },
    "13479": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "CALL",
      "path": "1"
    },
    "13480": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13481": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13482": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13483": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34B8"
    },
    "13486": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13487": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13488": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13490": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13491": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "13492": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13493": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13495": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "REVERT",
      "path": "1"
    },
    "13496": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13497": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "POP",
      "path": "1"
    },
    "13498": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "POP",
      "path": "1"
    },
    "13499": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "POP",
      "path": "1"
    },
    "13500": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "POP",
      "path": "1"
    },
    "13501": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13503": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13504": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "13505": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "13507": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "NOT",
      "path": "1"
    },
    "13508": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "13510": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13511": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ADD",
      "path": "1"
    },
    "13512": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "AND",
      "path": "1"
    },
    "13513": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13514": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ADD",
      "path": "1"
    },
    "13515": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13516": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13518": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13519": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "POP",
      "path": "1"
    },
    "13520": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13521": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "ADD",
      "path": "1"
    },
    "13522": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13523": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34DC"
    },
    "13526": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13527": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13528": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4077"
    },
    "13531": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        10209,
        10260
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13532": {
      "branch": 217,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10209,
        10260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13533": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF25"
    },
    "13536": {
      "branch": 217,
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13537": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13539": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13546": {
      "op": "SHL"
    },
    "13547": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13548": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13549": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13551": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "ADD",
      "path": "1"
    },
    "13552": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "13555": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13556": {
      "fn": "Idea._payProfitToSeller",
      "offset": [
        10201,
        10267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4099"
    },
    "13559": {
      "fn": "Idea._payProfitToSeller",
      "jump": "i",
      "offset": [
        10201,
        10267
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13560": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13561": {
      "fn": "Shardable._putForSale",
      "offset": [
        14828,
        14833
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13562": {
      "offset": [
        6119,
        6138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3512"
    },
    "13565": {
      "offset": [
        6132,
        6137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13566": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11784,
        11788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13568": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13569": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11840,
        11845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13570": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13571": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13572": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13573": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "13575": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13577": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13578": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13580": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13581": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13582": {
      "fn": "Shardable.getShardExpirationClock",
      "offset": [
        11342,
        11369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13583": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "GT",
      "path": "2"
    },
    "13584": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11807,
        11845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13585": {
      "fn": "Shardable.isValidShard",
      "offset": [
        11727,
        11852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13586": {
      "offset": [
        6119,
        6138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13587": {
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x352E"
    },
    "13590": {
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13591": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13593": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13600": {
      "op": "SHL"
    },
    "13601": {
      "offset": [
        6111,
        6145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13602": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13603": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13605": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "ADD",
      "path": "2"
    },
    "13606": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "13609": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13610": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4F"
    },
    "13613": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13614": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6111,
        6145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13615": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13617": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13618": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13619": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13621": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "13622": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13623": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13624": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "13625": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3554"
    },
    "13628": {
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13629": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13631": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13638": {
      "op": "SHL"
    },
    "13639": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13640": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13641": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13643": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "13644": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "13647": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13648": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "13651": {
      "fn": "Shardable.isValidShard",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13652": {
      "fn": "Shardable.isValidShard",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13653": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 151,
      "value": "0x0"
    },
    "13655": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13656": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13657": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13658": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "13660": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13662": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13663": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13665": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13666": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13667": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13668": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13670": {
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14886
      ],
      "op": "AND",
      "path": "2"
    },
    "13671": {
      "branch": 237,
      "fn": "Shardable._putForSale",
      "offset": [
        14866,
        14895
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13672": {
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3570"
    },
    "13675": {
      "branch": 237,
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13676": {
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13678": {
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13679": {
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13680": {
      "fn": "Shardable._putForSale",
      "offset": [
        14858,
        14896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13681": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 152,
      "value": "0x0"
    },
    "13683": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13684": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13685": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13686": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "13688": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13690": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13691": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13693": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13694": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14942
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13695": {
      "fn": "Shardable._putForSale",
      "offset": [
        14924,
        14949
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13696": {
      "fn": "Shardable._putForSale",
      "offset": [
        14914,
        14949
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13697": {
      "fn": "Shardable._putForSale",
      "offset": [
        14914,
        14949
      ],
      "op": "GT",
      "path": "2"
    },
    "13698": {
      "branch": 238,
      "fn": "Shardable._putForSale",
      "offset": [
        14914,
        14949
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13699": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35B3"
    },
    "13702": {
      "branch": 238,
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13703": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13705": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13712": {
      "op": "SHL"
    },
    "13713": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13714": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13717": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13719": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13720": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "ADD",
      "path": "2"
    },
    "13721": {
      "op": "MSTORE"
    },
    "13722": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13726": {
      "op": "DUP3"
    },
    "13727": {
      "op": "ADD"
    },
    "13728": {
      "op": "MSTORE"
    },
    "13729": {
      "op": "PUSH2",
      "value": "0x4941"
    },
    "13732": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13734": {
      "op": "SHL"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13737": {
      "op": "DUP3"
    },
    "13738": {
      "op": "ADD"
    },
    "13739": {
      "op": "MSTORE"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13742": {
      "op": "ADD"
    },
    "13743": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "13746": {
      "op": "JUMP"
    },
    "13747": {
      "fn": "Shardable._putForSale",
      "offset": [
        14906,
        14956
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13748": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 153,
      "value": "0x40"
    },
    "13750": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13751": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13752": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "13754": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13755": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13756": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13757": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13758": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13759": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13760": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13767": {
      "op": "SHL"
    },
    "13768": {
      "op": "SUB"
    },
    "13769": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13770": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13771": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13772": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13774": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13775": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13776": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13777": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13778": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13779": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13780": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13781": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13782": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13783": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13784": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13785": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13786": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13787": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13788": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13789": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13791": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13792": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13793": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13794": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13795": {
      "fn": "Shardable._putForSale",
      "offset": [
        14987,
        15122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13798": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "DUP14",
      "path": "2"
    },
    "13799": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13800": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13801": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "13803": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13804": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13805": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13806": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13807": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        14984
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13808": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13809": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13810": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13811": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13812": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13813": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13814": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13816": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13817": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13818": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13819": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13820": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13821": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13822": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13823": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13830": {
      "op": "SHL"
    },
    "13831": {
      "op": "SUB"
    },
    "13832": {
      "op": "NOT"
    },
    "13833": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13834": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13835": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13836": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "OR",
      "path": "2"
    },
    "13837": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13838": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13839": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13840": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13841": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13843": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13844": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13845": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13846": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13847": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13848": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "13850": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13851": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13852": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "ADD",
      "path": "2"
    },
    "13853": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13854": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13855": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13856": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13857": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13858": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13859": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13860": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "AND",
      "path": "2"
    },
    "13861": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13862": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13863": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13864": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "OR",
      "path": "2"
    },
    "13865": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13866": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13867": {
      "fn": "Shardable._putForSale",
      "offset": [
        14966,
        15122
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13868": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15145
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 154,
      "value": "0x5"
    },
    "13870": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13871": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13872": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13873": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13874": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13875": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15152
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13876": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13877": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13878": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13880": {
      "op": "NOT"
    },
    "13881": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "AND",
      "path": "2"
    },
    "13882": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13883": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13884": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "OR",
      "path": "2"
    },
    "13885": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13886": {
      "fn": "Shardable._putForSale",
      "offset": [
        15132,
        15159
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13887": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 155
    },
    "13888": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4126DE2C73B6B69D46D3290EE98241C5C18CE39A61B29E4E91F877A6D56BB213"
    },
    "13921": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13922": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x369B"
    },
    "13925": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13926": {
      "fn": "Shardable._putForSale",
      "offset": [
        14978,
        14983
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13927": {
      "fn": "Shardable._putForSale",
      "offset": [
        14978,
        14983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13928": {
      "fn": "Shardable._putForSale",
      "offset": [
        15019,
        15025
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13929": {
      "fn": "Shardable._putForSale",
      "offset": [
        15019,
        15025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13930": {
      "fn": "Shardable._putForSale",
      "offset": [
        15053,
        15065
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13931": {
      "fn": "Shardable._putForSale",
      "offset": [
        15053,
        15065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13932": {
      "fn": "Shardable._putForSale",
      "offset": [
        15086,
        15091
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13933": {
      "fn": "Shardable._putForSale",
      "offset": [
        15086,
        15091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13934": {
      "fn": "Shardable._putForSale",
      "offset": [
        15109,
        15111
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13935": {
      "fn": "Shardable._putForSale",
      "offset": [
        15109,
        15111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13936": {
      "op": "SWAP5"
    },
    "13937": {
      "op": "DUP6"
    },
    "13938": {
      "op": "MSTORE"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13941": {
      "op": "DUP6"
    },
    "13942": {
      "op": "ADD"
    },
    "13943": {
      "op": "SWAP4"
    },
    "13944": {
      "op": "SWAP1"
    },
    "13945": {
      "op": "SWAP4"
    },
    "13946": {
      "op": "MSTORE"
    },
    "13947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13953": {
      "op": "SHL"
    },
    "13954": {
      "op": "SUB"
    },
    "13955": {
      "op": "SWAP2"
    },
    "13956": {
      "op": "DUP3"
    },
    "13957": {
      "op": "AND"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13960": {
      "op": "DUP6"
    },
    "13961": {
      "op": "ADD"
    },
    "13962": {
      "op": "MSTORE"
    },
    "13963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13965": {
      "op": "DUP5"
    },
    "13966": {
      "op": "ADD"
    },
    "13967": {
      "op": "MSTORE"
    },
    "13968": {
      "op": "AND"
    },
    "13969": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13971": {
      "op": "DUP3"
    },
    "13972": {
      "op": "ADD"
    },
    "13973": {
      "op": "MSTORE"
    },
    "13974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13976": {
      "op": "ADD"
    },
    "13977": {
      "op": "SWAP1"
    },
    "13978": {
      "op": "JUMP"
    },
    "13979": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13980": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13982": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13983": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13984": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13985": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "SUB",
      "path": "2"
    },
    "13986": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13987": {
      "fn": "Shardable._putForSale",
      "offset": [
        15174,
        15220
      ],
      "op": "LOG1",
      "path": "2"
    },
    "13988": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13989": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13990": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13991": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13992": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13993": {
      "fn": "Shardable._putForSale",
      "offset": [
        14703,
        15227
      ],
      "op": "POP",
      "path": "2"
    },
    "13994": {
      "fn": "Shardable._putForSale",
      "jump": "o",
      "offset": [
        14703,
        15227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13995": {
      "fn": "Idea._liquidize",
      "offset": [
        9341,
        9492
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13996": {
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13998": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13999": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14000": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "14002": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6309
      ],
      "op": "AND",
      "path": "2"
    },
    "14003": {
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14004": {
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6317
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14005": {
      "branch": 239,
      "fn": "Idea._liquidize",
      "offset": [
        6303,
        6317
      ],
      "op": "EQ",
      "path": "2"
    },
    "14006": {
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36D1"
    },
    "14009": {
      "branch": 239,
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14010": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14012": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14019": {
      "op": "SHL"
    },
    "14020": {
      "offset": [
        6295,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14021": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14022": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14024": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "14025": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "14028": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14029": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6B"
    },
    "14032": {
      "fn": "Idea._liquidize",
      "jump": "i",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14033": {
      "fn": "Idea._liquidize",
      "offset": [
        6295,
        6324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14034": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9409
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 156,
      "value": "0x1"
    },
    "14036": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14037": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14040": {
      "op": "NOT"
    },
    "14041": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9417
      ],
      "op": "AND",
      "path": "1"
    },
    "14042": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14043": {
      "fn": "Idea._liquidize",
      "offset": [
        9403,
        9417
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14044": {
      "fn": "Idea._liquidize",
      "offset": [
        9470,
        9485
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 157
    },
    "14045": {
      "fn": "Idea._liquidize",
      "offset": [
        9454,
        9467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "14047": {
      "fn": "Idea._liquidize",
      "offset": [
        9454,
        9485
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14048": {
      "fn": "Idea._liquidize",
      "jump": "o",
      "offset": [
        9341,
        9492
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14049": {
      "fn": "Idea._transferEther",
      "offset": [
        6748,
        6909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14050": {
      "fn": "Idea._transferEther",
      "offset": [
        6819,
        6831
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14052": {
      "fn": "Idea._transferEther",
      "offset": [
        6845,
        6847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14059": {
      "op": "SHL"
    },
    "14060": {
      "op": "SUB"
    },
    "14061": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6853
      ],
      "op": "AND",
      "path": "1"
    },
    "14062": {
      "fn": "Idea._transferEther",
      "offset": [
        6860,
        6865
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14063": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14065": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14066": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14068": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14070": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14071": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14072": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14073": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "SUB",
      "path": "1"
    },
    "14074": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14075": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP6",
      "path": "1"
    },
    "14076": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP8",
      "path": "1"
    },
    "14077": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "GAS",
      "path": "1"
    },
    "14078": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "CALL",
      "path": "1"
    },
    "14079": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14080": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14081": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14082": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14083": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14084": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14085": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14087": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14088": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "EQ",
      "path": "1"
    },
    "14089": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x372E"
    },
    "14092": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14093": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14095": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14096": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14097": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14098": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "14100": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "NOT",
      "path": "1"
    },
    "14101": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "14103": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14104": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "ADD",
      "path": "1"
    },
    "14105": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "AND",
      "path": "1"
    },
    "14106": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14107": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "ADD",
      "path": "1"
    },
    "14108": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14110": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14111": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14112": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14113": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14114": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "14115": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14117": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14119": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14120": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "ADD",
      "path": "1"
    },
    "14121": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "14122": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3733"
    },
    "14125": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14126": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14127": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "14129": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14130": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14131": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14132": {
      "fn": "Idea._transferEther",
      "offset": [
        6837,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14133": {
      "fn": "Idea._transferEther",
      "offset": [
        6818,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14134": {
      "fn": "Idea._transferEther",
      "offset": [
        6818,
        6870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14135": {
      "fn": "Idea._transferEther",
      "offset": [
        6818,
        6870
      ],
      "op": "POP",
      "path": "1"
    },
    "14136": {
      "branch": 218,
      "fn": "Idea._transferEther",
      "offset": [
        6888,
        6895
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 158
    },
    "14137": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3E"
    },
    "14140": {
      "branch": 218,
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14141": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14143": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14150": {
      "op": "SHL"
    },
    "14151": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14152": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14155": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14157": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14158": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "ADD",
      "path": "1"
    },
    "14159": {
      "op": "MSTORE"
    },
    "14160": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14164": {
      "op": "DUP3"
    },
    "14165": {
      "op": "ADD"
    },
    "14166": {
      "op": "MSTORE"
    },
    "14167": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14172": {
      "op": "SHL"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14175": {
      "op": "DUP3"
    },
    "14176": {
      "op": "ADD"
    },
    "14177": {
      "op": "MSTORE"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14180": {
      "op": "ADD"
    },
    "14181": {
      "fn": "Idea._transferEther",
      "offset": [
        6880,
        6902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "14184": {
      "op": "JUMP"
    },
    "14185": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8279,
        8457
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14192": {
      "op": "SHL"
    },
    "14193": {
      "op": "SUB"
    },
    "14194": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 159
    },
    "14195": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "AND",
      "path": "1"
    },
    "14196": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14198": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14199": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14200": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14201": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "14203": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14205": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14206": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14208": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14209": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14210": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14211": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14212": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8398,
        8403
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14213": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8398,
        8403
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14214": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14215": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3791"
    },
    "14218": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14219": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8398,
        8403
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14220": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8398,
        8403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14221": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC0"
    },
    "14224": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        8374,
        8403
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14225": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14226": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14227": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14228": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8374,
        8403
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14229": {
      "op": "POP"
    },
    "14230": {
      "op": "POP"
    },
    "14231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14237": {
      "op": "SHL"
    },
    "14238": {
      "op": "SUB"
    },
    "14239": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 160
    },
    "14240": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "AND",
      "path": "1"
    },
    "14241": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14243": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14244": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14245": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14246": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "14248": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14250": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14251": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14253": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14254": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14255": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14256": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14257": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8445,
        8450
      ],
      "op": "DUP4",
      "path": "1"
    },
    "14258": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8445,
        8450
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "14259": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14260": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37BE"
    },
    "14263": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14264": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8445,
        8450
      ],
      "op": "DUP5",
      "path": "1"
    },
    "14265": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8445,
        8450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14266": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC0"
    },
    "14269": {
      "fn": "Idea._processTokenTransfer",
      "jump": "i",
      "offset": [
        8413,
        8450
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14270": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14271": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14272": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14273": {
      "fn": "Idea._processTokenTransfer",
      "offset": [
        8413,
        8450
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14274": {
      "op": "POP"
    },
    "14275": {
      "op": "POP"
    },
    "14276": {
      "op": "POP"
    },
    "14277": {
      "op": "POP"
    },
    "14278": {
      "fn": "Idea._processTokenTransfer",
      "jump": "o",
      "offset": [
        8279,
        8457
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14279": {
      "fn": "Shardable._expireShard",
      "offset": [
        16381,
        16625
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14280": {
      "fn": "Shardable._expireShard",
      "offset": [
        16511,
        16512
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 161,
      "value": "0x0"
    },
    "14282": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14283": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14284": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14285": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14287": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14289": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14290": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14291": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14292": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14294": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14295": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14296": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16493
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14297": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14299": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16499
      ],
      "op": "ADD",
      "path": "2"
    },
    "14300": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14307": {
      "op": "SHL"
    },
    "14308": {
      "op": "SUB"
    },
    "14309": {
      "fn": "Shardable._expireShard",
      "offset": [
        16475,
        16499
      ],
      "op": "AND",
      "path": "2"
    },
    "14310": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14311": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14312": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14314": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14315": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14316": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14317": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14318": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16500
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14319": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16513
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14320": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14321": {
      "fn": "Shardable._expireShard",
      "offset": [
        16462,
        16513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14322": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 162
    },
    "14323": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14324": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14325": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "14327": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14328": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14329": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14330": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14331": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14332": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16550
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14333": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16568
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14334": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14335": {
      "fn": "Shardable._expireShard",
      "offset": [
        16523,
        16568
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14336": {
      "fn": "Shardable._expireShard",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 163
    },
    "14337": {
      "fn": "Shardable._expireShard",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14338": {
      "op": "DUP5"
    },
    "14339": {
      "op": "DUP2"
    },
    "14340": {
      "op": "MSTORE"
    },
    "14341": {
      "op": "SWAP1"
    },
    "14342": {
      "op": "DUP2"
    },
    "14343": {
      "op": "ADD"
    },
    "14344": {
      "op": "DUP4"
    },
    "14345": {
      "op": "SWAP1"
    },
    "14346": {
      "op": "MSTORE"
    },
    "14347": {
      "fn": "Shardable._expireShard",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA3DEAFDE27C3FFDE83F038B337D8B0405D225455AE09FBED6A211EF4EE465F4F"
    },
    "14380": {
      "fn": "Shardable._expireShard",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14381": {
      "op": "ADD"
    },
    "14382": {
      "fn": "Shardable._expireShard",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB0"
    },
    "14385": {
      "op": "JUMP"
    },
    "14386": {
      "fn": "Shardable._pushShard",
      "offset": [
        15481,
        16179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14387": {
      "fn": "Shardable._pushShard",
      "offset": [
        15591,
        15592
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 164,
      "value": "0x0"
    },
    "14389": {
      "fn": "Shardable._pushShard",
      "offset": [
        15582,
        15588
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14390": {
      "branch": 240,
      "fn": "Shardable._pushShard",
      "offset": [
        15582,
        15592
      ],
      "op": "GT",
      "path": "2"
    },
    "14391": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3867"
    },
    "14394": {
      "branch": 240,
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14395": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14397": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14404": {
      "op": "SHL"
    },
    "14405": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14406": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14409": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14411": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14412": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "ADD",
      "path": "2"
    },
    "14413": {
      "op": "MSTORE"
    },
    "14414": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14418": {
      "op": "DUP3"
    },
    "14419": {
      "op": "ADD"
    },
    "14420": {
      "op": "MSTORE"
    },
    "14421": {
      "op": "PUSH2",
      "value": "0x29AD"
    },
    "14424": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14426": {
      "op": "SHL"
    },
    "14427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14429": {
      "op": "DUP3"
    },
    "14430": {
      "op": "ADD"
    },
    "14431": {
      "op": "MSTORE"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14434": {
      "op": "ADD"
    },
    "14435": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "14438": {
      "op": "JUMP"
    },
    "14439": {
      "fn": "Shardable._pushShard",
      "offset": [
        15574,
        15599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14440": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14442": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14443": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "14456": {
      "op": "NOT"
    },
    "14457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14459": {
      "op": "DUP5"
    },
    "14460": {
      "op": "SWAP1"
    },
    "14461": {
      "op": "SHL"
    },
    "14462": {
      "op": "AND"
    },
    "14463": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14465": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14466": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "ADD",
      "path": "2"
    },
    "14467": {
      "op": "MSTORE"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "14470": {
      "op": "DUP2"
    },
    "14471": {
      "op": "ADD"
    },
    "14472": {
      "op": "DUP3"
    },
    "14473": {
      "op": "SWAP1"
    },
    "14474": {
      "op": "MSTORE"
    },
    "14475": {
      "fn": "Shardable._pushShard",
      "offset": [
        15655,
        15668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14477": {
      "fn": "Shardable._pushShard",
      "offset": [
        15655,
        15668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14478": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "14480": {
      "op": "ADD"
    },
    "14481": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14483": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14484": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14485": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14486": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14487": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "SUB",
      "path": "2"
    },
    "14488": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14490": {
      "op": "NOT"
    },
    "14491": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "ADD",
      "path": "2"
    },
    "14492": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14493": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14494": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14495": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14496": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14497": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14498": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14499": {
      "fn": "Shardable._pushShard",
      "offset": [
        15681,
        15718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14501": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14502": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14503": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "ADD",
      "path": "2"
    },
    "14504": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14511": {
      "op": "SHL"
    },
    "14512": {
      "op": "SUB"
    },
    "14513": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 165
    },
    "14514": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14515": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "AND",
      "path": "2"
    },
    "14516": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14518": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14519": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14520": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14521": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14523": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14524": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14525": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14526": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14527": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14528": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15756
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14529": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14530": {
      "fn": "Shardable._pushShard",
      "offset": [
        15729,
        15756
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14531": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 166
    },
    "14532": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14533": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14534": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "14536": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14537": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14538": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14539": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14540": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15793
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14543": {
      "op": "NOT"
    },
    "14544": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14545": {
      "fn": "Shardable._pushShard",
      "offset": [
        15766,
        15813
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14546": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 167,
      "value": "0x60"
    },
    "14548": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14549": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14550": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14551": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14552": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14553": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14554": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14555": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14556": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14557": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14558": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14559": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14560": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14561": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14562": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14563": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14564": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14565": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14566": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14567": {
      "fn": "Shardable._pushShard",
      "offset": [
        15921,
        16121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14568": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14569": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14570": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14571": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14573": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14574": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14575": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14576": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14577": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14578": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        15918
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "14579": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "14580": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14581": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14582": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14583": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14584": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14586": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14587": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14588": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14589": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14596": {
      "op": "SHL"
    },
    "14597": {
      "op": "SUB"
    },
    "14598": {
      "op": "NOT"
    },
    "14599": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "AND",
      "path": "2"
    },
    "14600": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14601": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14602": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14603": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "AND",
      "path": "2"
    },
    "14604": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "OR",
      "path": "2"
    },
    "14605": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14606": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14607": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14608": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14609": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "14611": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14612": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "14613": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14614": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14615": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14616": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14617": {
      "fn": "Shardable._pushShard",
      "offset": [
        15900,
        16121
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14618": {
      "fn": "Shardable._pushShard",
      "offset": [
        16136,
        16171
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 168
    },
    "14619": {
      "fn": "Shardable._pushShard",
      "offset": [
        16136,
        16171
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14620": {
      "op": "DUP3"
    },
    "14621": {
      "op": "DUP2"
    },
    "14622": {
      "op": "MSTORE"
    },
    "14623": {
      "op": "SWAP3"
    },
    "14624": {
      "op": "DUP4"
    },
    "14625": {
      "op": "ADD"
    },
    "14626": {
      "op": "SWAP5"
    },
    "14627": {
      "op": "SWAP1"
    },
    "14628": {
      "op": "SWAP5"
    },
    "14629": {
      "op": "MSTORE"
    },
    "14630": {
      "op": "SWAP2"
    },
    "14631": {
      "op": "DUP2"
    },
    "14632": {
      "op": "ADD"
    },
    "14633": {
      "op": "DUP6"
    },
    "14634": {
      "op": "SWAP1"
    },
    "14635": {
      "op": "MSTORE"
    },
    "14636": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14637": {
      "fn": "Shardable._pushShard",
      "offset": [
        15671,
        15719
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14638": {
      "op": "POP"
    },
    "14639": {
      "fn": "Shardable._pushShard",
      "offset": [
        16136,
        16171
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x90E88E994885F1CDD31D3393F0B012E817804FC9D2ADEF69D0D7E5053D1E29AD"
    },
    "14672": {
      "fn": "Shardable._pushShard",
      "offset": [
        16136,
        16171
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14673": {
      "op": "ADD"
    },
    "14674": {
      "fn": "Shardable._pushShard",
      "offset": [
        16136,
        16171
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BB"
    },
    "14677": {
      "op": "JUMP"
    },
    "14678": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9028,
        9259
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14679": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9118,
        9144
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 169,
      "value": "0x395F"
    },
    "14682": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9131,
        9143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14683": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9118,
        9130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1446"
    },
    "14686": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "i",
      "offset": [
        9118,
        9144
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14687": {
      "branch": 219,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9118,
        9144
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14688": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3990"
    },
    "14691": {
      "branch": 219,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14692": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14694": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14701": {
      "op": "SHL"
    },
    "14702": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14703": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14706": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14708": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14709": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "ADD",
      "path": "1"
    },
    "14710": {
      "op": "MSTORE"
    },
    "14711": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14715": {
      "op": "DUP3"
    },
    "14716": {
      "op": "ADD"
    },
    "14717": {
      "op": "MSTORE"
    },
    "14718": {
      "op": "PUSH2",
      "value": "0x1555"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "14723": {
      "op": "SHL"
    },
    "14724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14726": {
      "op": "DUP3"
    },
    "14727": {
      "op": "ADD"
    },
    "14728": {
      "op": "MSTORE"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14731": {
      "op": "ADD"
    },
    "14732": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "14735": {
      "op": "JUMP"
    },
    "14736": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9110,
        9151
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14743": {
      "op": "SHL"
    },
    "14744": {
      "op": "SUB"
    },
    "14745": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 170
    },
    "14746": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "AND",
      "path": "1"
    },
    "14747": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14749": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14750": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14751": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14752": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "14754": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14756": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14757": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14759": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14760": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14761": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9189
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14762": {
      "branch": 220,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9169,
        9194
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "14763": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39DB"
    },
    "14766": {
      "branch": 220,
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14767": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14769": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14776": {
      "op": "SHL"
    },
    "14777": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14778": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14781": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14783": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14784": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "ADD",
      "path": "1"
    },
    "14785": {
      "op": "MSTORE"
    },
    "14786": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14790": {
      "op": "DUP3"
    },
    "14791": {
      "op": "ADD"
    },
    "14792": {
      "op": "MSTORE"
    },
    "14793": {
      "op": "PUSH2",
      "value": "0x272D"
    },
    "14796": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14798": {
      "op": "SHL"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14801": {
      "op": "DUP3"
    },
    "14802": {
      "op": "ADD"
    },
    "14803": {
      "op": "MSTORE"
    },
    "14804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14806": {
      "op": "ADD"
    },
    "14807": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "14810": {
      "op": "JUMP"
    },
    "14811": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9161,
        9201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14818": {
      "op": "SHL"
    },
    "14819": {
      "op": "SUB"
    },
    "14820": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "AND",
      "path": "1",
      "statement": 171
    },
    "14821": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9247,
        9252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14823": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14824": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14825": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14826": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "14828": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14830": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14831": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14833": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14834": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9244
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14835": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14836": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9252
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14839": {
      "op": "NOT"
    },
    "14840": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9252
      ],
      "op": "AND",
      "path": "1"
    },
    "14841": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14842": {
      "fn": "Idea._unregisterTokenAddress",
      "offset": [
        9211,
        9252
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14843": {
      "fn": "Idea._unregisterTokenAddress",
      "jump": "o",
      "offset": [
        9028,
        9259
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14844": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8651,
        8830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14845": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8740,
        8766
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 172,
      "value": "0x3A05"
    },
    "14848": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8753,
        8765
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14849": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1446"
    },
    "14852": {
      "fn": "Idea._registerTokenAddress",
      "jump": "i",
      "offset": [
        8740,
        8766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14853": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8740,
        8766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14854": {
      "branch": 221,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8739,
        8766
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "14855": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A37"
    },
    "14858": {
      "branch": 221,
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14859": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14861": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14868": {
      "op": "SHL"
    },
    "14869": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14870": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14873": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14875": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14876": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "ADD",
      "path": "1"
    },
    "14877": {
      "op": "MSTORE"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14882": {
      "op": "DUP3"
    },
    "14883": {
      "op": "ADD"
    },
    "14884": {
      "op": "MSTORE"
    },
    "14885": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "14888": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "14890": {
      "op": "SHL"
    },
    "14891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14893": {
      "op": "DUP3"
    },
    "14894": {
      "op": "ADD"
    },
    "14895": {
      "op": "MSTORE"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14898": {
      "op": "ADD"
    },
    "14899": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2B"
    },
    "14902": {
      "op": "JUMP"
    },
    "14903": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8731,
        8773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14910": {
      "op": "SHL"
    },
    "14911": {
      "op": "SUB"
    },
    "14912": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "AND",
      "path": "1",
      "statement": 173
    },
    "14913": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14915": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14916": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14917": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14918": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "14920": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "14922": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14923": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14925": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14926": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8816
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "14927": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14928": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14929": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14931": {
      "op": "NOT"
    },
    "14932": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "AND",
      "path": "1"
    },
    "14933": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8819,
        8823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "14935": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "OR",
      "path": "1"
    },
    "14936": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14937": {
      "fn": "Idea._registerTokenAddress",
      "offset": [
        8783,
        8823
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14938": {
      "fn": "Idea._registerTokenAddress",
      "jump": "o",
      "offset": [
        8651,
        8830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14939": {
      "op": "JUMPDEST"
    },
    "14940": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14945": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14947": {
      "op": "SHL"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14950": {
      "op": "MSTORE"
    },
    "14951": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "14953": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14955": {
      "op": "MSTORE"
    },
    "14956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14960": {
      "op": "REVERT"
    },
    "14961": {
      "op": "JUMPDEST"
    },
    "14962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14964": {
      "op": "DUP3"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14967": {
      "op": "DUP4"
    },
    "14968": {
      "op": "ADD"
    },
    "14969": {
      "op": "SLT"
    },
    "14970": {
      "op": "PUSH2",
      "value": "0x3A82"
    },
    "14973": {
      "op": "JUMPI"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14976": {
      "op": "DUP1"
    },
    "14977": {
      "op": "REVERT"
    },
    "14978": {
      "op": "JUMPDEST"
    },
    "14979": {
      "op": "DUP2"
    },
    "14980": {
      "op": "CALLDATALOAD"
    },
    "14981": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14990": {
      "op": "DUP1"
    },
    "14991": {
      "op": "DUP3"
    },
    "14992": {
      "op": "GT"
    },
    "14993": {
      "op": "ISZERO"
    },
    "14994": {
      "op": "PUSH2",
      "value": "0x3A9D"
    },
    "14997": {
      "op": "JUMPI"
    },
    "14998": {
      "op": "PUSH2",
      "value": "0x3A9D"
    },
    "15001": {
      "op": "PUSH2",
      "value": "0x3A5B"
    },
    "15004": {
      "jump": "i",
      "op": "JUMP"
    },
    "15005": {
      "op": "JUMPDEST"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15008": {
      "op": "MLOAD"
    },
    "15009": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15011": {
      "op": "DUP4"
    },
    "15012": {
      "op": "ADD"
    },
    "15013": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15015": {
      "op": "NOT"
    },
    "15016": {
      "op": "SWAP1"
    },
    "15017": {
      "op": "DUP2"
    },
    "15018": {
      "op": "AND"
    },
    "15019": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15021": {
      "op": "ADD"
    },
    "15022": {
      "op": "AND"
    },
    "15023": {
      "op": "DUP2"
    },
    "15024": {
      "op": "ADD"
    },
    "15025": {
      "op": "SWAP1"
    },
    "15026": {
      "op": "DUP3"
    },
    "15027": {
      "op": "DUP3"
    },
    "15028": {
      "op": "GT"
    },
    "15029": {
      "op": "DUP2"
    },
    "15030": {
      "op": "DUP4"
    },
    "15031": {
      "op": "LT"
    },
    "15032": {
      "op": "OR"
    },
    "15033": {
      "op": "ISZERO"
    },
    "15034": {
      "op": "PUSH2",
      "value": "0x3AC5"
    },
    "15037": {
      "op": "JUMPI"
    },
    "15038": {
      "op": "PUSH2",
      "value": "0x3AC5"
    },
    "15041": {
      "op": "PUSH2",
      "value": "0x3A5B"
    },
    "15044": {
      "jump": "i",
      "op": "JUMP"
    },
    "15045": {
      "op": "JUMPDEST"
    },
    "15046": {
      "op": "DUP2"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15049": {
      "op": "MSTORE"
    },
    "15050": {
      "op": "DUP4"
    },
    "15051": {
      "op": "DUP2"
    },
    "15052": {
      "op": "MSTORE"
    },
    "15053": {
      "op": "DUP7"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15056": {
      "op": "DUP6"
    },
    "15057": {
      "op": "DUP9"
    },
    "15058": {
      "op": "ADD"
    },
    "15059": {
      "op": "ADD"
    },
    "15060": {
      "op": "GT"
    },
    "15061": {
      "op": "ISZERO"
    },
    "15062": {
      "op": "PUSH2",
      "value": "0x3ADE"
    },
    "15065": {
      "op": "JUMPI"
    },
    "15066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15068": {
      "op": "DUP1"
    },
    "15069": {
      "op": "REVERT"
    },
    "15070": {
      "op": "JUMPDEST"
    },
    "15071": {
      "op": "DUP4"
    },
    "15072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15074": {
      "op": "DUP8"
    },
    "15075": {
      "op": "ADD"
    },
    "15076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15078": {
      "op": "DUP4"
    },
    "15079": {
      "op": "ADD"
    },
    "15080": {
      "op": "CALLDATACOPY"
    },
    "15081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15085": {
      "op": "DUP6"
    },
    "15086": {
      "op": "DUP4"
    },
    "15087": {
      "op": "ADD"
    },
    "15088": {
      "op": "ADD"
    },
    "15089": {
      "op": "MSTORE"
    },
    "15090": {
      "op": "DUP1"
    },
    "15091": {
      "op": "SWAP5"
    },
    "15092": {
      "op": "POP"
    },
    "15093": {
      "op": "POP"
    },
    "15094": {
      "op": "POP"
    },
    "15095": {
      "op": "POP"
    },
    "15096": {
      "op": "POP"
    },
    "15097": {
      "op": "SWAP3"
    },
    "15098": {
      "op": "SWAP2"
    },
    "15099": {
      "op": "POP"
    },
    "15100": {
      "op": "POP"
    },
    "15101": {
      "jump": "o",
      "op": "JUMP"
    },
    "15102": {
      "op": "JUMPDEST"
    },
    "15103": {
      "op": "DUP1"
    },
    "15104": {
      "op": "CALLDATALOAD"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15107": {
      "op": "DUP2"
    },
    "15108": {
      "op": "LT"
    },
    "15109": {
      "op": "PUSH2",
      "value": "0x3B0D"
    },
    "15112": {
      "op": "JUMPI"
    },
    "15113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15115": {
      "op": "DUP1"
    },
    "15116": {
      "op": "REVERT"
    },
    "15117": {
      "op": "JUMPDEST"
    },
    "15118": {
      "op": "SWAP2"
    },
    "15119": {
      "op": "SWAP1"
    },
    "15120": {
      "op": "POP"
    },
    "15121": {
      "jump": "o",
      "op": "JUMP"
    },
    "15122": {
      "op": "JUMPDEST"
    },
    "15123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15125": {
      "op": "DUP1"
    },
    "15126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15128": {
      "op": "DUP4"
    },
    "15129": {
      "op": "DUP6"
    },
    "15130": {
      "op": "SUB"
    },
    "15131": {
      "op": "SLT"
    },
    "15132": {
      "op": "ISZERO"
    },
    "15133": {
      "op": "PUSH2",
      "value": "0x3B25"
    },
    "15136": {
      "op": "JUMPI"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15139": {
      "op": "DUP1"
    },
    "15140": {
      "op": "REVERT"
    },
    "15141": {
      "op": "JUMPDEST"
    },
    "15142": {
      "op": "DUP3"
    },
    "15143": {
      "op": "CALLDATALOAD"
    },
    "15144": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15153": {
      "op": "DUP2"
    },
    "15154": {
      "op": "GT"
    },
    "15155": {
      "op": "ISZERO"
    },
    "15156": {
      "op": "PUSH2",
      "value": "0x3B3C"
    },
    "15159": {
      "op": "JUMPI"
    },
    "15160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15162": {
      "op": "DUP1"
    },
    "15163": {
      "op": "REVERT"
    },
    "15164": {
      "op": "JUMPDEST"
    },
    "15165": {
      "op": "PUSH2",
      "value": "0x3B48"
    },
    "15168": {
      "op": "DUP6"
    },
    "15169": {
      "op": "DUP3"
    },
    "15170": {
      "op": "DUP7"
    },
    "15171": {
      "op": "ADD"
    },
    "15172": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15175": {
      "jump": "i",
      "op": "JUMP"
    },
    "15176": {
      "op": "JUMPDEST"
    },
    "15177": {
      "op": "SWAP3"
    },
    "15178": {
      "op": "POP"
    },
    "15179": {
      "op": "POP"
    },
    "15180": {
      "op": "PUSH2",
      "value": "0x3B57"
    },
    "15183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15185": {
      "op": "DUP5"
    },
    "15186": {
      "op": "ADD"
    },
    "15187": {
      "op": "PUSH2",
      "value": "0x3AFE"
    },
    "15190": {
      "jump": "i",
      "op": "JUMP"
    },
    "15191": {
      "op": "JUMPDEST"
    },
    "15192": {
      "op": "SWAP1"
    },
    "15193": {
      "op": "POP"
    },
    "15194": {
      "op": "SWAP3"
    },
    "15195": {
      "op": "POP"
    },
    "15196": {
      "op": "SWAP3"
    },
    "15197": {
      "op": "SWAP1"
    },
    "15198": {
      "op": "POP"
    },
    "15199": {
      "jump": "o",
      "op": "JUMP"
    },
    "15200": {
      "op": "JUMPDEST"
    },
    "15201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15205": {
      "op": "DUP3"
    },
    "15206": {
      "op": "DUP5"
    },
    "15207": {
      "op": "SUB"
    },
    "15208": {
      "op": "SLT"
    },
    "15209": {
      "op": "ISZERO"
    },
    "15210": {
      "op": "PUSH2",
      "value": "0x3B72"
    },
    "15213": {
      "op": "JUMPI"
    },
    "15214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15216": {
      "op": "DUP1"
    },
    "15217": {
      "op": "REVERT"
    },
    "15218": {
      "op": "JUMPDEST"
    },
    "15219": {
      "op": "POP"
    },
    "15220": {
      "op": "CALLDATALOAD"
    },
    "15221": {
      "op": "SWAP2"
    },
    "15222": {
      "op": "SWAP1"
    },
    "15223": {
      "op": "POP"
    },
    "15224": {
      "jump": "o",
      "op": "JUMP"
    },
    "15225": {
      "op": "JUMPDEST"
    },
    "15226": {
      "op": "DUP1"
    },
    "15227": {
      "op": "CALLDATALOAD"
    },
    "15228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15234": {
      "op": "SHL"
    },
    "15235": {
      "op": "SUB"
    },
    "15236": {
      "op": "DUP2"
    },
    "15237": {
      "op": "AND"
    },
    "15238": {
      "op": "DUP2"
    },
    "15239": {
      "op": "EQ"
    },
    "15240": {
      "op": "PUSH2",
      "value": "0x3B0D"
    },
    "15243": {
      "op": "JUMPI"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15246": {
      "op": "DUP1"
    },
    "15247": {
      "op": "REVERT"
    },
    "15248": {
      "op": "JUMPDEST"
    },
    "15249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15253": {
      "op": "DUP3"
    },
    "15254": {
      "op": "DUP5"
    },
    "15255": {
      "op": "SUB"
    },
    "15256": {
      "op": "SLT"
    },
    "15257": {
      "op": "ISZERO"
    },
    "15258": {
      "op": "PUSH2",
      "value": "0x3BA2"
    },
    "15261": {
      "op": "JUMPI"
    },
    "15262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15264": {
      "op": "DUP1"
    },
    "15265": {
      "op": "REVERT"
    },
    "15266": {
      "op": "JUMPDEST"
    },
    "15267": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "15270": {
      "op": "DUP3"
    },
    "15271": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15274": {
      "jump": "i",
      "op": "JUMP"
    },
    "15275": {
      "op": "JUMPDEST"
    },
    "15276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15280": {
      "op": "DUP3"
    },
    "15281": {
      "op": "DUP5"
    },
    "15282": {
      "op": "SUB"
    },
    "15283": {
      "op": "SLT"
    },
    "15284": {
      "op": "ISZERO"
    },
    "15285": {
      "op": "PUSH2",
      "value": "0x3BBD"
    },
    "15288": {
      "op": "JUMPI"
    },
    "15289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15291": {
      "op": "DUP1"
    },
    "15292": {
      "op": "REVERT"
    },
    "15293": {
      "op": "JUMPDEST"
    },
    "15294": {
      "op": "DUP2"
    },
    "15295": {
      "op": "CALLDATALOAD"
    },
    "15296": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15305": {
      "op": "DUP2"
    },
    "15306": {
      "op": "GT"
    },
    "15307": {
      "op": "ISZERO"
    },
    "15308": {
      "op": "PUSH2",
      "value": "0x3BD4"
    },
    "15311": {
      "op": "JUMPI"
    },
    "15312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15314": {
      "op": "DUP1"
    },
    "15315": {
      "op": "REVERT"
    },
    "15316": {
      "op": "JUMPDEST"
    },
    "15317": {
      "op": "PUSH2",
      "value": "0x3BE0"
    },
    "15320": {
      "op": "DUP5"
    },
    "15321": {
      "op": "DUP3"
    },
    "15322": {
      "op": "DUP6"
    },
    "15323": {
      "op": "ADD"
    },
    "15324": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15327": {
      "jump": "i",
      "op": "JUMP"
    },
    "15328": {
      "op": "JUMPDEST"
    },
    "15329": {
      "op": "SWAP5"
    },
    "15330": {
      "op": "SWAP4"
    },
    "15331": {
      "op": "POP"
    },
    "15332": {
      "op": "POP"
    },
    "15333": {
      "op": "POP"
    },
    "15334": {
      "op": "POP"
    },
    "15335": {
      "jump": "o",
      "op": "JUMP"
    },
    "15336": {
      "op": "JUMPDEST"
    },
    "15337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15339": {
      "op": "DUP1"
    },
    "15340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15342": {
      "op": "DUP4"
    },
    "15343": {
      "op": "DUP6"
    },
    "15344": {
      "op": "SUB"
    },
    "15345": {
      "op": "SLT"
    },
    "15346": {
      "op": "ISZERO"
    },
    "15347": {
      "op": "PUSH2",
      "value": "0x3BFB"
    },
    "15350": {
      "op": "JUMPI"
    },
    "15351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15353": {
      "op": "DUP1"
    },
    "15354": {
      "op": "REVERT"
    },
    "15355": {
      "op": "JUMPDEST"
    },
    "15356": {
      "op": "DUP3"
    },
    "15357": {
      "op": "CALLDATALOAD"
    },
    "15358": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15367": {
      "op": "DUP2"
    },
    "15368": {
      "op": "GT"
    },
    "15369": {
      "op": "ISZERO"
    },
    "15370": {
      "op": "PUSH2",
      "value": "0x3C12"
    },
    "15373": {
      "op": "JUMPI"
    },
    "15374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15376": {
      "op": "DUP1"
    },
    "15377": {
      "op": "REVERT"
    },
    "15378": {
      "op": "JUMPDEST"
    },
    "15379": {
      "op": "PUSH2",
      "value": "0x3C1E"
    },
    "15382": {
      "op": "DUP6"
    },
    "15383": {
      "op": "DUP3"
    },
    "15384": {
      "op": "DUP7"
    },
    "15385": {
      "op": "ADD"
    },
    "15386": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15389": {
      "jump": "i",
      "op": "JUMP"
    },
    "15390": {
      "op": "JUMPDEST"
    },
    "15391": {
      "op": "SWAP3"
    },
    "15392": {
      "op": "POP"
    },
    "15393": {
      "op": "POP"
    },
    "15394": {
      "op": "PUSH2",
      "value": "0x3B57"
    },
    "15397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15399": {
      "op": "DUP5"
    },
    "15400": {
      "op": "ADD"
    },
    "15401": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15404": {
      "jump": "i",
      "op": "JUMP"
    },
    "15405": {
      "op": "JUMPDEST"
    },
    "15406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15408": {
      "op": "DUP1"
    },
    "15409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15411": {
      "op": "DUP4"
    },
    "15412": {
      "op": "DUP6"
    },
    "15413": {
      "op": "SUB"
    },
    "15414": {
      "op": "SLT"
    },
    "15415": {
      "op": "ISZERO"
    },
    "15416": {
      "op": "PUSH2",
      "value": "0x3C40"
    },
    "15419": {
      "op": "JUMPI"
    },
    "15420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15422": {
      "op": "DUP1"
    },
    "15423": {
      "op": "REVERT"
    },
    "15424": {
      "op": "JUMPDEST"
    },
    "15425": {
      "op": "POP"
    },
    "15426": {
      "op": "POP"
    },
    "15427": {
      "op": "DUP1"
    },
    "15428": {
      "op": "CALLDATALOAD"
    },
    "15429": {
      "op": "SWAP3"
    },
    "15430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15432": {
      "op": "SWAP1"
    },
    "15433": {
      "op": "SWAP2"
    },
    "15434": {
      "op": "ADD"
    },
    "15435": {
      "op": "CALLDATALOAD"
    },
    "15436": {
      "op": "SWAP2"
    },
    "15437": {
      "op": "POP"
    },
    "15438": {
      "jump": "o",
      "op": "JUMP"
    },
    "15439": {
      "op": "JUMPDEST"
    },
    "15440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15442": {
      "op": "DUP1"
    },
    "15443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15445": {
      "op": "DUP1"
    },
    "15446": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15448": {
      "op": "DUP6"
    },
    "15449": {
      "op": "DUP8"
    },
    "15450": {
      "op": "SUB"
    },
    "15451": {
      "op": "SLT"
    },
    "15452": {
      "op": "ISZERO"
    },
    "15453": {
      "op": "PUSH2",
      "value": "0x3C65"
    },
    "15456": {
      "op": "JUMPI"
    },
    "15457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15459": {
      "op": "DUP1"
    },
    "15460": {
      "op": "REVERT"
    },
    "15461": {
      "op": "JUMPDEST"
    },
    "15462": {
      "op": "DUP5"
    },
    "15463": {
      "op": "CALLDATALOAD"
    },
    "15464": {
      "op": "SWAP4"
    },
    "15465": {
      "op": "POP"
    },
    "15466": {
      "op": "PUSH2",
      "value": "0x3C75"
    },
    "15469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15471": {
      "op": "DUP7"
    },
    "15472": {
      "op": "ADD"
    },
    "15473": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15476": {
      "jump": "i",
      "op": "JUMP"
    },
    "15477": {
      "op": "JUMPDEST"
    },
    "15478": {
      "op": "SWAP3"
    },
    "15479": {
      "op": "POP"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15482": {
      "op": "DUP6"
    },
    "15483": {
      "op": "ADD"
    },
    "15484": {
      "op": "CALLDATALOAD"
    },
    "15485": {
      "op": "SWAP2"
    },
    "15486": {
      "op": "POP"
    },
    "15487": {
      "op": "PUSH2",
      "value": "0x3C8A"
    },
    "15490": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15492": {
      "op": "DUP7"
    },
    "15493": {
      "op": "ADD"
    },
    "15494": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15497": {
      "jump": "i",
      "op": "JUMP"
    },
    "15498": {
      "op": "JUMPDEST"
    },
    "15499": {
      "op": "SWAP1"
    },
    "15500": {
      "op": "POP"
    },
    "15501": {
      "op": "SWAP3"
    },
    "15502": {
      "op": "SWAP6"
    },
    "15503": {
      "op": "SWAP2"
    },
    "15504": {
      "op": "SWAP5"
    },
    "15505": {
      "op": "POP"
    },
    "15506": {
      "op": "SWAP3"
    },
    "15507": {
      "op": "POP"
    },
    "15508": {
      "jump": "o",
      "op": "JUMP"
    },
    "15509": {
      "op": "JUMPDEST"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15512": {
      "op": "DUP1"
    },
    "15513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15517": {
      "op": "DUP5"
    },
    "15518": {
      "op": "DUP7"
    },
    "15519": {
      "op": "SUB"
    },
    "15520": {
      "op": "SLT"
    },
    "15521": {
      "op": "ISZERO"
    },
    "15522": {
      "op": "PUSH2",
      "value": "0x3CAA"
    },
    "15525": {
      "op": "JUMPI"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15528": {
      "op": "DUP1"
    },
    "15529": {
      "op": "REVERT"
    },
    "15530": {
      "op": "JUMPDEST"
    },
    "15531": {
      "op": "DUP4"
    },
    "15532": {
      "op": "CALLDATALOAD"
    },
    "15533": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15542": {
      "op": "DUP2"
    },
    "15543": {
      "op": "GT"
    },
    "15544": {
      "op": "ISZERO"
    },
    "15545": {
      "op": "PUSH2",
      "value": "0x3CC1"
    },
    "15548": {
      "op": "JUMPI"
    },
    "15549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15551": {
      "op": "DUP1"
    },
    "15552": {
      "op": "REVERT"
    },
    "15553": {
      "op": "JUMPDEST"
    },
    "15554": {
      "op": "PUSH2",
      "value": "0x3CCD"
    },
    "15557": {
      "op": "DUP7"
    },
    "15558": {
      "op": "DUP3"
    },
    "15559": {
      "op": "DUP8"
    },
    "15560": {
      "op": "ADD"
    },
    "15561": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15564": {
      "jump": "i",
      "op": "JUMP"
    },
    "15565": {
      "op": "JUMPDEST"
    },
    "15566": {
      "op": "SWAP4"
    },
    "15567": {
      "op": "POP"
    },
    "15568": {
      "op": "POP"
    },
    "15569": {
      "op": "PUSH2",
      "value": "0x3CDC"
    },
    "15572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15574": {
      "op": "DUP6"
    },
    "15575": {
      "op": "ADD"
    },
    "15576": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15579": {
      "jump": "i",
      "op": "JUMP"
    },
    "15580": {
      "op": "JUMPDEST"
    },
    "15581": {
      "op": "SWAP2"
    },
    "15582": {
      "op": "POP"
    },
    "15583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15585": {
      "op": "DUP5"
    },
    "15586": {
      "op": "ADD"
    },
    "15587": {
      "op": "CALLDATALOAD"
    },
    "15588": {
      "op": "SWAP1"
    },
    "15589": {
      "op": "POP"
    },
    "15590": {
      "op": "SWAP3"
    },
    "15591": {
      "op": "POP"
    },
    "15592": {
      "op": "SWAP3"
    },
    "15593": {
      "op": "POP"
    },
    "15594": {
      "op": "SWAP3"
    },
    "15595": {
      "jump": "o",
      "op": "JUMP"
    },
    "15596": {
      "op": "JUMPDEST"
    },
    "15597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15599": {
      "op": "DUP1"
    },
    "15600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15602": {
      "op": "DUP4"
    },
    "15603": {
      "op": "DUP6"
    },
    "15604": {
      "op": "SUB"
    },
    "15605": {
      "op": "SLT"
    },
    "15606": {
      "op": "ISZERO"
    },
    "15607": {
      "op": "PUSH2",
      "value": "0x3CFF"
    },
    "15610": {
      "op": "JUMPI"
    },
    "15611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15613": {
      "op": "DUP1"
    },
    "15614": {
      "op": "REVERT"
    },
    "15615": {
      "op": "JUMPDEST"
    },
    "15616": {
      "op": "PUSH2",
      "value": "0x3D08"
    },
    "15619": {
      "op": "DUP4"
    },
    "15620": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15623": {
      "jump": "i",
      "op": "JUMP"
    },
    "15624": {
      "op": "JUMPDEST"
    },
    "15625": {
      "op": "SWAP5"
    },
    "15626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15628": {
      "op": "SWAP4"
    },
    "15629": {
      "op": "SWAP1"
    },
    "15630": {
      "op": "SWAP4"
    },
    "15631": {
      "op": "ADD"
    },
    "15632": {
      "op": "CALLDATALOAD"
    },
    "15633": {
      "op": "SWAP4"
    },
    "15634": {
      "op": "POP"
    },
    "15635": {
      "op": "POP"
    },
    "15636": {
      "op": "POP"
    },
    "15637": {
      "jump": "o",
      "op": "JUMP"
    },
    "15638": {
      "op": "JUMPDEST"
    },
    "15639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15641": {
      "op": "DUP1"
    },
    "15642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15644": {
      "op": "DUP1"
    },
    "15645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15647": {
      "op": "DUP6"
    },
    "15648": {
      "op": "DUP8"
    },
    "15649": {
      "op": "SUB"
    },
    "15650": {
      "op": "SLT"
    },
    "15651": {
      "op": "ISZERO"
    },
    "15652": {
      "op": "PUSH2",
      "value": "0x3D2C"
    },
    "15655": {
      "op": "JUMPI"
    },
    "15656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15658": {
      "op": "DUP1"
    },
    "15659": {
      "op": "REVERT"
    },
    "15660": {
      "op": "JUMPDEST"
    },
    "15661": {
      "op": "DUP5"
    },
    "15662": {
      "op": "CALLDATALOAD"
    },
    "15663": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15672": {
      "op": "DUP1"
    },
    "15673": {
      "op": "DUP3"
    },
    "15674": {
      "op": "GT"
    },
    "15675": {
      "op": "ISZERO"
    },
    "15676": {
      "op": "PUSH2",
      "value": "0x3D44"
    },
    "15679": {
      "op": "JUMPI"
    },
    "15680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15682": {
      "op": "DUP1"
    },
    "15683": {
      "op": "REVERT"
    },
    "15684": {
      "op": "JUMPDEST"
    },
    "15685": {
      "op": "PUSH2",
      "value": "0x3D50"
    },
    "15688": {
      "op": "DUP9"
    },
    "15689": {
      "op": "DUP4"
    },
    "15690": {
      "op": "DUP10"
    },
    "15691": {
      "op": "ADD"
    },
    "15692": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15695": {
      "jump": "i",
      "op": "JUMP"
    },
    "15696": {
      "op": "JUMPDEST"
    },
    "15697": {
      "op": "SWAP6"
    },
    "15698": {
      "op": "POP"
    },
    "15699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15701": {
      "op": "DUP8"
    },
    "15702": {
      "op": "ADD"
    },
    "15703": {
      "op": "CALLDATALOAD"
    },
    "15704": {
      "op": "SWAP2"
    },
    "15705": {
      "op": "POP"
    },
    "15706": {
      "op": "DUP1"
    },
    "15707": {
      "op": "DUP3"
    },
    "15708": {
      "op": "GT"
    },
    "15709": {
      "op": "ISZERO"
    },
    "15710": {
      "op": "PUSH2",
      "value": "0x3D66"
    },
    "15713": {
      "op": "JUMPI"
    },
    "15714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15716": {
      "op": "DUP1"
    },
    "15717": {
      "op": "REVERT"
    },
    "15718": {
      "op": "JUMPDEST"
    },
    "15719": {
      "op": "POP"
    },
    "15720": {
      "op": "PUSH2",
      "value": "0x3D73"
    },
    "15723": {
      "op": "DUP8"
    },
    "15724": {
      "op": "DUP3"
    },
    "15725": {
      "op": "DUP9"
    },
    "15726": {
      "op": "ADD"
    },
    "15727": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15730": {
      "jump": "i",
      "op": "JUMP"
    },
    "15731": {
      "op": "JUMPDEST"
    },
    "15732": {
      "op": "SWAP4"
    },
    "15733": {
      "op": "POP"
    },
    "15734": {
      "op": "POP"
    },
    "15735": {
      "op": "PUSH2",
      "value": "0x3D82"
    },
    "15738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15740": {
      "op": "DUP7"
    },
    "15741": {
      "op": "ADD"
    },
    "15742": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15745": {
      "jump": "i",
      "op": "JUMP"
    },
    "15746": {
      "op": "JUMPDEST"
    },
    "15747": {
      "op": "SWAP4"
    },
    "15748": {
      "op": "SWAP7"
    },
    "15749": {
      "op": "SWAP3"
    },
    "15750": {
      "op": "SWAP6"
    },
    "15751": {
      "op": "POP"
    },
    "15752": {
      "op": "SWAP3"
    },
    "15753": {
      "op": "SWAP4"
    },
    "15754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15756": {
      "op": "ADD"
    },
    "15757": {
      "op": "CALLDATALOAD"
    },
    "15758": {
      "op": "SWAP3"
    },
    "15759": {
      "op": "POP"
    },
    "15760": {
      "op": "POP"
    },
    "15761": {
      "jump": "o",
      "op": "JUMP"
    },
    "15762": {
      "op": "JUMPDEST"
    },
    "15763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15765": {
      "op": "DUP1"
    },
    "15766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15768": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15770": {
      "op": "DUP5"
    },
    "15771": {
      "op": "DUP7"
    },
    "15772": {
      "op": "SUB"
    },
    "15773": {
      "op": "SLT"
    },
    "15774": {
      "op": "ISZERO"
    },
    "15775": {
      "op": "PUSH2",
      "value": "0x3DA7"
    },
    "15778": {
      "op": "JUMPI"
    },
    "15779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15781": {
      "op": "DUP1"
    },
    "15782": {
      "op": "REVERT"
    },
    "15783": {
      "op": "JUMPDEST"
    },
    "15784": {
      "op": "DUP4"
    },
    "15785": {
      "op": "CALLDATALOAD"
    },
    "15786": {
      "op": "SWAP3"
    },
    "15787": {
      "op": "POP"
    },
    "15788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15790": {
      "op": "DUP5"
    },
    "15791": {
      "op": "ADD"
    },
    "15792": {
      "op": "CALLDATALOAD"
    },
    "15793": {
      "op": "SWAP2"
    },
    "15794": {
      "op": "POP"
    },
    "15795": {
      "op": "PUSH2",
      "value": "0x3DBE"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15800": {
      "op": "DUP6"
    },
    "15801": {
      "op": "ADD"
    },
    "15802": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15805": {
      "jump": "i",
      "op": "JUMP"
    },
    "15806": {
      "op": "JUMPDEST"
    },
    "15807": {
      "op": "SWAP1"
    },
    "15808": {
      "op": "POP"
    },
    "15809": {
      "op": "SWAP3"
    },
    "15810": {
      "op": "POP"
    },
    "15811": {
      "op": "SWAP3"
    },
    "15812": {
      "op": "POP"
    },
    "15813": {
      "op": "SWAP3"
    },
    "15814": {
      "jump": "o",
      "op": "JUMP"
    },
    "15815": {
      "op": "JUMPDEST"
    },
    "15816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15818": {
      "op": "DUP1"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15821": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15823": {
      "op": "DUP5"
    },
    "15824": {
      "op": "DUP7"
    },
    "15825": {
      "op": "SUB"
    },
    "15826": {
      "op": "SLT"
    },
    "15827": {
      "op": "ISZERO"
    },
    "15828": {
      "op": "PUSH2",
      "value": "0x3DDC"
    },
    "15831": {
      "op": "JUMPI"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15834": {
      "op": "DUP1"
    },
    "15835": {
      "op": "REVERT"
    },
    "15836": {
      "op": "JUMPDEST"
    },
    "15837": {
      "op": "DUP4"
    },
    "15838": {
      "op": "CALLDATALOAD"
    },
    "15839": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15848": {
      "op": "DUP2"
    },
    "15849": {
      "op": "GT"
    },
    "15850": {
      "op": "ISZERO"
    },
    "15851": {
      "op": "PUSH2",
      "value": "0x3DF3"
    },
    "15854": {
      "op": "JUMPI"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15857": {
      "op": "DUP1"
    },
    "15858": {
      "op": "REVERT"
    },
    "15859": {
      "op": "JUMPDEST"
    },
    "15860": {
      "op": "PUSH2",
      "value": "0x3DFF"
    },
    "15863": {
      "op": "DUP7"
    },
    "15864": {
      "op": "DUP3"
    },
    "15865": {
      "op": "DUP8"
    },
    "15866": {
      "op": "ADD"
    },
    "15867": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15870": {
      "jump": "i",
      "op": "JUMP"
    },
    "15871": {
      "op": "JUMPDEST"
    },
    "15872": {
      "op": "SWAP4"
    },
    "15873": {
      "op": "POP"
    },
    "15874": {
      "op": "POP"
    },
    "15875": {
      "op": "PUSH2",
      "value": "0x3E0E"
    },
    "15878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15880": {
      "op": "DUP6"
    },
    "15881": {
      "op": "ADD"
    },
    "15882": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15885": {
      "jump": "i",
      "op": "JUMP"
    },
    "15886": {
      "op": "JUMPDEST"
    },
    "15887": {
      "op": "SWAP2"
    },
    "15888": {
      "op": "POP"
    },
    "15889": {
      "op": "PUSH2",
      "value": "0x3DBE"
    },
    "15892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15894": {
      "op": "DUP6"
    },
    "15895": {
      "op": "ADD"
    },
    "15896": {
      "op": "PUSH2",
      "value": "0x3AFE"
    },
    "15899": {
      "jump": "i",
      "op": "JUMP"
    },
    "15900": {
      "op": "JUMPDEST"
    },
    "15901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15903": {
      "op": "DUP1"
    },
    "15904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15906": {
      "op": "DUP1"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15909": {
      "op": "DUP6"
    },
    "15910": {
      "op": "DUP8"
    },
    "15911": {
      "op": "SUB"
    },
    "15912": {
      "op": "SLT"
    },
    "15913": {
      "op": "ISZERO"
    },
    "15914": {
      "op": "PUSH2",
      "value": "0x3E32"
    },
    "15917": {
      "op": "JUMPI"
    },
    "15918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15920": {
      "op": "DUP1"
    },
    "15921": {
      "op": "REVERT"
    },
    "15922": {
      "op": "JUMPDEST"
    },
    "15923": {
      "op": "DUP5"
    },
    "15924": {
      "op": "CALLDATALOAD"
    },
    "15925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15934": {
      "op": "DUP2"
    },
    "15935": {
      "op": "GT"
    },
    "15936": {
      "op": "ISZERO"
    },
    "15937": {
      "op": "PUSH2",
      "value": "0x3E49"
    },
    "15940": {
      "op": "JUMPI"
    },
    "15941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15943": {
      "op": "DUP1"
    },
    "15944": {
      "op": "REVERT"
    },
    "15945": {
      "op": "JUMPDEST"
    },
    "15946": {
      "op": "PUSH2",
      "value": "0x3E55"
    },
    "15949": {
      "op": "DUP8"
    },
    "15950": {
      "op": "DUP3"
    },
    "15951": {
      "op": "DUP9"
    },
    "15952": {
      "op": "ADD"
    },
    "15953": {
      "op": "PUSH2",
      "value": "0x3A71"
    },
    "15956": {
      "jump": "i",
      "op": "JUMP"
    },
    "15957": {
      "op": "JUMPDEST"
    },
    "15958": {
      "op": "SWAP5"
    },
    "15959": {
      "op": "POP"
    },
    "15960": {
      "op": "POP"
    },
    "15961": {
      "op": "PUSH2",
      "value": "0x3C75"
    },
    "15964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15966": {
      "op": "DUP7"
    },
    "15967": {
      "op": "ADD"
    },
    "15968": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "15971": {
      "jump": "i",
      "op": "JUMP"
    },
    "15972": {
      "op": "JUMPDEST"
    },
    "15973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15975": {
      "op": "DUP1"
    },
    "15976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15978": {
      "op": "DUP1"
    },
    "15979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15983": {
      "op": "DUP7"
    },
    "15984": {
      "op": "DUP9"
    },
    "15985": {
      "op": "SUB"
    },
    "15986": {
      "op": "SLT"
    },
    "15987": {
      "op": "ISZERO"
    },
    "15988": {
      "op": "PUSH2",
      "value": "0x3E7C"
    },
    "15991": {
      "op": "JUMPI"
    },
    "15992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15994": {
      "op": "DUP1"
    },
    "15995": {
      "op": "REVERT"
    },
    "15996": {
      "op": "JUMPDEST"
    },
    "15997": {
      "op": "DUP6"
    },
    "15998": {
      "op": "CALLDATALOAD"
    },
    "15999": {
      "op": "SWAP5"
    },
    "16000": {
      "op": "POP"
    },
    "16001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16003": {
      "op": "DUP7"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "op": "CALLDATALOAD"
    },
    "16006": {
      "op": "SWAP4"
    },
    "16007": {
      "op": "POP"
    },
    "16008": {
      "op": "PUSH2",
      "value": "0x3E93"
    },
    "16011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16013": {
      "op": "DUP8"
    },
    "16014": {
      "op": "ADD"
    },
    "16015": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "16018": {
      "jump": "i",
      "op": "JUMP"
    },
    "16019": {
      "op": "JUMPDEST"
    },
    "16020": {
      "op": "SWAP3"
    },
    "16021": {
      "op": "POP"
    },
    "16022": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16024": {
      "op": "DUP7"
    },
    "16025": {
      "op": "ADD"
    },
    "16026": {
      "op": "CALLDATALOAD"
    },
    "16027": {
      "op": "SWAP2"
    },
    "16028": {
      "op": "POP"
    },
    "16029": {
      "op": "PUSH2",
      "value": "0x3EA8"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16034": {
      "op": "DUP8"
    },
    "16035": {
      "op": "ADD"
    },
    "16036": {
      "op": "PUSH2",
      "value": "0x3B79"
    },
    "16039": {
      "jump": "i",
      "op": "JUMP"
    },
    "16040": {
      "op": "JUMPDEST"
    },
    "16041": {
      "op": "SWAP1"
    },
    "16042": {
      "op": "POP"
    },
    "16043": {
      "op": "SWAP3"
    },
    "16044": {
      "op": "SWAP6"
    },
    "16045": {
      "op": "POP"
    },
    "16046": {
      "op": "SWAP3"
    },
    "16047": {
      "op": "SWAP6"
    },
    "16048": {
      "op": "SWAP1"
    },
    "16049": {
      "op": "SWAP4"
    },
    "16050": {
      "op": "POP"
    },
    "16051": {
      "jump": "o",
      "op": "JUMP"
    },
    "16052": {
      "op": "JUMPDEST"
    },
    "16053": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16060": {
      "op": "SHL"
    },
    "16061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16063": {
      "op": "MSTORE"
    },
    "16064": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16066": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16068": {
      "op": "MSTORE"
    },
    "16069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16073": {
      "op": "REVERT"
    },
    "16074": {
      "op": "JUMPDEST"
    },
    "16075": {
      "op": "DUP1"
    },
    "16076": {
      "op": "DUP3"
    },
    "16077": {
      "op": "ADD"
    },
    "16078": {
      "op": "DUP1"
    },
    "16079": {
      "op": "DUP3"
    },
    "16080": {
      "op": "GT"
    },
    "16081": {
      "op": "ISZERO"
    },
    "16082": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16085": {
      "op": "JUMPI"
    },
    "16086": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16089": {
      "op": "PUSH2",
      "value": "0x3EB4"
    },
    "16092": {
      "jump": "i",
      "op": "JUMP"
    },
    "16093": {
      "op": "JUMPDEST"
    },
    "16094": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16099": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16101": {
      "op": "SHL"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16104": {
      "op": "MSTORE"
    },
    "16105": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16107": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16109": {
      "op": "MSTORE"
    },
    "16110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16114": {
      "op": "REVERT"
    },
    "16115": {
      "op": "JUMPDEST"
    },
    "16116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16118": {
      "op": "JUMPDEST"
    },
    "16119": {
      "op": "DUP4"
    },
    "16120": {
      "op": "DUP2"
    },
    "16121": {
      "op": "LT"
    },
    "16122": {
      "op": "ISZERO"
    },
    "16123": {
      "op": "PUSH2",
      "value": "0x3F0E"
    },
    "16126": {
      "op": "JUMPI"
    },
    "16127": {
      "op": "DUP2"
    },
    "16128": {
      "op": "DUP2"
    },
    "16129": {
      "op": "ADD"
    },
    "16130": {
      "op": "MLOAD"
    },
    "16131": {
      "op": "DUP4"
    },
    "16132": {
      "op": "DUP3"
    },
    "16133": {
      "op": "ADD"
    },
    "16134": {
      "op": "MSTORE"
    },
    "16135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16137": {
      "op": "ADD"
    },
    "16138": {
      "op": "PUSH2",
      "value": "0x3EF6"
    },
    "16141": {
      "op": "JUMP"
    },
    "16142": {
      "op": "JUMPDEST"
    },
    "16143": {
      "op": "POP"
    },
    "16144": {
      "op": "POP"
    },
    "16145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16147": {
      "op": "SWAP2"
    },
    "16148": {
      "op": "ADD"
    },
    "16149": {
      "op": "MSTORE"
    },
    "16150": {
      "jump": "o",
      "op": "JUMP"
    },
    "16151": {
      "op": "JUMPDEST"
    },
    "16152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16154": {
      "op": "DUP3"
    },
    "16155": {
      "op": "MLOAD"
    },
    "16156": {
      "op": "PUSH2",
      "value": "0x3F29"
    },
    "16159": {
      "op": "DUP2"
    },
    "16160": {
      "op": "DUP5"
    },
    "16161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16163": {
      "op": "DUP8"
    },
    "16164": {
      "op": "ADD"
    },
    "16165": {
      "op": "PUSH2",
      "value": "0x3EF3"
    },
    "16168": {
      "jump": "i",
      "op": "JUMP"
    },
    "16169": {
      "op": "JUMPDEST"
    },
    "16170": {
      "op": "SWAP2"
    },
    "16171": {
      "op": "SWAP1"
    },
    "16172": {
      "op": "SWAP2"
    },
    "16173": {
      "op": "ADD"
    },
    "16174": {
      "op": "SWAP3"
    },
    "16175": {
      "op": "SWAP2"
    },
    "16176": {
      "op": "POP"
    },
    "16177": {
      "op": "POP"
    },
    "16178": {
      "jump": "o",
      "op": "JUMP"
    },
    "16179": {
      "op": "JUMPDEST"
    },
    "16180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16182": {
      "op": "DUP1"
    },
    "16183": {
      "op": "DUP3"
    },
    "16184": {
      "op": "MSTORE"
    },
    "16185": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16187": {
      "op": "SWAP1"
    },
    "16188": {
      "op": "DUP3"
    },
    "16189": {
      "op": "ADD"
    },
    "16190": {
      "op": "MSTORE"
    },
    "16191": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "16194": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "16196": {
      "op": "SHL"
    },
    "16197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16199": {
      "op": "DUP3"
    },
    "16200": {
      "op": "ADD"
    },
    "16201": {
      "op": "MSTORE"
    },
    "16202": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16204": {
      "op": "ADD"
    },
    "16205": {
      "op": "SWAP1"
    },
    "16206": {
      "jump": "o",
      "op": "JUMP"
    },
    "16207": {
      "op": "JUMPDEST"
    },
    "16208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16210": {
      "op": "DUP1"
    },
    "16211": {
      "op": "DUP3"
    },
    "16212": {
      "op": "MSTORE"
    },
    "16213": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16215": {
      "op": "SWAP1"
    },
    "16216": {
      "op": "DUP3"
    },
    "16217": {
      "op": "ADD"
    },
    "16218": {
      "op": "MSTORE"
    },
    "16219": {
      "op": "PUSH2",
      "value": "0x5553"
    },
    "16222": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "16224": {
      "op": "SHL"
    },
    "16225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16227": {
      "op": "DUP3"
    },
    "16228": {
      "op": "ADD"
    },
    "16229": {
      "op": "MSTORE"
    },
    "16230": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16232": {
      "op": "ADD"
    },
    "16233": {
      "op": "SWAP1"
    },
    "16234": {
      "jump": "o",
      "op": "JUMP"
    },
    "16235": {
      "op": "JUMPDEST"
    },
    "16236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16238": {
      "op": "DUP1"
    },
    "16239": {
      "op": "DUP3"
    },
    "16240": {
      "op": "MSTORE"
    },
    "16241": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16243": {
      "op": "SWAP1"
    },
    "16244": {
      "op": "DUP3"
    },
    "16245": {
      "op": "ADD"
    },
    "16246": {
      "op": "MSTORE"
    },
    "16247": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "16250": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16252": {
      "op": "SHL"
    },
    "16253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16255": {
      "op": "DUP3"
    },
    "16256": {
      "op": "ADD"
    },
    "16257": {
      "op": "MSTORE"
    },
    "16258": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16260": {
      "op": "ADD"
    },
    "16261": {
      "op": "SWAP1"
    },
    "16262": {
      "jump": "o",
      "op": "JUMP"
    },
    "16263": {
      "op": "JUMPDEST"
    },
    "16264": {
      "op": "DUP1"
    },
    "16265": {
      "op": "DUP3"
    },
    "16266": {
      "op": "MUL"
    },
    "16267": {
      "op": "DUP2"
    },
    "16268": {
      "op": "ISZERO"
    },
    "16269": {
      "op": "DUP3"
    },
    "16270": {
      "op": "DUP3"
    },
    "16271": {
      "op": "DIV"
    },
    "16272": {
      "op": "DUP5"
    },
    "16273": {
      "op": "EQ"
    },
    "16274": {
      "op": "OR"
    },
    "16275": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16278": {
      "op": "JUMPI"
    },
    "16279": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16282": {
      "op": "PUSH2",
      "value": "0x3EB4"
    },
    "16285": {
      "jump": "i",
      "op": "JUMP"
    },
    "16286": {
      "op": "JUMPDEST"
    },
    "16287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16289": {
      "op": "DUP3"
    },
    "16290": {
      "op": "PUSH2",
      "value": "0x3FBB"
    },
    "16293": {
      "op": "JUMPI"
    },
    "16294": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16301": {
      "op": "SHL"
    },
    "16302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16304": {
      "op": "MSTORE"
    },
    "16305": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "16307": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16309": {
      "op": "MSTORE"
    },
    "16310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16314": {
      "op": "REVERT"
    },
    "16315": {
      "op": "JUMPDEST"
    },
    "16316": {
      "op": "POP"
    },
    "16317": {
      "op": "DIV"
    },
    "16318": {
      "op": "SWAP1"
    },
    "16319": {
      "jump": "o",
      "op": "JUMP"
    },
    "16320": {
      "op": "JUMPDEST"
    },
    "16321": {
      "op": "DUP2"
    },
    "16322": {
      "op": "DUP2"
    },
    "16323": {
      "op": "SUB"
    },
    "16324": {
      "op": "DUP2"
    },
    "16325": {
      "op": "DUP2"
    },
    "16326": {
      "op": "GT"
    },
    "16327": {
      "op": "ISZERO"
    },
    "16328": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16331": {
      "op": "JUMPI"
    },
    "16332": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "16335": {
      "op": "PUSH2",
      "value": "0x3EB4"
    },
    "16338": {
      "jump": "i",
      "op": "JUMP"
    },
    "16339": {
      "op": "JUMPDEST"
    },
    "16340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16342": {
      "op": "DUP2"
    },
    "16343": {
      "op": "MLOAD"
    },
    "16344": {
      "op": "DUP1"
    },
    "16345": {
      "op": "DUP5"
    },
    "16346": {
      "op": "MSTORE"
    },
    "16347": {
      "op": "PUSH2",
      "value": "0x3FEB"
    },
    "16350": {
      "op": "DUP2"
    },
    "16351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16353": {
      "op": "DUP7"
    },
    "16354": {
      "op": "ADD"
    },
    "16355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16357": {
      "op": "DUP7"
    },
    "16358": {
      "op": "ADD"
    },
    "16359": {
      "op": "PUSH2",
      "value": "0x3EF3"
    },
    "16362": {
      "jump": "i",
      "op": "JUMP"
    },
    "16363": {
      "op": "JUMPDEST"
    },
    "16364": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16366": {
      "op": "ADD"
    },
    "16367": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16369": {
      "op": "NOT"
    },
    "16370": {
      "op": "AND"
    },
    "16371": {
      "op": "SWAP3"
    },
    "16372": {
      "op": "SWAP1"
    },
    "16373": {
      "op": "SWAP3"
    },
    "16374": {
      "op": "ADD"
    },
    "16375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16377": {
      "op": "ADD"
    },
    "16378": {
      "op": "SWAP3"
    },
    "16379": {
      "op": "SWAP2"
    },
    "16380": {
      "op": "POP"
    },
    "16381": {
      "op": "POP"
    },
    "16382": {
      "jump": "o",
      "op": "JUMP"
    },
    "16383": {
      "op": "JUMPDEST"
    },
    "16384": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16386": {
      "op": "DUP2"
    },
    "16387": {
      "op": "MSTORE"
    },
    "16388": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16390": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16392": {
      "op": "DUP3"
    },
    "16393": {
      "op": "ADD"
    },
    "16394": {
      "op": "MSTORE"
    },
    "16395": {
      "op": "PUSH2",
      "value": "0x18D1"
    },
    "16398": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16400": {
      "op": "SHL"
    },
    "16401": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16403": {
      "op": "DUP3"
    },
    "16404": {
      "op": "ADD"
    },
    "16405": {
      "op": "MSTORE"
    },
    "16406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16410": {
      "op": "DUP3"
    },
    "16411": {
      "op": "ADD"
    },
    "16412": {
      "op": "MSTORE"
    },
    "16413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16415": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16420": {
      "op": "DUP4"
    },
    "16421": {
      "op": "ADD"
    },
    "16422": {
      "op": "DUP6"
    },
    "16423": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16426": {
      "jump": "i",
      "op": "JUMP"
    },
    "16427": {
      "op": "JUMPDEST"
    },
    "16428": {
      "op": "SWAP1"
    },
    "16429": {
      "op": "POP"
    },
    "16430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16432": {
      "op": "DUP1"
    },
    "16433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16435": {
      "op": "SHL"
    },
    "16436": {
      "op": "SUB"
    },
    "16437": {
      "op": "DUP4"
    },
    "16438": {
      "op": "AND"
    },
    "16439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16441": {
      "op": "DUP4"
    },
    "16442": {
      "op": "ADD"
    },
    "16443": {
      "op": "MSTORE"
    },
    "16444": {
      "op": "SWAP4"
    },
    "16445": {
      "op": "SWAP3"
    },
    "16446": {
      "op": "POP"
    },
    "16447": {
      "op": "POP"
    },
    "16448": {
      "op": "POP"
    },
    "16449": {
      "jump": "o",
      "op": "JUMP"
    },
    "16450": {
      "op": "JUMPDEST"
    },
    "16451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16455": {
      "op": "DUP3"
    },
    "16456": {
      "op": "DUP5"
    },
    "16457": {
      "op": "SUB"
    },
    "16458": {
      "op": "SLT"
    },
    "16459": {
      "op": "ISZERO"
    },
    "16460": {
      "op": "PUSH2",
      "value": "0x4054"
    },
    "16463": {
      "op": "JUMPI"
    },
    "16464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16466": {
      "op": "DUP1"
    },
    "16467": {
      "op": "REVERT"
    },
    "16468": {
      "op": "JUMPDEST"
    },
    "16469": {
      "op": "POP"
    },
    "16470": {
      "op": "MLOAD"
    },
    "16471": {
      "op": "SWAP2"
    },
    "16472": {
      "op": "SWAP1"
    },
    "16473": {
      "op": "POP"
    },
    "16474": {
      "jump": "o",
      "op": "JUMP"
    },
    "16475": {
      "op": "JUMPDEST"
    },
    "16476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16478": {
      "op": "DUP1"
    },
    "16479": {
      "op": "DUP3"
    },
    "16480": {
      "op": "MSTORE"
    },
    "16481": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16483": {
      "op": "SWAP1"
    },
    "16484": {
      "op": "DUP3"
    },
    "16485": {
      "op": "ADD"
    },
    "16486": {
      "op": "MSTORE"
    },
    "16487": {
      "op": "PUSH2",
      "value": "0x1255"
    },
    "16490": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16492": {
      "op": "SHL"
    },
    "16493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16495": {
      "op": "DUP3"
    },
    "16496": {
      "op": "ADD"
    },
    "16497": {
      "op": "MSTORE"
    },
    "16498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16500": {
      "op": "ADD"
    },
    "16501": {
      "op": "SWAP1"
    },
    "16502": {
      "jump": "o",
      "op": "JUMP"
    },
    "16503": {
      "op": "JUMPDEST"
    },
    "16504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16508": {
      "op": "DUP3"
    },
    "16509": {
      "op": "DUP5"
    },
    "16510": {
      "op": "SUB"
    },
    "16511": {
      "op": "SLT"
    },
    "16512": {
      "op": "ISZERO"
    },
    "16513": {
      "op": "PUSH2",
      "value": "0x4089"
    },
    "16516": {
      "op": "JUMPI"
    },
    "16517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16519": {
      "op": "DUP1"
    },
    "16520": {
      "op": "REVERT"
    },
    "16521": {
      "op": "JUMPDEST"
    },
    "16522": {
      "op": "DUP2"
    },
    "16523": {
      "op": "MLOAD"
    },
    "16524": {
      "op": "DUP1"
    },
    "16525": {
      "op": "ISZERO"
    },
    "16526": {
      "op": "ISZERO"
    },
    "16527": {
      "op": "DUP2"
    },
    "16528": {
      "op": "EQ"
    },
    "16529": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "16532": {
      "op": "JUMPI"
    },
    "16533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16535": {
      "op": "DUP1"
    },
    "16536": {
      "op": "REVERT"
    },
    "16537": {
      "op": "JUMPDEST"
    },
    "16538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16540": {
      "op": "DUP1"
    },
    "16541": {
      "op": "DUP3"
    },
    "16542": {
      "op": "MSTORE"
    },
    "16543": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16545": {
      "op": "SWAP1"
    },
    "16546": {
      "op": "DUP3"
    },
    "16547": {
      "op": "ADD"
    },
    "16548": {
      "op": "MSTORE"
    },
    "16549": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "16552": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16554": {
      "op": "SHL"
    },
    "16555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16557": {
      "op": "DUP3"
    },
    "16558": {
      "op": "ADD"
    },
    "16559": {
      "op": "MSTORE"
    },
    "16560": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16562": {
      "op": "ADD"
    },
    "16563": {
      "op": "SWAP1"
    },
    "16564": {
      "jump": "o",
      "op": "JUMP"
    },
    "16565": {
      "op": "JUMPDEST"
    },
    "16566": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16568": {
      "op": "DUP2"
    },
    "16569": {
      "op": "LT"
    },
    "16570": {
      "op": "PUSH2",
      "value": "0x40D3"
    },
    "16573": {
      "op": "JUMPI"
    },
    "16574": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16581": {
      "op": "SHL"
    },
    "16582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16584": {
      "op": "MSTORE"
    },
    "16585": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16587": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16589": {
      "op": "MSTORE"
    },
    "16590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16594": {
      "op": "REVERT"
    },
    "16595": {
      "op": "JUMPDEST"
    },
    "16596": {
      "op": "SWAP1"
    },
    "16597": {
      "op": "MSTORE"
    },
    "16598": {
      "jump": "o",
      "op": "JUMP"
    },
    "16599": {
      "op": "JUMPDEST"
    },
    "16600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16602": {
      "op": "DUP2"
    },
    "16603": {
      "op": "MSTORE"
    },
    "16604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16606": {
      "op": "PUSH2",
      "value": "0x40EA"
    },
    "16609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16611": {
      "op": "DUP4"
    },
    "16612": {
      "op": "ADD"
    },
    "16613": {
      "op": "DUP6"
    },
    "16614": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16617": {
      "jump": "i",
      "op": "JUMP"
    },
    "16618": {
      "op": "JUMPDEST"
    },
    "16619": {
      "op": "SWAP1"
    },
    "16620": {
      "op": "POP"
    },
    "16621": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "16624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16626": {
      "op": "DUP4"
    },
    "16627": {
      "op": "ADD"
    },
    "16628": {
      "op": "DUP5"
    },
    "16629": {
      "op": "PUSH2",
      "value": "0x40B5"
    },
    "16632": {
      "jump": "i",
      "op": "JUMP"
    },
    "16633": {
      "op": "JUMPDEST"
    },
    "16634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16636": {
      "op": "DUP2"
    },
    "16637": {
      "op": "MSTORE"
    },
    "16638": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16640": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16642": {
      "op": "DUP3"
    },
    "16643": {
      "op": "ADD"
    },
    "16644": {
      "op": "MSTORE"
    },
    "16645": {
      "op": "PUSH2",
      "value": "0x39A1"
    },
    "16648": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16650": {
      "op": "SHL"
    },
    "16651": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16653": {
      "op": "DUP3"
    },
    "16654": {
      "op": "ADD"
    },
    "16655": {
      "op": "MSTORE"
    },
    "16656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16660": {
      "op": "DUP3"
    },
    "16661": {
      "op": "ADD"
    },
    "16662": {
      "op": "MSTORE"
    },
    "16663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16665": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16670": {
      "op": "DUP4"
    },
    "16671": {
      "op": "ADD"
    },
    "16672": {
      "op": "DUP6"
    },
    "16673": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16676": {
      "jump": "i",
      "op": "JUMP"
    },
    "16677": {
      "op": "JUMPDEST"
    },
    "16678": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16680": {
      "op": "DUP2"
    },
    "16681": {
      "op": "MSTORE"
    },
    "16682": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16686": {
      "op": "DUP3"
    },
    "16687": {
      "op": "ADD"
    },
    "16688": {
      "op": "MSTORE"
    },
    "16689": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "16692": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "16694": {
      "op": "SHL"
    },
    "16695": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16697": {
      "op": "DUP3"
    },
    "16698": {
      "op": "ADD"
    },
    "16699": {
      "op": "MSTORE"
    },
    "16700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16704": {
      "op": "DUP3"
    },
    "16705": {
      "op": "ADD"
    },
    "16706": {
      "op": "MSTORE"
    },
    "16707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16709": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16714": {
      "op": "DUP4"
    },
    "16715": {
      "op": "ADD"
    },
    "16716": {
      "op": "DUP6"
    },
    "16717": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16720": {
      "jump": "i",
      "op": "JUMP"
    },
    "16721": {
      "op": "JUMPDEST"
    },
    "16722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16724": {
      "op": "DUP2"
    },
    "16725": {
      "op": "MSTORE"
    },
    "16726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16728": {
      "op": "PUSH2",
      "value": "0x4164"
    },
    "16731": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16733": {
      "op": "DUP4"
    },
    "16734": {
      "op": "ADD"
    },
    "16735": {
      "op": "DUP6"
    },
    "16736": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16739": {
      "jump": "i",
      "op": "JUMP"
    },
    "16740": {
      "op": "JUMPDEST"
    },
    "16741": {
      "op": "SWAP1"
    },
    "16742": {
      "op": "POP"
    },
    "16743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16745": {
      "op": "DUP1"
    },
    "16746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16748": {
      "op": "SHL"
    },
    "16749": {
      "op": "SUB"
    },
    "16750": {
      "op": "DUP4"
    },
    "16751": {
      "op": "AND"
    },
    "16752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16754": {
      "op": "DUP4"
    },
    "16755": {
      "op": "ADD"
    },
    "16756": {
      "op": "MSTORE"
    },
    "16757": {
      "op": "SWAP4"
    },
    "16758": {
      "op": "SWAP3"
    },
    "16759": {
      "op": "POP"
    },
    "16760": {
      "op": "POP"
    },
    "16761": {
      "op": "POP"
    },
    "16762": {
      "jump": "o",
      "op": "JUMP"
    },
    "16763": {
      "op": "JUMPDEST"
    },
    "16764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16766": {
      "op": "DUP2"
    },
    "16767": {
      "op": "MSTORE"
    },
    "16768": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16772": {
      "op": "DUP3"
    },
    "16773": {
      "op": "ADD"
    },
    "16774": {
      "op": "MSTORE"
    },
    "16775": {
      "op": "PUSH2",
      "value": "0x31A1"
    },
    "16778": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16780": {
      "op": "SHL"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16783": {
      "op": "DUP3"
    },
    "16784": {
      "op": "ADD"
    },
    "16785": {
      "op": "MSTORE"
    },
    "16786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16790": {
      "op": "DUP3"
    },
    "16791": {
      "op": "ADD"
    },
    "16792": {
      "op": "MSTORE"
    },
    "16793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16795": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16800": {
      "op": "DUP4"
    },
    "16801": {
      "op": "ADD"
    },
    "16802": {
      "op": "DUP6"
    },
    "16803": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16806": {
      "jump": "i",
      "op": "JUMP"
    },
    "16807": {
      "op": "JUMPDEST"
    },
    "16808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16810": {
      "op": "DUP2"
    },
    "16811": {
      "op": "MSTORE"
    },
    "16812": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16816": {
      "op": "DUP3"
    },
    "16817": {
      "op": "ADD"
    },
    "16818": {
      "op": "MSTORE"
    },
    "16819": {
      "op": "PUSH2",
      "value": "0x7241"
    },
    "16822": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "16824": {
      "op": "SHL"
    },
    "16825": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16827": {
      "op": "DUP3"
    },
    "16828": {
      "op": "ADD"
    },
    "16829": {
      "op": "MSTORE"
    },
    "16830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16834": {
      "op": "DUP3"
    },
    "16835": {
      "op": "ADD"
    },
    "16836": {
      "op": "MSTORE"
    },
    "16837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16839": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16844": {
      "op": "DUP4"
    },
    "16845": {
      "op": "ADD"
    },
    "16846": {
      "op": "DUP6"
    },
    "16847": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16850": {
      "jump": "i",
      "op": "JUMP"
    },
    "16851": {
      "op": "JUMPDEST"
    },
    "16852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16854": {
      "op": "DUP2"
    },
    "16855": {
      "op": "MSTORE"
    },
    "16856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16858": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "16861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16863": {
      "op": "DUP4"
    },
    "16864": {
      "op": "ADD"
    },
    "16865": {
      "op": "DUP5"
    },
    "16866": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16869": {
      "jump": "i",
      "op": "JUMP"
    },
    "16870": {
      "op": "JUMPDEST"
    },
    "16871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16873": {
      "op": "DUP2"
    },
    "16874": {
      "op": "MSTORE"
    },
    "16875": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16877": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16879": {
      "op": "DUP3"
    },
    "16880": {
      "op": "ADD"
    },
    "16881": {
      "op": "MSTORE"
    },
    "16882": {
      "op": "PUSH2",
      "value": "0x3221"
    },
    "16885": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16887": {
      "op": "SHL"
    },
    "16888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16890": {
      "op": "DUP3"
    },
    "16891": {
      "op": "ADD"
    },
    "16892": {
      "op": "MSTORE"
    },
    "16893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16897": {
      "op": "DUP3"
    },
    "16898": {
      "op": "ADD"
    },
    "16899": {
      "op": "MSTORE"
    },
    "16900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16902": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16907": {
      "op": "DUP4"
    },
    "16908": {
      "op": "ADD"
    },
    "16909": {
      "op": "DUP6"
    },
    "16910": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16913": {
      "jump": "i",
      "op": "JUMP"
    },
    "16914": {
      "op": "JUMPDEST"
    },
    "16915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16917": {
      "op": "DUP1"
    },
    "16918": {
      "op": "DUP3"
    },
    "16919": {
      "op": "MSTORE"
    },
    "16920": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16922": {
      "op": "SWAP1"
    },
    "16923": {
      "op": "DUP3"
    },
    "16924": {
      "op": "ADD"
    },
    "16925": {
      "op": "MSTORE"
    },
    "16926": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "16929": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "16931": {
      "op": "SHL"
    },
    "16932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16934": {
      "op": "DUP3"
    },
    "16935": {
      "op": "ADD"
    },
    "16936": {
      "op": "MSTORE"
    },
    "16937": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16939": {
      "op": "ADD"
    },
    "16940": {
      "op": "SWAP1"
    },
    "16941": {
      "jump": "o",
      "op": "JUMP"
    },
    "16942": {
      "op": "JUMPDEST"
    },
    "16943": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16945": {
      "op": "DUP2"
    },
    "16946": {
      "op": "MSTORE"
    },
    "16947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16949": {
      "op": "PUSH2",
      "value": "0x4241"
    },
    "16952": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16954": {
      "op": "DUP4"
    },
    "16955": {
      "op": "ADD"
    },
    "16956": {
      "op": "DUP7"
    },
    "16957": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16960": {
      "jump": "i",
      "op": "JUMP"
    },
    "16961": {
      "op": "JUMPDEST"
    },
    "16962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16968": {
      "op": "SHL"
    },
    "16969": {
      "op": "SUB"
    },
    "16970": {
      "op": "SWAP5"
    },
    "16971": {
      "op": "SWAP1"
    },
    "16972": {
      "op": "SWAP5"
    },
    "16973": {
      "op": "AND"
    },
    "16974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16976": {
      "op": "DUP4"
    },
    "16977": {
      "op": "ADD"
    },
    "16978": {
      "op": "MSTORE"
    },
    "16979": {
      "op": "POP"
    },
    "16980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16982": {
      "op": "ADD"
    },
    "16983": {
      "op": "MSTORE"
    },
    "16984": {
      "op": "SWAP2"
    },
    "16985": {
      "op": "SWAP1"
    },
    "16986": {
      "op": "POP"
    },
    "16987": {
      "jump": "o",
      "op": "JUMP"
    },
    "16988": {
      "op": "JUMPDEST"
    },
    "16989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16991": {
      "op": "DUP2"
    },
    "16992": {
      "op": "MSTORE"
    },
    "16993": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16995": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16997": {
      "op": "DUP3"
    },
    "16998": {
      "op": "ADD"
    },
    "16999": {
      "op": "MSTORE"
    },
    "17000": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "17003": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17005": {
      "op": "SHL"
    },
    "17006": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17008": {
      "op": "DUP3"
    },
    "17009": {
      "op": "ADD"
    },
    "17010": {
      "op": "MSTORE"
    },
    "17011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17015": {
      "op": "DUP3"
    },
    "17016": {
      "op": "ADD"
    },
    "17017": {
      "op": "MSTORE"
    },
    "17018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17020": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17025": {
      "op": "DUP4"
    },
    "17026": {
      "op": "ADD"
    },
    "17027": {
      "op": "DUP6"
    },
    "17028": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17031": {
      "jump": "i",
      "op": "JUMP"
    },
    "17032": {
      "op": "JUMPDEST"
    },
    "17033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17035": {
      "op": "DUP2"
    },
    "17036": {
      "op": "MSTORE"
    },
    "17037": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17039": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17041": {
      "op": "DUP3"
    },
    "17042": {
      "op": "ADD"
    },
    "17043": {
      "op": "MSTORE"
    },
    "17044": {
      "op": "PUSH2",
      "value": "0x1D55"
    },
    "17047": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17049": {
      "op": "SHL"
    },
    "17050": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17052": {
      "op": "DUP3"
    },
    "17053": {
      "op": "ADD"
    },
    "17054": {
      "op": "MSTORE"
    },
    "17055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17059": {
      "op": "DUP3"
    },
    "17060": {
      "op": "ADD"
    },
    "17061": {
      "op": "MSTORE"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17064": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17069": {
      "op": "DUP4"
    },
    "17070": {
      "op": "ADD"
    },
    "17071": {
      "op": "DUP6"
    },
    "17072": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17075": {
      "jump": "i",
      "op": "JUMP"
    },
    "17076": {
      "op": "JUMPDEST"
    },
    "17077": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17079": {
      "op": "DUP2"
    },
    "17080": {
      "op": "MSTORE"
    },
    "17081": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17085": {
      "op": "DUP3"
    },
    "17086": {
      "op": "ADD"
    },
    "17087": {
      "op": "MSTORE"
    },
    "17088": {
      "op": "PUSH2",
      "value": "0x1C95"
    },
    "17091": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17093": {
      "op": "SHL"
    },
    "17094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17096": {
      "op": "DUP3"
    },
    "17097": {
      "op": "ADD"
    },
    "17098": {
      "op": "MSTORE"
    },
    "17099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17103": {
      "op": "DUP3"
    },
    "17104": {
      "op": "ADD"
    },
    "17105": {
      "op": "MSTORE"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17108": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17113": {
      "op": "DUP4"
    },
    "17114": {
      "op": "ADD"
    },
    "17115": {
      "op": "DUP6"
    },
    "17116": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17119": {
      "jump": "i",
      "op": "JUMP"
    },
    "17120": {
      "op": "JUMPDEST"
    },
    "17121": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17123": {
      "op": "DUP2"
    },
    "17124": {
      "op": "MSTORE"
    },
    "17125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17127": {
      "op": "PUSH2",
      "value": "0x42F3"
    },
    "17130": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17132": {
      "op": "DUP4"
    },
    "17133": {
      "op": "ADD"
    },
    "17134": {
      "op": "DUP8"
    },
    "17135": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17138": {
      "jump": "i",
      "op": "JUMP"
    },
    "17139": {
      "op": "JUMPDEST"
    },
    "17140": {
      "op": "DUP3"
    },
    "17141": {
      "op": "DUP2"
    },
    "17142": {
      "op": "SUB"
    },
    "17143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17145": {
      "op": "DUP5"
    },
    "17146": {
      "op": "ADD"
    },
    "17147": {
      "op": "MSTORE"
    },
    "17148": {
      "op": "PUSH2",
      "value": "0x4305"
    },
    "17151": {
      "op": "DUP2"
    },
    "17152": {
      "op": "DUP8"
    },
    "17153": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17156": {
      "jump": "i",
      "op": "JUMP"
    },
    "17157": {
      "op": "JUMPDEST"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17164": {
      "op": "SHL"
    },
    "17165": {
      "op": "SUB"
    },
    "17166": {
      "op": "SWAP6"
    },
    "17167": {
      "op": "SWAP1"
    },
    "17168": {
      "op": "SWAP6"
    },
    "17169": {
      "op": "AND"
    },
    "17170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17172": {
      "op": "DUP5"
    },
    "17173": {
      "op": "ADD"
    },
    "17174": {
      "op": "MSTORE"
    },
    "17175": {
      "op": "POP"
    },
    "17176": {
      "op": "POP"
    },
    "17177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17179": {
      "op": "ADD"
    },
    "17180": {
      "op": "MSTORE"
    },
    "17181": {
      "op": "SWAP3"
    },
    "17182": {
      "op": "SWAP2"
    },
    "17183": {
      "op": "POP"
    },
    "17184": {
      "op": "POP"
    },
    "17185": {
      "jump": "o",
      "op": "JUMP"
    },
    "17186": {
      "op": "JUMPDEST"
    },
    "17187": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17189": {
      "op": "DUP2"
    },
    "17190": {
      "op": "MSTORE"
    },
    "17191": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17195": {
      "op": "DUP3"
    },
    "17196": {
      "op": "ADD"
    },
    "17197": {
      "op": "MSTORE"
    },
    "17198": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "17201": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17203": {
      "op": "SHL"
    },
    "17204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17206": {
      "op": "DUP3"
    },
    "17207": {
      "op": "ADD"
    },
    "17208": {
      "op": "MSTORE"
    },
    "17209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17213": {
      "op": "DUP3"
    },
    "17214": {
      "op": "ADD"
    },
    "17215": {
      "op": "MSTORE"
    },
    "17216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17218": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17223": {
      "op": "DUP4"
    },
    "17224": {
      "op": "ADD"
    },
    "17225": {
      "op": "DUP6"
    },
    "17226": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17229": {
      "jump": "i",
      "op": "JUMP"
    },
    "17230": {
      "op": "JUMPDEST"
    },
    "17231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17233": {
      "op": "DUP2"
    },
    "17234": {
      "op": "MSTORE"
    },
    "17235": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17237": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17239": {
      "op": "DUP3"
    },
    "17240": {
      "op": "ADD"
    },
    "17241": {
      "op": "MSTORE"
    },
    "17242": {
      "op": "PUSH2",
      "value": "0x6141"
    },
    "17245": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17247": {
      "op": "SHL"
    },
    "17248": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17250": {
      "op": "DUP3"
    },
    "17251": {
      "op": "ADD"
    },
    "17252": {
      "op": "MSTORE"
    },
    "17253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17257": {
      "op": "DUP3"
    },
    "17258": {
      "op": "ADD"
    },
    "17259": {
      "op": "MSTORE"
    },
    "17260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17262": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17267": {
      "op": "DUP4"
    },
    "17268": {
      "op": "ADD"
    },
    "17269": {
      "op": "DUP6"
    },
    "17270": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17273": {
      "jump": "i",
      "op": "JUMP"
    },
    "17274": {
      "op": "JUMPDEST"
    },
    "17275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17279": {
      "op": "DUP3"
    },
    "17280": {
      "op": "ADD"
    },
    "17281": {
      "op": "PUSH2",
      "value": "0x438C"
    },
    "17284": {
      "op": "JUMPI"
    },
    "17285": {
      "op": "PUSH2",
      "value": "0x438C"
    },
    "17288": {
      "op": "PUSH2",
      "value": "0x3EB4"
    },
    "17291": {
      "jump": "i",
      "op": "JUMP"
    },
    "17292": {
      "op": "JUMPDEST"
    },
    "17293": {
      "op": "POP"
    },
    "17294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17296": {
      "op": "ADD"
    },
    "17297": {
      "op": "SWAP1"
    },
    "17298": {
      "jump": "o",
      "op": "JUMP"
    },
    "17299": {
      "op": "JUMPDEST"
    },
    "17300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17302": {
      "op": "DUP2"
    },
    "17303": {
      "op": "MSTORE"
    },
    "17304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17306": {
      "op": "PUSH2",
      "value": "0x43A6"
    },
    "17309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17311": {
      "op": "DUP4"
    },
    "17312": {
      "op": "ADD"
    },
    "17313": {
      "op": "DUP7"
    },
    "17314": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17317": {
      "jump": "i",
      "op": "JUMP"
    },
    "17318": {
      "op": "JUMPDEST"
    },
    "17319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17325": {
      "op": "SHL"
    },
    "17326": {
      "op": "SUB"
    },
    "17327": {
      "op": "DUP6"
    },
    "17328": {
      "op": "AND"
    },
    "17329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17331": {
      "op": "DUP5"
    },
    "17332": {
      "op": "ADD"
    },
    "17333": {
      "op": "MSTORE"
    },
    "17334": {
      "op": "SWAP1"
    },
    "17335": {
      "op": "POP"
    },
    "17336": {
      "op": "PUSH2",
      "value": "0x3BE0"
    },
    "17339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17341": {
      "op": "DUP4"
    },
    "17342": {
      "op": "ADD"
    },
    "17343": {
      "op": "DUP5"
    },
    "17344": {
      "op": "PUSH2",
      "value": "0x40B5"
    },
    "17347": {
      "jump": "i",
      "op": "JUMP"
    },
    "17348": {
      "op": "JUMPDEST"
    },
    "17349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17351": {
      "op": "DUP2"
    },
    "17352": {
      "op": "MSTORE"
    },
    "17353": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17355": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17357": {
      "op": "DUP3"
    },
    "17358": {
      "op": "ADD"
    },
    "17359": {
      "op": "MSTORE"
    },
    "17360": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "17363": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "17365": {
      "op": "SHL"
    },
    "17366": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17368": {
      "op": "DUP3"
    },
    "17369": {
      "op": "ADD"
    },
    "17370": {
      "op": "MSTORE"
    },
    "17371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17375": {
      "op": "DUP3"
    },
    "17376": {
      "op": "ADD"
    },
    "17377": {
      "op": "MSTORE"
    },
    "17378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17380": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17385": {
      "op": "DUP4"
    },
    "17386": {
      "op": "ADD"
    },
    "17387": {
      "op": "DUP6"
    },
    "17388": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17391": {
      "jump": "i",
      "op": "JUMP"
    },
    "17392": {
      "op": "JUMPDEST"
    },
    "17393": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17395": {
      "op": "DUP2"
    },
    "17396": {
      "op": "MSTORE"
    },
    "17397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17399": {
      "op": "PUSH2",
      "value": "0x4403"
    },
    "17402": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17404": {
      "op": "DUP4"
    },
    "17405": {
      "op": "ADD"
    },
    "17406": {
      "op": "DUP8"
    },
    "17407": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17410": {
      "jump": "i",
      "op": "JUMP"
    },
    "17411": {
      "op": "JUMPDEST"
    },
    "17412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17418": {
      "op": "SHL"
    },
    "17419": {
      "op": "SUB"
    },
    "17420": {
      "op": "SWAP6"
    },
    "17421": {
      "op": "DUP7"
    },
    "17422": {
      "op": "AND"
    },
    "17423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17425": {
      "op": "DUP5"
    },
    "17426": {
      "op": "ADD"
    },
    "17427": {
      "op": "MSTORE"
    },
    "17428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17430": {
      "op": "DUP4"
    },
    "17431": {
      "op": "ADD"
    },
    "17432": {
      "op": "SWAP5"
    },
    "17433": {
      "op": "SWAP1"
    },
    "17434": {
      "op": "SWAP5"
    },
    "17435": {
      "op": "MSTORE"
    },
    "17436": {
      "op": "POP"
    },
    "17437": {
      "op": "SWAP3"
    },
    "17438": {
      "op": "AND"
    },
    "17439": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17441": {
      "op": "SWAP1"
    },
    "17442": {
      "op": "SWAP3"
    },
    "17443": {
      "op": "ADD"
    },
    "17444": {
      "op": "SWAP2"
    },
    "17445": {
      "op": "SWAP1"
    },
    "17446": {
      "op": "SWAP2"
    },
    "17447": {
      "op": "MSTORE"
    },
    "17448": {
      "op": "SWAP2"
    },
    "17449": {
      "op": "SWAP1"
    },
    "17450": {
      "op": "POP"
    },
    "17451": {
      "jump": "o",
      "op": "JUMP"
    },
    "17452": {
      "op": "JUMPDEST"
    },
    "17453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17455": {
      "op": "DUP2"
    },
    "17456": {
      "op": "MSTORE"
    },
    "17457": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17461": {
      "op": "DUP3"
    },
    "17462": {
      "op": "ADD"
    },
    "17463": {
      "op": "MSTORE"
    },
    "17464": {
      "op": "PUSH2",
      "value": "0x1D15"
    },
    "17467": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "17469": {
      "op": "SHL"
    },
    "17470": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17472": {
      "op": "DUP3"
    },
    "17473": {
      "op": "ADD"
    },
    "17474": {
      "op": "MSTORE"
    },
    "17475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17479": {
      "op": "DUP3"
    },
    "17480": {
      "op": "ADD"
    },
    "17481": {
      "op": "MSTORE"
    },
    "17482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17484": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "17487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17489": {
      "op": "DUP4"
    },
    "17490": {
      "op": "ADD"
    },
    "17491": {
      "op": "DUP6"
    },
    "17492": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "17495": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "4f9a40e87aa93c7a436cec7ea586d573977c30fd",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.4;\n\nimport \"./idea.sol\";\n\n/// @title An extension of the Idea providing an administrable interface.\n/// @author Frederik W. L. Christoffersen\n/// @notice This contract adds administrability via permits and internally closed money supplies.\ncontract Administrable is Idea {\n\n    /// @notice An enum representing a Permit State of one of the many permits.\n    /// @param unauthorized The permit is NOT authorized.\n    /// @param authorized The permit is authorized.\n    /// @param administrator The holder of the permit is not only authorized but also an administrator of it too.\n    enum PermitState {\n        unauthorized,\n        authorized,\n        administrator\n    }\n\n    /// @notice A struct representing the information of a Dividend given to all current Shard holders.\n    /// @param tokenAddress The address of the token, in which the value of the Dividend is issued.\n    /// @param value The original value/amount of the Dividend before claims.\n    struct DividendInfo {\n        address tokenAddress;\n        uint256 value;\n    }\n\n    /// @notice A mapping pointing to a boolean stating if a given Bank is valid/exists or not.\n    mapping(string => bool) validBanks;\n    \n    /// @notice A mapping pointing to an unsigned integer representing the amount of stored kinds of tokens of a bank.\n    mapping(string => uint256) storedTokenAddressesByBank;\n\n    /// @notice A mapping pointing to the a value/amount of a stored token of a Bank, given the name of it and the respective token address.\n    mapping(string => mapping(address => uint256)) balanceByBank;\n\n     /// @notice A mapping pointing to a boolean stating if an address is an if a given address is a valid Bank administrator that has restricted control of the Bank's funds.\n    mapping(string => mapping(address => bool)) adminOfBank;\n\n    /// @notice A mapping pointing to another mapping, pointing to a Permit State, given the address of a permit holder, given the name of the permit.\n    /// @custom:illustration permits[permitName][address] == PermitState.authorized || PermitState.administrator;\n    mapping(string => mapping(address => PermitState)) permits;\n\n    /// @notice A mapping pointing to a base Permit State, given the name of the permit.\n    mapping(string => PermitState) basePermits;\n    \n    /// @notice A mapping pointing to a boolean stating if a given Dividend is valid or not.\n    mapping(uint256 => bool) validDividends;\n\n    /// @notice A mapping pointing to the info of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => DividendInfo) infoByDividend;\n\n    /// @notice A mapping pointing to the residual of a Dividend given the creation clock of the Dividend.\n    mapping(uint256 => uint256) residualByDividend;\n\n    /// @notice Mapping pointing to a boolean stating if the owner of a Shard has claimed their fair share of the Dividend, given the bank name and the shard.\n    mapping(uint256 => mapping(bytes32  => bool)) hasClaimedDividend;\n\n    /// @notice Event that triggers when an action is taken by somebody.\n    /// @param func The name of the function that was called.\n    /// @param args The arguments passed to the function call.\n    /// @param by The initiator of the action.\n    event ActionTaken(\n        string func,\n        bytes args,\n        address by\n        );\n\n    /// @notice Modifier that makes sure msg.sender has a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyWithPermit(string memory permitName) {\n        require(hasPermit(permitName, msg.sender));\n        _;\n    }\n    \n    /// @notice Modifier that makes sure msg.sender is an admin of a given permit.\n    /// @param permitName The name of the permit to be checked for.\n    modifier onlyPermitAdmin(string memory permitName) {\n        require(isPermitAdmin(permitName, msg.sender));\n        _;\n\n    }\n\n    /// @notice Modifier that makes sure msg.sender is admin of a given bank.\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyBankAdmin(string memory bankName) {\n        require(isBankAdmin(bankName, msg.sender));\n        _;\n    }\n\n    /// @notice Modifier that makes sure a given bank exists\n    /// @param bankName The name of the Bank to be checked for.\n    modifier onlyExistingBank(string memory bankName) {\n        require(bankExists(bankName), \"DNE\");\n        _;\n    }\n    \n    /// @notice Modifier that makes sure a given dividend exists and is valid\n    /// @param dividend The Dividend to be checked for.\n    modifier onlyExistingDividend(uint256 dividend) {\n        require(dividendExists(dividend));\n        _;\n    }\n\n    /// @notice Constructor function connecting the Idea entity and creating a Bank with an administrator.\n    constructor(uint256 amount) Idea(amount) {\n        _createBank(\"main\",msg.sender);\n        _setPermit(\"sNS\", msg.sender, PermitState.administrator);\n        _setPermit(\"iS\", msg.sender, PermitState.administrator);\n        _setPermit(\"iD\", msg.sender, PermitState.administrator);\n        _setPermit(\"dD\", msg.sender, PermitState.administrator);\n        _setPermit(\"mB\", msg.sender, PermitState.administrator);\n        _setPermit(\"lE\", msg.sender, PermitState.administrator);\n        _setPermit(\"mAT\", msg.sender, PermitState.administrator);\n    }\n\n    /// @notice Claims the value of an existing dividend corresponding to the shard holder's respective shard fraction.\n    /// @param shard The shard that was valid at the clock of the Dividend creation\n    /// @param dividend The dividend to be claimed.\n    function claimDividend(bytes32 shard, uint256 dividend) external onlyHolder(shard) onlyExistingDividend(dividend) onlyIfActive {\n        require(shardExisted(shard,dividend), \"NAF\");\n        require(hasClaimedDividend[dividend][shard] == false, \"AC\");\n        hasClaimedDividend[dividend][shard] = true;\n        uint256 dividendValue = infoByDividend[dividend].value * infoByShard[shard].amount / totalShardAmountByClock[clock];\n        require(dividendValue != 0, \"DTS\");\n        residualByDividend[dividend] -= dividendValue;\n        _transferToken(infoByDividend[dividend].tokenAddress,dividendValue,msg.sender);\n        emit ActionTaken(\"cD\",abi.encode(dividend,dividendValue),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function registerTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _registerTokenAddress(tokenAddress);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function unregisterTokenAddress(address tokenAddress) external onlyWithPermit(\"mAT\") onlyIfActive {\n        _unregisterTokenAddress(tokenAddress);\n    }\n\n    /// @notice Issues new shards and puts them for sale.\n    /// @param tokenAddress The token address the shards are put for sale for.\n    /// @param price The price per token.\n    /// @param to The specifically set buyer of the issued shards. Open to anyone, if address(0).\n    function issueShards(uint256 amount, address tokenAddress, uint256 price, address to) external onlyWithPermit(\"iS\") {\n        _issueShards(amount,tokenAddress,price,to);\n    }\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function issueDividend(string memory bankName, address tokenAddress, uint256 value) external onlyWithPermit(\"iD\") onlyBankAdmin(bankName) {\n        _issueDividend(bankName,tokenAddress,value);  \n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function dissolveDividend(uint256 dividend) external onlyWithPermit(\"dD\") {\n        _dissolveDividend(dividend);\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function createBank(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyIfActive {\n       _createBank(bankName,bankAdmin);\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function addBankAdmin(string memory bankName, address bankAdmin) external onlyWithPermit(\"mB\") onlyBankAdmin(bankName) {\n        _addBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function removeBankAdmin(string memory bankName, address bankAdmin) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _removeBankAdmin(bankName,bankAdmin);\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function deleteBank(string memory bankName) external onlyPermitAdmin(\"mB\") onlyBankAdmin(bankName) {\n        _deleteBank(bankName);\n    }\n\n    /// @notice Transfers a token bankAdmin a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) external onlyBankAdmin(bankName) {\n        _transferTokenFromBank(bankName,tokenAddress,value,to);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) external onlyBankAdmin(fromBankName) {\n        _moveToken(fromBankName,toBankName,tokenAddress,value);\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param account The address, whose permit state is to be set.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function setPermit(string memory permitName, address account, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(permits[permitName][account] != newState, \"AHP\");\n        _setPermit(permitName,account,newState);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function setBasePermit(string memory permitName, PermitState newState) external onlyPermitAdmin(permitName) {\n        require(basePermits[permitName] != newState, \"AS\");\n        _setBasePermit(permitName,newState);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function liquidize() external onlyWithPermit(\"lE\") {\n        _liquidize();\n    }\n\n    /// @notice Returns the balance of a bank.\n    /// @param bankName The name of the Bank.\n    /// @param tokenAddress The address of the token balance to check for.\n    function getBankBalance(string memory bankName, address tokenAddress) public view returns(uint256) {\n        return balanceByBank[bankName][tokenAddress];\n    }\n    \n    /// @notice Returns the token of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendToken(uint256 dividend) public view returns(address) {\n        return infoByDividend[dividend].tokenAddress;\n    }\n    \n    /// @notice Returns the total value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendValue(uint256 dividend) public view returns(uint256) {\n        return infoByDividend[dividend].value;\n    }\n\n    /// @notice Returns the residual value of a dividend.\n    /// @param dividend The Dividend to be checked for.\n    function getDividendResidual(uint256 dividend) public view returns(uint256) {\n        return residualByDividend[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given Bank exists.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankExists(string memory bankName) public view returns(bool) {\n        return validBanks[bankName] == true;\n    }\n\n    /// @notice Returns a boolean stating if a given Bank is empty.\n    /// @param bankName The name of the Bank to be checked for.\n    function bankIsEmpty(string memory bankName) public view returns(bool) {\n        return storedTokenAddressesByBank[bankName] == 0 && balanceByBank[bankName][address(0)] == 0;\n    }\n    \n    /// @notice Returns a boolean stating if a given Dividend exists.\n    /// @param dividend The Dividend to be checked for.\n    function dividendExists(uint256 dividend) public view returns(bool) {\n      return validDividends[dividend];\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given bank.\n    /// @param account The address to be checked for.\n    /// @param bankName The name of the Bank to be checked for.\n    function isBankAdmin(string memory bankName, address account) public view returns(bool) {\n        return adminOfBank[bankName][account] == true || isPermitAdmin(\"mB\",account);\n    }\n\n    /// @notice Returns a boolean stating if a given address has a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function hasPermit(string memory permitName, address account) public view returns(bool) {\n        return permits[permitName][account] >= PermitState.authorized || basePermits[permitName] >= PermitState.authorized;\n    }\n\n    /// @notice Returns a boolean stating if a given address is an admin of a given permit or not.\n    /// @param permitName The name of the permit to be checked for.\n    /// @param account The address to be checked for.\n    function isPermitAdmin(string memory permitName, address account) public view returns(bool) {\n        return permits[permitName][account] == PermitState.administrator || basePermits[permitName] == PermitState.administrator;\n    }\n\n    /// @notice Creates and issues a Dividend (to all current shareholders) of a token amount from a given Bank.\n    /// @param bankName The name of the Bank to issue the Dividend from.\n    /// @param tokenAddress The address of the token to make up the Dividend.\n    /// @param value The value/amount of the token to be issued in the Dividend.\n    function _issueDividend(string memory bankName, address tokenAddress, uint256 value) internal onlyIfActive {\n        uint256 transferClock = clock;\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        infoByDividend[transferClock] = DividendInfo({\n            tokenAddress:tokenAddress,\n            value:value\n        });\n        residualByDividend[transferClock] = value;\n        validDividends[transferClock] = true;\n        emit ActionTaken(\"iD\",abi.encode(bankName,tokenAddress,value),msg.sender);\n    }\n\n    /// @notice Dissolves a Dividend and moves its last contents to the 'main' Bank.\n    /// @param dividend The Dividend to be dissolved.\n    function _dissolveDividend(uint256 dividend) internal onlyExistingDividend(dividend) onlyIfActive {\n        validDividends[dividend] = false; // -1 to distinguish between empty values;\n        balanceByBank[\"main\"][infoByDividend[dividend].tokenAddress] += residualByDividend[dividend];\n        emit ActionTaken(\"dD\",abi.encode(dividend),msg.sender);\n\n    }\n\n    /// @notice Creates a new Bank.\n    /// @param bankName The name of the Bank to be created.\n    /// @param bankAdmin The address of the first Bank administrator.\n    function _createBank(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(!bankExists(bankName), \"AE\");\n        adminOfBank[bankName][bankAdmin] = true;\n        validBanks[bankName] = true;\n        emit ActionTaken(\"cB\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Adds a new given administrator to a given Bank.\n    /// @param bankName The name of the Bank to which the new administrator is to be added.\n    /// @param bankAdmin The address of the new Bank administrator to be added.\n    function _addBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(hasPermit(\"mB\",bankAdmin),\"NP\");\n        adminOfBank[bankName][bankAdmin] = true;\n        emit ActionTaken(\"aA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Removes a given administrator of a given Bank.\n    /// @param bankName The name of the Bank from which the given administrator is to be removed.\n    /// @param bankAdmin The address of the current Bank administrator to be removed.\n    function _removeBankAdmin(string memory bankName, address bankAdmin) internal onlyIfActive {\n        require(isBankAdmin(bankName,bankAdmin));\n        adminOfBank[bankName][bankAdmin] = false;\n        emit ActionTaken(\"rA\",abi.encode(bankName,bankAdmin),msg.sender);\n\n    }\n\n    /// @notice Deletes a given Bank.\n    /// @param bankName The name of the Bank to be deleted.\n    function _deleteBank(string memory bankName) internal onlyIfActive {\n        require(bankExists(bankName), \"UB!\");\n        require(keccak256(bytes(bankName)) != keccak256(bytes(\"main\")), \"MB\");\n        require(bankIsEmpty(bankName), \"BE\");\n        validBanks[bankName] = false;\n        emit ActionTaken(\"dB\",abi.encode(bankName),msg.sender);\n\n    }\n\n    /// @notice Transfers a token from a Bank to a recipient.\n    /// @param bankName The name of the Bank from which the token is to be transferred.\n    /// @param tokenAddress The address of the token to be transferred.\n    /// @param value The value/amount of the token to be transferred.\n    /// @param to The recipient of the token to be transferred.\n    function _transferTokenFromBank(string memory bankName, address tokenAddress, uint256 value, address to) internal onlyIfActive {\n        require(value <= balanceByBank[bankName][tokenAddress], \"IF\");\n        _transferToken(tokenAddress,value,to);\n        balanceByBank[bankName][tokenAddress] -= value;\n        if (balanceByBank[bankName][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[bankName] -= 1;\n        }\n        emit ActionTaken(\"tT\",abi.encode(bankName,tokenAddress,value,to),msg.sender);\n    }\n\n    /// @notice Internally moves a token from one Bank to another.\n    /// @param fromBankName The name of the Bank from which the token is to be moved.\n    /// @param toBankName The name of the Bank to which the token is to be moved.\n    /// @param tokenAddress The address of the token to be moved.\n    /// @param value The value/amount of the token to be moved.\n    function _moveToken(string memory fromBankName, string memory toBankName, address tokenAddress, uint256 value) internal onlyExistingBank(toBankName) onlyIfActive {\n        require(value <= balanceByBank[fromBankName][tokenAddress], \"IF\");\n        balanceByBank[fromBankName][tokenAddress] -= value;\n        if (tokenAddress != address(0)) {\n            if (balanceByBank[fromBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[fromBankName] -= 1;\n\n            }\n            if (balanceByBank[toBankName][tokenAddress] == 0) {\n                storedTokenAddressesByBank[toBankName] += 1;\n            }\n        }\n        balanceByBank[toBankName][tokenAddress] += value;\n        emit ActionTaken(\"mT\",abi.encode(fromBankName,toBankName,tokenAddress,value),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified permit of a given address.\n    /// @param permitName The name of the permit, whose state is to be set.\n    /// @param account The address, whose permit state is to be set.\n    /// @param newState The new Permit State to be applied.\n    function _setPermit(string memory permitName, address account, PermitState newState) internal onlyIfActive {\n        permits[permitName][account] = newState;\n        emit ActionTaken(\"sP\",abi.encode(permitName,account,newState),msg.sender);\n\n    }\n\n    /// @notice Sets the state of a specified base permit.\n    /// @param permitName The name of the base permit, whose state is to be set.\n    /// @param newState The new base Permit State to be applied.\n    function _setBasePermit(string memory permitName, PermitState newState) internal onlyIfActive {\n        basePermits[permitName] = newState;\n        emit ActionTaken(\"sB\",abi.encode(permitName,newState),msg.sender);\n    }\n\n    /// @notice Removes a token address from the registry. Also cancels any future receipts of said token unless added again.\n    /// @param tokenAddress The token address to be unregistered.\n    function _unregisterTokenAddress(address tokenAddress) override internal {\n        super._unregisterTokenAddress(tokenAddress);\n        emit ActionTaken(\"uT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Adds a token address to the registry. Also approves any future receipts of said token unless removed again.\n    /// @param tokenAddress The token address to be registered.\n    function _registerTokenAddress(address tokenAddress) override internal {\n        super._registerTokenAddress(tokenAddress);\n        emit ActionTaken(\"rT\",abi.encode(tokenAddress),msg.sender);\n    }\n\n    /// @notice Keeps track of a token receipt by adding it to the registry\n    /// @param tokenAddress The address of the received token.\n    /// @param value The value/amount of the received token.\n    /// @param from The sender of the received token.\n    function _processTokenReceipt(address tokenAddress, uint256 value, address from) override internal {\n        super._processTokenReceipt(tokenAddress, value, from);\n        // Then: Bank logic\n        if (balanceByBank[\"main\"][tokenAddress] == 0 && tokenAddress != address(0)) {\n            storedTokenAddressesByBank[\"main\"] += 1;\n        }\n        balanceByBank[\"main\"][tokenAddress] += value;\n        emit TokenReceived(tokenAddress,value,from);\n    }\n\n    /// @notice Liquidizes and dissolves the entity. This cannot be undone.\n    function _liquidize() override internal {\n        super._liquidize();\n        emit ActionTaken(\"lE\",\"\",msg.sender);\n    }\n\n}",
  "sourceMap": "307:23145:0:-:0;;;2697:1:2;2681:17;;4797:545:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4830:6;;6892:33:2;4830:6:0;6911:10:2;6923:1;6892:10;:33::i;:::-;6935:30;6959:5;;6935:30;;:23;:30;;;;;;;;;:39;;;;6993:4;6984:13;;-1:-1:-1;;6984:13:2;;;;;4848:30:0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4848:30:0;;::::1;::::0;;;;::::1;::::0;-1:-1:-1;4867:10:0::1;4848:11;:30::i;:::-;4888:56;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4888:56:0::1;::::0;::::1;::::0;::::1;::::0;4906:10:::1;4918:25;4888:10;:56::i;:::-;4954:55;;;;;;;;;;;;;;-1:-1:-1::0;;;4954:55:0::1;;::::0;4971:10:::1;4983:25;4954:10;;;:55;;:::i;:::-;5019;;;;;;;;;;;;;;-1:-1:-1::0;;;5019:55:0::1;;::::0;5036:10:::1;5048:25;5019:10;;;:55;;:::i;:::-;5084;;;;;;;;;;;;;;-1:-1:-1::0;;;5084:55:0::1;;::::0;5101:10:::1;5113:25;5084:10;;;:55;;:::i;:::-;5149;;;;;;;;;;;;;;-1:-1:-1::0;;;5149:55:0::1;;::::0;5166:10:::1;5178:25;5149:10;;;:55;;:::i;:::-;5214;;;;;;;;;;;;;;-1:-1:-1::0;;;5214:55:0::1;;::::0;5231:10:::1;5243:25;5214:10;;;:55;;:::i;:::-;5279:56;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5279:56:0::1;::::0;::::1;::::0;::::1;::::0;5297:10:::1;5309:25;5279:10;:56::i;:::-;4797:545:::0;307:23145;;15481:698:2;15591:1;15582:6;:10;15574:25;;;;-1:-1:-1;;;15574:25:2;;405:2:8;15574:25:2;;;387:21:8;444:1;424:18;;;417:29;-1:-1:-1;;;462:18:8;;;455:32;504:18;;15574:25:2;;;;;;;;;15681:37;;-1:-1:-1;;;;;;735:2:8;706:15;;;702:45;15681:37:2;;;690:58:8;764:12;;;757:28;;;15655:13:2;;801:12:8;;15681:37:2;;;;;;-1:-1:-1;;15681:37:2;;;;;;15671:48;;15681:37;15671:48;;;;-1:-1:-1;;;;;15729:19:2;;;;;;;:12;:19;;;;;:27;;;15766;;;:20;:27;;;;;-1:-1:-1;;15766:47:2;;15921:200;;;;;;;;;;;;;;;;;;;;;15900:18;;;:11;:18;;;;;;:221;;;;;;;;;;-1:-1:-1;;;;;;15900:221:2;;;;;;;;;;;;;;;;;;16136:35;;1026:25:8;;;1067:18;;;1060:60;;;;1136:18;;;1129:34;;;15671:48:2;;-1:-1:-1;16136:35:2;;999:18:8;16136:35:2;;;;;;;15564:615;15481:698;;;:::o;16917:300:0:-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;1376:2:8;6295:29:2;;;1358:21:8;1415:1;1395:18;;;1388:29;-1:-1:-1;;;1433:18:8;;;1426:32;1475:18;;6295:29:2;1174:325:8;6295:29:2;17022:20:0::1;17033:8:::0;17022:10:::1;:20::i;:::-;17021:21;17013:36;;;::::0;-1:-1:-1;;;17013:36:0;;1706:2:8;17013:36:0::1;::::0;::::1;1688:21:8::0;1745:1;1725:18;;;1718:29;-1:-1:-1;;;1763:18:8;;;1756:32;1805:18;;17013:36:0::1;1504:325:8::0;17013:36:0::1;17094:4;17059:11;17071:8;17059:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;17059:32:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;17059:39:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;17108:10:0::1;::::0;:20:::1;::::0;17119:8;;17108:20:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:27;;-1:-1:-1;;17108:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;17150:59:0;17167:30:::1;::::0;17178:8;;17187:9;;17167:30:::1;;:::i;:::-;;::::0;;-1:-1:-1;;17167:30:0;;::::1;::::0;;;;;;;17150:59:::1;::::0;17198:10:::1;::::0;17150:59:::1;:::i;:::-;;;;;;;;16917:300:::0;;:::o;21065:247::-;6303:6:2;;;;;:14;;;6295:29;;;;-1:-1:-1;;;6295:29:2;;1376:2:8;6295:29:2;;;1358:21:8;1415:1;1395:18;;;1388:29;-1:-1:-1;;;1433:18:8;;;1426:32;1475:18;;6295:29:2;1174:325:8;6295:29:2;21213:8:0::1;21182:7;21190:10;21182:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;21182:28:0;::::1;;::::0;;;;;;;:39;;-1:-1:-1;;21182:39:0::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;-1:-1:-1::0;;;;;;;;;;;21264:10:0::1;21275:7;21283:8;21253:39;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;21253:39:0;;::::1;::::0;;;;;;;21236:68:::1;::::0;21293:10:::1;::::0;21236:68:::1;:::i;:::-;;;;;;;;21065:247:::0;;;:::o;13173:122::-;13237:4;13260:10;13271:8;13260:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:28;;:20;:28;;13173:122;-1:-1:-1;;13173:122:0:o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;1834:250::-;1919:1;1929:113;1943:6;1940:1;1937:13;1929:113;;;2019:11;;;2013:18;2000:11;;;1993:39;1965:2;1958:10;1929:113;;;-1:-1:-1;;2076:1:8;2058:16;;2051:27;1834:250::o;2089:289::-;2220:3;2258:6;2252:13;2274:66;2333:6;2328:3;2321:4;2313:6;2309:17;2274:66;:::i;:::-;2356:16;;;;;2089:289;-1:-1:-1;;2089:289:8:o;2383:271::-;2425:3;2463:5;2457:12;2490:6;2485:3;2478:19;2506:76;2575:6;2568:4;2563:3;2559:14;2552:4;2545:5;2541:16;2506:76;:::i;:::-;2636:2;2615:15;-1:-1:-1;;2611:29:8;2602:39;;;;2643:4;2598:50;;2383:271;-1:-1:-1;;2383:271:8:o;2659:317::-;2836:2;2825:9;2818:21;2799:4;2856:45;2897:2;2886:9;2882:18;2874:6;2856:45;:::i;:::-;2848:53;;2966:1;2962;2957:3;2953:11;2949:19;2941:6;2937:32;2932:2;2921:9;2917:18;2910:60;2659:317;;;;;:::o;2981:539::-;3257:2;3246:9;3239:21;3296:1;3291:2;3280:9;3276:18;3269:29;-1:-1:-1;;;3329:3:8;3318:9;3314:19;3307:33;3378:3;3371:4;3360:9;3356:20;3349:33;3220:4;3399:46;3440:3;3429:9;3425:19;3417:6;3399:46;:::i;:::-;3391:54;;3510:1;3506;3501:3;3497:11;3493:19;3485:6;3481:32;3476:2;3465:9;3461:18;3454:60;2981:539;;;;;:::o;3525:127::-;3586:10;3581:3;3577:20;3574:1;3567:31;3617:4;3614:1;3607:15;3641:4;3638:1;3631:15;3657:552;3873:2;3862:9;3855:21;3836:4;3893:45;3934:2;3923:9;3919:18;3911:6;3893:45;:::i;:::-;-1:-1:-1;;;;;3974:32:8;;3969:2;3954:18;;3947:60;3885:53;-1:-1:-1;4037:1:8;4026:13;;4016:144;;4082:10;4077:3;4073:20;4070:1;4063:31;4117:4;4114:1;4107:15;4145:4;4142:1;4135:15;4016:144;4196:6;4191:2;4180:9;4176:18;4169:34;3657:552;;;;;;:::o;4214:539::-;4490:2;4479:9;4472:21;4529:1;4524:2;4513:9;4509:18;4502:29;-1:-1:-1;;;4562:3:8;4551:9;4547:19;4540:33;4611:3;4604:4;4593:9;4589:20;4582:33;4453:4;4632:46;4673:3;4662:9;4658:19;4650:6;4632:46;:::i;4214:539::-;307:23145:0;;;;;;",
  "sourcePath": "contracts/administrable.sol",
  "type": "contract"
}