{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
    "5": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
    "6": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "node_modules/@openzeppelin/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        4690
      ],
      "ERC20": [
        4565
      ],
      "IERC20": [
        4643
      ],
      "IERC20Metadata": [
        4668
      ]
    },
    "id": 4566,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3981,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:4"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 3982,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4566,
        "sourceUnit": 4644,
        "src": "130:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 3983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4566,
        "sourceUnit": 4669,
        "src": "153:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 3984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4566,
        "sourceUnit": 4691,
        "src": "195:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3986,
              "name": "Context",
              "nameLocations": [
                "1421:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4690,
              "src": "1421:7:4"
            },
            "id": 3987,
            "nodeType": "InheritanceSpecifier",
            "src": "1421:7:4"
          },
          {
            "baseName": {
              "id": 3988,
              "name": "IERC20",
              "nameLocations": [
                "1430:6:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4643,
              "src": "1430:6:4"
            },
            "id": 3989,
            "nodeType": "InheritanceSpecifier",
            "src": "1430:6:4"
          },
          {
            "baseName": {
              "id": 3990,
              "name": "IERC20Metadata",
              "nameLocations": [
                "1438:14:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4668,
              "src": "1438:14:4"
            },
            "id": 3991,
            "nodeType": "InheritanceSpecifier",
            "src": "1438:14:4"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3985,
          "nodeType": "StructuredDocumentation",
          "src": "230:1172:4",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 4565,
        "linearizedBaseContracts": [
          4565,
          4668,
          4643,
          4690
        ],
        "name": "ERC20",
        "nameLocation": "1412:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3995,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1495:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 4565,
            "src": "1459:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3994,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3992,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1467:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1459:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3993,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1478:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4001,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1567:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 4565,
            "src": "1511:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4000,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3996,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1519:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1511:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3999,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 3997,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1538:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1530:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 3998,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1549:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4003,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1601:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 4565,
            "src": "1585:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4002,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1585:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4005,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1635:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 4565,
            "src": "1620:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4004,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1620:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4007,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1661:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 4565,
            "src": "1646:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4006,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1646:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4023,
              "nodeType": "Block",
              "src": "2034:57:4",
              "statements": [
                {
                  "expression": {
                    "id": 4017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4015,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4005,
                      "src": "2044:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4016,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4010,
                      "src": "2052:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2044:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4018,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:13:4"
                },
                {
                  "expression": {
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4019,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4007,
                      "src": "2067:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4020,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "2077:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2067:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4022,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:17:4"
                }
              ]
            },
            "documentation": {
              "id": 4008,
              "nodeType": "StructuredDocumentation",
              "src": "1675:298:4",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 4024,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2004:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "1990:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2025:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2011:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:44:4"
            },
            "returnParameters": {
              "id": 4014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:4"
            },
            "scope": 4565,
            "src": "1978:113:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4655
            ],
            "body": {
              "id": 4033,
              "nodeType": "Block",
              "src": "2225:29:4",
              "statements": [
                {
                  "expression": {
                    "id": 4031,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4005,
                    "src": "2242:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4030,
                  "id": 4032,
                  "nodeType": "Return",
                  "src": "2235:12:4"
                }
              ]
            },
            "documentation": {
              "id": 4025,
              "nodeType": "StructuredDocumentation",
              "src": "2097:54:4",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 4034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2165:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4027,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2192:8:4"
            },
            "parameters": {
              "id": 4026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:2:4"
            },
            "returnParameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4034,
                  "src": "2210:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:15:4"
            },
            "scope": 4565,
            "src": "2156:98:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4661
            ],
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "2438:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 4041,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4007,
                    "src": "2455:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4040,
                  "id": 4042,
                  "nodeType": "Return",
                  "src": "2448:14:4"
                }
              ]
            },
            "documentation": {
              "id": 4035,
              "nodeType": "StructuredDocumentation",
              "src": "2260:102:4",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 4044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2376:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2405:8:4"
            },
            "parameters": {
              "id": 4036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2382:2:4"
            },
            "returnParameters": {
              "id": 4040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4044,
                  "src": "2423:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:15:4"
            },
            "scope": 4565,
            "src": "2367:102:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4667
            ],
            "body": {
              "id": 4053,
              "nodeType": "Block",
              "src": "3158:26:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3175:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 4050,
                  "id": 4052,
                  "nodeType": "Return",
                  "src": "3168:9:4"
                }
              ]
            },
            "documentation": {
              "id": 4045,
              "nodeType": "StructuredDocumentation",
              "src": "2475:613:4",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 4054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3102:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4047,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3133:8:4"
            },
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:2:4"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4054,
                  "src": "3151:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:7:4"
            },
            "scope": 4565,
            "src": "3093:91:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4592
            ],
            "body": {
              "id": 4063,
              "nodeType": "Block",
              "src": "3314:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 4061,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4003,
                    "src": "3331:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4060,
                  "id": 4062,
                  "nodeType": "Return",
                  "src": "3324:19:4"
                }
              ]
            },
            "documentation": {
              "id": 4055,
              "nodeType": "StructuredDocumentation",
              "src": "3190:49:4",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 4064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3253:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4057,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3287:8:4"
            },
            "parameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3264:2:4"
            },
            "returnParameters": {
              "id": 4060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4064,
                  "src": "3305:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:9:4"
            },
            "scope": 4565,
            "src": "3244:106:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4600
            ],
            "body": {
              "id": 4077,
              "nodeType": "Block",
              "src": "3491:42:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4073,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3995,
                      "src": "3508:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4075,
                    "indexExpression": {
                      "id": 4074,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4067,
                      "src": "3518:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3508:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4072,
                  "id": 4076,
                  "nodeType": "Return",
                  "src": "3501:25:4"
                }
              ]
            },
            "documentation": {
              "id": 4065,
              "nodeType": "StructuredDocumentation",
              "src": "3356:47:4",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 4078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3417:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4069,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3464:8:4"
            },
            "parameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4067,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3435:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4078,
                  "src": "3427:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:17:4"
            },
            "returnParameters": {
              "id": 4072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4078,
                  "src": "3482:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3481:9:4"
            },
            "scope": 4565,
            "src": "3408:125:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4610
            ],
            "body": {
              "id": 4102,
              "nodeType": "Block",
              "src": "3814:104:4",
              "statements": [
                {
                  "assignments": [
                    4090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4090,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3832:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4102,
                      "src": "3824:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4089,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3824:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4093,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4091,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "3840:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3840:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3824:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4095,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4090,
                        "src": "3872:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4096,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "3879:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4097,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4083,
                        "src": "3883:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4094,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "3862:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4099,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:28:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3907:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4088,
                  "id": 4101,
                  "nodeType": "Return",
                  "src": "3900:11:4"
                }
              ]
            },
            "documentation": {
              "id": 4079,
              "nodeType": "StructuredDocumentation",
              "src": "3539:185:4",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 4103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3738:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4085,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3790:8:4"
            },
            "parameters": {
              "id": 4084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4081,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3755:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4103,
                  "src": "3747:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4083,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3767:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4103,
                  "src": "3759:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3746:28:4"
            },
            "returnParameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4103,
                  "src": "3808:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4086,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3807:6:4"
            },
            "scope": 4565,
            "src": "3729:189:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4620
            ],
            "body": {
              "id": 4120,
              "nodeType": "Block",
              "src": "4074:51:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4114,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4001,
                        "src": "4091:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4116,
                      "indexExpression": {
                        "id": 4115,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "4103:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4091:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4118,
                    "indexExpression": {
                      "id": 4117,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4108,
                      "src": "4110:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4091:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4113,
                  "id": 4119,
                  "nodeType": "Return",
                  "src": "4084:34:4"
                }
              ]
            },
            "documentation": {
              "id": 4104,
              "nodeType": "StructuredDocumentation",
              "src": "3924:47:4",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 4121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3985:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4110,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4047:8:4"
            },
            "parameters": {
              "id": 4109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4106,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4003:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4121,
                  "src": "3995:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3995:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4108,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4018:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4121,
                  "src": "4010:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3994:32:4"
            },
            "returnParameters": {
              "id": 4113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4121,
                  "src": "4065:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4064:9:4"
            },
            "scope": 4565,
            "src": "3976:149:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4630
            ],
            "body": {
              "id": 4145,
              "nodeType": "Block",
              "src": "4522:108:4",
              "statements": [
                {
                  "assignments": [
                    4133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4133,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4540:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4145,
                      "src": "4532:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4532:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4136,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4134,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "4548:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4548:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4532:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4138,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4133,
                        "src": "4579:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4139,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4124,
                        "src": "4586:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4140,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4126,
                        "src": "4595:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4137,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4499,
                      "src": "4570:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4570:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4142,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:32:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4619:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4131,
                  "id": 4144,
                  "nodeType": "Return",
                  "src": "4612:11:4"
                }
              ]
            },
            "documentation": {
              "id": 4122,
              "nodeType": "StructuredDocumentation",
              "src": "4131:297:4",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 4146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4442:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4498:8:4"
            },
            "parameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4124,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4458:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4146,
                  "src": "4450:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4126,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4475:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4146,
                  "src": "4467:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:33:4"
            },
            "returnParameters": {
              "id": 4131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4146,
                  "src": "4516:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4515:6:4"
            },
            "scope": 4565,
            "src": "4433:197:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4642
            ],
            "body": {
              "id": 4178,
              "nodeType": "Block",
              "src": "5325:153:4",
              "statements": [
                {
                  "assignments": [
                    4160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4160,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5343:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4178,
                      "src": "5335:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4159,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5335:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4163,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4161,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "5353:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5335:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4165,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "5391:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4166,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4160,
                        "src": "5397:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4167,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4153,
                        "src": "5406:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4164,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4542,
                      "src": "5375:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4169,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:38:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4171,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "5433:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4151,
                        "src": "5439:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4153,
                        "src": "5443:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4170,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "5423:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5423:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4175,
                  "nodeType": "ExpressionStatement",
                  "src": "5423:27:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5467:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4158,
                  "id": 4177,
                  "nodeType": "Return",
                  "src": "5460:11:4"
                }
              ]
            },
            "documentation": {
              "id": 4147,
              "nodeType": "StructuredDocumentation",
              "src": "4636:551:4",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 4179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5201:12:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5301:8:4"
            },
            "parameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4149,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5231:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5223:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4151,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5253:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5245:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5273:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5265:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5265:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5213:72:4"
            },
            "returnParameters": {
              "id": 4158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5319:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5319:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5318:6:4"
            },
            "scope": 4565,
            "src": "5192:286:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4207,
              "nodeType": "Block",
              "src": "5967:140:4",
              "statements": [
                {
                  "assignments": [
                    4190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4190,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5985:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4207,
                      "src": "5977:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4189,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5977:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4193,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4191,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "5993:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5977:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4195,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4190,
                        "src": "6024:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4196,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "6031:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4198,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4190,
                              "src": "6050:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4199,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4182,
                              "src": "6057:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4197,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4121,
                            "src": "6040:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 4200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6040:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 4201,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4184,
                          "src": "6068:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6040:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4194,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4499,
                      "src": "6015:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6015:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4204,
                  "nodeType": "ExpressionStatement",
                  "src": "6015:64:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6096:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4188,
                  "id": 4206,
                  "nodeType": "Return",
                  "src": "6089:11:4"
                }
              ]
            },
            "documentation": {
              "id": 4180,
              "nodeType": "StructuredDocumentation",
              "src": "5484:384:4",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 4208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5882:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4182,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5908:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4208,
                  "src": "5900:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4184,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5925:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4208,
                  "src": "5917:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5917:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5899:37:4"
            },
            "returnParameters": {
              "id": 4188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4208,
                  "src": "5961:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4186,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5961:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5960:6:4"
            },
            "scope": 4565,
            "src": "5873:234:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4248,
              "nodeType": "Block",
              "src": "6693:328:4",
              "statements": [
                {
                  "assignments": [
                    4219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4219,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6711:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4248,
                      "src": "6703:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4218,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6703:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4222,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4220,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "6719:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6719:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6703:28:4"
                },
                {
                  "assignments": [
                    4224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4224,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6749:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4248,
                      "src": "6741:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6741:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4226,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4219,
                        "src": "6778:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4227,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4211,
                        "src": "6785:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4225,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4121,
                      "src": "6768:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6768:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6741:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4231,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4224,
                          "src": "6811:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4232,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4213,
                          "src": "6831:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6811:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 4234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6848:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 4230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6803:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6803:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4236,
                  "nodeType": "ExpressionStatement",
                  "src": "6803:85:4"
                },
                {
                  "id": 4245,
                  "nodeType": "UncheckedBlock",
                  "src": "6898:95:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 4238,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4219,
                            "src": "6931:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4239,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4211,
                            "src": "6938:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4240,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4224,
                              "src": "6947:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4241,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4213,
                              "src": "6966:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6947:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4237,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4499,
                          "src": "6922:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 4243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6922:60:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4244,
                      "nodeType": "ExpressionStatement",
                      "src": "6922:60:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7010:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4217,
                  "id": 4247,
                  "nodeType": "Return",
                  "src": "7003:11:4"
                }
              ]
            },
            "documentation": {
              "id": 4209,
              "nodeType": "StructuredDocumentation",
              "src": "6113:476:4",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 4249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6603:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4211,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6629:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4249,
                  "src": "6621:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6621:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4213,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6646:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4249,
                  "src": "6638:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6620:42:4"
            },
            "returnParameters": {
              "id": 4217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4249,
                  "src": "6687:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6687:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6686:6:4"
            },
            "scope": 4565,
            "src": "6594:427:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4325,
              "nodeType": "Block",
              "src": "7592:543:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4260,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4252,
                          "src": "7610:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7626:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7618:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4261,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7618:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7618:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7610:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 4266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7630:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 4259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7602:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7602:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4268,
                  "nodeType": "ExpressionStatement",
                  "src": "7602:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4270,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4254,
                          "src": "7688:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7702:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7694:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4271,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7694:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7694:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7688:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7706:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 4269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7680:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7680:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4278,
                  "nodeType": "ExpressionStatement",
                  "src": "7680:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4280,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4252,
                        "src": "7776:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4281,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "7782:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4282,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "7786:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4279,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4553,
                      "src": "7755:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4284,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:38:4"
                },
                {
                  "assignments": [
                    4286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4286,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7812:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4325,
                      "src": "7804:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7804:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4290,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4287,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3995,
                      "src": "7826:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4289,
                    "indexExpression": {
                      "id": 4288,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4252,
                      "src": "7836:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7826:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7804:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4292,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4286,
                          "src": "7859:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4293,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4256,
                          "src": "7874:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7859:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 4295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7882:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 4291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7851:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7851:72:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4297,
                  "nodeType": "ExpressionStatement",
                  "src": "7851:72:4"
                },
                {
                  "id": 4306,
                  "nodeType": "UncheckedBlock",
                  "src": "7933:73:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 4304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4298,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3995,
                            "src": "7957:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4300,
                          "indexExpression": {
                            "id": 4299,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4252,
                            "src": "7967:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7957:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4301,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4286,
                            "src": "7975:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4302,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4256,
                            "src": "7989:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7975:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7957:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4305,
                      "nodeType": "ExpressionStatement",
                      "src": "7957:38:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4307,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "8015:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4309,
                      "indexExpression": {
                        "id": 4308,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "8025:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8015:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4310,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4256,
                      "src": "8032:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8015:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4312,
                  "nodeType": "ExpressionStatement",
                  "src": "8015:23:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4314,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4252,
                        "src": "8063:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4315,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "8069:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4316,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "8073:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4313,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4577,
                      "src": "8054:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8054:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4318,
                  "nodeType": "EmitStatement",
                  "src": "8049:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4320,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4252,
                        "src": "8111:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4321,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "8117:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4322,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "8121:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4319,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4564,
                      "src": "8091:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4324,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:37:4"
                }
              ]
            },
            "documentation": {
              "id": 4250,
              "nodeType": "StructuredDocumentation",
              "src": "7027:452:4",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 4326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7493:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7520:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4326,
                  "src": "7512:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7512:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4254,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7542:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4326,
                  "src": "7534:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7534:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7562:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4326,
                  "src": "7554:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7554:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7502:72:4"
            },
            "returnParameters": {
              "id": 4258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7592:0:4"
            },
            "scope": 4565,
            "src": "7484:651:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4381,
              "nodeType": "Block",
              "src": "8476:324:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4335,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4329,
                          "src": "8494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8513:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8505:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4336,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8505:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8505:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8494:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8517:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 4334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8486:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8486:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4343,
                  "nodeType": "ExpressionStatement",
                  "src": "8486:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8591:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8583:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8583:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8583:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4349,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "8595:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4350,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4331,
                        "src": "8604:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4344,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4553,
                      "src": "8562:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8562:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4352,
                  "nodeType": "ExpressionStatement",
                  "src": "8562:49:4"
                },
                {
                  "expression": {
                    "id": 4355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4353,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4003,
                      "src": "8622:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4354,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4331,
                      "src": "8638:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8622:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4356,
                  "nodeType": "ExpressionStatement",
                  "src": "8622:22:4"
                },
                {
                  "expression": {
                    "id": 4361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4357,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "8654:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4359,
                      "indexExpression": {
                        "id": 4358,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "8664:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8654:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4360,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4331,
                      "src": "8676:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8654:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4362,
                  "nodeType": "ExpressionStatement",
                  "src": "8654:28:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8714:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8706:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8706:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8706:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4368,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "8718:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4369,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4331,
                        "src": "8727:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4363,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4577,
                      "src": "8697:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8697:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4371,
                  "nodeType": "EmitStatement",
                  "src": "8692:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8773:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8765:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8765:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8765:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4377,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "8777:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4378,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4331,
                        "src": "8786:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4372,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4564,
                      "src": "8745:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8745:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4380,
                  "nodeType": "ExpressionStatement",
                  "src": "8745:48:4"
                }
              ]
            },
            "documentation": {
              "id": 4327,
              "nodeType": "StructuredDocumentation",
              "src": "8141:265:4",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 4382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8420:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4329,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8434:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4382,
                  "src": "8426:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4331,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8451:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4382,
                  "src": "8443:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8443:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:33:4"
            },
            "returnParameters": {
              "id": 4333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8476:0:4"
            },
            "scope": 4565,
            "src": "8411:389:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4453,
              "nodeType": "Block",
              "src": "9185:511:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4391,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "9203:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9222:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9214:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9214:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9214:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9203:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 4397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9226:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 4390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9195:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9195:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4399,
                  "nodeType": "ExpressionStatement",
                  "src": "9195:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4401,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4385,
                        "src": "9294:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9311:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9303:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9303:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9303:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4406,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4387,
                        "src": "9315:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4400,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4553,
                      "src": "9273:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9273:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4408,
                  "nodeType": "ExpressionStatement",
                  "src": "9273:49:4"
                },
                {
                  "assignments": [
                    4410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4410,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9341:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4453,
                      "src": "9333:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9333:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4414,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4411,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3995,
                      "src": "9358:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4413,
                    "indexExpression": {
                      "id": 4412,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4385,
                      "src": "9368:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9358:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9333:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4416,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4410,
                          "src": "9394:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4417,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4387,
                          "src": "9412:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9394:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 4419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9420:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 4415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9386:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9386:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4421,
                  "nodeType": "ExpressionStatement",
                  "src": "9386:71:4"
                },
                {
                  "id": 4430,
                  "nodeType": "UncheckedBlock",
                  "src": "9467:79:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 4428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4422,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3995,
                            "src": "9491:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4424,
                          "indexExpression": {
                            "id": 4423,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4385,
                            "src": "9501:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9491:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4425,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4410,
                            "src": "9512:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4426,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4387,
                            "src": "9529:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9512:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9491:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4429,
                      "nodeType": "ExpressionStatement",
                      "src": "9491:44:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4431,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4003,
                      "src": "9555:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4432,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4387,
                      "src": "9571:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9555:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4434,
                  "nodeType": "ExpressionStatement",
                  "src": "9555:22:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4436,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4385,
                        "src": "9602:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9619:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9611:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9611:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9611:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4441,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4387,
                        "src": "9623:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4435,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4577,
                      "src": "9593:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9593:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4443,
                  "nodeType": "EmitStatement",
                  "src": "9588:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4445,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4385,
                        "src": "9661:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9678:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9670:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9670:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9670:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4450,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4387,
                        "src": "9682:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4444,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4564,
                      "src": "9641:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9641:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4452,
                  "nodeType": "ExpressionStatement",
                  "src": "9641:48:4"
                }
              ]
            },
            "documentation": {
              "id": 4383,
              "nodeType": "StructuredDocumentation",
              "src": "8806:309:4",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 4454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9129:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4385,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9143:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4454,
                  "src": "9135:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9135:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4387,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9160:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4454,
                  "src": "9152:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9152:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9134:33:4"
            },
            "returnParameters": {
              "id": 4389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9185:0:4"
            },
            "scope": 4565,
            "src": "9120:576:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4498,
              "nodeType": "Block",
              "src": "10232:257:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4465,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "10250:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10267:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10259:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4466,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10259:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10259:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10250:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 4471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10271:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 4464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10242:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10242:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4473,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4475,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4459,
                          "src": "10328:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10347:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10339:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4476,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10339:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10339:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10328:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 4481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10351:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 4474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10320:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10320:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4483,
                  "nodeType": "ExpressionStatement",
                  "src": "10320:68:4"
                },
                {
                  "expression": {
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4484,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4001,
                          "src": "10399:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4487,
                        "indexExpression": {
                          "id": 4485,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "10411:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10399:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4488,
                      "indexExpression": {
                        "id": 4486,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4459,
                        "src": "10418:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10399:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4489,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4461,
                      "src": "10429:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10399:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4491,
                  "nodeType": "ExpressionStatement",
                  "src": "10399:36:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4493,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "10459:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4494,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4459,
                        "src": "10466:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4495,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4461,
                        "src": "10475:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4492,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4586,
                      "src": "10450:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10450:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4497,
                  "nodeType": "EmitStatement",
                  "src": "10445:37:4"
                }
              ]
            },
            "documentation": {
              "id": 4455,
              "nodeType": "StructuredDocumentation",
              "src": "9702:412:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 4499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10128:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4457,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10154:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4499,
                  "src": "10146:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10146:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4459,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10177:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4499,
                  "src": "10169:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10169:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4461,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10202:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4499,
                  "src": "10194:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10194:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10136:78:4"
            },
            "returnParameters": {
              "id": 4463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10232:0:4"
            },
            "scope": 4565,
            "src": "10119:370:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4541,
              "nodeType": "Block",
              "src": "10890:321:4",
              "statements": [
                {
                  "assignments": [
                    4510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4510,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "10908:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 4541,
                      "src": "10900:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10900:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4512,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "10937:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4513,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4504,
                        "src": "10944:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4511,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4121,
                      "src": "10927:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10927:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10900:52:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4516,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4510,
                      "src": "10966:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 4519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10991:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4518,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10991:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 4517,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "10986:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 4520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10986:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 4521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "11000:3:4",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "10986:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10966:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4540,
                  "nodeType": "IfStatement",
                  "src": "10962:243:4",
                  "trueBody": {
                    "id": 4539,
                    "nodeType": "Block",
                    "src": "11005:200:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4524,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4510,
                                "src": "11027:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4525,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4506,
                                "src": "11047:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11027:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 4527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11055:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 4523,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11019:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11019:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4529,
                        "nodeType": "ExpressionStatement",
                        "src": "11019:68:4"
                      },
                      {
                        "id": 4538,
                        "nodeType": "UncheckedBlock",
                        "src": "11101:94:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4531,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4502,
                                  "src": "11138:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 4532,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4504,
                                  "src": "11145:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4533,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4510,
                                    "src": "11154:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 4534,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4506,
                                    "src": "11173:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11154:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4530,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4499,
                                "src": "11129:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 4536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11129:51:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4537,
                            "nodeType": "ExpressionStatement",
                            "src": "11129:51:4"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4500,
              "nodeType": "StructuredDocumentation",
              "src": "10495:270:4",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 4542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "10779:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4502,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10812:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4542,
                  "src": "10804:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10804:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4504,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10835:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4542,
                  "src": "10827:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10827:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4506,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10860:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4542,
                  "src": "10852:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10794:78:4"
            },
            "returnParameters": {
              "id": 4508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10890:0:4"
            },
            "scope": 4565,
            "src": "10770:441:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4552,
              "nodeType": "Block",
              "src": "11914:2:4",
              "statements": []
            },
            "documentation": {
              "id": 4543,
              "nodeType": "StructuredDocumentation",
              "src": "11217:573:4",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11804:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4545,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11842:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4553,
                  "src": "11834:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11834:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4547,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11864:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4553,
                  "src": "11856:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11856:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4549,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11884:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4553,
                  "src": "11876:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11876:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11824:72:4"
            },
            "returnParameters": {
              "id": 4551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11914:0:4"
            },
            "scope": 4565,
            "src": "11795:121:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4563,
              "nodeType": "Block",
              "src": "12622:2:4",
              "statements": []
            },
            "documentation": {
              "id": 4554,
              "nodeType": "StructuredDocumentation",
              "src": "11922:577:4",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12513:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4556,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12550:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4564,
                  "src": "12542:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12542:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4558,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12572:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4564,
                  "src": "12564:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12564:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4560,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12592:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4564,
                  "src": "12584:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12584:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12532:72:4"
            },
            "returnParameters": {
              "id": 4562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12622:0:4"
            },
            "scope": 4565,
            "src": "12504:120:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4566,
        "src": "1403:11223:4",
        "usedErrors": []
      }
    ],
    "src": "105:12522:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b7038038062000b7083398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61087c80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122042439bcc236f768ea308ff799de47f8c21cac2965286b5deeda343301e30c4a364736f6c63430008130033",
  "bytecodeSha1": "38166fcfbc8e730a0752b73e497cde48b5457655",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "4": {
        "ERC20._approve": {
          "30": [
            10250,
            10269,
            true
          ],
          "31": [
            10328,
            10349,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "32": [
            10966,
            11003,
            false
          ],
          "33": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7610,
            7628,
            true
          ],
          "35": [
            7688,
            7704,
            true
          ],
          "36": [
            7859,
            7880,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6811,
            6846,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "4": {
        "ERC20._approve": {
          "16": [
            10242,
            10310
          ],
          "17": [
            10320,
            10388
          ],
          "18": [
            10399,
            10435
          ],
          "19": [
            10445,
            10482
          ]
        },
        "ERC20._spendAllowance": {
          "20": [
            11019,
            11087
          ],
          "21": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "22": [
            7602,
            7670
          ],
          "23": [
            7680,
            7744
          ],
          "24": [
            7851,
            7923
          ],
          "25": [
            7957,
            7995
          ],
          "26": [
            8015,
            8038
          ],
          "27": [
            8049,
            8080
          ],
          "28": [
            8091,
            8128
          ]
        },
        "ERC20.allowance": {
          "15": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "5": [
            4570,
            4602
          ],
          "6": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "12": [
            6803,
            6888
          ],
          "13": [
            6922,
            6982
          ]
        },
        "ERC20.increaseAllowance": {
          "10": [
            6015,
            6079
          ]
        },
        "ERC20.name": {
          "3": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "11": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "14": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            5375,
            5413
          ],
          "8": [
            5423,
            5450
          ],
          "9": [
            5460,
            5471
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122042439bcc236f768ea308ff799de47f8c21cac2965286b5deeda343301e30c4a364736f6c63430008130033",
  "deployedSourceMap": "1403:11223:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4433:197:4;1004:187:8;3244:106:4;3331:12;;3244:106;;;1342:25:8;;;1330:2;1315:18;3244:106:4;1196:177:8;5192:286:4;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1853:36:8;;1841:2;1826:18;3093:91:4;1711:184:8;5873:234:4;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:4;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:7;4570:32:4;719:10:7;4586:7:4;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:7;5375:38:4;5391:4;719:10:7;5406:6:4;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:4;;5192:286;-1:-1:-1;;;;5192:286:4:o;5873:234::-;5961:4;719:10:7;6015:64:4;719:10:7;6031:7:4;6068:10;6040:25;719:10:7;6031:7:4;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:7;6687:4:4;6768:25;719:10:7;6785:7:4;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:4;;3170:2:8;6803:85:4;;;3152:21:8;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:8;;;3292:35;3344:19;;6803:85:4;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:7;3862:28:4;719:10:7;3879:2:4;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:4;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:4;;10242:68;;;;-1:-1:-1;;;10242:68:4;;3576:2:8;10242:68:4;;;3558:21:8;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:8;;;3698:34;3749:19;;10242:68:4;3374:400:8;10242:68:4;-1:-1:-1;;;;;10328:21:4;;10320:68;;;;-1:-1:-1;;;10320:68:4;;3981:2:8;10320:68:4;;;3963:21:8;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:8;;;4103:32;4152:19;;10320:68:4;3779:398:8;10320:68:4;-1:-1:-1;;;;;10399:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1342:25:8;;;10450:32:4;;1315:18:8;10450:32:4;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:4;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:4;;4384:2:8;11019:68:4;;;4366:21:8;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11019:68:4;4182:353:8;11019:68:4;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:4;;7602:68;;;;-1:-1:-1;;;7602:68:4;;4742:2:8;7602:68:4;;;4724:21:8;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:8;;;4864:35;4916:19;;7602:68:4;4540:401:8;7602:68:4;-1:-1:-1;;;;;7688:16:4;;7680:64;;;;-1:-1:-1;;;7680:64:4;;5148:2:8;7680:64:4;;;5130:21:8;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:8;;;5270:33;5320:19;;7680:64:4;4946:399:8;7680:64:4;-1:-1:-1;;;;;7826:15:4;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:4;;5552:2:8;7851:72:4;;;5534:21:8;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:8;;;5674:36;5727:19;;7851:72:4;5350:402:8;7851:72:4;-1:-1:-1;;;;;7957:15:4;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:4;8063:4;-1:-1:-1;;;;;8054:26:4;;8073:6;8054:26;;;;1342:25:8;;1330:2;1315:18;;1196:177;8054:26:4;;;;;;;;8091:37;11795:121;14:548:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:8:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1403,
    12626
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66D SWAP1 DUP5 SWAP1 PUSH2 0x825 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x786 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E2 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP NUMBER SWAP12 0xCC 0x23 PUSH16 0x768EA308FF799DE47F8C21CAC2965286 0xB5 0xDE 0xED LOG3 NUMBER ADDRESS 0x1E ADDRESS 0xC4 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "REVERT",
      "path": "4"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A0"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "4"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6C6"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "4"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "4"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "4"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "4"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x730"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "4"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x232"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "4"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75A"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24C"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x730"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMP",
      "path": "4"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x270"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMP",
      "path": "4"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x796"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "4"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "4",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "4"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "4"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "4"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x292"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x730"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMP",
      "path": "4"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A1"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMP",
      "path": "4"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x730"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "4"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x321"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "4"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B8"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "4"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "415": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "4"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "417": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "419": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x3"
    },
    "421": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "422": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AF"
    },
    "426": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "427": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7EB"
    },
    "430": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "436": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "440": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "4"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "4"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "4"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DB"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7EB"
    },
    "474": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x228"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "4"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FD"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "4"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "4"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "4"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "4"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x228"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "4"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "4"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "4"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20B"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "4"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "4"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "4"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "4"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "4"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "4"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "561": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "4"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "565": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 4
    },
    "566": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x240"
    },
    "569": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "7"
    },
    "570": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "4"
    },
    "571": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "4"
    },
    "572": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35A"
    },
    "575": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "4"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "577": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x1"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "580": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "4"
    },
    "581": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "4"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "584": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "4"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "4"
    },
    "587": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "4"
    },
    "588": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "591": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "592": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 7,
      "value": "0x25A"
    },
    "595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "4"
    },
    "596": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "7"
    },
    "597": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "4"
    },
    "598": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x47E"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "4"
    },
    "602": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x265"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "4"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "4"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "4"
    },
    "609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F8"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "4"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "624": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "625": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "627": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "628": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6079
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x240"
    },
    "631": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "7"
    },
    "632": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6031,
        6038
      ],
      "op": "DUP6",
      "path": "4"
    },
    "633": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6068,
        6078
      ],
      "op": "DUP6",
      "path": "4"
    },
    "634": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6065
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283"
    },
    "637": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "7"
    },
    "638": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6031,
        6038
      ],
      "op": "DUP4",
      "path": "4"
    },
    "639": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6049
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "642": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6065
      ],
      "op": "JUMP",
      "path": "4"
    },
    "643": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6065
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "644": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28D"
    },
    "647": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "648": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "649": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x825"
    },
    "652": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6078
      ],
      "op": "JUMP",
      "path": "4"
    },
    "653": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "654": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35A"
    },
    "657": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6079
      ],
      "op": "JUMP",
      "path": "4"
    },
    "658": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "659": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "661": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x4"
    },
    "663": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "4"
    },
    "664": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "665": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AF"
    },
    "668": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "669": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7EB"
    },
    "672": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "4"
    },
    "673": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6687,
        6691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "676": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "677": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6687,
        6691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "678": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6793
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AF"
    },
    "681": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "7"
    },
    "682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6785,
        6792
      ],
      "op": "DUP7",
      "path": "4"
    },
    "683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6777
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "686": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6768,
        6793
      ],
      "op": "JUMP",
      "path": "4"
    },
    "687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6793
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6741,
        6793
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6741,
        6793
      ],
      "op": "POP",
      "path": "4"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6831,
        6846
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 12
    },
    "691": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6846
      ],
      "op": "LT",
      "path": "4"
    },
    "693": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6846
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x314"
    },
    "697": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "700": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "707": {
      "op": "SHL"
    },
    "708": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "709": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "714": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "715": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "ADD",
      "path": "4"
    },
    "716": {
      "op": "MSTORE"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "721": {
      "op": "DUP3"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "759": {
      "op": "DUP3"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "DUP1",
      "path": "4"
    },
    "784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "SUB",
      "path": "4"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6922,
        6982
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x265"
    },
    "792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6931,
        6936
      ],
      "op": "DUP3",
      "path": "4"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6938,
        6945
      ],
      "op": "DUP7",
      "path": "4"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6966,
        6981
      ],
      "op": "DUP7",
      "path": "4"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6947,
        6963
      ],
      "op": "DUP5",
      "path": "4"
    },
    "796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6947,
        6981
      ],
      "op": "SUB",
      "path": "4"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6922,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35A"
    },
    "800": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6922,
        6982
      ],
      "op": "JUMP",
      "path": "4"
    },
    "801": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "802": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "804": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "805": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x240"
    },
    "808": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "7"
    },
    "809": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "4"
    },
    "810": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "4"
    },
    "811": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F8"
    },
    "814": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "4"
    },
    "815": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 15
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "4"
    },
    "827": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "832": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "834": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "837": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "838": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "841": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "4"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "4"
    },
    "843": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "847": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "4"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "4"
    },
    "849": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "855": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "856": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "857": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "4"
    },
    "858": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "SUB"
    },
    "867": {
      "fn": "ERC20._approve",
      "offset": [
        10250,
        10269
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 16
    },
    "868": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10250,
        10269
      ],
      "op": "AND",
      "path": "4"
    },
    "869": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BC"
    },
    "872": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "873": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "875": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "884": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "889": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "890": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "ADD",
      "path": "4"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "933": {
      "op": "DUP3"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "951": {
      "op": "ADD"
    },
    "952": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "955": {
      "op": "JUMP"
    },
    "956": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "fn": "ERC20._approve",
      "offset": [
        10328,
        10349
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 17
    },
    "966": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10328,
        10349
      ],
      "op": "AND",
      "path": "4"
    },
    "967": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41D"
    },
    "970": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "971": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "973": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "DUP2",
      "path": "4"
    },
    "982": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "985": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "987": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "DUP3",
      "path": "4"
    },
    "988": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "ADD",
      "path": "4"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "994": {
      "op": "DUP3"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "op": "MSTORE"
    },
    "997": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1032": {
      "op": "DUP3"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1043": {
      "op": "DUP3"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "1052": {
      "op": "JUMP"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1060": {
      "op": "SHL"
    },
    "1061": {
      "op": "SUB"
    },
    "1062": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 18
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "AND",
      "path": "4"
    },
    "1065": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10410
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1075": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1076": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1077": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1079": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1080": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1081": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1084": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "AND",
      "path": "4"
    },
    "1085": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1086": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1087": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1088": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1090": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1091": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1092": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1093": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1094": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1095": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1096": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1097": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1098": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 19
    },
    "1099": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1100": {
      "op": "DUP5"
    },
    "1101": {
      "op": "DUP2"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SUB",
      "path": "4"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "4"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "4"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "4"
    },
    "1149": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10119,
        10489
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1150": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1151": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1153": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48A"
    },
    "1156": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10937,
        10942
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1157": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10944,
        10951
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1158": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "1161": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        10927,
        10952
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1162": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10952
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1163": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1164": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10952
      ],
      "op": "POP",
      "path": "4"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1167": {
      "op": "NOT"
    },
    "1168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        10982
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1169": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "4"
    },
    "1170": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F2"
    },
    "1173": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 20
    },
    "1175": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1176": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "4"
    },
    "1177": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1178": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E5"
    },
    "1181": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1184": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1193": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1196": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1198": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1199": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "4"
    },
    "1200": {
      "op": "MSTORE"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1205": {
      "op": "DUP3"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "MSTORE"
    },
    "1208": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1243": {
      "op": "DUP3"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1248": {
      "op": "ADD"
    },
    "1249": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "1252": {
      "op": "JUMP"
    },
    "1253": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1254": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0x4F2"
    },
    "1257": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1258": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1259": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1260": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1261": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "4"
    },
    "1262": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35A"
    },
    "1265": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1266": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1267": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "4"
    },
    "1268": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "4"
    },
    "1269": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "4"
    },
    "1270": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "4"
    },
    "1271": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1272": {
      "fn": "ERC20._transfer",
      "offset": [
        7484,
        8135
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "fn": "ERC20._transfer",
      "offset": [
        7610,
        7628
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 22
    },
    "1282": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7610,
        7628
      ],
      "op": "AND",
      "path": "4"
    },
    "1283": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55C"
    },
    "1286": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1287": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1289": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1298": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1301": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1303": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1304": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "ADD",
      "path": "4"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1348": {
      "op": "DUP3"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1362": {
      "op": "DUP3"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "MSTORE"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "1371": {
      "op": "JUMP"
    },
    "1372": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "op": "SUB"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7704
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 23
    },
    "1382": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7704
      ],
      "op": "AND",
      "path": "4"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5BE"
    },
    "1386": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1387": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1389": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1404": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "ADD",
      "path": "4"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1465": {
      "op": "ADD"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "1469": {
      "op": "JUMP"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1480": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "AND",
      "path": "4"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        7804,
        7823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1483": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1484": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1485": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1486": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1495": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 24
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "LT",
      "path": "4"
    },
    "1499": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1500": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x636"
    },
    "1503": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1515": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1520": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "ADD",
      "path": "4"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1527": {
      "op": "DUP3"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1580": {
      "op": "DUP3"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "1589": {
      "op": "JUMP"
    },
    "1590": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 25
    },
    "1600": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1601": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "AND",
      "path": "4"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7966
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1604": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1606": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1611": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "SUB",
      "path": "4"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7995
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1621": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7995
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1622": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "AND",
      "path": "4"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1627": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1628": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1630": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1631": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1632": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1633": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1634": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7966
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1635": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66D"
    },
    "1638": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1639": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1640": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1641": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x825"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8015,
        8038
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1645": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1646": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1647": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "4"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "4"
    },
    "1649": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1650": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1651": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1652": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "4"
    },
    "1653": {
      "fn": "ERC20._transfer",
      "offset": [
        8069,
        8071
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 27
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "op": "SUB"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "AND",
      "path": "4"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        8063,
        8067
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "AND",
      "path": "4"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8079
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B9"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1714": {
      "op": "DUP2"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1718": {
      "op": "ADD"
    },
    "1719": {
      "op": "SWAP1"
    },
    "1720": {
      "op": "JUMP"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1726": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SUB",
      "path": "4"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        8091,
        8128
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 28,
      "value": "0x4F2"
    },
    "1733": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        11795,
        11916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1734": {
      "op": "JUMPDEST"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1739": {
      "op": "DUP1"
    },
    "1740": {
      "op": "DUP4"
    },
    "1741": {
      "op": "MSTORE"
    },
    "1742": {
      "op": "DUP4"
    },
    "1743": {
      "op": "MLOAD"
    },
    "1744": {
      "op": "DUP1"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "DUP6"
    },
    "1747": {
      "op": "ADD"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1751": {
      "op": "JUMPDEST"
    },
    "1752": {
      "op": "DUP2"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "LT"
    },
    "1755": {
      "op": "ISZERO"
    },
    "1756": {
      "op": "PUSH2",
      "value": "0x6F3"
    },
    "1759": {
      "op": "JUMPI"
    },
    "1760": {
      "op": "DUP6"
    },
    "1761": {
      "op": "DUP2"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "DUP4"
    },
    "1764": {
      "op": "ADD"
    },
    "1765": {
      "op": "MLOAD"
    },
    "1766": {
      "op": "DUP6"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x6D7"
    },
    "1778": {
      "op": "JUMP"
    },
    "1779": {
      "op": "JUMPDEST"
    },
    "1780": {
      "op": "POP"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1785": {
      "op": "DUP3"
    },
    "1786": {
      "op": "DUP7"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "ADD"
    },
    "1789": {
      "op": "MSTORE"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1794": {
      "op": "NOT"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1797": {
      "op": "DUP4"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "AND"
    },
    "1800": {
      "op": "DUP6"
    },
    "1801": {
      "op": "ADD"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "SWAP3"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "SWAP3"
    },
    "1808": {
      "op": "SWAP2"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "jump": "o",
      "op": "JUMP"
    },
    "1812": {
      "op": "JUMPDEST"
    },
    "1813": {
      "op": "DUP1"
    },
    "1814": {
      "op": "CALLDATALOAD"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "op": "DUP2"
    },
    "1824": {
      "op": "AND"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "EQ"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "1830": {
      "op": "JUMPI"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "DUP1"
    },
    "1834": {
      "op": "REVERT"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "SWAP2"
    },
    "1837": {
      "op": "SWAP1"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "jump": "o",
      "op": "JUMP"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1843": {
      "op": "DUP1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1846": {
      "op": "DUP4"
    },
    "1847": {
      "op": "DUP6"
    },
    "1848": {
      "op": "SUB"
    },
    "1849": {
      "op": "SLT"
    },
    "1850": {
      "op": "ISZERO"
    },
    "1851": {
      "op": "PUSH2",
      "value": "0x743"
    },
    "1854": {
      "op": "JUMPI"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1857": {
      "op": "DUP1"
    },
    "1858": {
      "op": "REVERT"
    },
    "1859": {
      "op": "JUMPDEST"
    },
    "1860": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "1863": {
      "op": "DUP4"
    },
    "1864": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1867": {
      "jump": "i",
      "op": "JUMP"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "SWAP5"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1872": {
      "op": "SWAP4"
    },
    "1873": {
      "op": "SWAP1"
    },
    "1874": {
      "op": "SWAP4"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "op": "CALLDATALOAD"
    },
    "1877": {
      "op": "SWAP4"
    },
    "1878": {
      "op": "POP"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "jump": "o",
      "op": "JUMP"
    },
    "1882": {
      "op": "JUMPDEST"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1885": {
      "op": "DUP1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1890": {
      "op": "DUP5"
    },
    "1891": {
      "op": "DUP7"
    },
    "1892": {
      "op": "SUB"
    },
    "1893": {
      "op": "SLT"
    },
    "1894": {
      "op": "ISZERO"
    },
    "1895": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1898": {
      "op": "JUMPI"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "DUP1"
    },
    "1902": {
      "op": "REVERT"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1907": {
      "op": "DUP5"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1911": {
      "jump": "i",
      "op": "JUMP"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "SWAP3"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x786"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1920": {
      "op": "DUP6"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1925": {
      "jump": "i",
      "op": "JUMP"
    },
    "1926": {
      "op": "JUMPDEST"
    },
    "1927": {
      "op": "SWAP2"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1931": {
      "op": "DUP5"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "CALLDATALOAD"
    },
    "1934": {
      "op": "SWAP1"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "SWAP3"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "op": "SWAP3"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "SWAP3"
    },
    "1941": {
      "jump": "o",
      "op": "JUMP"
    },
    "1942": {
      "op": "JUMPDEST"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1947": {
      "op": "DUP3"
    },
    "1948": {
      "op": "DUP5"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "SLT"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x7A8"
    },
    "1955": {
      "op": "JUMPI"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1958": {
      "op": "DUP1"
    },
    "1959": {
      "op": "REVERT"
    },
    "1960": {
      "op": "JUMPDEST"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1968": {
      "jump": "i",
      "op": "JUMP"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "SWAP4"
    },
    "1971": {
      "op": "SWAP3"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "jump": "o",
      "op": "JUMP"
    },
    "1976": {
      "op": "JUMPDEST"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1979": {
      "op": "DUP1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1982": {
      "op": "DUP4"
    },
    "1983": {
      "op": "DUP6"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "op": "SLT"
    },
    "1986": {
      "op": "ISZERO"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x7CB"
    },
    "1990": {
      "op": "JUMPI"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "REVERT"
    },
    "1995": {
      "op": "JUMPDEST"
    },
    "1996": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "1999": {
      "op": "DUP4"
    },
    "2000": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "2003": {
      "jump": "i",
      "op": "JUMP"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "op": "SWAP2"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x7E2"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "op": "DUP5"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "2017": {
      "jump": "i",
      "op": "JUMP"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "SWAP1"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "op": "SWAP3"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "op": "SWAP3"
    },
    "2024": {
      "op": "SWAP1"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "jump": "o",
      "op": "JUMP"
    },
    "2027": {
      "op": "JUMPDEST"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "DUP2"
    },
    "2031": {
      "op": "DUP2"
    },
    "2032": {
      "op": "SHR"
    },
    "2033": {
      "op": "SWAP1"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "AND"
    },
    "2036": {
      "op": "DUP1"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x7FF"
    },
    "2040": {
      "op": "JUMPI"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2043": {
      "op": "DUP3"
    },
    "2044": {
      "op": "AND"
    },
    "2045": {
      "op": "SWAP2"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "op": "JUMPDEST"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "LT"
    },
    "2052": {
      "op": "DUP2"
    },
    "2053": {
      "op": "SUB"
    },
    "2054": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "2057": {
      "op": "JUMPI"
    },
    "2058": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2068": {
      "op": "MSTORE"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2073": {
      "op": "MSTORE"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2078": {
      "op": "REVERT"
    },
    "2079": {
      "op": "JUMPDEST"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "SWAP2"
    },
    "2082": {
      "op": "SWAP1"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "jump": "o",
      "op": "JUMP"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "op": "DUP1"
    },
    "2087": {
      "op": "DUP3"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "DUP1"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "GT"
    },
    "2092": {
      "op": "ISZERO"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x246"
    },
    "2096": {
      "op": "JUMPI"
    },
    "2097": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2104": {
      "op": "SHL"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2107": {
      "op": "MSTORE"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2117": {
      "op": "REVERT"
    }
  },
  "sha1": "aa4077242e348aa4d7ad35b09c2e761399d9278e",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1403:11223:4:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:4;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11223;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:8:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:8;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:8;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:8;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:8;;;3992:26;3943:89;-1:-1:-1;;2747:1:8;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:8;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:8;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:8;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:8:o;:::-;1403:11223:4;;;;;;",
  "sourcePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}