"""empty message

Revision ID: d3d011cf9717
Revises: 9c7eacd0f51e
Create Date: 2021-04-22 15:30:43.941743

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd3d011cf9717'
down_revision = '9c7eacd0f51e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('club',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('handle', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('profile_pic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['profile_pic_id'], ['photo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_club_handle'), 'club', ['handle'], unique=True)
    op.create_table('clubs',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.drop_table('groups')
    op.drop_index('ix_group_handle', table_name='group')
    op.drop_constraint('group_supergroup_id_fkey', 'group', type_='foreignkey')
    op.drop_constraint('group_profile_pic_id_fkey', 'group', type_='foreignkey')
    op.drop_column('group', 'name')
    op.drop_column('group', 'public')
    op.drop_column('group', 'profile_pic_id')
    op.drop_column('group', 'handle')
    op.drop_column('group', 'supergroup_id')
    op.drop_column('group', 'description')
    op.drop_constraint('membership_project_id_fkey', 'membership', type_='foreignkey')
    op.drop_column('membership', 'project_id')
    op.add_column('notification', sa.Column('payload_json', sa.Text(), nullable=True))
    op.add_column('notification', sa.Column('title', sa.String(length=128), nullable=True))
    op.create_index(op.f('ix_notification_title'), 'notification', ['title'], unique=False)
    op.drop_constraint('notification_receiver_id_fkey', 'notification', type_='foreignkey')
    op.drop_constraint('notification_object_project_id_fkey', 'notification', type_='foreignkey')
    op.drop_constraint('notification_sender_id_fkey', 'notification', type_='foreignkey')
    op.drop_constraint('notification_object_role_id_fkey', 'notification', type_='foreignkey')
    op.drop_constraint('notification_object_group_id_fkey', 'notification', type_='foreignkey')
    op.create_foreign_key(None, 'notification', 'user', ['receiver_id'], ['id'])
    op.drop_column('notification', 'object_role_id')
    op.drop_column('notification', 'object_group_id')
    op.drop_column('notification', 'object_project_id')
    op.drop_column('notification', 'sender_id')
    op.drop_column('notification', 'type')
    op.add_column('project', sa.Column('group_id', sa.Integer(), nullable=True))
    op.add_column('project', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.drop_constraint('project_superproject_id_fkey', 'project', type_='foreignkey')
    op.create_foreign_key(None, 'project', 'project', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'project', 'group', ['group_id'], ['id'])
    op.drop_column('project', 'superproject_id')
    op.drop_constraint('request_notification_id_fkey', 'request', type_='foreignkey')
    op.drop_column('request', 'notification_id')
    op.drop_constraint('role_project_id_fkey', 'role', type_='foreignkey')
    op.drop_column('role', 'project_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('role', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('role_project_id_fkey', 'role', 'project', ['project_id'], ['id'], ondelete='CASCADE')
    op.add_column('request', sa.Column('notification_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('request_notification_id_fkey', 'request', 'notification', ['notification_id'], ['id'], ondelete='CASCADE')
    op.add_column('project', sa.Column('superproject_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'project', type_='foreignkey')
    op.drop_constraint(None, 'project', type_='foreignkey')
    op.create_foreign_key('project_superproject_id_fkey', 'project', 'project', ['superproject_id'], ['id'])
    op.drop_column('project', 'parent_id')
    op.drop_column('project', 'group_id')
    op.add_column('notification', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('notification', sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('notification', sa.Column('object_project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('notification', sa.Column('object_group_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('notification', sa.Column('object_role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'notification', type_='foreignkey')
    op.create_foreign_key('notification_object_group_id_fkey', 'notification', 'group', ['object_group_id'], ['id'])
    op.create_foreign_key('notification_object_role_id_fkey', 'notification', 'role', ['object_role_id'], ['id'])
    op.create_foreign_key('notification_sender_id_fkey', 'notification', 'user', ['sender_id'], ['id'])
    op.create_foreign_key('notification_object_project_id_fkey', 'notification', 'project', ['object_project_id'], ['id'])
    op.create_foreign_key('notification_receiver_id_fkey', 'notification', 'user', ['receiver_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_notification_title'), table_name='notification')
    op.drop_column('notification', 'title')
    op.drop_column('notification', 'payload_json')
    op.add_column('membership', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('membership_project_id_fkey', 'membership', 'project', ['project_id'], ['id'], ondelete='CASCADE')
    op.add_column('group', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('group', sa.Column('supergroup_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('group', sa.Column('handle', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('group', sa.Column('profile_pic_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('group', sa.Column('public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('group', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('group_profile_pic_id_fkey', 'group', 'photo', ['profile_pic_id'], ['id'])
    op.create_foreign_key('group_supergroup_id_fkey', 'group', 'group', ['supergroup_id'], ['id'])
    op.create_index('ix_group_handle', 'group', ['handle'], unique=True)
    op.create_table('groups',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='groups_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='groups_user_id_fkey')
    )
    op.drop_table('clubs')
    op.drop_index(op.f('ix_club_handle'), table_name='club')
    op.drop_table('club')
    # ### end Alembic commands ###
