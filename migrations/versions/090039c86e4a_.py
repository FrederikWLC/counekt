"""empty message

Revision ID: 090039c86e4a
Revises: 
Create Date: 2022-10-15 19:42:44.092517

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '090039c86e4a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('convo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('path', sa.String(length=2048), nullable=True),
    sa.Column('is_empty', sa.Boolean(), nullable=True),
    sa.Column('replacement', sa.String(length=2048), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wall',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('idea',
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('sin_rad_lat', sa.Float(), nullable=True),
    sa.Column('cos_rad_lat', sa.Float(), nullable=True),
    sa.Column('rad_lng', sa.Float(), nullable=True),
    sa.Column('show_location', sa.Boolean(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('handle', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('profile_photo_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['profile_photo_id'], ['photo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_idea_handle'), 'idea', ['handle'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('permissionToReceiveNotifications', sa.Boolean(), nullable=True),
    sa.Column('permissionToAnswerInvite', sa.Boolean(), nullable=True),
    sa.Column('permissionToRejectPeople', sa.Boolean(), nullable=True),
    sa.Column('permissionToCreateRoles', sa.Boolean(), nullable=True),
    sa.Column('permissionToChangePeopleRoles', sa.Boolean(), nullable=True),
    sa.Column('permissionToEditPage', sa.Boolean(), nullable=True),
    sa.Column('permissionToCreatePrivatePosts', sa.Boolean(), nullable=True),
    sa.Column('permissionToCreatePublicPosts', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_title'), 'role', ['title'], unique=False)
    op.create_table('user',
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('sin_rad_lat', sa.Float(), nullable=True),
    sa.Column('cos_rad_lat', sa.Float(), nullable=True),
    sa.Column('rad_lng', sa.Float(), nullable=True),
    sa.Column('show_location', sa.Boolean(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creation_datetime', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('bio', sa.String(length=160), nullable=True),
    sa.Column('birthdate', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('profile_photo_id', sa.Integer(), nullable=True),
    sa.Column('cover_photo_id', sa.Integer(), nullable=True),
    sa.Column('wall_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cover_photo_id'], ['photo.id'], ),
    sa.ForeignKeyConstraint(['profile_photo_id'], ['photo.id'], ),
    sa.ForeignKeyConstraint(['wall_id'], ['wall.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_creation_datetime'), 'user', ['creation_datetime'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_token'), 'user', ['token'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('allies',
    sa.Column('left_id', sa.Integer(), nullable=True),
    sa.Column('right_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['left_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['right_id'], ['user.id'], )
    )
    op.create_table('convos',
    sa.Column('convo_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['convo_id'], ['convo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('feedback',
    sa.Column('creation_datetime', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['to_id'], ['feedback.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_creation_datetime'), 'feedback', ['creation_datetime'], unique=False)
    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], )
    )
    op.create_table('idea_viewers',
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='cascade')
    )
    op.create_table('input',
    sa.Column('creation_datetime', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('with_quote', sa.Boolean(), nullable=True),
    sa.Column('reply_to_id', sa.Integer(), nullable=True),
    sa.Column('quote_to_id', sa.Integer(), nullable=True),
    sa.Column('channel_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['channel_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['quote_to_id'], ['input.id'], ),
    sa.ForeignKeyConstraint(['reply_to_id'], ['input.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_input_creation_datetime'), 'input', ['creation_datetime'], unique=False)
    op.create_table('membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creation_datetime', sa.DateTime(), nullable=True),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('convo_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['convo_id'], ['convo.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_creation_datetime'), 'message', ['creation_datetime'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.Float(), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_timestamp'), 'notification', ['timestamp'], unique=False)
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=20), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skill_title'), 'skill', ['title'], unique=False)
    op.create_table('feedback_downvote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_id', sa.Integer(), nullable=True),
    sa.Column('voter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feedback_id'], ['feedback.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback_upvote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_id', sa.Integer(), nullable=True),
    sa.Column('voter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feedback_id'], ['feedback.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('idea_to_user_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['idea.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_idea_to_user_request_type'), 'idea_to_user_request', ['type'], unique=False)
    op.create_table('input_downvote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('input_id', sa.Integer(), nullable=True),
    sa.Column('voter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['input_id'], ['input.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('input_heart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('input_id', sa.Integer(), nullable=True),
    sa.Column('voter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['input_id'], ['input.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inputs',
    sa.Column('input_id', sa.Integer(), nullable=True),
    sa.Column('wall_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['input_id'], ['input.id'], ),
    sa.ForeignKeyConstraint(['wall_id'], ['wall.id'], )
    )
    op.create_table('user_to_idea_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['idea.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_to_idea_request_type'), 'user_to_idea_request', ['type'], unique=False)
    op.create_table('user_to_user_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_to_user_request_type'), 'user_to_user_request', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_to_user_request_type'), table_name='user_to_user_request')
    op.drop_table('user_to_user_request')
    op.drop_index(op.f('ix_user_to_idea_request_type'), table_name='user_to_idea_request')
    op.drop_table('user_to_idea_request')
    op.drop_table('inputs')
    op.drop_table('input_heart')
    op.drop_table('input_downvote')
    op.drop_index(op.f('ix_idea_to_user_request_type'), table_name='idea_to_user_request')
    op.drop_table('idea_to_user_request')
    op.drop_table('feedback_upvote')
    op.drop_table('feedback_downvote')
    op.drop_index(op.f('ix_skill_title'), table_name='skill')
    op.drop_table('skill')
    op.drop_index(op.f('ix_notification_timestamp'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_message_creation_datetime'), table_name='message')
    op.drop_table('message')
    op.drop_table('membership')
    op.drop_index(op.f('ix_input_creation_datetime'), table_name='input')
    op.drop_table('input')
    op.drop_table('idea_viewers')
    op.drop_table('followers')
    op.drop_index(op.f('ix_feedback_creation_datetime'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_table('convos')
    op.drop_table('allies')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_token'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_creation_datetime'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_title'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_idea_handle'), table_name='idea')
    op.drop_table('idea')
    op.drop_table('wall')
    op.drop_table('photo')
    op.drop_table('group')
    op.drop_table('convo')
    # ### end Alembic commands ###
