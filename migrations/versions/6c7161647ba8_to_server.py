"""to server

Revision ID: 6c7161647ba8
Revises: dd2b0b5cad52
Create Date: 2023-07-21 19:08:49.308392

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6c7161647ba8'
down_revision = 'dd2b0b5cad52'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['idea.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admins',
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('bank_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['wallet.id'], ),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], )
    )
    op.create_table('dividend',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('clock', sa.Integer(), nullable=True),
    sa.Column('token_address', sa.String(length=42), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['idea.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['idea.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('referendum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('clock', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('viable_amount', sa.Integer(), nullable=True),
    sa.Column('cast_amount', sa.Integer(), nullable=True),
    sa.Column('in_favor_amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['idea.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_amount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=True),
    sa.Column('token_address', sa.String(length=42), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dividend_claim',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dividend_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('shard_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dividend_id'], ['dividend.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proposal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referendum_id', sa.Integer(), nullable=True),
    sa.Column('func', sa.String(), nullable=True),
    sa.Column('args', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['referendum_id'], ['referendum.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referendum_id', sa.Integer(), nullable=True),
    sa.Column('shard_id', sa.Integer(), nullable=True),
    sa.Column('in_favor', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['referendum_id'], ['referendum.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('idea', schema=None) as batch_op:
        batch_op.add_column(sa.Column('structure_last_updated_at', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('liquid_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('idea_photo_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'bank', ['liquid_id'], ['id'], ondelete='cascade')
        batch_op.create_foreign_key(None, 'photo', ['photo_id'], ['id'], ondelete='cascade')

    with op.batch_alter_table('shard', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'wallet', ['owner_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('owner_address')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shard', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('idea', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('idea_photo_id_fkey', 'photo', ['photo_id'], ['id'])
        batch_op.drop_column('liquid_id')
        batch_op.drop_column('structure_last_updated_at')

    op.drop_table('vote')
    op.drop_table('proposal')
    op.drop_table('dividend_claim')
    op.drop_table('token_amount')
    op.drop_table('referendum')
    op.drop_table('permit')
    op.drop_table('dividend')
    op.drop_table('admins')
    op.drop_table('bank')
    # ### end Alembic commands ###
